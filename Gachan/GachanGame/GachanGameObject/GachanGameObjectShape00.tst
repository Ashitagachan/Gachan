//skipped groundPlane_transform
//skipped Manipulator1
//skipped UniversalManip
/////////////////////////////////////////////
// object_Rocket__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mRocket )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 0.25, 0.25, 0.25 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END


DX3DMATERIAL_START( material_mBlack )
DX3DMATERIAL_DIFF( 1, 0, 0, 0 )
DX3DMATERIAL_SPEC( 1, 0, 0, 0 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_Rocket___mRocket_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Rocket___mRocket_0 == PT_TRILIST ) || ((PT_Rocket___mRocket_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP))  || (PT_Rocket___mRocket_0 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERT_START( VN, vertexbuff_Rocket___mRocket_0 )
DX3DVERT( -0.135095, -0.0645936, -0.545498 ) DX3DVNORM( -0.668682, -0.336511, -0.663043 )  //0
DX3DVERT( -0.0934888, -0.116766, -0.545498 ) DX3DVNORM( -0.466205, -0.610944, -0.639844 )  //1
DX3DVERT( -0.140233, -0.167377, -0.462081 ) DX3DVNORM( -0.466205, -0.610944, -0.639844 )  //2
DX3DVERT( -0.202643, -0.0971228, -0.462081 ) DX3DVNORM( -0.668682, -0.336511, -0.663043 )  //3
DX3DVERT( -0.0333658, -0.14572, -0.545498 ) DX3DVNORM( -0.171433, -0.763452, -0.622697 )  //4
DX3DVERT( -0.0500487, -0.209826, -0.462081 ) DX3DVNORM( -0.171433, -0.763452, -0.622697 )  //5
DX3DVERT( 0.0333657, -0.14572, -0.545498 ) DX3DVNORM( 0.171432, -0.763453, -0.622697 )  //6
DX3DVERT( 0.0500486, -0.209826, -0.462081 ) DX3DVNORM( 0.171432, -0.763453, -0.622697 )  //7
DX3DVERT( 0.0934887, -0.116767, -0.545498 ) DX3DVNORM( 0.466204, -0.610945, -0.639844 )  //8
DX3DVERT( 0.140233, -0.167377, -0.462081 ) DX3DVNORM( 0.466204, -0.610945, -0.639844 )  //9
DX3DVERT( 0.135095, -0.0645937, -0.545498 ) DX3DVNORM( 0.668681, -0.336511, -0.663043 )  //10
DX3DVERT( 0.202643, -0.0971229, -0.462081 ) DX3DVNORM( 0.668681, -0.336511, -0.663043 )  //11
DX3DVERT( 0.149944, 0.000464737, -0.545498 ) DX3DVNORM( 0.743752, -3.09844e-007, -0.668456 )  //12
DX3DVERT( 0.224917, 0.000464678, -0.462081 ) DX3DVNORM( 0.743752, -3.09844e-007, -0.668456 )  //13
DX3DVERT( 0.135095, 0.0655231, -0.545498 ) DX3DVNORM( 0.670097, 0.322702, -0.668456 )  //14
DX3DVERT( 0.202643, 0.0980523, -0.462081 ) DX3DVNORM( 0.670097, 0.322702, -0.668456 )  //15
DX3DVERT( 0.0934887, 0.117696, -0.545498 ) DX3DVNORM( 0.454375, 0.596656, -0.661472 )  //16
DX3DVERT( 0.140233, 0.176311, -0.462081 ) DX3DVNORM( 0.454375, 0.596656, -0.661472 )  //17
DX3DVERT( 0.0333658, 0.14665, -0.545498 ) DX3DVNORM( 0.154454, 0.736925, -0.658092 )  //18
DX3DVERT( 0.0333869, 0.219742, -0.462081 ) DX3DVNORM( 0.154454, 0.736925, -0.658092 )  //19
DX3DVERT( -0.0333658, 0.14665, -0.545498 ) DX3DVNORM( -0.154454, 0.736925, -0.658093 )  //20
DX3DVERT( -0.0333869, 0.219742, -0.462081 ) DX3DVNORM( -0.154454, 0.736925, -0.658093 )  //21
DX3DVERT( -0.0934888, 0.117696, -0.545498 ) DX3DVNORM( -0.454375, 0.596656, -0.661472 )  //22
DX3DVERT( -0.140233, 0.176312, -0.462081 ) DX3DVNORM( -0.454375, 0.596656, -0.661472 )  //23
DX3DVERT( -0.135095, 0.0655231, -0.545498 ) DX3DVNORM( -0.670097, 0.322702, -0.668456 )  //24
DX3DVERT( -0.202643, 0.0980524, -0.462081 ) DX3DVNORM( -0.670097, 0.322702, -0.668456 )  //25
DX3DVERT( -0.149944, 0.000464737, -0.545498 ) DX3DVNORM( -0.743752, -1.058e-007, -0.668456 )  //26
DX3DVERT( -0.224917, 0.000464737, -0.462081 ) DX3DVNORM( -0.743752, -1.058e-007, -0.668456 )  //27
DX3DVERT( -0.202643, -0.0971228, -0.462081 ) DX3DVNORM( -0.693993, -0.719914, 0.00981304 )  //28
DX3DVERT( -0.140233, -0.167377, -0.462081 ) DX3DVNORM( -0.569258, -0.821886, 0.0211574 )  //29
DX3DVERT( -0.140233, -0.151275, -0.0211364 ) DX3DVNORM( -0.5444, -0.83837, 0.0276446 )  //30
DX3DVERT( -0.202643, -0.0994994, 0.103911 ) DX3DVNORM( -0.793879, -0.60788, 0.0154056 )  //31
DX3DVERT( -0.0500487, -0.209826, -0.462081 ) DX3DVNORM( -0.220245, -0.974854, 0.0339445 )  //32
DX3DVERT( -0.0500487, -0.194705, -0.0211364 ) DX3DVNORM( -0.221309, -0.974528, 0.0362947 )  //33
DX3DVERT( 0.0500486, -0.209826, -0.462081 ) DX3DVNORM( 0.220245, -0.974854, 0.0339445 )  //34
DX3DVERT( 0.0500486, -0.194705, -0.0211364 ) DX3DVNORM( 0.221308, -0.974528, 0.0362947 )  //35
DX3DVERT( 0.140233, -0.167377, -0.462081 ) DX3DVNORM( 0.569258, -0.821887, 0.0211575 )  //36
DX3DVERT( 0.140233, -0.151275, -0.0211364 ) DX3DVNORM( 0.5444, -0.83837, 0.0276445 )  //37
DX3DVERT( 0.202643, -0.0971229, -0.462081 ) DX3DVNORM( 0.693993, -0.719915, 0.00981315 )  //38
DX3DVERT( 0.202643, -0.0994995, 0.103911 ) DX3DVNORM( 0.793879, -0.607881, 0.0154055 )  //39
DX3DVERT( 0.669609, -0.22327, -0.462081 ) DX3DVNORM( 0.859023, 0.511937, 0 )  //40
DX3DVERT( 0.660892, -0.208643, -0.462081 ) DX3DVNORM( 0.859023, 0.511937, 0 )  //41
DX3DVERT( 0.660892, -0.208643, -0.326431 ) DX3DVNORM( 0.859023, 0.511937, 0 )  //42
DX3DVERT( 0.669609, -0.22327, -0.326431 ) DX3DVNORM( 0.859023, 0.511937, 0 )  //43
DX3DVERT( 0.224917, 0.000464678, -0.462081 ) DX3DVNORM( 0.974928, 0.222522, -7.64896e-008 )  //44
DX3DVERT( 0.202643, 0.0980523, -0.462081 ) DX3DVNORM( 0.900969, 0.433884, 2.57012e-008 )  //45
DX3DVERT( 0.202643, 0.0980523, -0.0211364 ) DX3DVNORM( 0.900969, 0.433884, -4.45191e-007 )  //46
DX3DVERT( 0.224917, 0.000465035, -0.0211364 ) DX3DVNORM( 0.997019, 0.0771458, 0.000739225 )  //47
DX3DVERT( 0.140233, 0.176311, -0.462081 ) DX3DVNORM( 0.598668, 0.800997, 1.60072e-007 )  //48
DX3DVERT( 0.140233, 0.176311, -0.0211364 ) DX3DVNORM( 0.598668, 0.800997, -7.0474e-007 )  //49
DX3DVERT( 0.0333869, 0.219742, -0.462081 ) DX3DVNORM( 0.376558, 0.926393, 1.83127e-007 )  //50
DX3DVERT( 0.0333869, 0.219742, -0.0211364 ) DX3DVNORM( 0.255248, 0.966876, -6.81693e-007 )  //51
DX3DVERT( 0.00478617, 0.548199, -0.462081 ) DX3DVNORM( 2.94795e-006, 0.990146, 0.140037 )  //52
DX3DVERT( -0.00478599, 0.548199, -0.462081 ) DX3DVNORM( 2.94795e-006, 0.990146, 0.140037 )  //53
DX3DVERT( -0.00559194, 0.526885, -0.311375 ) DX3DVNORM( 2.94795e-006, 0.990146, 0.140037 )  //54
DX3DVERT( 0.00559212, 0.526885, -0.311375 ) DX3DVNORM( 2.94795e-006, 0.990146, 0.140037 )  //55
DX3DVERT( -0.0333869, 0.219742, -0.462081 ) DX3DVNORM( -0.376558, 0.926393, 3.29628e-007 )  //56
DX3DVERT( -0.140233, 0.176312, -0.462081 ) DX3DVNORM( -0.598668, 0.800997, 2.79406e-007 )  //57
DX3DVERT( -0.140233, 0.176311, -0.0211364 ) DX3DVNORM( -0.598668, 0.800997, -7.1723e-007 )  //58
DX3DVERT( -0.0333869, 0.219742, -0.0211364 ) DX3DVNORM( -0.255248, 0.966876, -6.92087e-007 )  //59
DX3DVERT( -0.202643, 0.0980524, -0.462081 ) DX3DVNORM( -0.900968, 0.433885, 7.71038e-008 )  //60
DX3DVERT( -0.202643, 0.0980523, -0.0211364 ) DX3DVNORM( -0.900968, 0.433885, -4.35849e-007 )  //61
DX3DVERT( -0.224917, 0.000464737, -0.462081 ) DX3DVNORM( -0.974927, 0.222522, -6.06642e-008 )  //62
DX3DVERT( -0.224917, 0.000465095, -0.0211364 ) DX3DVNORM( -0.997019, 0.077146, 0.000739247 )  //63
DX3DVERT( -0.660892, -0.208643, -0.462081 ) DX3DVNORM( -0.859026, 0.511932, 0 )  //64
DX3DVERT( -0.669609, -0.22327, -0.462081 ) DX3DVNORM( -0.859026, 0.511932, 0 )  //65
DX3DVERT( -0.669609, -0.22327, -0.326431 ) DX3DVNORM( -0.859026, 0.511932, 0 )  //66
DX3DVERT( -0.660892, -0.208643, -0.326431 ) DX3DVNORM( -0.859026, 0.511932, 0 )  //67
DX3DVERT( -0.140233, -0.144043, 0.161173 ) DX3DVNORM( -0.522992, -0.849368, 0.0710838 )  //68
DX3DVERT( -0.202643, -0.0971224, 0.161173 ) DX3DVNORM( -0.839874, -0.537386, 0.0763384 )  //69
DX3DVERT( -0.0500487, -0.187473, 0.161173 ) DX3DVNORM( -0.221983, -0.972635, 0.0685923 )  //70
DX3DVERT( 0.0500486, -0.187473, 0.161173 ) DX3DVNORM( 0.221983, -0.972635, 0.0685897 )  //71
DX3DVERT( 0.140233, -0.144043, 0.161173 ) DX3DVNORM( 0.522992, -0.849369, 0.0710774 )  //72
DX3DVERT( 0.202643, -0.0971226, 0.161173 ) DX3DVNORM( 0.839875, -0.537386, 0.0763284 )  //73
DX3DVERT( 0.224917, 0.000465035, 0.161173 ) DX3DVNORM( 0.997549, 0.00100185, 0.0699603 )  //74
DX3DVERT( 0.202643, 0.0980527, 0.161173 ) DX3DVNORM( 0.898836, 0.432868, 0.0686967 )  //75
DX3DVERT( 0.140233, 0.176312, 0.161173 ) DX3DVNORM( 0.602816, 0.795377, 0.0631639 )  //76
DX3DVERT( 0.0333869, 0.219742, 0.161173 ) DX3DVNORM( 0.198299, 0.97817, 0.062145 )  //77
DX3DVERT( -0.0333869, 0.219742, 0.161173 ) DX3DVNORM( -0.198298, 0.97817, 0.0621474 )  //78
DX3DVERT( -0.140233, 0.176312, 0.161173 ) DX3DVNORM( -0.602815, 0.795376, 0.0631709 )  //79
DX3DVERT( -0.202643, 0.0980527, 0.161173 ) DX3DVNORM( -0.898835, 0.432868, 0.0687071 )  //80
DX3DVERT( -0.224917, 0.000465035, 0.161173 ) DX3DVNORM( -0.997549, 0.00100182, 0.069972 )  //81
DX3DVERT( -0.126325, -0.133294, 0.320672 ) DX3DVNORM( -0.526003, -0.84359, 0.108058 )  //82
DX3DVERT( -0.182546, -0.0869015, 0.320672 ) DX3DVNORM( -0.837108, -0.530413, 0.133836 )  //83
DX3DVERT( -0.0450839, -0.172418, 0.320672 ) DX3DVNORM( -0.221396, -0.9702, 0.098471 )  //84
DX3DVERT( 0.0450875, -0.172418, 0.320672 ) DX3DVNORM( 0.221395, -0.9702, 0.0984657 )  //85
DX3DVERT( 0.126329, -0.133294, 0.320672 ) DX3DVNORM( 0.526003, -0.843592, 0.108045 )  //86
DX3DVERT( 0.18255, -0.0869016, 0.320672 ) DX3DVNORM( 0.83711, -0.530415, 0.133816 )  //87
DX3DVERT( 0.202615, 0.00100905, 0.320672 ) DX3DVNORM( 0.990366, 2.29921e-005, 0.138475 )  //88
DX3DVERT( 0.18255, 0.0889196, 0.320672 ) DX3DVNORM( 0.89246, 0.429809, 0.137038 )  //89
DX3DVERT( 0.126329, 0.159418, 0.320672 ) DX3DVNORM( 0.604527, 0.786584, 0.12583 )  //90
DX3DVERT( 0.0450876, 0.198542, 0.320672 ) DX3DVNORM( 0.203993, 0.971062, 0.124204 )  //91
DX3DVERT( -0.0450838, 0.198542, 0.320672 ) DX3DVNORM( -0.203992, 0.971061, 0.124208 )  //92
DX3DVERT( -0.126325, 0.159418, 0.320672 ) DX3DVNORM( -0.604526, 0.786582, 0.125844 )  //93
DX3DVERT( -0.182546, 0.0889196, 0.320672 ) DX3DVNORM( -0.892457, 0.429808, 0.137059 )  //94
DX3DVERT( -0.202611, 0.00100905, 0.320672 ) DX3DVNORM( -0.990363, 2.28698e-005, 0.138498 )  //95
DX3DVERT( -0.182546, -0.0869015, 0.320672 ) DX3DVNORM( -0.835751, -0.504669, 0.216399 )  //96
DX3DVERT( -0.126325, -0.133294, 0.320672 ) DX3DVNORM( -0.537494, -0.821777, 0.189163 )  //97
DX3DVERT( -0.0934888, -0.102302, 0.552454 ) DX3DVNORM( -0.542263, -0.793248, 0.276965 )  //98
DX3DVERT( -0.135095, -0.0645937, 0.552454 ) DX3DVNORM( -0.823355, -0.474327, 0.311609 )  //99
DX3DVERT( -0.0450839, -0.172418, 0.320672 ) DX3DVNORM( -0.21875, -0.958785, 0.181327 )  //100
DX3DVERT( -0.0333658, -0.131256, 0.552454 ) DX3DVNORM( -0.214479, -0.940539, 0.263409 )  //101
DX3DVERT( 0.0450875, -0.172418, 0.320672 ) DX3DVNORM( 0.218749, -0.958785, 0.18133 )  //102
DX3DVERT( 0.0333657, -0.131256, 0.552454 ) DX3DVNORM( 0.214478, -0.940539, 0.263411 )  //103
DX3DVERT( 0.126329, -0.133294, 0.320672 ) DX3DVNORM( 0.537492, -0.821776, 0.189172 )  //104
DX3DVERT( 0.0934887, -0.102302, 0.552454 ) DX3DVNORM( 0.542262, -0.793247, 0.276969 )  //105
DX3DVERT( 0.18255, -0.0869016, 0.320672 ) DX3DVNORM( 0.835749, -0.504668, 0.216413 )  //106
DX3DVERT( 0.135095, -0.0645939, 0.552454 ) DX3DVNORM( 0.823353, -0.474326, 0.311616 )  //107
DX3DVERT( 0.202615, 0.00100905, 0.320672 ) DX3DVNORM( 0.975139, -2.45855e-005, 0.221592 )  //108
DX3DVERT( 0.149944, 0.000464618, 0.552454 ) DX3DVNORM( 0.948135, -1.25543e-005, 0.317867 )  //109
DX3DVERT( 0.18255, 0.0889196, 0.320672 ) DX3DVNORM( 0.878387, 0.422983, 0.222536 )  //110
DX3DVERT( 0.135095, 0.0655231, 0.552454 ) DX3DVNORM( 0.854107, 0.411303, 0.318325 )  //111
DX3DVERT( 0.126329, 0.159418, 0.320672 ) DX3DVNORM( 0.60776, 0.762082, 0.22329 )  //112
DX3DVERT( 0.0934887, 0.117696, 0.552454 ) DX3DVNORM( 0.590987, 0.74106, 0.318691 )  //113
DX3DVERT( -0.126325, 0.159418, 0.320672 ) DX3DVNORM( -0.607762, 0.762083, 0.223281 )  //114
DX3DVERT( -0.182546, 0.0889196, 0.320672 ) DX3DVNORM( -0.87839, 0.422984, 0.222522 )  //115
DX3DVERT( -0.135095, 0.0655231, 0.552454 ) DX3DVNORM( -0.854109, 0.411304, 0.318318 )  //116
DX3DVERT( -0.0934888, 0.117696, 0.552454 ) DX3DVNORM( -0.590988, 0.741061, 0.318686 )  //117
DX3DVERT( -0.202611, 0.00100905, 0.320672 ) DX3DVNORM( -0.975143, -2.46542e-005, 0.221577 )  //118
DX3DVERT( -0.149944, 0.000464618, 0.552454 ) DX3DVNORM( -0.948138, -1.24815e-005, 0.317859 )  //119
DX3DVERT( -0.0467444, -0.058151, 0.7189 ) DX3DVNORM( -0.547127, -0.725051, 0.418275 )  //120
DX3DVERT( -0.0675476, -0.0320646, 0.7189 ) DX3DVNORM( -0.799606, -0.411437, 0.437435 )  //121
DX3DVERT( -0.0166829, -0.0726279, 0.7189 ) DX3DVNORM( -0.202899, -0.889574, 0.409256 )  //122
DX3DVERT( 0.0166828, -0.0726279, 0.7189 ) DX3DVNORM( 0.202898, -0.889575, 0.409254 )  //123
DX3DVERT( 0.0467443, -0.058151, 0.7189 ) DX3DVNORM( 0.547128, -0.725053, 0.418269 )  //124
DX3DVERT( 0.0675476, -0.0320646, 0.7189 ) DX3DVNORM( 0.79961, -0.411439, 0.437427 )  //125
DX3DVERT( 0.0749721, 0.000464559, 0.7189 ) DX3DVNORM( 0.897644, 3.50793e-005, 0.440722 )  //126
DX3DVERT( 0.0675476, 0.0329938, 0.7189 ) DX3DVNORM( 0.808995, 0.389626, 0.440135 )  //127
DX3DVERT( 0.0467444, 0.0590802, 0.7189 ) DX3DVNORM( 0.559978, 0.702224, 0.439665 )  //128
DX3DVERT( 0.0333658, 0.14665, 0.552454 ) DX3DVNORM( 0.210906, 0.924027, 0.318893 )  //129
DX3DVERT( 0.0166829, 0.0735571, 0.7189 ) DX3DVNORM( 0.199881, 0.875769, 0.439405 )  //130
DX3DVERT( -0.0333658, 0.14665, 0.552454 ) DX3DVNORM( -0.210906, 0.924028, 0.318891 )  //131
DX3DVERT( -0.0166829, 0.0735571, 0.7189 ) DX3DVNORM( -0.19988, 0.875768, 0.439407 )  //132
DX3DVERT( -0.0467444, 0.0590802, 0.7189 ) DX3DVNORM( -0.559976, 0.702222, 0.439671 )  //133
DX3DVERT( -0.0675476, 0.0329938, 0.7189 ) DX3DVNORM( -0.808991, 0.389624, 0.440143 )  //134
DX3DVERT( -0.0749722, 0.000464559, 0.7189 ) DX3DVNORM( -0.897639, 3.52315e-005, 0.440731 )  //135
DX3DVERT( -0.0467444, -0.0581508, -0.516973 ) DX3DVNORM( 0.00550267, 0.00690169, -0.999961 )  //136
DX3DVERT( -0.0675476, -0.0320644, -0.516973 ) DX3DVNORM( 0.00795348, 0.00383015, -0.999961 )  //137
DX3DVERT( -1.63962e-008, 0.000464737, -0.516311 ) DX3DVNORM( -6.65258e-011, 4.43627e-007, -1 )  //138
DX3DVERT( -0.0166829, -0.0726277, -0.516973 ) DX3DVNORM( 0.00196279, 0.00860627, -0.999961 )  //139
DX3DVERT( 0.0166828, -0.0726277, -0.516973 ) DX3DVNORM( -0.00196431, 0.00860627, -0.999961 )  //140
DX3DVERT( 0.0467443, -0.0581509, -0.516973 ) DX3DVNORM( -0.00550419, 0.0069017, -0.999961 )  //141
DX3DVERT( 0.0675476, -0.0320644, -0.516973 ) DX3DVNORM( -0.00795348, 0.00383015, -0.999961 )  //142
DX3DVERT( 0.0749721, 0.000464737, -0.516973 ) DX3DVNORM( -0.0088272, 6.98493e-010, -0.999961 )  //143
DX3DVERT( 0.0675476, 0.0329939, -0.516973 ) DX3DVNORM( -0.00795272, -0.00383015, -0.999961 )  //144
DX3DVERT( 0.0467444, 0.0590804, -0.516973 ) DX3DVNORM( -0.00550343, -0.00690055, -0.999961 )  //145
DX3DVERT( 0.0166829, 0.0735572, -0.516973 ) DX3DVNORM( -0.00196431, -0.00860431, -0.999961 )  //146
DX3DVERT( -0.0166829, 0.0735572, -0.516973 ) DX3DVNORM( 0.00196508, -0.00860432, -0.999961 )  //147
DX3DVERT( -0.0467444, 0.0590804, -0.516973 ) DX3DVNORM( 0.00550496, -0.00690055, -0.999961 )  //148
DX3DVERT( -0.0675476, 0.032994, -0.516973 ) DX3DVNORM( 0.00795347, -0.00383015, -0.999961 )  //149
DX3DVERT( -0.0749722, 0.000464737, -0.516973 ) DX3DVNORM( 0.00882719, 1.86265e-009, -0.999961 )  //150
DX3DVERT( 1.88239e-006, 0.00100851, 0.859607 ) DX3DVNORM( 5.17204e-006, 0.00152164, 0.999999 )  //151
DX3DVERT( 0.0333869, 0.219742, -0.462081 ) DX3DVNORM( 0, 0, 0 )  //152
DX3DVERT( -0.0333869, 0.219742, -0.462081 ) DX3DVNORM( 0, 0, 0 )  //153
DX3DVERT( -0.0333869, 0.219742, -0.0211364 ) DX3DVNORM( 0, 0, 0 )  //154
DX3DVERT( 0.0333869, 0.219742, -0.0211364 ) DX3DVNORM( 0, 0, 0 )  //155
DX3DVERT( 0.0333869, 0.219742, -0.462081 ) DX3DVNORM( 0, 3.62937e-007, -1 )  //156
DX3DVERT( -0.0333869, 0.219742, -0.462081 ) DX3DVNORM( 0, 3.62937e-007, -1 )  //157
DX3DVERT( -0.00478599, 0.548199, -0.462081 ) DX3DVNORM( 0, 3.62937e-007, -1 )  //158
DX3DVERT( 0.00478617, 0.548199, -0.462081 ) DX3DVNORM( 0, 3.62937e-007, -1 )  //159
DX3DVERT( -0.0333869, 0.219742, -0.462081 ) DX3DVNORM( -0.99601, 0.0892227, 0.00185752 )  //160
DX3DVERT( -0.0333869, 0.219742, -0.0211364 ) DX3DVNORM( -0.99601, 0.0892227, 0.00185752 )  //161
DX3DVERT( -0.00559194, 0.526885, -0.311375 ) DX3DVNORM( -0.99601, 0.0892227, 0.00185752 )  //162
DX3DVERT( -0.00478599, 0.548199, -0.462081 ) DX3DVNORM( -0.99601, 0.0892227, 0.00185752 )  //163
DX3DVERT( -0.0333869, 0.219742, -0.0211364 ) DX3DVNORM( 0, 0.686822, 0.726825 )  //164
DX3DVERT( 0.0333869, 0.219742, -0.0211364 ) DX3DVNORM( 0, 0.686822, 0.726825 )  //165
DX3DVERT( 0.00559212, 0.526885, -0.311375 ) DX3DVNORM( 0, 0.686822, 0.726825 )  //166
DX3DVERT( -0.00559194, 0.526885, -0.311375 ) DX3DVNORM( 0, 0.686822, 0.726825 )  //167
DX3DVERT( 0.0333869, 0.219742, -0.0211364 ) DX3DVNORM( 0.99601, 0.0892222, 0.00185747 )  //168
DX3DVERT( 0.0333869, 0.219742, -0.462081 ) DX3DVNORM( 0.99601, 0.0892222, 0.00185747 )  //169
DX3DVERT( 0.00478617, 0.548199, -0.462081 ) DX3DVNORM( 0.99601, 0.0892222, 0.00185747 )  //170
DX3DVERT( 0.00559212, 0.526885, -0.311375 ) DX3DVNORM( 0.99601, 0.0892222, 0.00185747 )  //171
DX3DVERT( 0.202643, -0.0971229, -0.462081 ) DX3DVNORM( -1.85391e-007, 0, -1 )  //172
DX3DVERT( 0.224917, 0.000464678, -0.462081 ) DX3DVNORM( -1.85391e-007, 0, -1 )  //173
DX3DVERT( 0.503419, -0.175924, -0.462081 ) DX3DVNORM( 3.83041e-008, 0, -1 )  //174
DX3DVERT( 0.484108, -0.201058, -0.462081 ) DX3DVNORM( 3.83041e-008, 0, -1 )  //175
DX3DVERT( 0.224917, 0.000464678, -0.462081 ) DX3DVNORM( 0.53506, 0.844814, -6.168e-007 )  //176
DX3DVERT( 0.224917, 0.000465035, -0.0211364 ) DX3DVNORM( 0.53506, 0.844814, -6.168e-007 )  //177
DX3DVERT( 0.503419, -0.175924, -0.243473 ) DX3DVNORM( 0.53506, 0.844814, -6.168e-007 )  //178
DX3DVERT( 0.503419, -0.175924, -0.462081 ) DX3DVNORM( 0.53506, 0.844814, -6.168e-007 )  //179
DX3DVERT( 0.224917, 0.000465035, -0.0211364 ) DX3DVNORM( 0.712508, 0.480667, 0.511167 )  //180
DX3DVERT( 0.202643, -0.0994995, 0.103911 ) DX3DVNORM( 0.75659, 0.00552817, 0.653866 )  //181
DX3DVERT( 0.503419, -0.175924, -0.243473 ) DX3DVNORM( 0.75659, 0.00552817, 0.653866 )  //182
DX3DVERT( 0.484108, -0.201057, -0.243473 ) DX3DVNORM( 0.61299, -0.470982, 0.634365 )  //183
DX3DVERT( 0.202643, -0.0994995, 0.103911 ) DX3DVNORM( -0.344454, -0.938799, -0.00284357 )  //184
DX3DVERT( 0.202643, -0.0971229, -0.462081 ) DX3DVNORM( -0.344454, -0.938799, -0.00284357 )  //185
DX3DVERT( 0.484108, -0.201058, -0.462081 ) DX3DVNORM( -0.344454, -0.938799, -0.00284357 )  //186
DX3DVERT( 0.484108, -0.201057, -0.243473 ) DX3DVNORM( -0.344454, -0.938799, -0.00284357 )  //187
DX3DVERT( -0.224917, 0.000464737, -0.462081 ) DX3DVNORM( 0, 0, -1 )  //188
DX3DVERT( -0.202643, -0.0971228, -0.462081 ) DX3DVNORM( 0, 0, -1 )  //189
DX3DVERT( -0.484108, -0.201058, -0.462081 ) DX3DVNORM( 0, 0, -1 )  //190
DX3DVERT( -0.503419, -0.175924, -0.462081 ) DX3DVNORM( 0, 0, -1 )  //191
DX3DVERT( -0.202643, -0.0971228, -0.462081 ) DX3DVNORM( 0.344455, -0.938799, -0.00284363 )  //192
DX3DVERT( -0.202643, -0.0994994, 0.103911 ) DX3DVNORM( 0.344455, -0.938799, -0.00284363 )  //193
DX3DVERT( -0.484108, -0.201057, -0.243473 ) DX3DVNORM( 0.344455, -0.938799, -0.00284363 )  //194
DX3DVERT( -0.484108, -0.201058, -0.462081 ) DX3DVNORM( 0.344455, -0.938799, -0.00284363 )  //195
DX3DVERT( -0.484108, -0.201057, -0.243473 ) DX3DVNORM( -0.61299, -0.470983, 0.634365 )  //196
DX3DVERT( -0.202643, -0.0994994, 0.103911 ) DX3DVNORM( -0.75659, 0.00552775, 0.653866 )  //197
DX3DVERT( -0.503419, -0.175924, -0.243473 ) DX3DVNORM( -0.75659, 0.00552775, 0.653866 )  //198
DX3DVERT( -0.224917, 0.000465095, -0.0211364 ) DX3DVNORM( -0.712508, 0.480667, 0.511167 )  //199
DX3DVERT( -0.224917, 0.000465095, -0.0211364 ) DX3DVNORM( -0.53506, 0.844814, -5.99666e-007 )  //200
DX3DVERT( -0.224917, 0.000464737, -0.462081 ) DX3DVNORM( -0.53506, 0.844814, -5.99666e-007 )  //201
DX3DVERT( -0.503419, -0.175924, -0.462081 ) DX3DVNORM( -0.53506, 0.844814, -5.99666e-007 )  //202
DX3DVERT( -0.503419, -0.175924, -0.243473 ) DX3DVNORM( -0.53506, 0.844814, -5.99666e-007 )  //203
DX3DVERT( 0.660892, -0.208643, -0.462081 ) DX3DVNORM( 2.61999e-007, 0, -1 )  //204
DX3DVERT( 0.669609, -0.22327, -0.462081 ) DX3DVNORM( 2.61999e-007, 0, -1 )  //205
DX3DVERT( 0.503419, -0.175924, -0.462081 ) DX3DVNORM( 0.203428, 0.97909, -3.9229e-007 )  //206
DX3DVERT( 0.503419, -0.175924, -0.243473 ) DX3DVNORM( 0.203428, 0.97909, -3.9229e-007 )  //207
DX3DVERT( 0.660892, -0.208643, -0.326431 ) DX3DVNORM( 0.203428, 0.97909, -3.9229e-007 )  //208
DX3DVERT( 0.660892, -0.208643, -0.462081 ) DX3DVNORM( 0.203428, 0.97909, -3.9229e-007 )  //209
DX3DVERT( 0.503419, -0.175924, -0.243473 ) DX3DVNORM( 0.418245, -0.11144, 0.901472 )  //210
DX3DVERT( 0.484108, -0.201057, -0.243473 ) DX3DVNORM( 0.418245, -0.11144, 0.901472 )  //211
DX3DVERT( 0.669609, -0.22327, -0.326431 ) DX3DVNORM( 0.418245, -0.11144, 0.901472 )  //212
DX3DVERT( 0.660892, -0.208643, -0.326431 ) DX3DVNORM( 0.418245, -0.11144, 0.901472 )  //213
DX3DVERT( 0.484108, -0.201057, -0.243473 ) DX3DVNORM( -0.118891, -0.992907, 1.12572e-007 )  //214
DX3DVERT( 0.484108, -0.201058, -0.462081 ) DX3DVNORM( -0.118891, -0.992907, 1.12572e-007 )  //215
DX3DVERT( 0.669609, -0.22327, -0.462081 ) DX3DVNORM( -0.118891, -0.992907, 1.12572e-007 )  //216
DX3DVERT( 0.669609, -0.22327, -0.326431 ) DX3DVNORM( -0.118891, -0.992907, 1.12572e-007 )  //217
DX3DVERT( -0.669609, -0.22327, -0.462081 ) DX3DVNORM( 0, 0, -1 )  //218
DX3DVERT( -0.660892, -0.208643, -0.462081 ) DX3DVNORM( 0, 0, -1 )  //219
DX3DVERT( -0.484108, -0.201058, -0.462081 ) DX3DVNORM( 0.118892, -0.992907, 1.12572e-007 )  //220
DX3DVERT( -0.484108, -0.201057, -0.243473 ) DX3DVNORM( 0.118892, -0.992907, 1.12572e-007 )  //221
DX3DVERT( -0.669609, -0.22327, -0.326431 ) DX3DVNORM( 0.118892, -0.992907, 1.12572e-007 )  //222
DX3DVERT( -0.669609, -0.22327, -0.462081 ) DX3DVNORM( 0.118892, -0.992907, 1.12572e-007 )  //223
DX3DVERT( -0.484108, -0.201057, -0.243473 ) DX3DVNORM( -0.418246, -0.111441, 0.901472 )  //224
DX3DVERT( -0.503419, -0.175924, -0.243473 ) DX3DVNORM( -0.418246, -0.111441, 0.901472 )  //225
DX3DVERT( -0.660892, -0.208643, -0.326431 ) DX3DVNORM( -0.418246, -0.111441, 0.901472 )  //226
DX3DVERT( -0.669609, -0.22327, -0.326431 ) DX3DVNORM( -0.418246, -0.111441, 0.901472 )  //227
DX3DVERT( -0.503419, -0.175924, -0.243473 ) DX3DVNORM( -0.203429, 0.97909, -3.26908e-007 )  //228
DX3DVERT( -0.503419, -0.175924, -0.462081 ) DX3DVNORM( -0.203429, 0.97909, -3.26908e-007 )  //229
DX3DVERT( -0.660892, -0.208643, -0.462081 ) DX3DVNORM( -0.203429, 0.97909, -3.26908e-007 )  //230
DX3DVERT( -0.660892, -0.208643, -0.326431 ) DX3DVNORM( -0.203429, 0.97909, -3.26908e-007 )  //231
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Rocket___mRocket_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Rocket___mRocket_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 232 )
DX3DVERTEX_END


#else
#define vertex_Rocket___mRocket_0	NULL
#define vertexbuff_Rocket___mRocket_0	NULL
#endif




#if ((PT_Rocket___mRocket_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Rocket___mRocket_0 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DINDEX_START( index_Rocket___mRocket_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 24, 23, // 22 68
	24, 25, 23, // 23 71
	24, 26, 25, // 24 74
	26, 27, 25, // 25 77
	26, 0, 27, // 26 80
	0, 3, 27, // 27 83
	28, 29, 31, // 28 86
	29, 30, 31, // 29 89
	29, 32, 30, // 30 92
	32, 33, 30, // 31 95
	32, 34, 33, // 32 98
	34, 35, 33, // 33 101
	34, 36, 35, // 34 104
	36, 37, 35, // 35 107
	36, 38, 37, // 36 110
	38, 39, 37, // 37 113
	40, 41, 43, // 38 116
	41, 42, 43, // 39 119
	44, 45, 47, // 40 122
	45, 46, 47, // 41 125
	45, 48, 46, // 42 128
	48, 49, 46, // 43 131
	48, 50, 49, // 44 134
	50, 51, 49, // 45 137
	52, 53, 55, // 46 140
	53, 54, 55, // 47 143
	56, 57, 59, // 48 146
	57, 58, 59, // 49 149
	57, 60, 58, // 50 152
	60, 61, 58, // 51 155
	60, 62, 61, // 52 158
	62, 63, 61, // 53 161
	64, 65, 67, // 54 164
	65, 66, 67, // 55 167
	31, 30, 69, // 56 170
	30, 68, 69, // 57 173
	30, 33, 68, // 58 176
	33, 70, 68, // 59 179
	33, 35, 70, // 60 182
	35, 71, 70, // 61 185
	35, 37, 71, // 62 188
	37, 72, 71, // 63 191
	37, 39, 72, // 64 194
	39, 73, 72, // 65 197
	39, 47, 73, // 66 200
	47, 74, 73, // 67 203
	47, 46, 74, // 68 206
	46, 75, 74, // 69 209
	46, 49, 75, // 70 212
	49, 76, 75, // 71 215
	49, 51, 76, // 72 218
	51, 77, 76, // 73 221
	51, 59, 77, // 74 224
	59, 78, 77, // 75 227
	59, 58, 78, // 76 230
	58, 79, 78, // 77 233
	58, 61, 79, // 78 236
	61, 80, 79, // 79 239
	61, 63, 80, // 80 242
	63, 81, 80, // 81 245
	63, 31, 81, // 82 248
	31, 69, 81, // 83 251
	69, 68, 83, // 84 254
	68, 82, 83, // 85 257
	68, 70, 82, // 86 260
	70, 84, 82, // 87 263
	70, 71, 84, // 88 266
	71, 85, 84, // 89 269
	71, 72, 85, // 90 272
	72, 86, 85, // 91 275
	72, 73, 86, // 92 278
	73, 87, 86, // 93 281
	73, 74, 87, // 94 284
	74, 88, 87, // 95 287
	74, 75, 88, // 96 290
	75, 89, 88, // 97 293
	75, 76, 89, // 98 296
	76, 90, 89, // 99 299
	76, 77, 90, // 100 302
	77, 91, 90, // 101 305
	77, 78, 91, // 102 308
	78, 92, 91, // 103 311
	78, 79, 92, // 104 314
	79, 93, 92, // 105 317
	79, 80, 93, // 106 320
	80, 94, 93, // 107 323
	80, 81, 94, // 108 326
	81, 95, 94, // 109 329
	81, 69, 95, // 110 332
	69, 83, 95, // 111 335
	96, 97, 99, // 112 338
	97, 98, 99, // 113 341
	97, 100, 98, // 114 344
	100, 101, 98, // 115 347
	100, 102, 101, // 116 350
	102, 103, 101, // 117 353
	102, 104, 103, // 118 356
	104, 105, 103, // 119 359
	104, 106, 105, // 120 362
	106, 107, 105, // 121 365
	106, 108, 107, // 122 368
	108, 109, 107, // 123 371
	108, 110, 109, // 124 374
	110, 111, 109, // 125 377
	110, 112, 111, // 126 380
	112, 113, 111, // 127 383
	114, 115, 117, // 128 386
	115, 116, 117, // 129 389
	115, 118, 116, // 130 392
	118, 119, 116, // 131 395
	118, 96, 119, // 132 398
	96, 99, 119, // 133 401
	99, 98, 121, // 134 404
	98, 120, 121, // 135 407
	98, 101, 120, // 136 410
	101, 122, 120, // 137 413
	101, 103, 122, // 138 416
	103, 123, 122, // 139 419
	103, 105, 123, // 140 422
	105, 124, 123, // 141 425
	105, 107, 124, // 142 428
	107, 125, 124, // 143 431
	107, 109, 125, // 144 434
	109, 126, 125, // 145 437
	109, 111, 126, // 146 440
	111, 127, 126, // 147 443
	111, 113, 127, // 148 446
	113, 128, 127, // 149 449
	113, 129, 128, // 150 452
	129, 130, 128, // 151 455
	129, 131, 130, // 152 458
	131, 132, 130, // 153 461
	131, 117, 132, // 154 464
	117, 133, 132, // 155 467
	117, 116, 133, // 156 470
	116, 134, 133, // 157 473
	116, 119, 134, // 158 476
	119, 135, 134, // 159 479
	119, 99, 135, // 160 482
	99, 121, 135, // 161 485
	136, 137, 138, // 162 488
	139, 136, 138, // 163 491
	140, 139, 138, // 164 494
	141, 140, 138, // 165 497
	142, 141, 138, // 166 500
	143, 142, 138, // 167 503
	144, 143, 138, // 168 506
	145, 144, 138, // 169 509
	146, 145, 138, // 170 512
	147, 146, 138, // 171 515
	148, 147, 138, // 172 518
	149, 148, 138, // 173 521
	150, 149, 138, // 174 524
	137, 150, 138, // 175 527
	121, 120, 151, // 176 530
	120, 122, 151, // 177 533
	122, 123, 151, // 178 536
	123, 124, 151, // 179 539
	124, 125, 151, // 180 542
	125, 126, 151, // 181 545
	126, 127, 151, // 182 548
	127, 128, 151, // 183 551
	128, 130, 151, // 184 554
	130, 132, 151, // 185 557
	132, 133, 151, // 186 560
	133, 134, 151, // 187 563
	134, 135, 151, // 188 566
	135, 121, 151, // 189 569
	152, 153, 152, // 190 572
	153, 153, 152, // 191 575
	153, 154, 153, // 192 578
	154, 154, 153, // 193 581
	154, 155, 154, // 194 584
	155, 155, 154, // 195 587
	155, 152, 155, // 196 590
	152, 152, 155, // 197 593
	156, 157, 159, // 198 596
	157, 158, 159, // 199 599
	160, 161, 163, // 200 602
	161, 162, 163, // 201 605
	164, 165, 167, // 202 608
	165, 166, 167, // 203 611
	168, 169, 171, // 204 614
	169, 170, 171, // 205 617
	172, 173, 175, // 206 620
	173, 174, 175, // 207 623
	176, 177, 179, // 208 626
	177, 178, 179, // 209 629
	180, 181, 182, // 210 632
	182, 181, 183, // 211 635
	184, 185, 187, // 212 638
	185, 186, 187, // 213 641
	188, 189, 191, // 214 644
	189, 190, 191, // 215 647
	192, 193, 195, // 216 650
	193, 194, 195, // 217 653
	196, 197, 198, // 218 656
	198, 197, 199, // 219 659
	200, 201, 203, // 220 662
	201, 202, 203, // 221 665
	175, 174, 205, // 222 668
	174, 204, 205, // 223 671
	206, 207, 209, // 224 674
	207, 208, 209, // 225 677
	210, 211, 213, // 226 680
	211, 212, 213, // 227 683
	214, 215, 217, // 228 686
	215, 216, 217, // 229 689
	191, 190, 219, // 230 692
	190, 218, 219, // 231 695
	220, 221, 223, // 232 698
	221, 222, 223, // 233 701
	224, 225, 227, // 234 704
	225, 226, 227, // 235 707
	228, 229, 231, // 236 710
	229, 230, 231, // 237 713
DX3DINDEX_END
#endif

#else
#define index_Rocket___mRocket_0	NULL
#endif




#if ((PT_Rocket___mRocket_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP) ) || (PT_Rocket___mRocket_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Rocket___mRocket_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Rocket___mRocket_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_VERTEXSTRIP) ) || (PT_Rocket___mRocket_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Rocket___mRocket_0_VERTEXSTRIP 	NULL
#define vertexbuff_Rocket___mRocket_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_Rocket___mBlack_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Rocket___mBlack_1 == PT_TRILIST ) || ((PT_Rocket___mBlack_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP))  || (PT_Rocket___mBlack_1 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERT_START( VN, vertexbuff_Rocket___mBlack_1 )
DX3DVERT( -0.0675476, -0.0320644, -0.516973 ) DX3DVNORM( 0.320392, 0.154292, -0.934635 )  //0
DX3DVERT( -0.0467444, -0.0581508, -0.516973 ) DX3DVNORM( 0.221718, 0.278025, -0.934635 )  //1
DX3DVERT( -0.0934888, -0.116766, -0.545498 ) DX3DVNORM( 0.221718, 0.278025, -0.934635 )  //2
DX3DVERT( -0.135095, -0.0645936, -0.545498 ) DX3DVNORM( 0.320392, 0.154292, -0.934635 )  //3
DX3DVERT( -0.0166829, -0.0726277, -0.516973 ) DX3DVNORM( 0.0791304, 0.346692, -0.934635 )  //4
DX3DVERT( -0.0333658, -0.14572, -0.545498 ) DX3DVNORM( 0.0791304, 0.346692, -0.934635 )  //5
DX3DVERT( 0.0166828, -0.0726277, -0.516973 ) DX3DVNORM( -0.0791297, 0.346692, -0.934635 )  //6
DX3DVERT( 0.0333657, -0.14572, -0.545498 ) DX3DVNORM( -0.0791297, 0.346692, -0.934635 )  //7
DX3DVERT( 0.0467443, -0.0581509, -0.516973 ) DX3DVNORM( -0.221717, 0.278025, -0.934635 )  //8
DX3DVERT( 0.0934887, -0.116767, -0.545498 ) DX3DVNORM( -0.221717, 0.278025, -0.934635 )  //9
DX3DVERT( 0.0675476, -0.0320644, -0.516973 ) DX3DVNORM( -0.320392, 0.154292, -0.934635 )  //10
DX3DVERT( 0.135095, -0.0645937, -0.545498 ) DX3DVNORM( -0.320392, 0.154292, -0.934635 )  //11
DX3DVERT( 0.0749721, 0.000464737, -0.516973 ) DX3DVNORM( -0.355608, 8.22259e-008, -0.934635 )  //12
DX3DVERT( 0.149944, 0.000464737, -0.545498 ) DX3DVNORM( -0.355608, 8.22259e-008, -0.934635 )  //13
DX3DVERT( 0.0675476, 0.0329939, -0.516973 ) DX3DVNORM( -0.320392, -0.154292, -0.934635 )  //14
DX3DVERT( 0.135095, 0.0655231, -0.545498 ) DX3DVNORM( -0.320392, -0.154292, -0.934635 )  //15
DX3DVERT( 0.0467444, 0.0590804, -0.516973 ) DX3DVNORM( -0.221718, -0.278025, -0.934635 )  //16
DX3DVERT( 0.0934887, 0.117696, -0.545498 ) DX3DVNORM( -0.221718, -0.278025, -0.934635 )  //17
DX3DVERT( 0.0166829, 0.0735572, -0.516973 ) DX3DVNORM( -0.0791307, -0.346692, -0.934635 )  //18
DX3DVERT( 0.0333658, 0.14665, -0.545498 ) DX3DVNORM( -0.0791307, -0.346692, -0.934635 )  //19
DX3DVERT( -0.0166829, 0.0735572, -0.516973 ) DX3DVNORM( 0.0791306, -0.346692, -0.934635 )  //20
DX3DVERT( -0.0333658, 0.14665, -0.545498 ) DX3DVNORM( 0.0791306, -0.346692, -0.934635 )  //21
DX3DVERT( -0.0467444, 0.0590804, -0.516973 ) DX3DVNORM( 0.221718, -0.278025, -0.934635 )  //22
DX3DVERT( -0.0934888, 0.117696, -0.545498 ) DX3DVNORM( 0.221718, -0.278025, -0.934635 )  //23
DX3DVERT( -0.0675476, 0.032994, -0.516973 ) DX3DVNORM( 0.320392, -0.154292, -0.934635 )  //24
DX3DVERT( -0.135095, 0.0655231, -0.545498 ) DX3DVNORM( 0.320392, -0.154292, -0.934635 )  //25
DX3DVERT( -0.0749722, 0.000464737, -0.516973 ) DX3DVNORM( 0.355608, 4.8588e-008, -0.934635 )  //26
DX3DVERT( -0.149944, 0.000464737, -0.545498 ) DX3DVNORM( 0.355608, 4.8588e-008, -0.934635 )  //27
DX3DVERT( 0.126329, 0.159418, 0.320672 ) DX3DVNORM( 0.60776, 0.762082, 0.22329 )  //28
DX3DVERT( 0.0450876, 0.198542, 0.320672 ) DX3DVNORM( 0.216887, 0.950219, 0.223706 )  //29
DX3DVERT( 0.0333658, 0.14665, 0.552454 ) DX3DVNORM( 0.210906, 0.924027, 0.318893 )  //30
DX3DVERT( 0.0934887, 0.117696, 0.552454 ) DX3DVNORM( 0.590987, 0.74106, 0.318691 )  //31
DX3DVERT( -0.0450838, 0.198542, 0.320672 ) DX3DVNORM( -0.216887, 0.95022, 0.223703 )  //32
DX3DVERT( -0.0333658, 0.14665, 0.552454 ) DX3DVNORM( -0.210906, 0.924028, 0.318891 )  //33
DX3DVERT( -0.126325, 0.159418, 0.320672 ) DX3DVNORM( -0.607762, 0.762083, 0.223281 )  //34
DX3DVERT( -0.0934888, 0.117696, 0.552454 ) DX3DVNORM( -0.590988, 0.741061, 0.318686 )  //35
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Rocket___mBlack_1 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Rocket___mBlack_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 36 )
DX3DVERTEX_END


#else
#define vertex_Rocket___mBlack_1	NULL
#define vertexbuff_Rocket___mBlack_1	NULL
#endif




#if ((PT_Rocket___mBlack_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Rocket___mBlack_1 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DINDEX_START( index_Rocket___mBlack_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 24, 23, // 22 68
	24, 25, 23, // 23 71
	24, 26, 25, // 24 74
	26, 27, 25, // 25 77
	26, 0, 27, // 26 80
	0, 3, 27, // 27 83
	28, 29, 31, // 28 86
	29, 30, 31, // 29 89
	29, 32, 30, // 30 92
	32, 33, 30, // 31 95
	32, 34, 33, // 32 98
	34, 35, 33, // 33 101
DX3DINDEX_END
#endif

#else
#define index_Rocket___mBlack_1	NULL
#endif




#if ((PT_Rocket___mBlack_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP) ) || (PT_Rocket___mBlack_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Rocket___mBlack_1_INDEXSTRIP 	NULL
#endif




#if ((PT_Rocket___mBlack_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_VERTEXSTRIP) ) || (PT_Rocket___mBlack_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Rocket___mBlack_1_VERTEXSTRIP 	NULL
#define vertexbuff_Rocket___mBlack_1_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Rocket__ )
DX3DMODEL_START( model_Rocket___mRocket_0 )
DX3DMODEL_VERTEX( vertex_Rocket___mRocket_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DMODEL_INDEX( index_Rocket___mRocket_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 714 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mRocket )
DX3DMODEL_END
DX3DMODEL_START( model_Rocket___mBlack_1 )
DX3DMODEL_VERTEX( vertex_Rocket___mBlack_1 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DMODEL_INDEX( index_Rocket___mBlack_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 102 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mBlack )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Rocket__, 558857489 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Rocket__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Arrow__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mArrow )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 0.25, 0.25, 0.25 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_Arrow___mArrow_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Arrow___mArrow_0 == PT_TRILIST ) || ((PT_Arrow___mArrow_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP))  || (PT_Arrow___mArrow_0 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERT_START( VN, vertexbuff_Arrow___mArrow_0 )
DX3DVERT( 0.165655, 0.0538245, 0.0906747 ) DX3DVNORM( 0.0104593, 0.00339843, -0.99994 )  //0
DX3DVERT( 0.140914, 0.10238, 0.0906747 ) DX3DVNORM( 0.0088972, 0.00646425, -0.99994 )  //1
DX3DVERT( 0.296816, 0.21565, 0.0927941 ) DX3DVNORM( 0.0088972, 0.00646425, -0.99994 )  //2
DX3DVERT( 0.348928, 0.113374, 0.0927941 ) DX3DVNORM( 0.0104593, 0.00339843, -0.99994 )  //3
DX3DVERT( 0.10238, 0.140914, 0.0906747 ) DX3DVNORM( 0.00646426, 0.00889713, -0.99994 )  //4
DX3DVERT( 0.21565, 0.296816, 0.0927941 ) DX3DVNORM( 0.00646426, 0.00889713, -0.99994 )  //5
DX3DVERT( 0.0538244, 0.165655, 0.0906747 ) DX3DVNORM( 0.00339846, 0.0104592, -0.99994 )  //6
DX3DVERT( 0.113374, 0.348928, 0.0927941 ) DX3DVNORM( 0.00339846, 0.0104592, -0.99994 )  //7
DX3DVERT( -7.80825e-009, 0.17418, 0.0906747 ) DX3DVNORM( -5.78003e-008, 0.0109975, -0.99994 )  //8
DX3DVERT( -1.32772e-008, 0.366885, 0.0927941 ) DX3DVNORM( -5.78003e-008, 0.0109975, -0.99994 )  //9
DX3DVERT( -0.0538245, 0.165655, 0.0906747 ) DX3DVNORM( -0.0033984, 0.0104594, -0.99994 )  //10
DX3DVERT( -0.113374, 0.348928, 0.0927941 ) DX3DVNORM( -0.0033984, 0.0104594, -0.99994 )  //11
DX3DVERT( -0.10238, 0.140914, 0.0906747 ) DX3DVNORM( -0.00646415, 0.00889733, -0.99994 )  //12
DX3DVERT( -0.21565, 0.296816, 0.0927941 ) DX3DVNORM( -0.00646415, 0.00889733, -0.99994 )  //13
DX3DVERT( -0.140914, 0.10238, 0.0906747 ) DX3DVNORM( -0.0088972, 0.0064642, -0.99994 )  //14
DX3DVERT( -0.296816, 0.21565, 0.0927941 ) DX3DVNORM( -0.0088972, 0.0064642, -0.99994 )  //15
DX3DVERT( -0.165655, 0.0538245, 0.0906747 ) DX3DVNORM( -0.0104593, 0.0033983, -0.99994 )  //16
DX3DVERT( -0.348928, 0.113374, 0.0927941 ) DX3DVNORM( -0.0104593, 0.0033983, -0.99994 )  //17
DX3DVERT( -0.17418, 0, 0.0906747 ) DX3DVNORM( -0.0109976, -6.69389e-008, -0.99994 )  //18
DX3DVERT( -0.366885, 2.98023e-008, 0.0927941 ) DX3DVNORM( -0.0109976, -6.69389e-008, -0.99994 )  //19
DX3DVERT( -0.165655, -0.0538244, 0.0906747 ) DX3DVNORM( -0.0104593, -0.00339844, -0.99994 )  //20
DX3DVERT( -0.348928, -0.113374, 0.0927941 ) DX3DVNORM( -0.0104593, -0.00339844, -0.99994 )  //21
DX3DVERT( -0.140914, -0.10238, 0.0906747 ) DX3DVNORM( -0.00889723, -0.00646421, -0.99994 )  //22
DX3DVERT( -0.296816, -0.21565, 0.0927941 ) DX3DVNORM( -0.00889723, -0.00646421, -0.99994 )  //23
DX3DVERT( -0.10238, -0.140914, 0.0906747 ) DX3DVNORM( -0.0064642, -0.00889723, -0.99994 )  //24
DX3DVERT( -0.21565, -0.296816, 0.0927941 ) DX3DVNORM( -0.0064642, -0.00889723, -0.99994 )  //25
DX3DVERT( -0.0538245, -0.165655, 0.0906747 ) DX3DVNORM( -0.00339837, -0.0104593, -0.99994 )  //26
DX3DVERT( -0.113374, -0.348928, 0.0927941 ) DX3DVNORM( -0.00339837, -0.0104593, -0.99994 )  //27
DX3DVERT( -7.30981e-009, -0.174179, 0.0906747 ) DX3DVNORM( 5.80913e-008, -0.0109976, -0.99994 )  //28
DX3DVERT( -1.22273e-008, -0.366885, 0.0927941 ) DX3DVNORM( 5.80913e-008, -0.0109976, -0.99994 )  //29
DX3DVERT( 0.0538244, -0.165655, 0.0906747 ) DX3DVNORM( 0.0033984, -0.0104593, -0.99994 )  //30
DX3DVERT( 0.113374, -0.348928, 0.0927941 ) DX3DVNORM( 0.0033984, -0.0104593, -0.99994 )  //31
DX3DVERT( 0.10238, -0.140914, 0.0906747 ) DX3DVNORM( 0.00646418, -0.00889723, -0.99994 )  //32
DX3DVERT( 0.21565, -0.296816, 0.0927941 ) DX3DVNORM( 0.00646418, -0.00889723, -0.99994 )  //33
DX3DVERT( 0.140914, -0.10238, 0.0906747 ) DX3DVNORM( 0.00889721, -0.00646421, -0.99994 )  //34
DX3DVERT( 0.296816, -0.21565, 0.0927941 ) DX3DVNORM( 0.00889721, -0.00646421, -0.99994 )  //35
DX3DVERT( 0.165655, -0.0538245, 0.0906747 ) DX3DVNORM( 0.0104593, -0.00339844, -0.99994 )  //36
DX3DVERT( 0.348928, -0.113374, 0.0927941 ) DX3DVNORM( 0.0104593, -0.00339844, -0.99994 )  //37
DX3DVERT( 0.174179, 0, 0.0906747 ) DX3DVNORM( 0.0109976, -2.74159e-008, -0.99994 )  //38
DX3DVERT( 0.366885, 2.98023e-008, 0.0927941 ) DX3DVNORM( 0.0109976, -2.74159e-008, -0.99994 )  //39
DX3DVERT( 0.140914, 0.10238, -0.504658 ) DX3DVNORM( 0.00272984, 0.00198284, -0.999994 )  //40
DX3DVERT( 0.165655, 0.0538245, -0.504658 ) DX3DVNORM( 0.00320866, 0.00104244, -0.999994 )  //41
DX3DVERT( 0, 0, -0.505245 ) DX3DVNORM( -9.90584e-008, 6.19886e-008, -1 )  //42
DX3DVERT( 0.10238, 0.140914, -0.504658 ) DX3DVNORM( 0.00198202, 0.00272947, -0.999994 )  //43
DX3DVERT( 0.0538244, 0.165655, -0.504658 ) DX3DVNORM( 0.00104108, 0.0032088, -0.999994 )  //44
DX3DVERT( -7.80825e-009, 0.174179, -0.504658 ) DX3DVNORM( 1.45519e-010, 0.00337375, -0.999994 )  //45
DX3DVERT( -0.0538245, 0.165655, -0.504658 ) DX3DVNORM( -0.00104108, 0.0032088, -0.999994 )  //46
DX3DVERT( -0.10238, 0.140914, -0.504658 ) DX3DVNORM( -0.00198201, 0.00272947, -0.999994 )  //47
DX3DVERT( -0.140914, 0.10238, -0.504658 ) DX3DVNORM( -0.00273004, 0.00198239, -0.999994 )  //48
DX3DVERT( -0.165655, 0.0538243, -0.504658 ) DX3DVNORM( -0.00320872, 0.00104202, -0.999994 )  //49
DX3DVERT( -0.17418, -1.19209e-007, -0.504658 ) DX3DVNORM( -0.00337343, 5.53817e-007, -0.999994 )  //50
DX3DVERT( -0.165655, -0.0538245, -0.504658 ) DX3DVNORM( -0.00320787, -0.00104244, -0.999994 )  //51
DX3DVERT( -0.140914, -0.10238, -0.504658 ) DX3DVNORM( -0.00272825, -0.00198349, -0.999994 )  //52
DX3DVERT( -0.10238, -0.140914, -0.504658 ) DX3DVNORM( -0.0019836, -0.0027291, -0.999994 )  //53
DX3DVERT( -0.0538245, -0.165655, -0.504658 ) DX3DVNORM( -0.00104425, -0.00320813, -0.999994 )  //54
DX3DVERT( -7.30981e-009, -0.174179, -0.504658 ) DX3DVNORM( -7.94535e-007, -0.00337341, -0.999994 )  //55
DX3DVERT( 0.0538244, -0.165655, -0.504658 ) DX3DVNORM( 0.00104187, -0.00320831, -0.999994 )  //56
DX3DVERT( 0.10238, -0.140914, -0.504658 ) DX3DVNORM( 0.00198281, -0.00272915, -0.999994 )  //57
DX3DVERT( 0.140914, -0.10238, -0.504658 ) DX3DVNORM( 0.00272964, -0.00198284, -0.999994 )  //58
DX3DVERT( 0.165655, -0.0538243, -0.504658 ) DX3DVNORM( 0.00320852, -0.00104244, -0.999994 )  //59
DX3DVERT( 0.174179, 1.19209e-007, -0.504658 ) DX3DVNORM( 0.00337363, -1.71713e-009, -0.999994 )  //60
DX3DVERT( 0.348928, 0.113374, 0.0927941 ) DX3DVNORM( 0.773907, 0.251457, 0.581238 )  //61
DX3DVERT( 0.296816, 0.21565, 0.0927941 ) DX3DVNORM( 0.658324, 0.4783, 0.581238 )  //62
DX3DVERT( -1.58685e-008, 0, 0.606433 ) DX3DVNORM( 3.10188e-008, -5.29904e-008, 1 )  //63
DX3DVERT( 0.21565, 0.296816, 0.0927941 ) DX3DVNORM( 0.4783, 0.658324, 0.581238 )  //64
DX3DVERT( 0.113374, 0.348928, 0.0927941 ) DX3DVNORM( 0.251457, 0.773906, 0.581238 )  //65
DX3DVERT( -1.32772e-008, 0.366885, 0.0927941 ) DX3DVNORM( 2.92976e-007, 0.813733, 0.581238 )  //66
DX3DVERT( -0.113374, 0.348928, 0.0927941 ) DX3DVNORM( -0.251457, 0.773906, 0.581238 )  //67
DX3DVERT( -0.21565, 0.296816, 0.0927941 ) DX3DVNORM( -0.478301, 0.658324, 0.581238 )  //68
DX3DVERT( -0.296816, 0.21565, 0.0927941 ) DX3DVNORM( -0.658324, 0.4783, 0.581238 )  //69
DX3DVERT( -0.348928, 0.113374, 0.0927941 ) DX3DVNORM( -0.773906, 0.251457, 0.581238 )  //70
DX3DVERT( -0.366885, 2.98023e-008, 0.0927941 ) DX3DVNORM( -0.813733, 1.05171e-007, 0.581238 )  //71
DX3DVERT( -0.348928, -0.113374, 0.0927941 ) DX3DVNORM( -0.773906, -0.251457, 0.581238 )  //72
DX3DVERT( -0.296816, -0.21565, 0.0927941 ) DX3DVNORM( -0.658324, -0.478301, 0.581238 )  //73
DX3DVERT( -0.21565, -0.296816, 0.0927941 ) DX3DVNORM( -0.4783, -0.658324, 0.581238 )  //74
DX3DVERT( -0.113374, -0.348928, 0.0927941 ) DX3DVNORM( -0.251457, -0.773906, 0.581238 )  //75
DX3DVERT( -1.22273e-008, -0.366885, 0.0927941 ) DX3DVNORM( 1.12683e-007, -0.813733, 0.581238 )  //76
DX3DVERT( 0.113374, -0.348928, 0.0927941 ) DX3DVNORM( 0.251458, -0.773906, 0.581238 )  //77
DX3DVERT( 0.21565, -0.296816, 0.0927941 ) DX3DVNORM( 0.478301, -0.658324, 0.581238 )  //78
DX3DVERT( 0.296816, -0.21565, 0.0927941 ) DX3DVNORM( 0.658324, -0.4783, 0.581238 )  //79
DX3DVERT( 0.348928, -0.113374, 0.0927941 ) DX3DVNORM( 0.773906, -0.251457, 0.581238 )  //80
DX3DVERT( 0.366885, 2.98023e-008, 0.0927941 ) DX3DVNORM( 0.813733, -4.4322e-007, 0.581238 )  //81
DX3DVERT( 0.140914, 0.10238, 0.0906747 ) DX3DVNORM( 0.809017, 0.587785, 5.44957e-009 )  //82
DX3DVERT( 0.165655, 0.0538245, 0.0906747 ) DX3DVNORM( 0.951057, 0.309017, 1.54405e-008 )  //83
DX3DVERT( 0.165655, 0.0538245, -0.504658 ) DX3DVNORM( 0.951057, 0.309017, 1.54405e-008 )  //84
DX3DVERT( 0.140914, 0.10238, -0.504658 ) DX3DVNORM( 0.809017, 0.587785, 5.44957e-009 )  //85
DX3DVERT( 0.10238, 0.140914, 0.0906747 ) DX3DVNORM( 0.587785, 0.809017, -7.2661e-009 )  //86
DX3DVERT( 0.10238, 0.140914, -0.504658 ) DX3DVNORM( 0.587785, 0.809017, -7.2661e-009 )  //87
DX3DVERT( 0.0538244, 0.165655, 0.0906747 ) DX3DVNORM( 0.309016, 0.951057, -3.63305e-008 )  //88
DX3DVERT( 0.0538244, 0.165655, -0.504658 ) DX3DVNORM( 0.309016, 0.951057, -3.63305e-008 )  //89
DX3DVERT( -7.80825e-009, 0.17418, 0.0906747 ) DX3DVNORM( 3.77173e-008, 1, -5.81287e-008 )  //90
DX3DVERT( -7.80825e-009, 0.174179, -0.504658 ) DX3DVNORM( 3.77173e-008, 1, -5.81287e-008 )  //91
DX3DVERT( -0.0538245, 0.165655, 0.0906747 ) DX3DVNORM( -0.309017, 0.951057, -3.63305e-008 )  //92
DX3DVERT( -0.0538245, 0.165655, -0.504658 ) DX3DVNORM( -0.309017, 0.951057, -3.63305e-008 )  //93
DX3DVERT( -0.10238, 0.140914, 0.0906747 ) DX3DVNORM( -0.587786, 0.809017, -3.63304e-008 )  //94
DX3DVERT( -0.10238, 0.140914, -0.504658 ) DX3DVNORM( -0.587786, 0.809017, -3.63304e-008 )  //95
DX3DVERT( -0.140914, 0.10238, 0.0906747 ) DX3DVNORM( -0.809017, 0.587785, -7.44774e-008 )  //96
DX3DVERT( -0.140914, 0.10238, -0.504658 ) DX3DVNORM( -0.809017, 0.587785, -7.44774e-008 )  //97
DX3DVERT( -0.165655, 0.0538245, 0.0906747 ) DX3DVNORM( -0.951057, 0.309016, -6.31242e-008 )  //98
DX3DVERT( -0.165655, 0.0538243, -0.504658 ) DX3DVNORM( -0.951057, 0.309016, -6.31242e-008 )  //99
DX3DVERT( -0.17418, 0, 0.0906747 ) DX3DVNORM( -1, 9.80649e-008, -1.81652e-009 )  //100
DX3DVERT( -0.17418, -1.19209e-007, -0.504658 ) DX3DVNORM( -1, 9.80649e-008, -1.81652e-009 )  //101
DX3DVERT( -0.165655, -0.0538244, 0.0906747 ) DX3DVNORM( -0.951057, -0.309017, 3.58764e-008 )  //102
DX3DVERT( -0.165655, -0.0538245, -0.504658 ) DX3DVNORM( -0.951057, -0.309017, 3.58764e-008 )  //103
DX3DVERT( -0.140914, -0.10238, 0.0906747 ) DX3DVNORM( -0.809017, -0.587785, 1.99818e-008 )  //104
DX3DVERT( -0.140914, -0.10238, -0.504658 ) DX3DVNORM( -0.809017, -0.587785, 1.99818e-008 )  //105
DX3DVERT( -0.10238, -0.140914, 0.0906747 ) DX3DVNORM( -0.587786, -0.809017, 3.63305e-008 )  //106
DX3DVERT( -0.10238, -0.140914, -0.504658 ) DX3DVNORM( -0.587786, -0.809017, 3.63305e-008 )  //107
DX3DVERT( -0.0538245, -0.165655, 0.0906747 ) DX3DVNORM( -0.309016, -0.951057, 6.53949e-008 )  //108
DX3DVERT( -0.0538245, -0.165655, -0.504658 ) DX3DVNORM( -0.309016, -0.951057, 6.53949e-008 )  //109
DX3DVERT( -7.30981e-009, -0.174179, 0.0906747 ) DX3DVNORM( 7.39258e-007, -1, 2.90644e-008 )  //110
DX3DVERT( -7.30981e-009, -0.174179, -0.504658 ) DX3DVNORM( 7.39258e-007, -1, 2.90644e-008 )  //111
DX3DVERT( 0.0538244, -0.165655, 0.0906747 ) DX3DVNORM( 0.309017, -0.951057, 0 )  //112
DX3DVERT( 0.0538244, -0.165655, -0.504658 ) DX3DVNORM( 0.309017, -0.951057, 0 )  //113
DX3DVERT( 0.10238, -0.140914, 0.0906747 ) DX3DVNORM( 0.587785, -0.809017, 1.45322e-008 )  //114
DX3DVERT( 0.10238, -0.140914, -0.504658 ) DX3DVNORM( 0.587785, -0.809017, 1.45322e-008 )  //115
DX3DVERT( 0.140914, -0.10238, 0.0906747 ) DX3DVNORM( 0.809017, -0.587785, -1.08992e-008 )  //116
DX3DVERT( 0.140914, -0.10238, -0.504658 ) DX3DVNORM( 0.809017, -0.587785, -1.08992e-008 )  //117
DX3DVERT( 0.165655, -0.0538245, 0.0906747 ) DX3DVNORM( 0.951057, -0.309017, -4.31424e-008 )  //118
DX3DVERT( 0.165655, -0.0538243, -0.504658 ) DX3DVNORM( 0.951057, -0.309017, -4.31424e-008 )  //119
DX3DVERT( 0.174179, 0, 0.0906747 ) DX3DVNORM( 1, -5.35585e-007, -7.72022e-009 )  //120
DX3DVERT( 0.174179, 1.19209e-007, -0.504658 ) DX3DVNORM( 1, -5.35585e-007, -7.72022e-009 )  //121
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Arrow___mArrow_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Arrow___mArrow_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 122 )
DX3DVERTEX_END


#else
#define vertex_Arrow___mArrow_0	NULL
#define vertexbuff_Arrow___mArrow_0	NULL
#endif




#if ((PT_Arrow___mArrow_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Arrow___mArrow_0 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DINDEX_START( index_Arrow___mArrow_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 24, 23, // 22 68
	24, 25, 23, // 23 71
	24, 26, 25, // 24 74
	26, 27, 25, // 25 77
	26, 28, 27, // 26 80
	28, 29, 27, // 27 83
	28, 30, 29, // 28 86
	30, 31, 29, // 29 89
	30, 32, 31, // 30 92
	32, 33, 31, // 31 95
	32, 34, 33, // 32 98
	34, 35, 33, // 33 101
	34, 36, 35, // 34 104
	36, 37, 35, // 35 107
	36, 38, 37, // 36 110
	38, 39, 37, // 37 113
	38, 0, 39, // 38 116
	0, 3, 39, // 39 119
	40, 41, 42, // 40 122
	43, 40, 42, // 41 125
	44, 43, 42, // 42 128
	45, 44, 42, // 43 131
	46, 45, 42, // 44 134
	47, 46, 42, // 45 137
	48, 47, 42, // 46 140
	49, 48, 42, // 47 143
	50, 49, 42, // 48 146
	51, 50, 42, // 49 149
	52, 51, 42, // 50 152
	53, 52, 42, // 51 155
	54, 53, 42, // 52 158
	55, 54, 42, // 53 161
	56, 55, 42, // 54 164
	57, 56, 42, // 55 167
	58, 57, 42, // 56 170
	59, 58, 42, // 57 173
	60, 59, 42, // 58 176
	41, 60, 42, // 59 179
	61, 62, 63, // 60 182
	62, 64, 63, // 61 185
	64, 65, 63, // 62 188
	65, 66, 63, // 63 191
	66, 67, 63, // 64 194
	67, 68, 63, // 65 197
	68, 69, 63, // 66 200
	69, 70, 63, // 67 203
	70, 71, 63, // 68 206
	71, 72, 63, // 69 209
	72, 73, 63, // 70 212
	73, 74, 63, // 71 215
	74, 75, 63, // 72 218
	75, 76, 63, // 73 221
	76, 77, 63, // 74 224
	77, 78, 63, // 75 227
	78, 79, 63, // 76 230
	79, 80, 63, // 77 233
	80, 81, 63, // 78 236
	81, 61, 63, // 79 239
	82, 83, 85, // 80 242
	83, 84, 85, // 81 245
	86, 82, 87, // 82 248
	82, 85, 87, // 83 251
	88, 86, 89, // 84 254
	86, 87, 89, // 85 257
	90, 88, 91, // 86 260
	88, 89, 91, // 87 263
	92, 90, 93, // 88 266
	90, 91, 93, // 89 269
	94, 92, 95, // 90 272
	92, 93, 95, // 91 275
	96, 94, 97, // 92 278
	94, 95, 97, // 93 281
	98, 96, 99, // 94 284
	96, 97, 99, // 95 287
	100, 98, 101, // 96 290
	98, 99, 101, // 97 293
	102, 100, 103, // 98 296
	100, 101, 103, // 99 299
	104, 102, 105, // 100 302
	102, 103, 105, // 101 305
	106, 104, 107, // 102 308
	104, 105, 107, // 103 311
	108, 106, 109, // 104 314
	106, 107, 109, // 105 317
	110, 108, 111, // 106 320
	108, 109, 111, // 107 323
	112, 110, 113, // 108 326
	110, 111, 113, // 109 329
	114, 112, 115, // 110 332
	112, 113, 115, // 111 335
	116, 114, 117, // 112 338
	114, 115, 117, // 113 341
	118, 116, 119, // 114 344
	116, 117, 119, // 115 347
	120, 118, 121, // 116 350
	118, 119, 121, // 117 353
	83, 120, 84, // 118 356
	120, 121, 84, // 119 359
DX3DINDEX_END
#endif

#else
#define index_Arrow___mArrow_0	NULL
#endif




#if ((PT_Arrow___mArrow_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP) ) || (PT_Arrow___mArrow_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Arrow___mArrow_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Arrow___mArrow_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_VERTEXSTRIP) ) || (PT_Arrow___mArrow_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Arrow___mArrow_0_VERTEXSTRIP 	NULL
#define vertexbuff_Arrow___mArrow_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Arrow__ )
DX3DMODEL_START( model_Arrow___mArrow_0 )
DX3DMODEL_VERTEX( vertex_Arrow___mArrow_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DMODEL_INDEX( index_Arrow___mArrow_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 360 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mArrow )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Arrow__, 3124183037 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Arrow__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Cursor__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mCursor )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 0.25, 0.25, 0.25 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_Cursor___mCursor_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Cursor___mCursor_0 == PT_TRILIST ) || ((PT_Cursor___mCursor_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP))  || (PT_Cursor___mCursor_0 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERT_START( VN, vertexbuff_Cursor___mCursor_0 )
DX3DVERT( -0.5, 0.45, -0.35 ) DX3DVNORM( 0, 0, 1 )  //0
DX3DVERT( -0.45, 0.45, -0.35 ) DX3DVNORM( 0, 0, 1 )  //1
DX3DVERT( -0.45, 0.5, -0.35 ) DX3DVNORM( 0, 0, 1 )  //2
DX3DVERT( -0.5, 0.5, -0.35 ) DX3DVNORM( 0, 0, 1 )  //3
DX3DVERT( -0.5, 0.5, -0.45 ) DX3DVNORM( 0, 1, 0 )  //4
DX3DVERT( -0.45, 0.5, -0.45 ) DX3DVNORM( 0, 1, 0 )  //5
DX3DVERT( -0.45, 0.5, -0.5 ) DX3DVNORM( 0, 1, 0 )  //6
DX3DVERT( -0.5, 0.5, -0.5 ) DX3DVNORM( 0, 1, 0 )  //7
DX3DVERT( -0.5, 0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( -0.45, 0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( -0.45, 0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( -0.5, 0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( -0.5, 0.35, -0.5 ) DX3DVNORM( 0, -1, 0 )  //12
DX3DVERT( -0.45, 0.35, -0.5 ) DX3DVNORM( 0, -1, 0 )  //13
DX3DVERT( -0.45, 0.35, -0.45 ) DX3DVNORM( 0, -1, 0 )  //14
DX3DVERT( -0.5, 0.35, -0.45 ) DX3DVNORM( 0, -1, 0 )  //15
DX3DVERT( -0.35, 0.45, -0.45 ) DX3DVNORM( 1, 0, 0 )  //16
DX3DVERT( -0.35, 0.45, -0.5 ) DX3DVNORM( 1, 0, 0 )  //17
DX3DVERT( -0.35, 0.5, -0.5 ) DX3DVNORM( 1, 0, 0 )  //18
DX3DVERT( -0.35, 0.5, -0.45 ) DX3DVNORM( 1, 0, 0 )  //19
DX3DVERT( -0.5, 0.45, -0.5 ) DX3DVNORM( -1, 0, 0 )  //20
DX3DVERT( -0.5, 0.45, -0.45 ) DX3DVNORM( -1, 0, 0 )  //21
DX3DVERT( -0.5, 0.5, -0.45 ) DX3DVNORM( -1, 0, 0 )  //22
DX3DVERT( -0.5, 0.5, -0.5 ) DX3DVNORM( -1, 0, 0 )  //23
DX3DVERT( -0.45, 0.45, -0.45 ) DX3DVNORM( 0, -1, 0 )  //24
DX3DVERT( -0.45, 0.45, -0.5 ) DX3DVNORM( 0, -1, 0 )  //25
DX3DVERT( -0.35, 0.45, -0.5 ) DX3DVNORM( 0, -1, 0 )  //26
DX3DVERT( -0.35, 0.45, -0.45 ) DX3DVNORM( 0, -1, 0 )  //27
DX3DVERT( -0.35, 0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( -0.35, 0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( -0.35, 0.5, -0.45 ) DX3DVNORM( 0, 1, 0 )  //30
DX3DVERT( -0.35, 0.5, -0.5 ) DX3DVNORM( 0, 1, 0 )  //31
DX3DVERT( -0.45, 0.5, -0.45 ) DX3DVNORM( 0, 0, 1 )  //32
DX3DVERT( -0.45, 0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //33
DX3DVERT( -0.35, 0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //34
DX3DVERT( -0.35, 0.5, -0.45 ) DX3DVNORM( 0, 0, 1 )  //35
DX3DVERT( -0.5, 0.45, -0.45 ) DX3DVNORM( 0, -1, 0 )  //36
DX3DVERT( -0.45, 0.45, -0.35 ) DX3DVNORM( 0, -1, 0 )  //37
DX3DVERT( -0.5, 0.45, -0.35 ) DX3DVNORM( 0, -1, 0 )  //38
DX3DVERT( -0.45, 0.45, -0.45 ) DX3DVNORM( 1, 0, 0 )  //39
DX3DVERT( -0.45, 0.5, -0.45 ) DX3DVNORM( 1, 0, 0 )  //40
DX3DVERT( -0.45, 0.5, -0.35 ) DX3DVNORM( 1, 0, 0 )  //41
DX3DVERT( -0.45, 0.45, -0.35 ) DX3DVNORM( 1, 0, 0 )  //42
DX3DVERT( -0.5, 0.5, -0.35 ) DX3DVNORM( 0, 1, 0 )  //43
DX3DVERT( -0.45, 0.5, -0.35 ) DX3DVNORM( 0, 1, 0 )  //44
DX3DVERT( -0.5, 0.45, -0.35 ) DX3DVNORM( -1, 0, 0 )  //45
DX3DVERT( -0.5, 0.5, -0.35 ) DX3DVNORM( -1, 0, 0 )  //46
DX3DVERT( -0.45, 0.35, -0.5 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( -0.5, 0.35, -0.5 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( -0.45, 0.45, -0.5 ) DX3DVNORM( 1, 0, 0 )  //49
DX3DVERT( -0.45, 0.35, -0.45 ) DX3DVNORM( 1, 0, 0 )  //50
DX3DVERT( -0.45, 0.35, -0.5 ) DX3DVNORM( 1, 0, 0 )  //51
DX3DVERT( -0.5, 0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //52
DX3DVERT( -0.5, 0.35, -0.45 ) DX3DVNORM( 0, 0, 1 )  //53
DX3DVERT( -0.45, 0.35, -0.45 ) DX3DVNORM( 0, 0, 1 )  //54
DX3DVERT( -0.5, 0.35, -0.5 ) DX3DVNORM( -1, 0, 0 )  //55
DX3DVERT( -0.5, 0.35, -0.45 ) DX3DVNORM( -1, 0, 0 )  //56
DX3DVERT( -0.35, 0.45, 0.5 ) DX3DVNORM( 1, 0, 0 )  //57
DX3DVERT( -0.35, 0.45, 0.45 ) DX3DVNORM( 1, 0, 0 )  //58
DX3DVERT( -0.35, 0.5, 0.45 ) DX3DVNORM( 1, 0, 0 )  //59
DX3DVERT( -0.35, 0.5, 0.5 ) DX3DVNORM( 1, 0, 0 )  //60
DX3DVERT( -0.45, 0.5, 0.5 ) DX3DVNORM( 0, 1, 0 )  //61
DX3DVERT( -0.45, 0.5, 0.45 ) DX3DVNORM( 0, 1, 0 )  //62
DX3DVERT( -0.5, 0.5, 0.45 ) DX3DVNORM( 0, 1, 0 )  //63
DX3DVERT( -0.5, 0.5, 0.5 ) DX3DVNORM( 0, 1, 0 )  //64
DX3DVERT( -0.5, 0.5, 0.5 ) DX3DVNORM( -1, 0, 0 )  //65
DX3DVERT( -0.5, 0.5, 0.45 ) DX3DVNORM( -1, 0, 0 )  //66
DX3DVERT( -0.5, 0.45, 0.45 ) DX3DVNORM( -1, 0, 0 )  //67
DX3DVERT( -0.5, 0.45, 0.5 ) DX3DVNORM( -1, 0, 0 )  //68
DX3DVERT( -0.5, 0.35, 0.5 ) DX3DVNORM( 0, -1, 0 )  //69
DX3DVERT( -0.5, 0.35, 0.45 ) DX3DVNORM( 0, -1, 0 )  //70
DX3DVERT( -0.45, 0.35, 0.45 ) DX3DVNORM( 0, -1, 0 )  //71
DX3DVERT( -0.45, 0.35, 0.5 ) DX3DVNORM( 0, -1, 0 )  //72
DX3DVERT( -0.45, 0.45, 0.35 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( -0.5, 0.45, 0.35 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( -0.5, 0.5, 0.35 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( -0.45, 0.5, 0.35 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( -0.5, 0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //77
DX3DVERT( -0.45, 0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //78
DX3DVERT( -0.45, 0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //79
DX3DVERT( -0.5, 0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //80
DX3DVERT( -0.45, 0.45, 0.45 ) DX3DVNORM( 0, -1, 0 )  //81
DX3DVERT( -0.5, 0.45, 0.45 ) DX3DVNORM( 0, -1, 0 )  //82
DX3DVERT( -0.5, 0.45, 0.35 ) DX3DVNORM( 0, -1, 0 )  //83
DX3DVERT( -0.45, 0.45, 0.35 ) DX3DVNORM( 0, -1, 0 )  //84
DX3DVERT( -0.5, 0.5, 0.35 ) DX3DVNORM( -1, 0, 0 )  //85
DX3DVERT( -0.5, 0.45, 0.35 ) DX3DVNORM( -1, 0, 0 )  //86
DX3DVERT( -0.45, 0.5, 0.35 ) DX3DVNORM( 0, 1, 0 )  //87
DX3DVERT( -0.5, 0.5, 0.35 ) DX3DVNORM( 0, 1, 0 )  //88
DX3DVERT( -0.45, 0.5, 0.45 ) DX3DVNORM( 1, 0, 0 )  //89
DX3DVERT( -0.45, 0.45, 0.45 ) DX3DVNORM( 1, 0, 0 )  //90
DX3DVERT( -0.45, 0.45, 0.35 ) DX3DVNORM( 1, 0, 0 )  //91
DX3DVERT( -0.45, 0.5, 0.35 ) DX3DVNORM( 1, 0, 0 )  //92
DX3DVERT( -0.45, 0.45, 0.5 ) DX3DVNORM( 0, -1, 0 )  //93
DX3DVERT( -0.35, 0.45, 0.45 ) DX3DVNORM( 0, -1, 0 )  //94
DX3DVERT( -0.35, 0.45, 0.5 ) DX3DVNORM( 0, -1, 0 )  //95
DX3DVERT( -0.45, 0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( -0.45, 0.5, 0.45 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( -0.35, 0.5, 0.45 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( -0.35, 0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( -0.35, 0.5, 0.5 ) DX3DVNORM( 0, 1, 0 )  //100
DX3DVERT( -0.35, 0.5, 0.45 ) DX3DVNORM( 0, 1, 0 )  //101
DX3DVERT( -0.35, 0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //102
DX3DVERT( -0.35, 0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //103
DX3DVERT( -0.5, 0.35, 0.45 ) DX3DVNORM( -1, 0, 0 )  //104
DX3DVERT( -0.5, 0.35, 0.5 ) DX3DVNORM( -1, 0, 0 )  //105
DX3DVERT( -0.5, 0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( -0.45, 0.35, 0.45 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( -0.5, 0.35, 0.45 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( -0.45, 0.45, 0.5 ) DX3DVNORM( 1, 0, 0 )  //109
DX3DVERT( -0.45, 0.35, 0.5 ) DX3DVNORM( 1, 0, 0 )  //110
DX3DVERT( -0.45, 0.35, 0.45 ) DX3DVNORM( 1, 0, 0 )  //111
DX3DVERT( -0.5, 0.35, 0.5 ) DX3DVNORM( 0, 0, 1 )  //112
DX3DVERT( -0.45, 0.35, 0.5 ) DX3DVNORM( 0, 0, 1 )  //113
DX3DVERT( 0.5, 0.45, 0.35 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 0.45, 0.45, 0.35 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 0.45, 0.5, 0.35 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 0.5, 0.5, 0.35 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 0.5, 0.5, 0.45 ) DX3DVNORM( 0, 1, 0 )  //118
DX3DVERT( 0.45, 0.5, 0.45 ) DX3DVNORM( 0, 1, 0 )  //119
DX3DVERT( 0.45, 0.5, 0.5 ) DX3DVNORM( 0, 1, 0 )  //120
DX3DVERT( 0.5, 0.5, 0.5 ) DX3DVNORM( 0, 1, 0 )  //121
DX3DVERT( 0.5, 0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //122
DX3DVERT( 0.45, 0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //123
DX3DVERT( 0.45, 0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //124
DX3DVERT( 0.5, 0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //125
DX3DVERT( 0.5, 0.35, 0.5 ) DX3DVNORM( 0, -1, 0 )  //126
DX3DVERT( 0.45, 0.35, 0.5 ) DX3DVNORM( 0, -1, 0 )  //127
DX3DVERT( 0.45, 0.35, 0.45 ) DX3DVNORM( 0, -1, 0 )  //128
DX3DVERT( 0.5, 0.35, 0.45 ) DX3DVNORM( 0, -1, 0 )  //129
DX3DVERT( 0.35, 0.45, 0.45 ) DX3DVNORM( -1, 0, 0 )  //130
DX3DVERT( 0.35, 0.45, 0.5 ) DX3DVNORM( -1, 0, 0 )  //131
DX3DVERT( 0.35, 0.5, 0.5 ) DX3DVNORM( -1, 0, 0 )  //132
DX3DVERT( 0.35, 0.5, 0.45 ) DX3DVNORM( -1, 0, 0 )  //133
DX3DVERT( 0.5, 0.45, 0.5 ) DX3DVNORM( 1, 0, 0 )  //134
DX3DVERT( 0.5, 0.45, 0.45 ) DX3DVNORM( 1, 0, 0 )  //135
DX3DVERT( 0.5, 0.5, 0.45 ) DX3DVNORM( 1, 0, 0 )  //136
DX3DVERT( 0.5, 0.5, 0.5 ) DX3DVNORM( 1, 0, 0 )  //137
DX3DVERT( 0.45, 0.45, 0.45 ) DX3DVNORM( 0, -1, 0 )  //138
DX3DVERT( 0.45, 0.45, 0.5 ) DX3DVNORM( 0, -1, 0 )  //139
DX3DVERT( 0.35, 0.45, 0.5 ) DX3DVNORM( 0, -1, 0 )  //140
DX3DVERT( 0.35, 0.45, 0.45 ) DX3DVNORM( 0, -1, 0 )  //141
DX3DVERT( 0.35, 0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //142
DX3DVERT( 0.35, 0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //143
DX3DVERT( 0.35, 0.5, 0.45 ) DX3DVNORM( 0, 1, 0 )  //144
DX3DVERT( 0.35, 0.5, 0.5 ) DX3DVNORM( 0, 1, 0 )  //145
DX3DVERT( 0.45, 0.5, 0.45 ) DX3DVNORM( 0, 0, -1 )  //146
DX3DVERT( 0.45, 0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //147
DX3DVERT( 0.35, 0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //148
DX3DVERT( 0.35, 0.5, 0.45 ) DX3DVNORM( 0, 0, -1 )  //149
DX3DVERT( 0.5, 0.45, 0.45 ) DX3DVNORM( 0, -1, 0 )  //150
DX3DVERT( 0.45, 0.45, 0.35 ) DX3DVNORM( 0, -1, 0 )  //151
DX3DVERT( 0.5, 0.45, 0.35 ) DX3DVNORM( 0, -1, 0 )  //152
DX3DVERT( 0.45, 0.45, 0.45 ) DX3DVNORM( -1, 0, 0 )  //153
DX3DVERT( 0.45, 0.5, 0.45 ) DX3DVNORM( -1, 0, 0 )  //154
DX3DVERT( 0.45, 0.5, 0.35 ) DX3DVNORM( -1, 0, 0 )  //155
DX3DVERT( 0.45, 0.45, 0.35 ) DX3DVNORM( -1, 0, 0 )  //156
DX3DVERT( 0.5, 0.5, 0.35 ) DX3DVNORM( 0, 1, 0 )  //157
DX3DVERT( 0.45, 0.5, 0.35 ) DX3DVNORM( 0, 1, 0 )  //158
DX3DVERT( 0.5, 0.45, 0.35 ) DX3DVNORM( 1, 0, 0 )  //159
DX3DVERT( 0.5, 0.5, 0.35 ) DX3DVNORM( 1, 0, 0 )  //160
DX3DVERT( 0.45, 0.35, 0.5 ) DX3DVNORM( 0, 0, 1 )  //161
DX3DVERT( 0.5, 0.35, 0.5 ) DX3DVNORM( 0, 0, 1 )  //162
DX3DVERT( 0.45, 0.45, 0.5 ) DX3DVNORM( -1, 0, 0 )  //163
DX3DVERT( 0.45, 0.35, 0.45 ) DX3DVNORM( -1, 0, 0 )  //164
DX3DVERT( 0.45, 0.35, 0.5 ) DX3DVNORM( -1, 0, 0 )  //165
DX3DVERT( 0.5, 0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //166
DX3DVERT( 0.5, 0.35, 0.45 ) DX3DVNORM( 0, 0, -1 )  //167
DX3DVERT( 0.45, 0.35, 0.45 ) DX3DVNORM( 0, 0, -1 )  //168
DX3DVERT( 0.5, 0.35, 0.5 ) DX3DVNORM( 1, 0, 0 )  //169
DX3DVERT( 0.5, 0.35, 0.45 ) DX3DVNORM( 1, 0, 0 )  //170
DX3DVERT( 0.35, 0.45, -0.5 ) DX3DVNORM( -1, 0, 0 )  //171
DX3DVERT( 0.35, 0.45, -0.45 ) DX3DVNORM( -1, 0, 0 )  //172
DX3DVERT( 0.35, 0.5, -0.45 ) DX3DVNORM( -1, 0, 0 )  //173
DX3DVERT( 0.35, 0.5, -0.5 ) DX3DVNORM( -1, 0, 0 )  //174
DX3DVERT( 0.45, 0.5, -0.5 ) DX3DVNORM( 0, 1, 0 )  //175
DX3DVERT( 0.45, 0.5, -0.45 ) DX3DVNORM( 0, 1, 0 )  //176
DX3DVERT( 0.5, 0.5, -0.45 ) DX3DVNORM( 0, 1, 0 )  //177
DX3DVERT( 0.5, 0.5, -0.5 ) DX3DVNORM( 0, 1, 0 )  //178
DX3DVERT( 0.5, 0.5, -0.5 ) DX3DVNORM( 1, 0, 0 )  //179
DX3DVERT( 0.5, 0.5, -0.45 ) DX3DVNORM( 1, 0, 0 )  //180
DX3DVERT( 0.5, 0.45, -0.45 ) DX3DVNORM( 1, 0, 0 )  //181
DX3DVERT( 0.5, 0.45, -0.5 ) DX3DVNORM( 1, 0, 0 )  //182
DX3DVERT( 0.5, 0.35, -0.5 ) DX3DVNORM( 0, -1, 0 )  //183
DX3DVERT( 0.5, 0.35, -0.45 ) DX3DVNORM( 0, -1, 0 )  //184
DX3DVERT( 0.45, 0.35, -0.45 ) DX3DVNORM( 0, -1, 0 )  //185
DX3DVERT( 0.45, 0.35, -0.5 ) DX3DVNORM( 0, -1, 0 )  //186
DX3DVERT( 0.45, 0.45, -0.35 ) DX3DVNORM( 0, 0, 1 )  //187
DX3DVERT( 0.5, 0.45, -0.35 ) DX3DVNORM( 0, 0, 1 )  //188
DX3DVERT( 0.5, 0.5, -0.35 ) DX3DVNORM( 0, 0, 1 )  //189
DX3DVERT( 0.45, 0.5, -0.35 ) DX3DVNORM( 0, 0, 1 )  //190
DX3DVERT( 0.5, 0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //191
DX3DVERT( 0.45, 0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //192
DX3DVERT( 0.45, 0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //193
DX3DVERT( 0.5, 0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //194
DX3DVERT( 0.45, 0.45, -0.45 ) DX3DVNORM( 0, -1, 0 )  //195
DX3DVERT( 0.5, 0.45, -0.45 ) DX3DVNORM( 0, -1, 0 )  //196
DX3DVERT( 0.5, 0.45, -0.35 ) DX3DVNORM( 0, -1, 0 )  //197
DX3DVERT( 0.45, 0.45, -0.35 ) DX3DVNORM( 0, -1, 0 )  //198
DX3DVERT( 0.5, 0.5, -0.35 ) DX3DVNORM( 1, 0, 0 )  //199
DX3DVERT( 0.5, 0.45, -0.35 ) DX3DVNORM( 1, 0, 0 )  //200
DX3DVERT( 0.45, 0.5, -0.35 ) DX3DVNORM( 0, 1, 0 )  //201
DX3DVERT( 0.5, 0.5, -0.35 ) DX3DVNORM( 0, 1, 0 )  //202
DX3DVERT( 0.45, 0.5, -0.45 ) DX3DVNORM( -1, 0, 0 )  //203
DX3DVERT( 0.45, 0.45, -0.45 ) DX3DVNORM( -1, 0, 0 )  //204
DX3DVERT( 0.45, 0.45, -0.35 ) DX3DVNORM( -1, 0, 0 )  //205
DX3DVERT( 0.45, 0.5, -0.35 ) DX3DVNORM( -1, 0, 0 )  //206
DX3DVERT( 0.45, 0.45, -0.5 ) DX3DVNORM( 0, -1, 0 )  //207
DX3DVERT( 0.35, 0.45, -0.45 ) DX3DVNORM( 0, -1, 0 )  //208
DX3DVERT( 0.35, 0.45, -0.5 ) DX3DVNORM( 0, -1, 0 )  //209
DX3DVERT( 0.45, 0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //210
DX3DVERT( 0.45, 0.5, -0.45 ) DX3DVNORM( 0, 0, 1 )  //211
DX3DVERT( 0.35, 0.5, -0.45 ) DX3DVNORM( 0, 0, 1 )  //212
DX3DVERT( 0.35, 0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //213
DX3DVERT( 0.35, 0.5, -0.5 ) DX3DVNORM( 0, 1, 0 )  //214
DX3DVERT( 0.35, 0.5, -0.45 ) DX3DVNORM( 0, 1, 0 )  //215
DX3DVERT( 0.35, 0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //216
DX3DVERT( 0.35, 0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //217
DX3DVERT( 0.5, 0.35, -0.45 ) DX3DVNORM( 1, 0, 0 )  //218
DX3DVERT( 0.5, 0.35, -0.5 ) DX3DVNORM( 1, 0, 0 )  //219
DX3DVERT( 0.5, 0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //220
DX3DVERT( 0.45, 0.35, -0.45 ) DX3DVNORM( 0, 0, 1 )  //221
DX3DVERT( 0.5, 0.35, -0.45 ) DX3DVNORM( 0, 0, 1 )  //222
DX3DVERT( 0.45, 0.45, -0.5 ) DX3DVNORM( -1, 0, 0 )  //223
DX3DVERT( 0.45, 0.35, -0.5 ) DX3DVNORM( -1, 0, 0 )  //224
DX3DVERT( 0.45, 0.35, -0.45 ) DX3DVNORM( -1, 0, 0 )  //225
DX3DVERT( 0.5, 0.35, -0.5 ) DX3DVNORM( 0, 0, -1 )  //226
DX3DVERT( 0.45, 0.35, -0.5 ) DX3DVNORM( 0, 0, -1 )  //227
DX3DVERT( -0.45, -0.5, -0.35 ) DX3DVNORM( 0, 0, 1 )  //228
DX3DVERT( -0.45, -0.45, -0.35 ) DX3DVNORM( 0, 0, 1 )  //229
DX3DVERT( -0.5, -0.45, -0.35 ) DX3DVNORM( 0, 0, 1 )  //230
DX3DVERT( -0.5, -0.5, -0.35 ) DX3DVNORM( 0, 0, 1 )  //231
DX3DVERT( -0.5, -0.5, -0.45 ) DX3DVNORM( -1, 0, 0 )  //232
DX3DVERT( -0.5, -0.45, -0.45 ) DX3DVNORM( -1, 0, 0 )  //233
DX3DVERT( -0.5, -0.45, -0.5 ) DX3DVNORM( -1, 0, 0 )  //234
DX3DVERT( -0.5, -0.5, -0.5 ) DX3DVNORM( -1, 0, 0 )  //235
DX3DVERT( -0.5, -0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //236
DX3DVERT( -0.5, -0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //237
DX3DVERT( -0.45, -0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //238
DX3DVERT( -0.45, -0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //239
DX3DVERT( -0.35, -0.5, -0.5 ) DX3DVNORM( 1, 0, 0 )  //240
DX3DVERT( -0.35, -0.45, -0.5 ) DX3DVNORM( 1, 0, 0 )  //241
DX3DVERT( -0.35, -0.45, -0.45 ) DX3DVNORM( 1, 0, 0 )  //242
DX3DVERT( -0.35, -0.5, -0.45 ) DX3DVNORM( 1, 0, 0 )  //243
DX3DVERT( -0.45, -0.35, -0.45 ) DX3DVNORM( 0, 1, 0 )  //244
DX3DVERT( -0.45, -0.35, -0.5 ) DX3DVNORM( 0, 1, 0 )  //245
DX3DVERT( -0.5, -0.35, -0.5 ) DX3DVNORM( 0, 1, 0 )  //246
DX3DVERT( -0.5, -0.35, -0.45 ) DX3DVNORM( 0, 1, 0 )  //247
DX3DVERT( -0.45, -0.5, -0.5 ) DX3DVNORM( 0, -1, 0 )  //248
DX3DVERT( -0.45, -0.5, -0.45 ) DX3DVNORM( 0, -1, 0 )  //249
DX3DVERT( -0.5, -0.5, -0.45 ) DX3DVNORM( 0, -1, 0 )  //250
DX3DVERT( -0.5, -0.5, -0.5 ) DX3DVNORM( 0, -1, 0 )  //251
DX3DVERT( -0.45, -0.45, -0.45 ) DX3DVNORM( 1, 0, 0 )  //252
DX3DVERT( -0.45, -0.45, -0.5 ) DX3DVNORM( 1, 0, 0 )  //253
DX3DVERT( -0.45, -0.35, -0.5 ) DX3DVNORM( 1, 0, 0 )  //254
DX3DVERT( -0.45, -0.35, -0.45 ) DX3DVNORM( 1, 0, 0 )  //255
DX3DVERT( -0.5, -0.35, -0.5 ) DX3DVNORM( 0, 0, -1 )  //256
DX3DVERT( -0.45, -0.35, -0.5 ) DX3DVNORM( 0, 0, -1 )  //257
DX3DVERT( -0.5, -0.35, -0.45 ) DX3DVNORM( -1, 0, 0 )  //258
DX3DVERT( -0.5, -0.35, -0.5 ) DX3DVNORM( -1, 0, 0 )  //259
DX3DVERT( -0.5, -0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //260
DX3DVERT( -0.45, -0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //261
DX3DVERT( -0.45, -0.35, -0.45 ) DX3DVNORM( 0, 0, 1 )  //262
DX3DVERT( -0.5, -0.35, -0.45 ) DX3DVNORM( 0, 0, 1 )  //263
DX3DVERT( -0.45, -0.5, -0.45 ) DX3DVNORM( 1, 0, 0 )  //264
DX3DVERT( -0.45, -0.45, -0.35 ) DX3DVNORM( 1, 0, 0 )  //265
DX3DVERT( -0.45, -0.5, -0.35 ) DX3DVNORM( 1, 0, 0 )  //266
DX3DVERT( -0.45, -0.45, -0.45 ) DX3DVNORM( 0, 1, 0 )  //267
DX3DVERT( -0.5, -0.45, -0.45 ) DX3DVNORM( 0, 1, 0 )  //268
DX3DVERT( -0.5, -0.45, -0.35 ) DX3DVNORM( 0, 1, 0 )  //269
DX3DVERT( -0.45, -0.45, -0.35 ) DX3DVNORM( 0, 1, 0 )  //270
DX3DVERT( -0.5, -0.5, -0.35 ) DX3DVNORM( -1, 0, 0 )  //271
DX3DVERT( -0.5, -0.45, -0.35 ) DX3DVNORM( -1, 0, 0 )  //272
DX3DVERT( -0.45, -0.5, -0.35 ) DX3DVNORM( 0, -1, 0 )  //273
DX3DVERT( -0.5, -0.5, -0.35 ) DX3DVNORM( 0, -1, 0 )  //274
DX3DVERT( -0.35, -0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //275
DX3DVERT( -0.35, -0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //276
DX3DVERT( -0.45, -0.45, -0.5 ) DX3DVNORM( 0, 1, 0 )  //277
DX3DVERT( -0.35, -0.45, -0.45 ) DX3DVNORM( 0, 1, 0 )  //278
DX3DVERT( -0.35, -0.45, -0.5 ) DX3DVNORM( 0, 1, 0 )  //279
DX3DVERT( -0.45, -0.5, -0.45 ) DX3DVNORM( 0, 0, 1 )  //280
DX3DVERT( -0.35, -0.5, -0.45 ) DX3DVNORM( 0, 0, 1 )  //281
DX3DVERT( -0.35, -0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //282
DX3DVERT( -0.35, -0.5, -0.5 ) DX3DVNORM( 0, -1, 0 )  //283
DX3DVERT( -0.35, -0.5, -0.45 ) DX3DVNORM( 0, -1, 0 )  //284
DX3DVERT( 0.5, -0.45, -0.35 ) DX3DVNORM( 0, 0, 1 )  //285
DX3DVERT( 0.45, -0.45, -0.35 ) DX3DVNORM( 0, 0, 1 )  //286
DX3DVERT( 0.45, -0.5, -0.35 ) DX3DVNORM( 0, 0, 1 )  //287
DX3DVERT( 0.5, -0.5, -0.35 ) DX3DVNORM( 0, 0, 1 )  //288
DX3DVERT( 0.5, -0.5, -0.45 ) DX3DVNORM( 0, -1, 0 )  //289
DX3DVERT( 0.45, -0.5, -0.45 ) DX3DVNORM( 0, -1, 0 )  //290
DX3DVERT( 0.45, -0.5, -0.5 ) DX3DVNORM( 0, -1, 0 )  //291
DX3DVERT( 0.5, -0.5, -0.5 ) DX3DVNORM( 0, -1, 0 )  //292
DX3DVERT( 0.5, -0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //293
DX3DVERT( 0.45, -0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //294
DX3DVERT( 0.45, -0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //295
DX3DVERT( 0.5, -0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //296
DX3DVERT( 0.5, -0.35, -0.5 ) DX3DVNORM( 0, 1, 0 )  //297
DX3DVERT( 0.45, -0.35, -0.5 ) DX3DVNORM( 0, 1, 0 )  //298
DX3DVERT( 0.45, -0.35, -0.45 ) DX3DVNORM( 0, 1, 0 )  //299
DX3DVERT( 0.5, -0.35, -0.45 ) DX3DVNORM( 0, 1, 0 )  //300
DX3DVERT( 0.35, -0.45, -0.45 ) DX3DVNORM( -1, 0, 0 )  //301
DX3DVERT( 0.35, -0.45, -0.5 ) DX3DVNORM( -1, 0, 0 )  //302
DX3DVERT( 0.35, -0.5, -0.5 ) DX3DVNORM( -1, 0, 0 )  //303
DX3DVERT( 0.35, -0.5, -0.45 ) DX3DVNORM( -1, 0, 0 )  //304
DX3DVERT( 0.5, -0.45, -0.5 ) DX3DVNORM( 1, 0, 0 )  //305
DX3DVERT( 0.5, -0.45, -0.45 ) DX3DVNORM( 1, 0, 0 )  //306
DX3DVERT( 0.5, -0.5, -0.45 ) DX3DVNORM( 1, 0, 0 )  //307
DX3DVERT( 0.5, -0.5, -0.5 ) DX3DVNORM( 1, 0, 0 )  //308
DX3DVERT( 0.45, -0.45, -0.45 ) DX3DVNORM( 0, 1, 0 )  //309
DX3DVERT( 0.45, -0.45, -0.5 ) DX3DVNORM( 0, 1, 0 )  //310
DX3DVERT( 0.35, -0.45, -0.5 ) DX3DVNORM( 0, 1, 0 )  //311
DX3DVERT( 0.35, -0.45, -0.45 ) DX3DVNORM( 0, 1, 0 )  //312
DX3DVERT( 0.35, -0.5, -0.5 ) DX3DVNORM( 0, 0, -1 )  //313
DX3DVERT( 0.35, -0.45, -0.5 ) DX3DVNORM( 0, 0, -1 )  //314
DX3DVERT( 0.35, -0.5, -0.45 ) DX3DVNORM( 0, -1, 0 )  //315
DX3DVERT( 0.35, -0.5, -0.5 ) DX3DVNORM( 0, -1, 0 )  //316
DX3DVERT( 0.45, -0.5, -0.45 ) DX3DVNORM( 0, 0, 1 )  //317
DX3DVERT( 0.45, -0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //318
DX3DVERT( 0.35, -0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //319
DX3DVERT( 0.35, -0.5, -0.45 ) DX3DVNORM( 0, 0, 1 )  //320
DX3DVERT( 0.5, -0.45, -0.45 ) DX3DVNORM( 0, 1, 0 )  //321
DX3DVERT( 0.45, -0.45, -0.35 ) DX3DVNORM( 0, 1, 0 )  //322
DX3DVERT( 0.5, -0.45, -0.35 ) DX3DVNORM( 0, 1, 0 )  //323
DX3DVERT( 0.45, -0.45, -0.45 ) DX3DVNORM( -1, 0, 0 )  //324
DX3DVERT( 0.45, -0.5, -0.45 ) DX3DVNORM( -1, 0, 0 )  //325
DX3DVERT( 0.45, -0.5, -0.35 ) DX3DVNORM( -1, 0, 0 )  //326
DX3DVERT( 0.45, -0.45, -0.35 ) DX3DVNORM( -1, 0, 0 )  //327
DX3DVERT( 0.5, -0.5, -0.35 ) DX3DVNORM( 0, -1, 0 )  //328
DX3DVERT( 0.45, -0.5, -0.35 ) DX3DVNORM( 0, -1, 0 )  //329
DX3DVERT( 0.5, -0.45, -0.35 ) DX3DVNORM( 1, 0, 0 )  //330
DX3DVERT( 0.5, -0.5, -0.35 ) DX3DVNORM( 1, 0, 0 )  //331
DX3DVERT( 0.45, -0.35, -0.5 ) DX3DVNORM( 0, 0, -1 )  //332
DX3DVERT( 0.5, -0.35, -0.5 ) DX3DVNORM( 0, 0, -1 )  //333
DX3DVERT( 0.45, -0.45, -0.5 ) DX3DVNORM( -1, 0, 0 )  //334
DX3DVERT( 0.45, -0.35, -0.45 ) DX3DVNORM( -1, 0, 0 )  //335
DX3DVERT( 0.45, -0.35, -0.5 ) DX3DVNORM( -1, 0, 0 )  //336
DX3DVERT( 0.5, -0.45, -0.45 ) DX3DVNORM( 0, 0, 1 )  //337
DX3DVERT( 0.5, -0.35, -0.45 ) DX3DVNORM( 0, 0, 1 )  //338
DX3DVERT( 0.45, -0.35, -0.45 ) DX3DVNORM( 0, 0, 1 )  //339
DX3DVERT( 0.5, -0.35, -0.5 ) DX3DVNORM( 1, 0, 0 )  //340
DX3DVERT( 0.5, -0.35, -0.45 ) DX3DVNORM( 1, 0, 0 )  //341
DX3DVERT( -0.45, -0.35, 0.5 ) DX3DVNORM( 0, 1, 0 )  //342
DX3DVERT( -0.45, -0.35, 0.45 ) DX3DVNORM( 0, 1, 0 )  //343
DX3DVERT( -0.5, -0.35, 0.45 ) DX3DVNORM( 0, 1, 0 )  //344
DX3DVERT( -0.5, -0.35, 0.5 ) DX3DVNORM( 0, 1, 0 )  //345
DX3DVERT( -0.5, -0.45, 0.5 ) DX3DVNORM( -1, 0, 0 )  //346
DX3DVERT( -0.5, -0.45, 0.45 ) DX3DVNORM( -1, 0, 0 )  //347
DX3DVERT( -0.5, -0.5, 0.45 ) DX3DVNORM( -1, 0, 0 )  //348
DX3DVERT( -0.5, -0.5, 0.5 ) DX3DVNORM( -1, 0, 0 )  //349
DX3DVERT( -0.5, -0.5, 0.5 ) DX3DVNORM( 0, -1, 0 )  //350
DX3DVERT( -0.5, -0.5, 0.45 ) DX3DVNORM( 0, -1, 0 )  //351
DX3DVERT( -0.45, -0.5, 0.45 ) DX3DVNORM( 0, -1, 0 )  //352
DX3DVERT( -0.45, -0.5, 0.5 ) DX3DVNORM( 0, -1, 0 )  //353
DX3DVERT( -0.35, -0.5, 0.5 ) DX3DVNORM( 1, 0, 0 )  //354
DX3DVERT( -0.35, -0.5, 0.45 ) DX3DVNORM( 1, 0, 0 )  //355
DX3DVERT( -0.35, -0.45, 0.45 ) DX3DVNORM( 1, 0, 0 )  //356
DX3DVERT( -0.35, -0.45, 0.5 ) DX3DVNORM( 1, 0, 0 )  //357
DX3DVERT( -0.45, -0.45, 0.35 ) DX3DVNORM( 0, 0, -1 )  //358
DX3DVERT( -0.45, -0.5, 0.35 ) DX3DVNORM( 0, 0, -1 )  //359
DX3DVERT( -0.5, -0.5, 0.35 ) DX3DVNORM( 0, 0, -1 )  //360
DX3DVERT( -0.5, -0.45, 0.35 ) DX3DVNORM( 0, 0, -1 )  //361
DX3DVERT( -0.45, -0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //362
DX3DVERT( -0.45, -0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //363
DX3DVERT( -0.5, -0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //364
DX3DVERT( -0.5, -0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //365
DX3DVERT( -0.45, -0.45, 0.45 ) DX3DVNORM( 1, 0, 0 )  //366
DX3DVERT( -0.45, -0.5, 0.45 ) DX3DVNORM( 1, 0, 0 )  //367
DX3DVERT( -0.45, -0.5, 0.35 ) DX3DVNORM( 1, 0, 0 )  //368
DX3DVERT( -0.45, -0.45, 0.35 ) DX3DVNORM( 1, 0, 0 )  //369
DX3DVERT( -0.5, -0.5, 0.35 ) DX3DVNORM( 0, -1, 0 )  //370
DX3DVERT( -0.45, -0.5, 0.35 ) DX3DVNORM( 0, -1, 0 )  //371
DX3DVERT( -0.5, -0.45, 0.35 ) DX3DVNORM( -1, 0, 0 )  //372
DX3DVERT( -0.5, -0.5, 0.35 ) DX3DVNORM( -1, 0, 0 )  //373
DX3DVERT( -0.5, -0.45, 0.45 ) DX3DVNORM( 0, 1, 0 )  //374
DX3DVERT( -0.45, -0.45, 0.45 ) DX3DVNORM( 0, 1, 0 )  //375
DX3DVERT( -0.45, -0.45, 0.35 ) DX3DVNORM( 0, 1, 0 )  //376
DX3DVERT( -0.5, -0.45, 0.35 ) DX3DVNORM( 0, 1, 0 )  //377
DX3DVERT( -0.45, -0.45, 0.5 ) DX3DVNORM( 1, 0, 0 )  //378
DX3DVERT( -0.45, -0.35, 0.45 ) DX3DVNORM( 1, 0, 0 )  //379
DX3DVERT( -0.45, -0.35, 0.5 ) DX3DVNORM( 1, 0, 0 )  //380
DX3DVERT( -0.45, -0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //381
DX3DVERT( -0.5, -0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //382
DX3DVERT( -0.5, -0.35, 0.45 ) DX3DVNORM( 0, 0, -1 )  //383
DX3DVERT( -0.45, -0.35, 0.45 ) DX3DVNORM( 0, 0, -1 )  //384
DX3DVERT( -0.5, -0.35, 0.5 ) DX3DVNORM( -1, 0, 0 )  //385
DX3DVERT( -0.5, -0.35, 0.45 ) DX3DVNORM( -1, 0, 0 )  //386
DX3DVERT( -0.45, -0.35, 0.5 ) DX3DVNORM( 0, 0, 1 )  //387
DX3DVERT( -0.5, -0.35, 0.5 ) DX3DVNORM( 0, 0, 1 )  //388
DX3DVERT( -0.35, -0.5, 0.45 ) DX3DVNORM( 0, -1, 0 )  //389
DX3DVERT( -0.35, -0.5, 0.5 ) DX3DVNORM( 0, -1, 0 )  //390
DX3DVERT( -0.45, -0.5, 0.45 ) DX3DVNORM( 0, 0, -1 )  //391
DX3DVERT( -0.35, -0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //392
DX3DVERT( -0.35, -0.5, 0.45 ) DX3DVNORM( 0, 0, -1 )  //393
DX3DVERT( -0.45, -0.45, 0.5 ) DX3DVNORM( 0, 1, 0 )  //394
DX3DVERT( -0.35, -0.45, 0.5 ) DX3DVNORM( 0, 1, 0 )  //395
DX3DVERT( -0.35, -0.45, 0.45 ) DX3DVNORM( 0, 1, 0 )  //396
DX3DVERT( -0.35, -0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //397
DX3DVERT( -0.35, -0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //398
DX3DVERT( 0.35, -0.45, 0.5 ) DX3DVNORM( -1, 0, 0 )  //399
DX3DVERT( 0.35, -0.45, 0.45 ) DX3DVNORM( -1, 0, 0 )  //400
DX3DVERT( 0.35, -0.5, 0.45 ) DX3DVNORM( -1, 0, 0 )  //401
DX3DVERT( 0.35, -0.5, 0.5 ) DX3DVNORM( -1, 0, 0 )  //402
DX3DVERT( 0.45, -0.5, 0.5 ) DX3DVNORM( 0, -1, 0 )  //403
DX3DVERT( 0.45, -0.5, 0.45 ) DX3DVNORM( 0, -1, 0 )  //404
DX3DVERT( 0.5, -0.5, 0.45 ) DX3DVNORM( 0, -1, 0 )  //405
DX3DVERT( 0.5, -0.5, 0.5 ) DX3DVNORM( 0, -1, 0 )  //406
DX3DVERT( 0.5, -0.5, 0.5 ) DX3DVNORM( 1, 0, 0 )  //407
DX3DVERT( 0.5, -0.5, 0.45 ) DX3DVNORM( 1, 0, 0 )  //408
DX3DVERT( 0.5, -0.45, 0.45 ) DX3DVNORM( 1, 0, 0 )  //409
DX3DVERT( 0.5, -0.45, 0.5 ) DX3DVNORM( 1, 0, 0 )  //410
DX3DVERT( 0.5, -0.35, 0.5 ) DX3DVNORM( 0, 1, 0 )  //411
DX3DVERT( 0.5, -0.35, 0.45 ) DX3DVNORM( 0, 1, 0 )  //412
DX3DVERT( 0.45, -0.35, 0.45 ) DX3DVNORM( 0, 1, 0 )  //413
DX3DVERT( 0.45, -0.35, 0.5 ) DX3DVNORM( 0, 1, 0 )  //414
DX3DVERT( 0.45, -0.45, 0.35 ) DX3DVNORM( 0, 0, -1 )  //415
DX3DVERT( 0.5, -0.45, 0.35 ) DX3DVNORM( 0, 0, -1 )  //416
DX3DVERT( 0.5, -0.5, 0.35 ) DX3DVNORM( 0, 0, -1 )  //417
DX3DVERT( 0.45, -0.5, 0.35 ) DX3DVNORM( 0, 0, -1 )  //418
DX3DVERT( 0.5, -0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //419
DX3DVERT( 0.45, -0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //420
DX3DVERT( 0.45, -0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //421
DX3DVERT( 0.5, -0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //422
DX3DVERT( 0.45, -0.45, 0.45 ) DX3DVNORM( 0, 1, 0 )  //423
DX3DVERT( 0.5, -0.45, 0.45 ) DX3DVNORM( 0, 1, 0 )  //424
DX3DVERT( 0.5, -0.45, 0.35 ) DX3DVNORM( 0, 1, 0 )  //425
DX3DVERT( 0.45, -0.45, 0.35 ) DX3DVNORM( 0, 1, 0 )  //426
DX3DVERT( 0.5, -0.5, 0.35 ) DX3DVNORM( 1, 0, 0 )  //427
DX3DVERT( 0.5, -0.45, 0.35 ) DX3DVNORM( 1, 0, 0 )  //428
DX3DVERT( 0.45, -0.5, 0.35 ) DX3DVNORM( 0, -1, 0 )  //429
DX3DVERT( 0.5, -0.5, 0.35 ) DX3DVNORM( 0, -1, 0 )  //430
DX3DVERT( 0.45, -0.5, 0.45 ) DX3DVNORM( -1, 0, 0 )  //431
DX3DVERT( 0.45, -0.45, 0.45 ) DX3DVNORM( -1, 0, 0 )  //432
DX3DVERT( 0.45, -0.45, 0.35 ) DX3DVNORM( -1, 0, 0 )  //433
DX3DVERT( 0.45, -0.5, 0.35 ) DX3DVNORM( -1, 0, 0 )  //434
DX3DVERT( 0.45, -0.45, 0.5 ) DX3DVNORM( 0, 1, 0 )  //435
DX3DVERT( 0.35, -0.45, 0.45 ) DX3DVNORM( 0, 1, 0 )  //436
DX3DVERT( 0.35, -0.45, 0.5 ) DX3DVNORM( 0, 1, 0 )  //437
DX3DVERT( 0.45, -0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //438
DX3DVERT( 0.45, -0.5, 0.45 ) DX3DVNORM( 0, 0, -1 )  //439
DX3DVERT( 0.35, -0.5, 0.45 ) DX3DVNORM( 0, 0, -1 )  //440
DX3DVERT( 0.35, -0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //441
DX3DVERT( 0.35, -0.5, 0.5 ) DX3DVNORM( 0, -1, 0 )  //442
DX3DVERT( 0.35, -0.5, 0.45 ) DX3DVNORM( 0, -1, 0 )  //443
DX3DVERT( 0.35, -0.45, 0.5 ) DX3DVNORM( 0, 0, 1 )  //444
DX3DVERT( 0.35, -0.5, 0.5 ) DX3DVNORM( 0, 0, 1 )  //445
DX3DVERT( 0.5, -0.35, 0.45 ) DX3DVNORM( 1, 0, 0 )  //446
DX3DVERT( 0.5, -0.35, 0.5 ) DX3DVNORM( 1, 0, 0 )  //447
DX3DVERT( 0.5, -0.45, 0.45 ) DX3DVNORM( 0, 0, -1 )  //448
DX3DVERT( 0.45, -0.35, 0.45 ) DX3DVNORM( 0, 0, -1 )  //449
DX3DVERT( 0.5, -0.35, 0.45 ) DX3DVNORM( 0, 0, -1 )  //450
DX3DVERT( 0.45, -0.45, 0.5 ) DX3DVNORM( -1, 0, 0 )  //451
DX3DVERT( 0.45, -0.35, 0.5 ) DX3DVNORM( -1, 0, 0 )  //452
DX3DVERT( 0.45, -0.35, 0.45 ) DX3DVNORM( -1, 0, 0 )  //453
DX3DVERT( 0.5, -0.35, 0.5 ) DX3DVNORM( 0, 0, 1 )  //454
DX3DVERT( 0.45, -0.35, 0.5 ) DX3DVNORM( 0, 0, 1 )  //455
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Cursor___mCursor_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Cursor___mCursor_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 456 )
DX3DVERTEX_END


#else
#define vertex_Cursor___mCursor_0	NULL
#define vertexbuff_Cursor___mCursor_0	NULL
#endif




#if ((PT_Cursor___mCursor_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Cursor___mCursor_0 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DINDEX_START( index_Cursor___mCursor_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 5, 7, // 2 8
	5, 6, 7, // 3 11
	8, 9, 11, // 4 14
	9, 10, 11, // 5 17
	12, 13, 15, // 6 20
	13, 14, 15, // 7 23
	16, 17, 19, // 8 26
	17, 18, 19, // 9 29
	20, 21, 23, // 10 32
	21, 22, 23, // 11 35
	24, 25, 27, // 12 38
	25, 26, 27, // 13 41
	10, 9, 29, // 14 44
	9, 28, 29, // 15 47
	6, 5, 31, // 16 50
	5, 30, 31, // 17 53
	32, 33, 35, // 18 56
	33, 34, 35, // 19 59
	36, 24, 38, // 20 62
	24, 37, 38, // 21 65
	39, 40, 42, // 22 68
	40, 41, 42, // 23 71
	5, 4, 44, // 24 74
	4, 43, 44, // 25 77
	22, 21, 46, // 26 80
	21, 45, 46, // 27 83
	11, 10, 48, // 28 86
	10, 47, 48, // 29 89
	49, 39, 51, // 30 92
	39, 50, 51, // 31 95
	33, 52, 54, // 32 98
	52, 53, 54, // 33 101
	21, 20, 56, // 34 104
	20, 55, 56, // 35 107
	57, 58, 60, // 36 110
	58, 59, 60, // 37 113
	61, 62, 64, // 38 116
	62, 63, 64, // 39 119
	65, 66, 68, // 40 122
	66, 67, 68, // 41 125
	69, 70, 72, // 42 128
	70, 71, 72, // 43 131
	73, 74, 76, // 44 134
	74, 75, 76, // 45 137
	77, 78, 80, // 46 140
	78, 79, 80, // 47 143
	81, 82, 84, // 48 146
	82, 83, 84, // 49 149
	67, 66, 86, // 50 152
	66, 85, 86, // 51 155
	63, 62, 88, // 52 158
	62, 87, 88, // 53 161
	89, 90, 92, // 54 164
	90, 91, 92, // 55 167
	93, 81, 95, // 56 170
	81, 94, 95, // 57 173
	96, 97, 99, // 58 176
	97, 98, 99, // 59 179
	62, 61, 101, // 60 182
	61, 100, 101, // 61 185
	79, 78, 103, // 62 188
	78, 102, 103, // 63 191
	68, 67, 105, // 64 194
	67, 104, 105, // 65 197
	106, 96, 108, // 66 200
	96, 107, 108, // 67 203
	90, 109, 111, // 68 206
	109, 110, 111, // 69 209
	78, 77, 113, // 70 212
	77, 112, 113, // 71 215
	114, 115, 117, // 72 218
	115, 116, 117, // 73 221
	118, 119, 121, // 74 224
	119, 120, 121, // 75 227
	122, 123, 125, // 76 230
	123, 124, 125, // 77 233
	126, 127, 129, // 78 236
	127, 128, 129, // 79 239
	130, 131, 133, // 80 242
	131, 132, 133, // 81 245
	134, 135, 137, // 82 248
	135, 136, 137, // 83 251
	138, 139, 141, // 84 254
	139, 140, 141, // 85 257
	124, 123, 143, // 86 260
	123, 142, 143, // 87 263
	120, 119, 145, // 88 266
	119, 144, 145, // 89 269
	146, 147, 149, // 90 272
	147, 148, 149, // 91 275
	150, 138, 152, // 92 278
	138, 151, 152, // 93 281
	153, 154, 156, // 94 284
	154, 155, 156, // 95 287
	119, 118, 158, // 96 290
	118, 157, 158, // 97 293
	136, 135, 160, // 98 296
	135, 159, 160, // 99 299
	125, 124, 162, // 100 302
	124, 161, 162, // 101 305
	163, 153, 165, // 102 308
	153, 164, 165, // 103 311
	147, 166, 168, // 104 314
	166, 167, 168, // 105 317
	135, 134, 170, // 106 320
	134, 169, 170, // 107 323
	171, 172, 174, // 108 326
	172, 173, 174, // 109 329
	175, 176, 178, // 110 332
	176, 177, 178, // 111 335
	179, 180, 182, // 112 338
	180, 181, 182, // 113 341
	183, 184, 186, // 114 344
	184, 185, 186, // 115 347
	187, 188, 190, // 116 350
	188, 189, 190, // 117 353
	191, 192, 194, // 118 356
	192, 193, 194, // 119 359
	195, 196, 198, // 120 362
	196, 197, 198, // 121 365
	181, 180, 200, // 122 368
	180, 199, 200, // 123 371
	177, 176, 202, // 124 374
	176, 201, 202, // 125 377
	203, 204, 206, // 126 380
	204, 205, 206, // 127 383
	207, 195, 209, // 128 386
	195, 208, 209, // 129 389
	210, 211, 213, // 130 392
	211, 212, 213, // 131 395
	176, 175, 215, // 132 398
	175, 214, 215, // 133 401
	193, 192, 217, // 134 404
	192, 216, 217, // 135 407
	182, 181, 219, // 136 410
	181, 218, 219, // 137 413
	220, 210, 222, // 138 416
	210, 221, 222, // 139 419
	204, 223, 225, // 140 422
	223, 224, 225, // 141 425
	192, 191, 227, // 142 428
	191, 226, 227, // 143 431
	228, 229, 231, // 144 434
	229, 230, 231, // 145 437
	232, 233, 235, // 146 440
	233, 234, 235, // 147 443
	236, 237, 239, // 148 446
	237, 238, 239, // 149 449
	240, 241, 243, // 150 452
	241, 242, 243, // 151 455
	244, 245, 247, // 152 458
	245, 246, 247, // 153 461
	248, 249, 251, // 154 464
	249, 250, 251, // 155 467
	252, 253, 255, // 156 470
	253, 254, 255, // 157 473
	238, 237, 257, // 158 476
	237, 256, 257, // 159 479
	234, 233, 259, // 160 482
	233, 258, 259, // 161 485
	260, 261, 263, // 162 488
	261, 262, 263, // 163 491
	264, 252, 266, // 164 494
	252, 265, 266, // 165 497
	267, 268, 270, // 166 500
	268, 269, 270, // 167 503
	233, 232, 272, // 168 506
	232, 271, 272, // 169 509
	250, 249, 274, // 170 512
	249, 273, 274, // 171 515
	239, 238, 276, // 172 518
	238, 275, 276, // 173 521
	277, 267, 279, // 174 524
	267, 278, 279, // 175 527
	261, 280, 282, // 176 530
	280, 281, 282, // 177 533
	249, 248, 284, // 178 536
	248, 283, 284, // 179 539
	285, 286, 288, // 180 542
	286, 287, 288, // 181 545
	289, 290, 292, // 182 548
	290, 291, 292, // 183 551
	293, 294, 296, // 184 554
	294, 295, 296, // 185 557
	297, 298, 300, // 186 560
	298, 299, 300, // 187 563
	301, 302, 304, // 188 566
	302, 303, 304, // 189 569
	305, 306, 308, // 190 572
	306, 307, 308, // 191 575
	309, 310, 312, // 192 578
	310, 311, 312, // 193 581
	295, 294, 314, // 194 584
	294, 313, 314, // 195 587
	291, 290, 316, // 196 590
	290, 315, 316, // 197 593
	317, 318, 320, // 198 596
	318, 319, 320, // 199 599
	321, 309, 323, // 200 602
	309, 322, 323, // 201 605
	324, 325, 327, // 202 608
	325, 326, 327, // 203 611
	290, 289, 329, // 204 614
	289, 328, 329, // 205 617
	307, 306, 331, // 206 620
	306, 330, 331, // 207 623
	296, 295, 333, // 208 626
	295, 332, 333, // 209 629
	334, 324, 336, // 210 632
	324, 335, 336, // 211 635
	318, 337, 339, // 212 638
	337, 338, 339, // 213 641
	306, 305, 341, // 214 644
	305, 340, 341, // 215 647
	342, 343, 345, // 216 650
	343, 344, 345, // 217 653
	346, 347, 349, // 218 656
	347, 348, 349, // 219 659
	350, 351, 353, // 220 662
	351, 352, 353, // 221 665
	354, 355, 357, // 222 668
	355, 356, 357, // 223 671
	358, 359, 361, // 224 674
	359, 360, 361, // 225 677
	362, 363, 365, // 226 680
	363, 364, 365, // 227 683
	366, 367, 369, // 228 686
	367, 368, 369, // 229 689
	352, 351, 371, // 230 692
	351, 370, 371, // 231 695
	348, 347, 373, // 232 698
	347, 372, 373, // 233 701
	374, 375, 377, // 234 704
	375, 376, 377, // 235 707
	378, 366, 380, // 236 710
	366, 379, 380, // 237 713
	381, 382, 384, // 238 716
	382, 383, 384, // 239 719
	347, 346, 386, // 240 722
	346, 385, 386, // 241 725
	364, 363, 388, // 242 728
	363, 387, 388, // 243 731
	353, 352, 390, // 244 734
	352, 389, 390, // 245 737
	391, 381, 393, // 246 740
	381, 392, 393, // 247 743
	375, 394, 396, // 248 746
	394, 395, 396, // 249 749
	363, 362, 398, // 250 752
	362, 397, 398, // 251 755
	399, 400, 402, // 252 758
	400, 401, 402, // 253 761
	403, 404, 406, // 254 764
	404, 405, 406, // 255 767
	407, 408, 410, // 256 770
	408, 409, 410, // 257 773
	411, 412, 414, // 258 776
	412, 413, 414, // 259 779
	415, 416, 418, // 260 782
	416, 417, 418, // 261 785
	419, 420, 422, // 262 788
	420, 421, 422, // 263 791
	423, 424, 426, // 264 794
	424, 425, 426, // 265 797
	409, 408, 428, // 266 800
	408, 427, 428, // 267 803
	405, 404, 430, // 268 806
	404, 429, 430, // 269 809
	431, 432, 434, // 270 812
	432, 433, 434, // 271 815
	435, 423, 437, // 272 818
	423, 436, 437, // 273 821
	438, 439, 441, // 274 824
	439, 440, 441, // 275 827
	404, 403, 443, // 276 830
	403, 442, 443, // 277 833
	421, 420, 445, // 278 836
	420, 444, 445, // 279 839
	410, 409, 447, // 280 842
	409, 446, 447, // 281 845
	448, 438, 450, // 282 848
	438, 449, 450, // 283 851
	432, 451, 453, // 284 854
	451, 452, 453, // 285 857
	420, 419, 455, // 286 860
	419, 454, 455, // 287 863
DX3DINDEX_END
#endif

#else
#define index_Cursor___mCursor_0	NULL
#endif




#if ((PT_Cursor___mCursor_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP) ) || (PT_Cursor___mCursor_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Cursor___mCursor_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Cursor___mCursor_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_VERTEXSTRIP) ) || (PT_Cursor___mCursor_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Cursor___mCursor_0_VERTEXSTRIP 	NULL
#define vertexbuff_Cursor___mCursor_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Cursor__ )
DX3DMODEL_START( model_Cursor___mCursor_0 )
DX3DMODEL_VERTEX( vertex_Cursor___mCursor_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DMODEL_INDEX( index_Cursor___mCursor_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 864 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mCursor )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Cursor__, 108573273 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Cursor__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Balloon__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mBalloon )
DX3DMATERIAL_DIFF( 1, 0.5, 0.5, 0.5 )
DX3DMATERIAL_SPEC( 1, 0.5, 0.5, 0.5 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END


DX3DMATERIAL_START( material_mBalloonString )
DX3DMATERIAL_DIFF( 1, 1, 1, 1 )
DX3DMATERIAL_SPEC( 1, 0, 0, 0 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_Balloon___mBalloon_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Balloon___mBalloon_0 == PT_TRILIST ) || ((PT_Balloon___mBalloon_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP))  || (PT_Balloon___mBalloon_0 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERT_START( VN, vertexbuff_Balloon___mBalloon_0 )
DX3DVERT( 0.0228541, -0.496714, -0.00742586 ) DX3DVNORM( 0.169338, -0.984021, -0.0550202 )  //0
DX3DVERT( 0.0194409, -0.496714, -0.0141247 ) DX3DVNORM( 0.144047, -0.984021, -0.104657 )  //1
DX3DVERT( 0.097327, -0.479295, -0.0707124 ) DX3DVNORM( 0.258358, -0.947638, -0.187708 )  //2
DX3DVERT( 0.114415, -0.479295, -0.0371757 ) DX3DVNORM( 0.303718, -0.947638, -0.0986831 )  //3
DX3DVERT( 0.0141246, -0.496714, -0.019441 ) DX3DVNORM( 0.104657, -0.984021, -0.144047 )  //4
DX3DVERT( 0.0707122, -0.479295, -0.0973272 ) DX3DVNORM( 0.187708, -0.947638, -0.258357 )  //5
DX3DVERT( 0.00742571, -0.496714, -0.0228543 ) DX3DVNORM( 0.0550213, -0.984021, -0.169338 )  //6
DX3DVERT( 0.0371756, -0.479295, -0.114415 ) DX3DVNORM( 0.0986837, -0.947638, -0.303717 )  //7
DX3DVERT( -7.3518e-008, -0.496714, -0.0240304 ) DX3DVNORM( -1.86339e-009, -0.984021, -0.178052 )  //8
DX3DVERT( -6.75698e-008, -0.479295, -0.120303 ) DX3DVNORM( -5.6566e-009, -0.947638, -0.319347 )  //9
DX3DVERT( -0.00742586, -0.496714, -0.0228543 ) DX3DVNORM( -0.0550213, -0.984021, -0.169338 )  //10
DX3DVERT( -0.0371757, -0.479295, -0.114415 ) DX3DVNORM( -0.0986837, -0.947638, -0.303717 )  //11
DX3DVERT( -0.0141247, -0.496714, -0.019441 ) DX3DVNORM( -0.104657, -0.984021, -0.144047 )  //12
DX3DVERT( -0.0707123, -0.479295, -0.0973272 ) DX3DVNORM( -0.187708, -0.947638, -0.258357 )  //13
DX3DVERT( -0.019441, -0.496714, -0.0141247 ) DX3DVNORM( -0.144048, -0.984021, -0.104656 )  //14
DX3DVERT( -0.0973272, -0.479295, -0.0707123 ) DX3DVNORM( -0.258358, -0.947638, -0.187707 )  //15
DX3DVERT( -0.0228543, -0.496714, -0.00742586 ) DX3DVNORM( -0.169338, -0.984021, -0.0550211 )  //16
DX3DVERT( -0.114415, -0.479295, -0.0371757 ) DX3DVNORM( -0.303718, -0.947638, -0.0986837 )  //17
DX3DVERT( -0.0240304, -0.496714, -7.52135e-008 ) DX3DVNORM( -0.178053, -0.984021, -1.86339e-009 )  //18
DX3DVERT( -0.120303, -0.479295, -7.15808e-008 ) DX3DVNORM( -0.319348, -0.947638, -7.54213e-009 )  //19
DX3DVERT( -0.0228543, -0.496714, 0.00742571 ) DX3DVNORM( -0.169338, -0.984021, 0.0550212 )  //20
DX3DVERT( -0.114415, -0.479295, 0.0371756 ) DX3DVNORM( -0.303718, -0.947638, 0.0986837 )  //21
DX3DVERT( -0.019441, -0.496714, 0.0141246 ) DX3DVNORM( -0.144048, -0.984021, 0.104656 )  //22
DX3DVERT( -0.0973271, -0.479295, 0.0707122 ) DX3DVNORM( -0.258357, -0.947638, 0.187707 )  //23
DX3DVERT( -0.0141247, -0.496714, 0.0194409 ) DX3DVNORM( -0.104657, -0.984021, 0.144047 )  //24
DX3DVERT( -0.0707123, -0.479295, 0.097327 ) DX3DVNORM( -0.187708, -0.947638, 0.258357 )  //25
DX3DVERT( -0.00742586, -0.496714, 0.0228541 ) DX3DVNORM( -0.0550212, -0.984021, 0.169338 )  //26
DX3DVERT( -0.0371757, -0.479295, 0.114415 ) DX3DVNORM( -0.0986838, -0.947638, 0.303718 )  //27
DX3DVERT( -7.34492e-008, -0.496714, 0.0240303 ) DX3DVNORM( 2.79508e-008, -0.984021, 0.178053 )  //28
DX3DVERT( -6.72255e-008, -0.479295, 0.120303 ) DX3DVNORM( 1.50843e-008, -0.947638, 0.319348 )  //29
DX3DVERT( 0.00742571, -0.496714, 0.0228541 ) DX3DVNORM( 0.0550213, -0.984021, 0.169337 )  //30
DX3DVERT( 0.0371756, -0.479295, 0.114415 ) DX3DVNORM( 0.0986838, -0.947638, 0.303717 )  //31
DX3DVERT( 0.0141246, -0.496714, 0.0194409 ) DX3DVNORM( 0.104657, -0.984021, 0.144047 )  //32
DX3DVERT( 0.0707122, -0.479295, 0.097327 ) DX3DVNORM( 0.187708, -0.947638, 0.258357 )  //33
DX3DVERT( 0.0194409, -0.496714, 0.0141246 ) DX3DVNORM( 0.144048, -0.984021, 0.104657 )  //34
DX3DVERT( 0.097327, -0.479295, 0.0707122 ) DX3DVNORM( 0.258358, -0.947638, 0.187708 )  //35
DX3DVERT( 0.0228541, -0.496714, 0.00742571 ) DX3DVNORM( 0.169338, -0.984021, 0.0550212 )  //36
DX3DVERT( 0.114415, -0.479295, 0.0371756 ) DX3DVNORM( 0.303718, -0.947638, 0.0986835 )  //37
DX3DVERT( 0.0240303, -0.496714, -7.48053e-008 ) DX3DVNORM( 0.178053, -0.984021, 8.52499e-007 )  //38
DX3DVERT( 0.120303, -0.479295, -6.95371e-008 ) DX3DVNORM( 0.319348, -0.947637, 4.16703e-007 )  //39
DX3DVERT( 0.138465, -0.453375, -0.100601 ) DX3DVNORM( 0.395544, -0.872329, -0.287379 )  //40
DX3DVERT( 0.162776, -0.453375, -0.0528891 ) DX3DVNORM( 0.464989, -0.872329, -0.151084 )  //41
DX3DVERT( 0.100601, -0.453375, -0.138465 ) DX3DVNORM( 0.287379, -0.872329, -0.395544 )  //42
DX3DVERT( 0.052889, -0.453375, -0.162776 ) DX3DVNORM( 0.151084, -0.872329, -0.46499 )  //43
DX3DVERT( -6.77154e-008, -0.453375, -0.171153 ) DX3DVNORM( 3.73939e-009, -0.872329, -0.488919 )  //44
DX3DVERT( -0.0528891, -0.453375, -0.162776 ) DX3DVNORM( -0.151084, -0.872329, -0.464989 )  //45
DX3DVERT( -0.100601, -0.453375, -0.138465 ) DX3DVNORM( -0.287379, -0.872329, -0.395543 )  //46
DX3DVERT( -0.138465, -0.453375, -0.100601 ) DX3DVNORM( -0.395544, -0.872329, -0.28738 )  //47
DX3DVERT( -0.162776, -0.453375, -0.0528891 ) DX3DVNORM( -0.464989, -0.872329, -0.151084 )  //48
DX3DVERT( -0.171153, -0.453375, -7.29373e-008 ) DX3DVNORM( -0.488919, -0.872329, 0 )  //49
DX3DVERT( -0.162776, -0.453375, 0.052889 ) DX3DVNORM( -0.464989, -0.872329, 0.151084 )  //50
DX3DVERT( -0.138465, -0.453375, 0.100601 ) DX3DVNORM( -0.395544, -0.872329, 0.287379 )  //51
DX3DVERT( -0.100601, -0.453375, 0.138465 ) DX3DVNORM( -0.287379, -0.872329, 0.395544 )  //52
DX3DVERT( -0.0528891, -0.453375, 0.162776 ) DX3DVNORM( -0.151084, -0.872329, 0.464989 )  //53
DX3DVERT( -6.72256e-008, -0.453375, 0.171152 ) DX3DVNORM( 3.73939e-009, -0.872329, 0.488919 )  //54
DX3DVERT( 0.052889, -0.453375, 0.162776 ) DX3DVNORM( 0.151084, -0.872329, 0.464989 )  //55
DX3DVERT( 0.100601, -0.453375, 0.138465 ) DX3DVNORM( 0.287379, -0.872329, 0.395544 )  //56
DX3DVERT( 0.138465, -0.453375, 0.100601 ) DX3DVNORM( 0.395544, -0.872329, 0.287379 )  //57
DX3DVERT( 0.162776, -0.453375, 0.052889 ) DX3DVNORM( 0.46499, -0.872329, 0.151084 )  //58
DX3DVERT( 0.171152, -0.453375, -7.00298e-008 ) DX3DVNORM( 0.488919, -0.872329, 1.29009e-007 )  //59
DX3DVERT( 0.185127, -0.417986, -0.134503 ) DX3DVNORM( 0.452327, -0.829096, -0.328635 )  //60
DX3DVERT( 0.21763, -0.417986, -0.0707124 ) DX3DVNORM( 0.531742, -0.829096, -0.172773 )  //61
DX3DVERT( 0.134503, -0.417986, -0.185127 ) DX3DVNORM( 0.328634, -0.829096, -0.452327 )  //62
DX3DVERT( 0.0707122, -0.417986, -0.21763 ) DX3DVNORM( 0.172773, -0.829096, -0.531742 )  //63
DX3DVERT( -6.68033e-008, -0.417986, -0.22883 ) DX3DVNORM( -4.30486e-008, -0.829096, -0.559107 )  //64
DX3DVERT( -0.0707123, -0.417986, -0.21763 ) DX3DVNORM( -0.172773, -0.829096, -0.531742 )  //65
DX3DVERT( -0.134503, -0.417986, -0.185127 ) DX3DVNORM( -0.328635, -0.829096, -0.452327 )  //66
DX3DVERT( -0.185127, -0.417986, -0.134503 ) DX3DVNORM( -0.452327, -0.829096, -0.328635 )  //67
DX3DVERT( -0.21763, -0.417986, -0.0707123 ) DX3DVNORM( -0.531742, -0.829096, -0.172773 )  //68
DX3DVERT( -0.22883, -0.417986, -7.34245e-008 ) DX3DVNORM( -0.559107, -0.829096, 1.12301e-008 )  //69
DX3DVERT( -0.21763, -0.417986, 0.0707122 ) DX3DVNORM( -0.531742, -0.829096, 0.172773 )  //70
DX3DVERT( -0.185127, -0.417986, 0.134503 ) DX3DVNORM( -0.452327, -0.829096, 0.328635 )  //71
DX3DVERT( -0.134503, -0.417986, 0.185127 ) DX3DVNORM( -0.328635, -0.829096, 0.452327 )  //72
DX3DVERT( -0.0707123, -0.417986, 0.21763 ) DX3DVNORM( -0.172773, -0.829096, 0.531742 )  //73
DX3DVERT( -6.61484e-008, -0.417986, 0.22883 ) DX3DVNORM( 9.3584e-009, -0.829096, 0.559107 )  //74
DX3DVERT( 0.0707122, -0.417986, 0.21763 ) DX3DVNORM( 0.172773, -0.829096, 0.531742 )  //75
DX3DVERT( 0.134503, -0.417986, 0.185127 ) DX3DVNORM( 0.328635, -0.829096, 0.452327 )  //76
DX3DVERT( 0.185127, -0.417986, 0.134503 ) DX3DVNORM( 0.452327, -0.829096, 0.328635 )  //77
DX3DVERT( 0.21763, -0.417986, 0.0707122 ) DX3DVNORM( 0.531742, -0.829096, 0.172773 )  //78
DX3DVERT( 0.22883, -0.417986, -6.95371e-008 ) DX3DVNORM( 0.559107, -0.829096, 5.85836e-007 )  //79
DX3DVERT( 0.244375, -0.363878, -0.177549 ) DX3DVNORM( 0.519443, -0.766649, -0.377397 )  //80
DX3DVERT( 0.28728, -0.363878, -0.093343 ) DX3DVNORM( 0.610642, -0.766649, -0.198409 )  //81
DX3DVERT( 0.177549, -0.363878, -0.244375 ) DX3DVNORM( 0.377397, -0.766649, -0.519443 )  //82
DX3DVERT( 0.0933428, -0.363878, -0.28728 ) DX3DVNORM( 0.198409, -0.766649, -0.610642 )  //83
DX3DVERT( -6.42254e-008, -0.363878, -0.302064 ) DX3DVNORM( -6.00238e-008, -0.766649, -0.642067 )  //84
DX3DVERT( -0.093343, -0.363878, -0.28728 ) DX3DVNORM( -0.198409, -0.766649, -0.610642 )  //85
DX3DVERT( -0.177549, -0.363878, -0.244375 ) DX3DVNORM( -0.377397, -0.766649, -0.519443 )  //86
DX3DVERT( -0.244375, -0.363878, -0.177549 ) DX3DVNORM( -0.519443, -0.766649, -0.377397 )  //87
DX3DVERT( -0.28728, -0.363878, -0.093343 ) DX3DVNORM( -0.610642, -0.766649, -0.198409 )  //88
DX3DVERT( -0.302064, -0.363878, -7.1305e-008 ) DX3DVNORM( -0.642067, -0.766649, 1.12545e-008 )  //89
DX3DVERT( -0.28728, -0.363878, 0.0933428 ) DX3DVNORM( -0.610642, -0.766649, 0.198409 )  //90
DX3DVERT( -0.244375, -0.363878, 0.177549 ) DX3DVNORM( -0.519443, -0.766649, 0.377397 )  //91
DX3DVERT( -0.177549, -0.363878, 0.244375 ) DX3DVNORM( -0.377397, -0.766649, 0.519443 )  //92
DX3DVERT( -0.093343, -0.363878, 0.28728 ) DX3DVNORM( -0.198409, -0.766649, 0.610642 )  //93
DX3DVERT( -6.33609e-008, -0.363878, 0.302064 ) DX3DVNORM( 1.87575e-009, -0.766648, 0.642067 )  //94
DX3DVERT( 0.0933428, -0.363878, 0.28728 ) DX3DVNORM( 0.198409, -0.766649, 0.610642 )  //95
DX3DVERT( 0.177549, -0.363878, 0.244375 ) DX3DVNORM( 0.377397, -0.766649, 0.519443 )  //96
DX3DVERT( 0.244375, -0.363878, 0.177549 ) DX3DVNORM( 0.519443, -0.766649, 0.377397 )  //97
DX3DVERT( 0.28728, -0.363878, 0.0933428 ) DX3DVNORM( 0.610642, -0.766649, 0.198409 )  //98
DX3DVERT( 0.302064, -0.363878, -6.61735e-008 ) DX3DVNORM( 0.642067, -0.766649, 7.12783e-007 )  //99
DX3DVERT( 0.303219, -0.295002, -0.220301 ) DX3DVNORM( 0.60053, -0.670072, -0.436311 )  //100
DX3DVERT( 0.356455, -0.295002, -0.115819 ) DX3DVNORM( 0.705966, -0.670072, -0.229381 )  //101
DX3DVERT( 0.220301, -0.295002, -0.303219 ) DX3DVNORM( 0.436311, -0.670072, -0.60053 )  //102
DX3DVERT( 0.115819, -0.295002, -0.356455 ) DX3DVNORM( 0.229382, -0.670072, -0.705966 )  //103
DX3DVERT( -6.05171e-008, -0.295002, -0.374799 ) DX3DVNORM( -9.4062e-009, -0.670072, -0.742296 )  //104
DX3DVERT( -0.115819, -0.295002, -0.356455 ) DX3DVNORM( -0.229382, -0.670072, -0.705966 )  //105
DX3DVERT( -0.220301, -0.295002, -0.303219 ) DX3DVNORM( -0.436311, -0.670072, -0.60053 )  //106
DX3DVERT( -0.303219, -0.295002, -0.220301 ) DX3DVNORM( -0.60053, -0.670072, -0.436311 )  //107
DX3DVERT( -0.356455, -0.295002, -0.115819 ) DX3DVNORM( -0.705966, -0.670072, -0.229382 )  //108
DX3DVERT( -0.374799, -0.295002, -6.93351e-008 ) DX3DVNORM( -0.742296, -0.670072, -2.25749e-008 )  //109
DX3DVERT( -0.356455, -0.295002, 0.115819 ) DX3DVNORM( -0.705966, -0.670072, 0.229382 )  //110
DX3DVERT( -0.303219, -0.295002, 0.220301 ) DX3DVNORM( -0.60053, -0.670072, 0.436311 )  //111
DX3DVERT( -0.220301, -0.295002, 0.303219 ) DX3DVNORM( -0.43631, -0.670072, 0.60053 )  //112
DX3DVERT( -0.115819, -0.295002, 0.356455 ) DX3DVNORM( -0.229382, -0.670072, 0.705966 )  //113
DX3DVERT( -5.94445e-008, -0.295002, 0.374799 ) DX3DVNORM( 1.12874e-008, -0.670072, 0.742296 )  //114
DX3DVERT( 0.115819, -0.295002, 0.356455 ) DX3DVNORM( 0.229382, -0.670072, 0.705966 )  //115
DX3DVERT( 0.220301, -0.295002, 0.303219 ) DX3DVNORM( 0.436311, -0.670072, 0.60053 )  //116
DX3DVERT( 0.303219, -0.295002, 0.220301 ) DX3DVNORM( 0.60053, -0.670072, 0.436311 )  //117
DX3DVERT( 0.356455, -0.295002, 0.115819 ) DX3DVNORM( 0.705966, -0.670072, 0.229382 )  //118
DX3DVERT( 0.374799, -0.295002, -6.2968e-008 ) DX3DVNORM( 0.742296, -0.670072, 6.0764e-007 )  //119
DX3DVERT( 0.353128, -0.214824, -0.256562 ) DX3DVNORM( 0.688359, -0.525395, -0.500122 )  //120
DX3DVERT( 0.415126, -0.214824, -0.134883 ) DX3DVNORM( 0.809215, -0.525394, -0.262929 )  //121
DX3DVERT( 0.256562, -0.214824, -0.353128 ) DX3DVNORM( 0.500122, -0.525394, -0.688359 )  //122
DX3DVERT( 0.134883, -0.214824, -0.415126 ) DX3DVNORM( 0.262929, -0.525394, -0.809215 )  //123
DX3DVERT( -5.77276e-008, -0.214824, -0.43649 ) DX3DVNORM( -1.32254e-007, -0.525394, -0.850859 )  //124
DX3DVERT( -0.134883, -0.214824, -0.415126 ) DX3DVNORM( -0.26293, -0.525394, -0.809215 )  //125
DX3DVERT( -0.256562, -0.214824, -0.353128 ) DX3DVNORM( -0.500122, -0.525394, -0.688359 )  //126
DX3DVERT( -0.353128, -0.214824, -0.256562 ) DX3DVNORM( -0.688359, -0.525394, -0.500122 )  //127
DX3DVERT( -0.415126, -0.214824, -0.134883 ) DX3DVNORM( -0.809215, -0.525394, -0.26293 )  //128
DX3DVERT( -0.43649, -0.214824, -6.78598e-008 ) DX3DVNORM( -0.850859, -0.525394, -2.64507e-008 )  //129
DX3DVERT( -0.415126, -0.214824, 0.134883 ) DX3DVNORM( -0.809215, -0.525394, 0.26293 )  //130
DX3DVERT( -0.353128, -0.214824, 0.256562 ) DX3DVNORM( -0.688359, -0.525394, 0.500122 )  //131
DX3DVERT( -0.256562, -0.214824, 0.353128 ) DX3DVNORM( -0.500122, -0.525394, 0.688359 )  //132
DX3DVERT( -0.134883, -0.214824, 0.415126 ) DX3DVNORM( -0.262929, -0.525394, 0.809215 )  //133
DX3DVERT( -5.64785e-008, -0.214824, 0.436489 ) DX3DVNORM( 7.93522e-008, -0.525394, 0.850859 )  //134
DX3DVERT( 0.134883, -0.214824, 0.415126 ) DX3DVNORM( 0.26293, -0.525394, 0.809215 )  //135
DX3DVERT( 0.256562, -0.214824, 0.353127 ) DX3DVNORM( 0.500122, -0.525394, 0.688359 )  //136
DX3DVERT( 0.353127, -0.214824, 0.256562 ) DX3DVNORM( 0.688359, -0.525394, 0.500122 )  //137
DX3DVERT( 0.415126, -0.214824, 0.134883 ) DX3DVNORM( 0.809215, -0.525394, 0.262929 )  //138
DX3DVERT( 0.436489, -0.214824, -6.04447e-008 ) DX3DVNORM( 0.850859, -0.525394, 7.78407e-007 )  //139
DX3DVERT( 0.386288, -0.130038, -0.280655 ) DX3DVNORM( 0.759054, -0.345979, -0.551485 )  //140
DX3DVERT( 0.454109, -0.130038, -0.147549 ) DX3DVNORM( 0.892322, -0.345979, -0.289932 )  //141
DX3DVERT( 0.280655, -0.130038, -0.386289 ) DX3DVNORM( 0.551485, -0.345979, -0.759054 )  //142
DX3DVERT( 0.147549, -0.130038, -0.454109 ) DX3DVNORM( 0.289932, -0.345979, -0.892322 )  //143
DX3DVERT( -5.59877e-008, -0.130038, -0.477479 ) DX3DVNORM( -2.00536e-007, -0.345979, -0.938242 )  //144
DX3DVERT( -0.147549, -0.130038, -0.454109 ) DX3DVNORM( -0.289933, -0.345979, -0.892322 )  //145
DX3DVERT( -0.280655, -0.130038, -0.386288 ) DX3DVNORM( -0.551485, -0.345979, -0.759054 )  //146
DX3DVERT( -0.386288, -0.130038, -0.280655 ) DX3DVNORM( -0.759054, -0.345979, -0.551485 )  //147
DX3DVERT( -0.454109, -0.130038, -0.147549 ) DX3DVNORM( -0.892322, -0.345979, -0.289933 )  //148
DX3DVERT( -0.477479, -0.130038, -6.74716e-008 ) DX3DVNORM( -0.938242, -0.345979, 0 )  //149
DX3DVERT( -0.454109, -0.130038, 0.147549 ) DX3DVNORM( -0.892322, -0.345979, 0.289933 )  //150
DX3DVERT( -0.386288, -0.130038, 0.280655 ) DX3DVNORM( -0.759054, -0.345978, 0.551485 )  //151
DX3DVERT( -0.280655, -0.130038, 0.386288 ) DX3DVNORM( -0.551485, -0.345978, 0.759054 )  //152
DX3DVERT( -0.147549, -0.130038, 0.454109 ) DX3DVNORM( -0.289932, -0.345979, 0.892322 )  //153
DX3DVERT( -5.46213e-008, -0.130038, 0.477478 ) DX3DVNORM( 1.28645e-007, -0.345979, 0.938242 )  //154
DX3DVERT( 0.147549, -0.130038, 0.454109 ) DX3DVNORM( 0.289933, -0.345979, 0.892321 )  //155
DX3DVERT( 0.280655, -0.130038, 0.386288 ) DX3DVNORM( 0.551485, -0.345979, 0.759054 )  //156
DX3DVERT( 0.386288, -0.130038, 0.280655 ) DX3DVNORM( 0.759054, -0.345979, 0.551485 )  //157
DX3DVERT( 0.454109, -0.130038, 0.147549 ) DX3DVNORM( 0.892322, -0.345979, 0.289932 )  //158
DX3DVERT( 0.477478, -0.130038, -5.93602e-008 ) DX3DVNORM( 0.938242, -0.345979, 8.02142e-007 )  //159
DX3DVERT( 0.404812, -0.0425966, -0.294113 ) DX3DVNORM( 0.798225, -0.162791, -0.579945 )  //160
DX3DVERT( 0.475885, -0.0425966, -0.154625 ) DX3DVNORM( 0.93837, -0.162791, -0.304894 )  //161
DX3DVERT( 0.294113, -0.0425966, -0.404812 ) DX3DVNORM( 0.579944, -0.162791, -0.798225 )  //162
DX3DVERT( 0.154624, -0.0425966, -0.475885 ) DX3DVNORM( 0.304895, -0.162791, -0.93837 )  //163
DX3DVERT( -5.52821e-008, -0.0425966, -0.500376 ) DX3DVNORM( -6.43681e-008, -0.162791, -0.986661 )  //164
DX3DVERT( -0.154625, -0.0425966, -0.475885 ) DX3DVNORM( -0.304895, -0.162791, -0.93837 )  //165
DX3DVERT( -0.294113, -0.0425966, -0.404812 ) DX3DVNORM( -0.579945, -0.162791, -0.798225 )  //166
DX3DVERT( -0.404812, -0.0425966, -0.294113 ) DX3DVNORM( -0.798225, -0.162791, -0.579945 )  //167
DX3DVERT( -0.475885, -0.0425966, -0.154625 ) DX3DVNORM( -0.93837, -0.162791, -0.304895 )  //168
DX3DVERT( -0.500375, -0.0425966, -6.73167e-008 ) DX3DVNORM( -0.98666, -0.162792, 7.57271e-009 )  //169
DX3DVERT( -0.475885, -0.0425966, 0.154624 ) DX3DVNORM( -0.93837, -0.162791, 0.304895 )  //170
DX3DVERT( -0.404812, -0.0425966, 0.294113 ) DX3DVNORM( -0.798225, -0.162791, 0.579945 )  //171
DX3DVERT( -0.294113, -0.0425966, 0.404812 ) DX3DVNORM( -0.579945, -0.162791, 0.798225 )  //172
DX3DVERT( -0.154625, -0.0425966, 0.475885 ) DX3DVNORM( -0.304895, -0.162791, 0.93837 )  //173
DX3DVERT( -5.38502e-008, -0.0425966, 0.500375 ) DX3DVNORM( 6.43681e-008, -0.162791, 0.986661 )  //174
DX3DVERT( 0.154624, -0.0425966, 0.475885 ) DX3DVNORM( 0.304895, -0.162791, 0.93837 )  //175
DX3DVERT( 0.294113, -0.0425966, 0.404812 ) DX3DVNORM( 0.579945, -0.162791, 0.798225 )  //176
DX3DVERT( 0.404812, -0.0425966, 0.294113 ) DX3DVNORM( 0.798225, -0.162791, 0.579945 )  //177
DX3DVERT( 0.475885, -0.0425966, 0.154624 ) DX3DVNORM( 0.93837, -0.162792, 0.304895 )  //178
DX3DVERT( 0.500375, -0.0425966, -5.88164e-008 ) DX3DVNORM( 0.986661, -0.162791, 5.56595e-007 )  //179
DX3DVERT( 0.409858, 0.04527, -0.29778 ) DX3DVNORM( 0.809017, -7.18387e-008, -0.587785 )  //180
DX3DVERT( 0.481817, 0.04527, -0.156552 ) DX3DVNORM( 0.951057, -6.61673e-008, -0.309016 )  //181
DX3DVERT( 0.297779, 0.04527, -0.409858 ) DX3DVNORM( 0.587785, -5.67148e-009, -0.809017 )  //182
DX3DVERT( 0.156552, 0.04527, -0.481817 ) DX3DVNORM( 0.309017, -1.89049e-009, -0.951057 )  //183
DX3DVERT( -5.52381e-008, 0.04527, -0.506613 ) DX3DVNORM( 3.78098e-009, 1.89049e-009, -1 )  //184
DX3DVERT( -0.156552, 0.04527, -0.481817 ) DX3DVNORM( -0.309017, 1.51239e-008, -0.951057 )  //185
DX3DVERT( -0.29778, 0.04527, -0.409858 ) DX3DVNORM( -0.587785, 1.51239e-008, -0.809017 )  //186
DX3DVERT( -0.409858, 0.04527, -0.29778 ) DX3DVNORM( -0.809017, -1.89049e-009, -0.587785 )  //187
DX3DVERT( -0.481817, 0.04527, -0.156552 ) DX3DVNORM( -0.951057, 0, -0.309017 )  //188
DX3DVERT( -0.506613, 0.04527, -6.74227e-008 ) DX3DVNORM( -1, -1.89049e-009, 1.1343e-008 )  //189
DX3DVERT( -0.481817, 0.04527, 0.156552 ) DX3DVNORM( -0.951057, 6.80578e-008, 0.309017 )  //190
DX3DVERT( -0.409858, 0.04527, 0.297779 ) DX3DVNORM( -0.809017, 6.80577e-008, 0.587785 )  //191
DX3DVERT( -0.29778, 0.04527, 0.409858 ) DX3DVNORM( -0.587785, -1.89049e-009, 0.809017 )  //192
DX3DVERT( -0.156552, 0.04527, 0.481817 ) DX3DVNORM( -0.309017, -1.89049e-009, 0.951057 )  //193
DX3DVERT( -5.37883e-008, 0.04527, 0.506612 ) DX3DVNORM( 0, 1.89049e-009, 1 )  //194
DX3DVERT( 0.156552, 0.04527, 0.481817 ) DX3DVNORM( 0.309017, 1.89049e-009, 0.951057 )  //195
DX3DVERT( 0.297779, 0.04527, 0.409858 ) DX3DVNORM( 0.587785, 0, 0.809017 )  //196
DX3DVERT( 0.409858, 0.04527, 0.297779 ) DX3DVNORM( 0.809017, 0, 0.587785 )  //197
DX3DVERT( 0.481817, 0.04527, 0.156552 ) DX3DVNORM( 0.951057, 1.89049e-009, 0.309017 )  //198
DX3DVERT( 0.506612, 0.04527, -5.88164e-008 ) DX3DVNORM( 1, 1.89049e-009, 3.93222e-007 )  //199
DX3DVERT( 0.404812, 0.133137, -0.294113 ) DX3DVNORM( 0.800866, 0.141597, -0.581863 )  //200
DX3DVERT( 0.475885, 0.133137, -0.154625 ) DX3DVNORM( 0.941474, 0.141597, -0.305903 )  //201
DX3DVERT( 0.294113, 0.133137, -0.404812 ) DX3DVNORM( 0.581863, 0.141597, -0.800866 )  //202
DX3DVERT( 0.154624, 0.133137, -0.475885 ) DX3DVNORM( 0.305903, 0.141596, -0.941474 )  //203
DX3DVERT( -5.52821e-008, 0.133137, -0.500376 ) DX3DVNORM( -6.80427e-008, 0.141596, -0.989924 )  //204
DX3DVERT( -0.154625, 0.133137, -0.475885 ) DX3DVNORM( -0.305903, 0.141597, -0.941474 )  //205
DX3DVERT( -0.294113, 0.133137, -0.404812 ) DX3DVNORM( -0.581863, 0.141597, -0.800866 )  //206
DX3DVERT( -0.404812, 0.133137, -0.294113 ) DX3DVNORM( -0.800866, 0.141597, -0.581863 )  //207
DX3DVERT( -0.475885, 0.133137, -0.154625 ) DX3DVNORM( -0.941474, 0.141596, -0.305903 )  //208
DX3DVERT( -0.500375, 0.133137, -6.73167e-008 ) DX3DVNORM( -0.989924, 0.141596, -1.13405e-008 )  //209
DX3DVERT( -0.475885, 0.133137, 0.154624 ) DX3DVNORM( -0.941474, 0.141597, 0.305904 )  //210
DX3DVERT( -0.404812, 0.133137, 0.294113 ) DX3DVNORM( -0.800865, 0.141597, 0.581863 )  //211
DX3DVERT( -0.294113, 0.133137, 0.404812 ) DX3DVNORM( -0.581863, 0.141597, 0.800866 )  //212
DX3DVERT( -0.154625, 0.133137, 0.475885 ) DX3DVNORM( -0.305903, 0.141596, 0.941474 )  //213
DX3DVERT( -5.38502e-008, 0.133137, 0.500375 ) DX3DVNORM( -7.5603e-009, 0.141596, 0.989924 )  //214
DX3DVERT( 0.154624, 0.133137, 0.475885 ) DX3DVNORM( 0.305903, 0.141597, 0.941474 )  //215
DX3DVERT( 0.294113, 0.133137, 0.404812 ) DX3DVNORM( 0.581863, 0.141597, 0.800866 )  //216
DX3DVERT( 0.404812, 0.133137, 0.294113 ) DX3DVNORM( 0.800866, 0.141597, 0.581863 )  //217
DX3DVERT( 0.475885, 0.133137, 0.154624 ) DX3DVNORM( 0.941474, 0.141597, 0.305903 )  //218
DX3DVERT( 0.500375, 0.133137, -5.88164e-008 ) DX3DVNORM( 0.989924, 0.141597, 4.23377e-007 )  //219
DX3DVERT( 0.389798, 0.21884, -0.283205 ) DX3DVNORM( 0.776285, 0.281571, -0.564004 )  //220
DX3DVERT( 0.458235, 0.21884, -0.14889 ) DX3DVNORM( 0.912577, 0.28157, -0.296514 )  //221
DX3DVERT( 0.283205, 0.21884, -0.389799 ) DX3DVNORM( 0.564004, 0.28157, -0.776285 )  //222
DX3DVERT( 0.14889, 0.21884, -0.458236 ) DX3DVNORM( 0.296514, 0.281571, -0.912577 )  //223
DX3DVERT( -5.54132e-008, 0.21884, -0.481817 ) DX3DVNORM( -6.79984e-008, 0.28157, -0.959541 )  //224
DX3DVERT( -0.14889, 0.21884, -0.458236 ) DX3DVNORM( -0.296515, 0.28157, -0.912577 )  //225
DX3DVERT( -0.283205, 0.21884, -0.389799 ) DX3DVNORM( -0.564004, 0.28157, -0.776285 )  //226
DX3DVERT( -0.389799, 0.21884, -0.283205 ) DX3DVNORM( -0.776285, 0.28157, -0.564004 )  //227
DX3DVERT( -0.458236, 0.21884, -0.14889 ) DX3DVNORM( -0.912577, 0.28157, -0.296514 )  //228
DX3DVERT( -0.481817, 0.21884, -6.70015e-008 ) DX3DVNORM( -0.959541, 0.28157, -2.64438e-008 )  //229
DX3DVERT( -0.458236, 0.21884, 0.14889 ) DX3DVNORM( -0.912577, 0.28157, 0.296515 )  //230
DX3DVERT( -0.389798, 0.21884, 0.283205 ) DX3DVNORM( -0.776285, 0.28157, 0.564004 )  //231
DX3DVERT( -0.283205, 0.21884, 0.389798 ) DX3DVNORM( -0.564004, 0.28157, 0.776285 )  //232
DX3DVERT( -0.14889, 0.21884, 0.458235 ) DX3DVNORM( -0.296514, 0.28157, 0.912577 )  //233
DX3DVERT( -5.40344e-008, 0.21884, 0.481817 ) DX3DVNORM( -1.88885e-008, 0.28157, 0.959541 )  //234
DX3DVERT( 0.14889, 0.21884, 0.458235 ) DX3DVNORM( 0.296514, 0.28157, 0.912577 )  //235
DX3DVERT( 0.283205, 0.21884, 0.389798 ) DX3DVNORM( 0.564004, 0.28157, 0.776285 )  //236
DX3DVERT( 0.389798, 0.21884, 0.283205 ) DX3DVNORM( 0.776285, 0.28157, 0.564004 )  //237
DX3DVERT( 0.458235, 0.21884, 0.14889 ) DX3DVNORM( 0.912577, 0.28157, 0.296514 )  //238
DX3DVERT( 0.481817, 0.21884, -5.88164e-008 ) DX3DVNORM( 0.959541, 0.28157, 4.38212e-007 )  //239
DX3DVERT( 0.365186, 0.300269, -0.265324 ) DX3DVNORM( 0.734934, 0.418041, -0.533961 )  //240
DX3DVERT( 0.429302, 0.300269, -0.139489 ) DX3DVNORM( 0.863967, 0.41804, -0.280719 )  //241
DX3DVERT( 0.265323, 0.300269, -0.365186 ) DX3DVNORM( 0.533961, 0.418041, -0.734934 )  //242
DX3DVERT( 0.139489, 0.300269, -0.429302 ) DX3DVNORM( 0.28072, 0.41804, -0.863967 )  //243
DX3DVERT( -5.56281e-008, 0.300269, -0.451395 ) DX3DVNORM( -4.52848e-008, 0.41804, -0.908428 )  //244
DX3DVERT( -0.139489, 0.300269, -0.429302 ) DX3DVNORM( -0.28072, 0.41804, -0.863967 )  //245
DX3DVERT( -0.265323, 0.300269, -0.365186 ) DX3DVNORM( -0.533961, 0.41804, -0.734934 )  //246
DX3DVERT( -0.365186, 0.300269, -0.265323 ) DX3DVNORM( -0.734934, 0.41804, -0.533961 )  //247
DX3DVERT( -0.429302, 0.300269, -0.139489 ) DX3DVNORM( -0.863967, 0.41804, -0.28072 )  //248
DX3DVERT( -0.451395, 0.300269, -6.64847e-008 ) DX3DVNORM( -0.908428, 0.41804, -1.50949e-008 )  //249
DX3DVERT( -0.429302, 0.300269, 0.139489 ) DX3DVNORM( -0.863967, 0.418041, 0.28072 )  //250
DX3DVERT( -0.365186, 0.300269, 0.265323 ) DX3DVNORM( -0.734934, 0.418041, 0.533961 )  //251
DX3DVERT( -0.265323, 0.300269, 0.365186 ) DX3DVNORM( -0.533961, 0.418041, 0.734934 )  //252
DX3DVERT( -0.139489, 0.300269, 0.429302 ) DX3DVNORM( -0.28072, 0.41804, 0.863967 )  //253
DX3DVERT( -5.43363e-008, 0.300269, 0.451395 ) DX3DVNORM( -1.13212e-008, 0.41804, 0.908428 )  //254
DX3DVERT( 0.139489, 0.300269, 0.429302 ) DX3DVNORM( 0.28072, 0.41804, 0.863967 )  //255
DX3DVERT( 0.265323, 0.300269, 0.365186 ) DX3DVNORM( 0.533961, 0.418041, 0.734934 )  //256
DX3DVERT( 0.365186, 0.300269, 0.265323 ) DX3DVNORM( 0.734934, 0.418041, 0.533961 )  //257
DX3DVERT( 0.429302, 0.300269, 0.139489 ) DX3DVNORM( 0.863967, 0.41804, 0.28072 )  //258
DX3DVERT( 0.451395, 0.300269, -5.88164e-008 ) DX3DVNORM( 0.908429, 0.41804, 5.47191e-007 )  //259
DX3DVERT( 0.331582, 0.375419, -0.240909 ) DX3DVNORM( 0.676391, 0.54863, -0.491427 )  //260
DX3DVERT( 0.389798, 0.375419, -0.126653 ) DX3DVNORM( 0.795145, 0.54863, -0.258358 )  //261
DX3DVERT( 0.240909, 0.375419, -0.331582 ) DX3DVNORM( 0.491427, 0.54863, -0.676391 )  //262
DX3DVERT( 0.126653, 0.375419, -0.389799 ) DX3DVNORM( 0.258358, 0.54863, -0.795145 )  //263
DX3DVERT( -5.59215e-008, 0.375419, -0.409858 ) DX3DVNORM( -9.04441e-008, 0.548631, -0.836065 )  //264
DX3DVERT( -0.126653, 0.375419, -0.389799 ) DX3DVNORM( -0.258358, 0.548631, -0.795145 )  //265
DX3DVERT( -0.240909, 0.375419, -0.331582 ) DX3DVNORM( -0.491427, 0.54863, -0.676391 )  //266
DX3DVERT( -0.331582, 0.375419, -0.240909 ) DX3DVNORM( -0.676391, 0.54863, -0.491427 )  //267
DX3DVERT( -0.389798, 0.375419, -0.126653 ) DX3DVNORM( -0.795145, 0.54863, -0.258358 )  //268
DX3DVERT( -0.409858, 0.375419, -6.5779e-008 ) DX3DVNORM( -0.836065, 0.548631, 9.42126e-009 )  //269
DX3DVERT( -0.389798, 0.375419, 0.126653 ) DX3DVNORM( -0.795145, 0.54863, 0.258358 )  //270
DX3DVERT( -0.331582, 0.375419, 0.240909 ) DX3DVNORM( -0.676391, 0.54863, 0.491427 )  //271
DX3DVERT( -0.240909, 0.375419, 0.331582 ) DX3DVNORM( -0.491427, 0.54863, 0.676391 )  //272
DX3DVERT( -0.126653, 0.375419, 0.389798 ) DX3DVNORM( -0.258358, 0.54863, 0.795145 )  //273
DX3DVERT( -5.47486e-008, 0.375419, 0.409858 ) DX3DVNORM( 1.31898e-008, 0.548631, 0.836065 )  //274
DX3DVERT( 0.126653, 0.375419, 0.389798 ) DX3DVNORM( 0.258359, 0.54863, 0.795145 )  //275
DX3DVERT( 0.240909, 0.375419, 0.331582 ) DX3DVNORM( 0.491427, 0.54863, 0.676391 )  //276
DX3DVERT( 0.331582, 0.375419, 0.240909 ) DX3DVNORM( 0.676391, 0.54863, 0.491427 )  //277
DX3DVERT( 0.389798, 0.375419, 0.126653 ) DX3DVNORM( 0.795145, 0.54863, 0.258358 )  //278
DX3DVERT( 0.409858, 0.375419, -5.88164e-008 ) DX3DVNORM( 0.836065, 0.54863, 6.36877e-007 )  //279
DX3DVERT( 0.289814, 0.44244, -0.210562 ) DX3DVNORM( 0.600372, 0.670289, -0.436196 )  //280
DX3DVERT( 0.340696, 0.44244, -0.110699 ) DX3DVNORM( 0.705779, 0.670289, -0.229321 )  //281
DX3DVERT( 0.210562, 0.44244, -0.289814 ) DX3DVNORM( 0.436196, 0.670289, -0.600372 )  //282
DX3DVERT( 0.110699, 0.44244, -0.340696 ) DX3DVNORM( 0.229321, 0.670289, -0.70578 )  //283
DX3DVERT( -5.62861e-008, 0.44244, -0.358229 ) DX3DVNORM( -4.32674e-008, 0.670289, -0.7421 )  //284
DX3DVERT( -0.110699, 0.44244, -0.340696 ) DX3DVNORM( -0.229322, 0.670289, -0.705779 )  //285
DX3DVERT( -0.210562, 0.44244, -0.289814 ) DX3DVNORM( -0.436196, 0.670289, -0.600372 )  //286
DX3DVERT( -0.289814, 0.44244, -0.210562 ) DX3DVNORM( -0.600372, 0.670289, -0.436196 )  //287
DX3DVERT( -0.340696, 0.44244, -0.110699 ) DX3DVNORM( -0.705779, 0.670289, -0.229321 )  //288
DX3DVERT( -0.358229, 0.44244, -6.4902e-008 ) DX3DVNORM( -0.7421, 0.670289, -3.19802e-008 )  //289
DX3DVERT( -0.340696, 0.44244, 0.110699 ) DX3DVNORM( -0.70578, 0.670289, 0.229321 )  //290
DX3DVERT( -0.289814, 0.44244, 0.210562 ) DX3DVNORM( -0.600372, 0.670288, 0.436196 )  //291
DX3DVERT( -0.210562, 0.44244, 0.289813 ) DX3DVNORM( -0.436196, 0.670288, 0.600372 )  //292
DX3DVERT( -0.110699, 0.44244, 0.340696 ) DX3DVNORM( -0.229322, 0.670289, 0.705779 )  //293
DX3DVERT( -5.5261e-008, 0.44244, 0.358229 ) DX3DVNORM( 2.82179e-008, 0.670289, 0.7421 )  //294
DX3DVERT( 0.110699, 0.44244, 0.340696 ) DX3DVNORM( 0.229322, 0.670289, 0.70578 )  //295
DX3DVERT( 0.210562, 0.44244, 0.289813 ) DX3DVNORM( 0.436196, 0.670288, 0.600372 )  //296
DX3DVERT( 0.289813, 0.44244, 0.210562 ) DX3DVNORM( 0.600372, 0.670288, 0.436196 )  //297
DX3DVERT( 0.340696, 0.44244, 0.110699 ) DX3DVNORM( 0.70578, 0.670289, 0.229321 )  //298
DX3DVERT( 0.358229, 0.44244, -5.88164e-008 ) DX3DVNORM( 0.7421, 0.670289, 5.38021e-007 )  //299
DX3DVERT( 0.240909, 0.499682, -0.17503 ) DX3DVNORM( 0.507055, 0.779217, -0.368397 )  //300
DX3DVERT( 0.283205, 0.499682, -0.092019 ) DX3DVNORM( 0.596079, 0.779217, -0.193677 )  //301
DX3DVERT( 0.17503, 0.499682, -0.240909 ) DX3DVNORM( 0.368397, 0.779217, -0.507055 )  //302
DX3DVERT( 0.0920189, 0.499682, -0.283205 ) DX3DVNORM( 0.193678, 0.779217, -0.596079 )  //303
DX3DVERT( -5.67131e-008, 0.499682, -0.29778 ) DX3DVNORM( 1.87794e-009, 0.779217, -0.626755 )  //304
DX3DVERT( -0.092019, 0.499682, -0.283205 ) DX3DVNORM( -0.193678, 0.779217, -0.596079 )  //305
DX3DVERT( -0.17503, 0.499682, -0.240909 ) DX3DVNORM( -0.368397, 0.779217, -0.507055 )  //306
DX3DVERT( -0.240909, 0.499682, -0.17503 ) DX3DVNORM( -0.507055, 0.779217, -0.368397 )  //307
DX3DVERT( -0.283205, 0.499682, -0.092019 ) DX3DVNORM( -0.596079, 0.779217, -0.193678 )  //308
DX3DVERT( -0.29778, 0.499682, -6.3875e-008 ) DX3DVNORM( -0.626755, 0.779216, -5.63382e-008 )  //309
DX3DVERT( -0.283205, 0.499682, 0.0920188 ) DX3DVNORM( -0.596079, 0.779217, 0.193678 )  //310
DX3DVERT( -0.240909, 0.499682, 0.17503 ) DX3DVNORM( -0.507055, 0.779217, 0.368397 )  //311
DX3DVERT( -0.17503, 0.499682, 0.240909 ) DX3DVNORM( -0.368397, 0.779217, 0.507055 )  //312
DX3DVERT( -0.092019, 0.499682, 0.283205 ) DX3DVNORM( -0.193678, 0.779217, 0.596079 )  //313
DX3DVERT( -5.5861e-008, 0.499682, 0.297779 ) DX3DVNORM( 9.38971e-009, 0.779217, 0.626755 )  //314
DX3DVERT( 0.0920188, 0.499682, 0.283205 ) DX3DVNORM( 0.193678, 0.779217, 0.596079 )  //315
DX3DVERT( 0.17503, 0.499682, 0.240909 ) DX3DVNORM( 0.368397, 0.779217, 0.507055 )  //316
DX3DVERT( 0.240909, 0.499682, 0.17503 ) DX3DVNORM( 0.507055, 0.779217, 0.368397 )  //317
DX3DVERT( 0.283205, 0.499682, 0.0920188 ) DX3DVNORM( 0.596079, 0.779217, 0.193678 )  //318
DX3DVERT( 0.297779, 0.499682, -5.88164e-008 ) DX3DVNORM( 0.626755, 0.779217, 5.18312e-007 )  //319
DX3DVERT( 0.186072, 0.545734, -0.135189 ) DX3DVNORM( 0.397462, 0.870996, -0.288773 )  //320
DX3DVERT( 0.21874, 0.545734, -0.0710732 ) DX3DVNORM( 0.467244, 0.870996, -0.151817 )  //321
DX3DVERT( 0.135189, 0.545734, -0.186072 ) DX3DVNORM( 0.288773, 0.870996, -0.397462 )  //322
DX3DVERT( 0.071073, 0.545734, -0.218741 ) DX3DVNORM( 0.151817, 0.870996, -0.467244 )  //323
DX3DVERT( -5.71919e-008, 0.545734, -0.229997 ) DX3DVNORM( 9.37416e-009, 0.870996, -0.49129 )  //324
DX3DVERT( -0.0710732, 0.545734, -0.218741 ) DX3DVNORM( -0.151817, 0.870996, -0.467244 )  //325
DX3DVERT( -0.135189, 0.545734, -0.186072 ) DX3DVNORM( -0.288773, 0.870996, -0.397462 )  //326
DX3DVERT( -0.186072, 0.545734, -0.135189 ) DX3DVNORM( -0.397462, 0.870996, -0.288773 )  //327
DX3DVERT( -0.218741, 0.545734, -0.0710732 ) DX3DVNORM( -0.467244, 0.870996, -0.151817 )  //328
DX3DVERT( -0.229997, 0.545734, -6.27236e-008 ) DX3DVNORM( -0.49129, 0.870996, 1.91233e-007 )  //329
DX3DVERT( -0.218741, 0.545734, 0.071073 ) DX3DVNORM( -0.467244, 0.870996, 0.151817 )  //330
DX3DVERT( -0.186072, 0.545734, 0.135189 ) DX3DVNORM( -0.397462, 0.870996, 0.288773 )  //331
DX3DVERT( -0.135189, 0.545734, 0.186072 ) DX3DVNORM( -0.288773, 0.870996, 0.397462 )  //332
DX3DVERT( -0.0710731, 0.545734, 0.21874 ) DX3DVNORM( -0.151817, 0.870996, 0.467244 )  //333
DX3DVERT( -5.65337e-008, 0.545734, 0.229997 ) DX3DVNORM( 2.43728e-008, 0.870996, 0.49129 )  //334
DX3DVERT( 0.071073, 0.545734, 0.21874 ) DX3DVNORM( 0.151817, 0.870996, 0.467244 )  //335
DX3DVERT( 0.135189, 0.545734, 0.186072 ) DX3DVNORM( 0.288773, 0.870996, 0.397462 )  //336
DX3DVERT( 0.186072, 0.545734, 0.135189 ) DX3DVNORM( 0.397462, 0.870996, 0.288773 )  //337
DX3DVERT( 0.21874, 0.545734, 0.071073 ) DX3DVNORM( 0.467244, 0.870996, 0.151817 )  //338
DX3DVERT( 0.229997, 0.545734, -5.88164e-008 ) DX3DVNORM( 0.49129, 0.870996, 2.98098e-007 )  //339
DX3DVERT( 0.126653, 0.579463, -0.092019 ) DX3DVNORM( 0.273812, 0.940984, -0.198936 )  //340
DX3DVERT( 0.14889, 0.579463, -0.0483773 ) DX3DVNORM( 0.321885, 0.940984, -0.104587 )  //341
DX3DVERT( 0.0920189, 0.579463, -0.126653 ) DX3DVNORM( 0.198936, 0.940984, -0.273812 )  //342
DX3DVERT( 0.0483772, 0.579463, -0.14889 ) DX3DVNORM( 0.104587, 0.940984, -0.321885 )  //343
DX3DVERT( -5.77106e-008, 0.579463, -0.156552 ) DX3DVNORM( 8.42507e-009, 0.940984, -0.33845 )  //344
DX3DVERT( -0.0483773, 0.579463, -0.14889 ) DX3DVNORM( -0.104587, 0.940984, -0.321885 )  //345
DX3DVERT( -0.092019, 0.579463, -0.126653 ) DX3DVNORM( -0.198936, 0.940984, -0.273812 )  //346
DX3DVERT( -0.126653, 0.579463, -0.092019 ) DX3DVNORM( -0.273812, 0.940984, -0.198936 )  //347
DX3DVERT( -0.14889, 0.579463, -0.0483773 ) DX3DVNORM( -0.321885, 0.940984, -0.104587 )  //348
DX3DVERT( -0.156552, 0.579463, -6.14759e-008 ) DX3DVNORM( -0.33845, 0.940984, 5.19546e-007 )  //349
DX3DVERT( -0.14889, 0.579463, 0.0483772 ) DX3DVNORM( -0.321885, 0.940984, 0.104587 )  //350
DX3DVERT( -0.126653, 0.579463, 0.0920188 ) DX3DVNORM( -0.273812, 0.940984, 0.198936 )  //351
DX3DVERT( -0.092019, 0.579463, 0.126653 ) DX3DVNORM( -0.198936, 0.940984, 0.273812 )  //352
DX3DVERT( -0.0483773, 0.579463, 0.14889 ) DX3DVNORM( -0.104587, 0.940984, 0.321885 )  //353
DX3DVERT( -5.72626e-008, 0.579463, 0.156552 ) DX3DVNORM( 4.86782e-008, 0.940984, 0.33845 )  //354
DX3DVERT( 0.0483771, 0.579463, 0.14889 ) DX3DVNORM( 0.104587, 0.940984, 0.321885 )  //355
DX3DVERT( 0.0920188, 0.579463, 0.126653 ) DX3DVNORM( 0.198936, 0.940984, 0.273812 )  //356
DX3DVERT( 0.126653, 0.579463, 0.0920188 ) DX3DVNORM( 0.273812, 0.940984, 0.198936 )  //357
DX3DVERT( 0.14889, 0.579463, 0.0483771 ) DX3DVNORM( 0.321885, 0.940984, 0.104587 )  //358
DX3DVERT( 0.156552, 0.579463, -5.88164e-008 ) DX3DVNORM( 0.33845, 0.940984, 2.05946e-008 )  //359
DX3DVERT( 0.0641159, 0.600038, -0.046583 ) DX3DVNORM( 0.139708, 0.984976, -0.101504 )  //360
DX3DVERT( 0.0753728, 0.600038, -0.0244902 ) DX3DVNORM( 0.164237, 0.984977, -0.0533631 )  //361
DX3DVERT( 0.0465829, 0.600038, -0.064116 ) DX3DVNORM( 0.101504, 0.984976, -0.139709 )  //362
DX3DVERT( 0.0244901, 0.600038, -0.0753729 ) DX3DVNORM( 0.0533638, 0.984976, -0.164238 )  //363
DX3DVERT( -5.82566e-008, 0.600038, -0.0792517 ) DX3DVNORM( -2.57195e-009, 0.984976, -0.172689 )  //364
DX3DVERT( -0.0244902, 0.600038, -0.0753729 ) DX3DVNORM( -0.0533638, 0.984976, -0.164237 )  //365
DX3DVERT( -0.046583, 0.600038, -0.064116 ) DX3DVNORM( -0.101504, 0.984976, -0.139708 )  //366
DX3DVERT( -0.064116, 0.600038, -0.046583 ) DX3DVNORM( -0.139708, 0.984977, -0.101503 )  //367
DX3DVERT( -0.0753729, 0.600038, -0.0244902 ) DX3DVNORM( -0.164237, 0.984976, -0.0533635 )  //368
DX3DVERT( -0.0792517, 0.600038, -6.01627e-008 ) DX3DVNORM( -0.172689, 0.984976, 3.16116e-007 )  //369
DX3DVERT( -0.0753729, 0.600038, 0.0244901 ) DX3DVNORM( -0.164237, 0.984976, 0.0533638 )  //370
DX3DVERT( -0.064116, 0.600038, 0.0465829 ) DX3DVNORM( -0.139708, 0.984976, 0.101503 )  //371
DX3DVERT( -0.046583, 0.600038, 0.0641159 ) DX3DVNORM( -0.101504, 0.984976, 0.139708 )  //372
DX3DVERT( -0.0244902, 0.600038, 0.0753728 ) DX3DVNORM( -0.0533639, 0.984976, 0.164237 )  //373
DX3DVERT( -5.80298e-008, 0.600038, 0.0792516 ) DX3DVNORM( 2.61871e-008, 0.984976, 0.172689 )  //374
DX3DVERT( 0.0244901, 0.600038, 0.0753728 ) DX3DVNORM( 0.0533639, 0.984976, 0.164238 )  //375
DX3DVERT( 0.0465829, 0.600038, 0.0641159 ) DX3DVNORM( 0.101504, 0.984976, 0.139708 )  //376
DX3DVERT( 0.0641159, 0.600038, 0.0465829 ) DX3DVNORM( 0.139708, 0.984976, 0.101504 )  //377
DX3DVERT( 0.0753728, 0.600038, 0.0244901 ) DX3DVNORM( 0.164237, 0.984976, 0.0533635 )  //378
DX3DVERT( 0.0792516, 0.600038, -5.88164e-008 ) DX3DVNORM( 0.172689, 0.984976, 4.20864e-009 )  //379
DX3DVERT( 0.0443801, -0.55451, -0.0322441 ) DX3DVNORM( 0.0643196, -0.996835, -0.0467325 )  //380
DX3DVERT( 0.0521719, -0.55451, -0.0169517 ) DX3DVNORM( 0.0756124, -0.996835, -0.0245692 )  //381
DX3DVERT( -7.08106e-008, -0.558886, -5.6443e-008 ) DX3DVNORM( -0.0264297, -0.999648, 0.00239658 )  //382
DX3DVERT( 0.032244, -0.55451, -0.04438 ) DX3DVNORM( 0.0467309, -0.996835, -0.0643184 )  //383
DX3DVERT( 0.0169516, -0.55451, -0.0521718 ) DX3DVNORM( 0.0245682, -0.996835, -0.0756104 )  //384
DX3DVERT( -7.04619e-008, -0.55451, -0.0548568 ) DX3DVNORM( -3.19748e-006, -0.996835, -0.0795028 )  //385
DX3DVERT( -0.0169518, -0.55451, -0.052172 ) DX3DVNORM( -0.024572, -0.996834, -0.0756145 )  //386
DX3DVERT( -0.0322441, -0.55451, -0.0443801 ) DX3DVNORM( -0.0467329, -0.996834, -0.0643208 )  //387
DX3DVERT( -0.0443802, -0.55451, -0.0322436 ) DX3DVNORM( -0.0643201, -0.996835, -0.0467301 )  //388
DX3DVERT( -0.052172, -0.55451, -0.0169513 ) DX3DVNORM( -0.0756114, -0.996835, -0.0245674 )  //389
DX3DVERT( -0.0548569, -0.55451, -2.60593e-008 ) DX3DVNORM( -0.0649168, -0.980564, 0.185147 )  //390
DX3DVERT( -0.052172, -0.55451, 0.0169512 ) DX3DVNORM( -0.0445571, -0.998987, 0.00631021 )  //391
DX3DVERT( -0.00862979, -0.556402, 0.0027805 ) DX3DVNORM( -0.0538941, -0.980038, 0.191367 )  //392
DX3DVERT( -0.0443802, -0.55451, 0.0322438 ) DX3DVNORM( -0.042167, -0.998884, 0.0212892 )  //393
DX3DVERT( -0.00835046, -0.556654, 0.00960525 ) DX3DVNORM( -0.256213, -0.958494, -0.125076 )  //394
DX3DVERT( -0.0322441, -0.55451, 0.0443803 ) DX3DVNORM( -0.253278, -0.962005, -0.101962 )  //395
DX3DVERT( -0.0169518, -0.55451, 0.0521719 ) DX3DVNORM( -0.0245671, -0.996835, 0.0756121 )  //396
DX3DVERT( -7.02758e-008, -0.55451, 0.0548566 ) DX3DVNORM( 3.72093e-007, -0.996835, 0.0795026 )  //397
DX3DVERT( 0.0169516, -0.55451, 0.0521717 ) DX3DVNORM( 0.024571, -0.996835, 0.0756118 )  //398
DX3DVERT( 0.032244, -0.55451, 0.0443801 ) DX3DVNORM( 0.0467325, -0.996835, 0.064319 )  //399
DX3DVERT( 0.04438, -0.55451, 0.0322436 ) DX3DVNORM( 0.0643204, -0.996835, 0.04673 )  //400
DX3DVERT( 0.0521719, -0.55451, 0.0169512 ) DX3DVNORM( 0.0756145, -0.996834, 0.0245674 )  //401
DX3DVERT( 0.0548568, -0.55451, -2.50357e-008 ) DX3DVNORM( 0.0795035, -0.996835, 1.56475e-007 )  //402
DX3DVERT( -5.88164e-008, 0.606954, -5.88164e-008 ) DX3DVNORM( -4.48776e-009, 1, -8.16211e-008 )  //403
DX3DVERT( 0.0194409, -0.496714, -0.0141247 ) DX3DVNORM( 0.713828, 0.470612, -0.518627 )  //404
DX3DVERT( 0.0228541, -0.496714, -0.00742586 ) DX3DVNORM( 0.839156, 0.470612, -0.272657 )  //405
DX3DVERT( 0.0521719, -0.55451, -0.0169517 ) DX3DVNORM( 0.839156, 0.470612, -0.272657 )  //406
DX3DVERT( 0.0443801, -0.55451, -0.0322441 ) DX3DVNORM( 0.713828, 0.470612, -0.518627 )  //407
DX3DVERT( 0.0141246, -0.496714, -0.019441 ) DX3DVNORM( 0.518626, 0.470611, -0.71383 )  //408
DX3DVERT( 0.032244, -0.55451, -0.04438 ) DX3DVNORM( 0.518626, 0.470611, -0.71383 )  //409
DX3DVERT( 0.00742571, -0.496714, -0.0228543 ) DX3DVNORM( 0.27266, 0.47061, -0.839156 )  //410
DX3DVERT( 0.0169516, -0.55451, -0.0521718 ) DX3DVNORM( 0.27266, 0.47061, -0.839156 )  //411
DX3DVERT( -7.3518e-008, -0.496714, -0.0240304 ) DX3DVNORM( 3.47562e-006, 0.470611, -0.882341 )  //412
DX3DVERT( -7.04619e-008, -0.55451, -0.0548568 ) DX3DVNORM( 3.47562e-006, 0.470611, -0.882341 )  //413
DX3DVERT( -0.00742586, -0.496714, -0.0228543 ) DX3DVNORM( -0.272658, 0.470612, -0.839156 )  //414
DX3DVERT( -0.0169518, -0.55451, -0.052172 ) DX3DVNORM( -0.272658, 0.470612, -0.839156 )  //415
DX3DVERT( -0.0141247, -0.496714, -0.019441 ) DX3DVNORM( -0.518631, 0.470611, -0.713826 )  //416
DX3DVERT( -0.0322441, -0.55451, -0.0443801 ) DX3DVNORM( -0.518631, 0.470611, -0.713826 )  //417
DX3DVERT( -0.019441, -0.496714, -0.0141247 ) DX3DVNORM( -0.713834, 0.47061, -0.518621 )  //418
DX3DVERT( -0.0443802, -0.55451, -0.0322436 ) DX3DVNORM( -0.713834, 0.47061, -0.518621 )  //419
DX3DVERT( -0.0228543, -0.496714, -0.00742586 ) DX3DVNORM( -0.839157, 0.470611, -0.272657 )  //420
DX3DVERT( -0.052172, -0.55451, -0.0169513 ) DX3DVNORM( -0.839157, 0.470611, -0.272657 )  //421
DX3DVERT( -0.0240304, -0.496714, -7.52135e-008 ) DX3DVNORM( -0.88234, 0.470612, 0 )  //422
DX3DVERT( -0.0548569, -0.55451, -2.60593e-008 ) DX3DVNORM( -0.88234, 0.470612, 0 )  //423
DX3DVERT( -0.0228543, -0.496714, 0.00742571 ) DX3DVNORM( -0.839156, 0.470611, 0.272658 )  //424
DX3DVERT( -0.052172, -0.55451, 0.0169512 ) DX3DVNORM( -0.839156, 0.470611, 0.272658 )  //425
DX3DVERT( -0.019441, -0.496714, 0.0141246 ) DX3DVNORM( -0.713833, 0.470611, 0.518621 )  //426
DX3DVERT( -0.0443802, -0.55451, 0.0322438 ) DX3DVNORM( -0.713833, 0.470611, 0.518621 )  //427
DX3DVERT( -0.0141247, -0.496714, 0.0194409 ) DX3DVNORM( -0.518627, 0.470613, 0.713827 )  //428
DX3DVERT( -0.0322441, -0.55451, 0.0443803 ) DX3DVNORM( -0.518627, 0.470613, 0.713827 )  //429
DX3DVERT( -0.00742586, -0.496714, 0.0228541 ) DX3DVNORM( -0.272652, 0.470612, 0.839157 )  //430
DX3DVERT( -0.0169518, -0.55451, 0.0521719 ) DX3DVNORM( -0.272652, 0.470612, 0.839157 )  //431
DX3DVERT( -7.34492e-008, -0.496714, 0.0240303 ) DX3DVNORM( 2.96405e-006, 0.47061, 0.882341 )  //432
DX3DVERT( -7.02758e-008, -0.55451, 0.0548566 ) DX3DVNORM( 2.96405e-006, 0.47061, 0.882341 )  //433
DX3DVERT( 0.00742571, -0.496714, 0.0228541 ) DX3DVNORM( 0.272654, 0.47061, 0.839158 )  //434
DX3DVERT( 0.0169516, -0.55451, 0.0521717 ) DX3DVNORM( 0.272654, 0.47061, 0.839158 )  //435
DX3DVERT( 0.0141246, -0.496714, 0.0194409 ) DX3DVNORM( 0.518629, 0.470612, 0.713827 )  //436
DX3DVERT( 0.032244, -0.55451, 0.0443801 ) DX3DVNORM( 0.518629, 0.470612, 0.713827 )  //437
DX3DVERT( 0.0194409, -0.496714, 0.0141246 ) DX3DVNORM( 0.713832, 0.47061, 0.518623 )  //438
DX3DVERT( 0.04438, -0.55451, 0.0322436 ) DX3DVNORM( 0.713832, 0.47061, 0.518623 )  //439
DX3DVERT( 0.0228541, -0.496714, 0.00742571 ) DX3DVNORM( 0.839156, 0.470611, 0.272659 )  //440
DX3DVERT( 0.0521719, -0.55451, 0.0169512 ) DX3DVNORM( 0.839156, 0.470611, 0.272659 )  //441
DX3DVERT( 0.0240303, -0.496714, -7.48053e-008 ) DX3DVNORM( 0.88234, 0.470612, -4.73948e-007 )  //442
DX3DVERT( 0.0548568, -0.55451, -2.50357e-008 ) DX3DVNORM( 0.88234, 0.470612, -4.73948e-007 )  //443
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Balloon___mBalloon_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Balloon___mBalloon_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 444 )
DX3DVERTEX_END


#else
#define vertex_Balloon___mBalloon_0	NULL
#define vertexbuff_Balloon___mBalloon_0	NULL
#endif




#if ((PT_Balloon___mBalloon_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Balloon___mBalloon_0 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DINDEX_START( index_Balloon___mBalloon_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 24, 23, // 22 68
	24, 25, 23, // 23 71
	24, 26, 25, // 24 74
	26, 27, 25, // 25 77
	26, 28, 27, // 26 80
	28, 29, 27, // 27 83
	28, 30, 29, // 28 86
	30, 31, 29, // 29 89
	30, 32, 31, // 30 92
	32, 33, 31, // 31 95
	32, 34, 33, // 32 98
	34, 35, 33, // 33 101
	34, 36, 35, // 34 104
	36, 37, 35, // 35 107
	36, 38, 37, // 36 110
	38, 39, 37, // 37 113
	38, 0, 39, // 38 116
	0, 3, 39, // 39 119
	3, 2, 41, // 40 122
	2, 40, 41, // 41 125
	2, 5, 40, // 42 128
	5, 42, 40, // 43 131
	5, 7, 42, // 44 134
	7, 43, 42, // 45 137
	7, 9, 43, // 46 140
	9, 44, 43, // 47 143
	9, 11, 44, // 48 146
	11, 45, 44, // 49 149
	11, 13, 45, // 50 152
	13, 46, 45, // 51 155
	13, 15, 46, // 52 158
	15, 47, 46, // 53 161
	15, 17, 47, // 54 164
	17, 48, 47, // 55 167
	17, 19, 48, // 56 170
	19, 49, 48, // 57 173
	19, 21, 49, // 58 176
	21, 50, 49, // 59 179
	21, 23, 50, // 60 182
	23, 51, 50, // 61 185
	23, 25, 51, // 62 188
	25, 52, 51, // 63 191
	25, 27, 52, // 64 194
	27, 53, 52, // 65 197
	27, 29, 53, // 66 200
	29, 54, 53, // 67 203
	29, 31, 54, // 68 206
	31, 55, 54, // 69 209
	31, 33, 55, // 70 212
	33, 56, 55, // 71 215
	33, 35, 56, // 72 218
	35, 57, 56, // 73 221
	35, 37, 57, // 74 224
	37, 58, 57, // 75 227
	37, 39, 58, // 76 230
	39, 59, 58, // 77 233
	39, 3, 59, // 78 236
	3, 41, 59, // 79 239
	41, 40, 61, // 80 242
	40, 60, 61, // 81 245
	40, 42, 60, // 82 248
	42, 62, 60, // 83 251
	42, 43, 62, // 84 254
	43, 63, 62, // 85 257
	43, 44, 63, // 86 260
	44, 64, 63, // 87 263
	44, 45, 64, // 88 266
	45, 65, 64, // 89 269
	45, 46, 65, // 90 272
	46, 66, 65, // 91 275
	46, 47, 66, // 92 278
	47, 67, 66, // 93 281
	47, 48, 67, // 94 284
	48, 68, 67, // 95 287
	48, 49, 68, // 96 290
	49, 69, 68, // 97 293
	49, 50, 69, // 98 296
	50, 70, 69, // 99 299
	50, 51, 70, // 100 302
	51, 71, 70, // 101 305
	51, 52, 71, // 102 308
	52, 72, 71, // 103 311
	52, 53, 72, // 104 314
	53, 73, 72, // 105 317
	53, 54, 73, // 106 320
	54, 74, 73, // 107 323
	54, 55, 74, // 108 326
	55, 75, 74, // 109 329
	55, 56, 75, // 110 332
	56, 76, 75, // 111 335
	56, 57, 76, // 112 338
	57, 77, 76, // 113 341
	57, 58, 77, // 114 344
	58, 78, 77, // 115 347
	58, 59, 78, // 116 350
	59, 79, 78, // 117 353
	59, 41, 79, // 118 356
	41, 61, 79, // 119 359
	61, 60, 81, // 120 362
	60, 80, 81, // 121 365
	60, 62, 80, // 122 368
	62, 82, 80, // 123 371
	62, 63, 82, // 124 374
	63, 83, 82, // 125 377
	63, 64, 83, // 126 380
	64, 84, 83, // 127 383
	64, 65, 84, // 128 386
	65, 85, 84, // 129 389
	65, 66, 85, // 130 392
	66, 86, 85, // 131 395
	66, 67, 86, // 132 398
	67, 87, 86, // 133 401
	67, 68, 87, // 134 404
	68, 88, 87, // 135 407
	68, 69, 88, // 136 410
	69, 89, 88, // 137 413
	69, 70, 89, // 138 416
	70, 90, 89, // 139 419
	70, 71, 90, // 140 422
	71, 91, 90, // 141 425
	71, 72, 91, // 142 428
	72, 92, 91, // 143 431
	72, 73, 92, // 144 434
	73, 93, 92, // 145 437
	73, 74, 93, // 146 440
	74, 94, 93, // 147 443
	74, 75, 94, // 148 446
	75, 95, 94, // 149 449
	75, 76, 95, // 150 452
	76, 96, 95, // 151 455
	76, 77, 96, // 152 458
	77, 97, 96, // 153 461
	77, 78, 97, // 154 464
	78, 98, 97, // 155 467
	78, 79, 98, // 156 470
	79, 99, 98, // 157 473
	79, 61, 99, // 158 476
	61, 81, 99, // 159 479
	81, 80, 101, // 160 482
	80, 100, 101, // 161 485
	80, 82, 100, // 162 488
	82, 102, 100, // 163 491
	82, 83, 102, // 164 494
	83, 103, 102, // 165 497
	83, 84, 103, // 166 500
	84, 104, 103, // 167 503
	84, 85, 104, // 168 506
	85, 105, 104, // 169 509
	85, 86, 105, // 170 512
	86, 106, 105, // 171 515
	86, 87, 106, // 172 518
	87, 107, 106, // 173 521
	87, 88, 107, // 174 524
	88, 108, 107, // 175 527
	88, 89, 108, // 176 530
	89, 109, 108, // 177 533
	89, 90, 109, // 178 536
	90, 110, 109, // 179 539
	90, 91, 110, // 180 542
	91, 111, 110, // 181 545
	91, 92, 111, // 182 548
	92, 112, 111, // 183 551
	92, 93, 112, // 184 554
	93, 113, 112, // 185 557
	93, 94, 113, // 186 560
	94, 114, 113, // 187 563
	94, 95, 114, // 188 566
	95, 115, 114, // 189 569
	95, 96, 115, // 190 572
	96, 116, 115, // 191 575
	96, 97, 116, // 192 578
	97, 117, 116, // 193 581
	97, 98, 117, // 194 584
	98, 118, 117, // 195 587
	98, 99, 118, // 196 590
	99, 119, 118, // 197 593
	99, 81, 119, // 198 596
	81, 101, 119, // 199 599
	101, 100, 121, // 200 602
	100, 120, 121, // 201 605
	100, 102, 120, // 202 608
	102, 122, 120, // 203 611
	102, 103, 122, // 204 614
	103, 123, 122, // 205 617
	103, 104, 123, // 206 620
	104, 124, 123, // 207 623
	104, 105, 124, // 208 626
	105, 125, 124, // 209 629
	105, 106, 125, // 210 632
	106, 126, 125, // 211 635
	106, 107, 126, // 212 638
	107, 127, 126, // 213 641
	107, 108, 127, // 214 644
	108, 128, 127, // 215 647
	108, 109, 128, // 216 650
	109, 129, 128, // 217 653
	109, 110, 129, // 218 656
	110, 130, 129, // 219 659
	110, 111, 130, // 220 662
	111, 131, 130, // 221 665
	111, 112, 131, // 222 668
	112, 132, 131, // 223 671
	112, 113, 132, // 224 674
	113, 133, 132, // 225 677
	113, 114, 133, // 226 680
	114, 134, 133, // 227 683
	114, 115, 134, // 228 686
	115, 135, 134, // 229 689
	115, 116, 135, // 230 692
	116, 136, 135, // 231 695
	116, 117, 136, // 232 698
	117, 137, 136, // 233 701
	117, 118, 137, // 234 704
	118, 138, 137, // 235 707
	118, 119, 138, // 236 710
	119, 139, 138, // 237 713
	119, 101, 139, // 238 716
	101, 121, 139, // 239 719
	121, 120, 141, // 240 722
	120, 140, 141, // 241 725
	120, 122, 140, // 242 728
	122, 142, 140, // 243 731
	122, 123, 142, // 244 734
	123, 143, 142, // 245 737
	123, 124, 143, // 246 740
	124, 144, 143, // 247 743
	124, 125, 144, // 248 746
	125, 145, 144, // 249 749
	125, 126, 145, // 250 752
	126, 146, 145, // 251 755
	126, 127, 146, // 252 758
	127, 147, 146, // 253 761
	127, 128, 147, // 254 764
	128, 148, 147, // 255 767
	128, 129, 148, // 256 770
	129, 149, 148, // 257 773
	129, 130, 149, // 258 776
	130, 150, 149, // 259 779
	130, 131, 150, // 260 782
	131, 151, 150, // 261 785
	131, 132, 151, // 262 788
	132, 152, 151, // 263 791
	132, 133, 152, // 264 794
	133, 153, 152, // 265 797
	133, 134, 153, // 266 800
	134, 154, 153, // 267 803
	134, 135, 154, // 268 806
	135, 155, 154, // 269 809
	135, 136, 155, // 270 812
	136, 156, 155, // 271 815
	136, 137, 156, // 272 818
	137, 157, 156, // 273 821
	137, 138, 157, // 274 824
	138, 158, 157, // 275 827
	138, 139, 158, // 276 830
	139, 159, 158, // 277 833
	139, 121, 159, // 278 836
	121, 141, 159, // 279 839
	141, 140, 161, // 280 842
	140, 160, 161, // 281 845
	140, 142, 160, // 282 848
	142, 162, 160, // 283 851
	142, 143, 162, // 284 854
	143, 163, 162, // 285 857
	143, 144, 163, // 286 860
	144, 164, 163, // 287 863
	144, 145, 164, // 288 866
	145, 165, 164, // 289 869
	145, 146, 165, // 290 872
	146, 166, 165, // 291 875
	146, 147, 166, // 292 878
	147, 167, 166, // 293 881
	147, 148, 167, // 294 884
	148, 168, 167, // 295 887
	148, 149, 168, // 296 890
	149, 169, 168, // 297 893
	149, 150, 169, // 298 896
	150, 170, 169, // 299 899
	150, 151, 170, // 300 902
	151, 171, 170, // 301 905
	151, 152, 171, // 302 908
	152, 172, 171, // 303 911
	152, 153, 172, // 304 914
	153, 173, 172, // 305 917
	153, 154, 173, // 306 920
	154, 174, 173, // 307 923
	154, 155, 174, // 308 926
	155, 175, 174, // 309 929
	155, 156, 175, // 310 932
	156, 176, 175, // 311 935
	156, 157, 176, // 312 938
	157, 177, 176, // 313 941
	157, 158, 177, // 314 944
	158, 178, 177, // 315 947
	158, 159, 178, // 316 950
	159, 179, 178, // 317 953
	159, 141, 179, // 318 956
	141, 161, 179, // 319 959
	161, 160, 181, // 320 962
	160, 180, 181, // 321 965
	160, 162, 180, // 322 968
	162, 182, 180, // 323 971
	162, 163, 182, // 324 974
	163, 183, 182, // 325 977
	163, 164, 183, // 326 980
	164, 184, 183, // 327 983
	164, 165, 184, // 328 986
	165, 185, 184, // 329 989
	165, 166, 185, // 330 992
	166, 186, 185, // 331 995
	166, 167, 186, // 332 998
	167, 187, 186, // 333 1001
	167, 168, 187, // 334 1004
	168, 188, 187, // 335 1007
	168, 169, 188, // 336 1010
	169, 189, 188, // 337 1013
	169, 170, 189, // 338 1016
	170, 190, 189, // 339 1019
	170, 171, 190, // 340 1022
	171, 191, 190, // 341 1025
	171, 172, 191, // 342 1028
	172, 192, 191, // 343 1031
	172, 173, 192, // 344 1034
	173, 193, 192, // 345 1037
	173, 174, 193, // 346 1040
	174, 194, 193, // 347 1043
	174, 175, 194, // 348 1046
	175, 195, 194, // 349 1049
	175, 176, 195, // 350 1052
	176, 196, 195, // 351 1055
	176, 177, 196, // 352 1058
	177, 197, 196, // 353 1061
	177, 178, 197, // 354 1064
	178, 198, 197, // 355 1067
	178, 179, 198, // 356 1070
	179, 199, 198, // 357 1073
	179, 161, 199, // 358 1076
	161, 181, 199, // 359 1079
	181, 180, 201, // 360 1082
	180, 200, 201, // 361 1085
	180, 182, 200, // 362 1088
	182, 202, 200, // 363 1091
	182, 183, 202, // 364 1094
	183, 203, 202, // 365 1097
	183, 184, 203, // 366 1100
	184, 204, 203, // 367 1103
	184, 185, 204, // 368 1106
	185, 205, 204, // 369 1109
	185, 186, 205, // 370 1112
	186, 206, 205, // 371 1115
	186, 187, 206, // 372 1118
	187, 207, 206, // 373 1121
	187, 188, 207, // 374 1124
	188, 208, 207, // 375 1127
	188, 189, 208, // 376 1130
	189, 209, 208, // 377 1133
	189, 190, 209, // 378 1136
	190, 210, 209, // 379 1139
	190, 191, 210, // 380 1142
	191, 211, 210, // 381 1145
	191, 192, 211, // 382 1148
	192, 212, 211, // 383 1151
	192, 193, 212, // 384 1154
	193, 213, 212, // 385 1157
	193, 194, 213, // 386 1160
	194, 214, 213, // 387 1163
	194, 195, 214, // 388 1166
	195, 215, 214, // 389 1169
	195, 196, 215, // 390 1172
	196, 216, 215, // 391 1175
	196, 197, 216, // 392 1178
	197, 217, 216, // 393 1181
	197, 198, 217, // 394 1184
	198, 218, 217, // 395 1187
	198, 199, 218, // 396 1190
	199, 219, 218, // 397 1193
	199, 181, 219, // 398 1196
	181, 201, 219, // 399 1199
	201, 200, 221, // 400 1202
	200, 220, 221, // 401 1205
	200, 202, 220, // 402 1208
	202, 222, 220, // 403 1211
	202, 203, 222, // 404 1214
	203, 223, 222, // 405 1217
	203, 204, 223, // 406 1220
	204, 224, 223, // 407 1223
	204, 205, 224, // 408 1226
	205, 225, 224, // 409 1229
	205, 206, 225, // 410 1232
	206, 226, 225, // 411 1235
	206, 207, 226, // 412 1238
	207, 227, 226, // 413 1241
	207, 208, 227, // 414 1244
	208, 228, 227, // 415 1247
	208, 209, 228, // 416 1250
	209, 229, 228, // 417 1253
	209, 210, 229, // 418 1256
	210, 230, 229, // 419 1259
	210, 211, 230, // 420 1262
	211, 231, 230, // 421 1265
	211, 212, 231, // 422 1268
	212, 232, 231, // 423 1271
	212, 213, 232, // 424 1274
	213, 233, 232, // 425 1277
	213, 214, 233, // 426 1280
	214, 234, 233, // 427 1283
	214, 215, 234, // 428 1286
	215, 235, 234, // 429 1289
	215, 216, 235, // 430 1292
	216, 236, 235, // 431 1295
	216, 217, 236, // 432 1298
	217, 237, 236, // 433 1301
	217, 218, 237, // 434 1304
	218, 238, 237, // 435 1307
	218, 219, 238, // 436 1310
	219, 239, 238, // 437 1313
	219, 201, 239, // 438 1316
	201, 221, 239, // 439 1319
	221, 220, 241, // 440 1322
	220, 240, 241, // 441 1325
	220, 222, 240, // 442 1328
	222, 242, 240, // 443 1331
	222, 223, 242, // 444 1334
	223, 243, 242, // 445 1337
	223, 224, 243, // 446 1340
	224, 244, 243, // 447 1343
	224, 225, 244, // 448 1346
	225, 245, 244, // 449 1349
	225, 226, 245, // 450 1352
	226, 246, 245, // 451 1355
	226, 227, 246, // 452 1358
	227, 247, 246, // 453 1361
	227, 228, 247, // 454 1364
	228, 248, 247, // 455 1367
	228, 229, 248, // 456 1370
	229, 249, 248, // 457 1373
	229, 230, 249, // 458 1376
	230, 250, 249, // 459 1379
	230, 231, 250, // 460 1382
	231, 251, 250, // 461 1385
	231, 232, 251, // 462 1388
	232, 252, 251, // 463 1391
	232, 233, 252, // 464 1394
	233, 253, 252, // 465 1397
	233, 234, 253, // 466 1400
	234, 254, 253, // 467 1403
	234, 235, 254, // 468 1406
	235, 255, 254, // 469 1409
	235, 236, 255, // 470 1412
	236, 256, 255, // 471 1415
	236, 237, 256, // 472 1418
	237, 257, 256, // 473 1421
	237, 238, 257, // 474 1424
	238, 258, 257, // 475 1427
	238, 239, 258, // 476 1430
	239, 259, 258, // 477 1433
	239, 221, 259, // 478 1436
	221, 241, 259, // 479 1439
	241, 240, 261, // 480 1442
	240, 260, 261, // 481 1445
	240, 242, 260, // 482 1448
	242, 262, 260, // 483 1451
	242, 243, 262, // 484 1454
	243, 263, 262, // 485 1457
	243, 244, 263, // 486 1460
	244, 264, 263, // 487 1463
	244, 245, 264, // 488 1466
	245, 265, 264, // 489 1469
	245, 246, 265, // 490 1472
	246, 266, 265, // 491 1475
	246, 247, 266, // 492 1478
	247, 267, 266, // 493 1481
	247, 248, 267, // 494 1484
	248, 268, 267, // 495 1487
	248, 249, 268, // 496 1490
	249, 269, 268, // 497 1493
	249, 250, 269, // 498 1496
	250, 270, 269, // 499 1499
	250, 251, 270, // 500 1502
	251, 271, 270, // 501 1505
	251, 252, 271, // 502 1508
	252, 272, 271, // 503 1511
	252, 253, 272, // 504 1514
	253, 273, 272, // 505 1517
	253, 254, 273, // 506 1520
	254, 274, 273, // 507 1523
	254, 255, 274, // 508 1526
	255, 275, 274, // 509 1529
	255, 256, 275, // 510 1532
	256, 276, 275, // 511 1535
	256, 257, 276, // 512 1538
	257, 277, 276, // 513 1541
	257, 258, 277, // 514 1544
	258, 278, 277, // 515 1547
	258, 259, 278, // 516 1550
	259, 279, 278, // 517 1553
	259, 241, 279, // 518 1556
	241, 261, 279, // 519 1559
	261, 260, 281, // 520 1562
	260, 280, 281, // 521 1565
	260, 262, 280, // 522 1568
	262, 282, 280, // 523 1571
	262, 263, 282, // 524 1574
	263, 283, 282, // 525 1577
	263, 264, 283, // 526 1580
	264, 284, 283, // 527 1583
	264, 265, 284, // 528 1586
	265, 285, 284, // 529 1589
	265, 266, 285, // 530 1592
	266, 286, 285, // 531 1595
	266, 267, 286, // 532 1598
	267, 287, 286, // 533 1601
	267, 268, 287, // 534 1604
	268, 288, 287, // 535 1607
	268, 269, 288, // 536 1610
	269, 289, 288, // 537 1613
	269, 270, 289, // 538 1616
	270, 290, 289, // 539 1619
	270, 271, 290, // 540 1622
	271, 291, 290, // 541 1625
	271, 272, 291, // 542 1628
	272, 292, 291, // 543 1631
	272, 273, 292, // 544 1634
	273, 293, 292, // 545 1637
	273, 274, 293, // 546 1640
	274, 294, 293, // 547 1643
	274, 275, 294, // 548 1646
	275, 295, 294, // 549 1649
	275, 276, 295, // 550 1652
	276, 296, 295, // 551 1655
	276, 277, 296, // 552 1658
	277, 297, 296, // 553 1661
	277, 278, 297, // 554 1664
	278, 298, 297, // 555 1667
	278, 279, 298, // 556 1670
	279, 299, 298, // 557 1673
	279, 261, 299, // 558 1676
	261, 281, 299, // 559 1679
	281, 280, 301, // 560 1682
	280, 300, 301, // 561 1685
	280, 282, 300, // 562 1688
	282, 302, 300, // 563 1691
	282, 283, 302, // 564 1694
	283, 303, 302, // 565 1697
	283, 284, 303, // 566 1700
	284, 304, 303, // 567 1703
	284, 285, 304, // 568 1706
	285, 305, 304, // 569 1709
	285, 286, 305, // 570 1712
	286, 306, 305, // 571 1715
	286, 287, 306, // 572 1718
	287, 307, 306, // 573 1721
	287, 288, 307, // 574 1724
	288, 308, 307, // 575 1727
	288, 289, 308, // 576 1730
	289, 309, 308, // 577 1733
	289, 290, 309, // 578 1736
	290, 310, 309, // 579 1739
	290, 291, 310, // 580 1742
	291, 311, 310, // 581 1745
	291, 292, 311, // 582 1748
	292, 312, 311, // 583 1751
	292, 293, 312, // 584 1754
	293, 313, 312, // 585 1757
	293, 294, 313, // 586 1760
	294, 314, 313, // 587 1763
	294, 295, 314, // 588 1766
	295, 315, 314, // 589 1769
	295, 296, 315, // 590 1772
	296, 316, 315, // 591 1775
	296, 297, 316, // 592 1778
	297, 317, 316, // 593 1781
	297, 298, 317, // 594 1784
	298, 318, 317, // 595 1787
	298, 299, 318, // 596 1790
	299, 319, 318, // 597 1793
	299, 281, 319, // 598 1796
	281, 301, 319, // 599 1799
	301, 300, 321, // 600 1802
	300, 320, 321, // 601 1805
	300, 302, 320, // 602 1808
	302, 322, 320, // 603 1811
	302, 303, 322, // 604 1814
	303, 323, 322, // 605 1817
	303, 304, 323, // 606 1820
	304, 324, 323, // 607 1823
	304, 305, 324, // 608 1826
	305, 325, 324, // 609 1829
	305, 306, 325, // 610 1832
	306, 326, 325, // 611 1835
	306, 307, 326, // 612 1838
	307, 327, 326, // 613 1841
	307, 308, 327, // 614 1844
	308, 328, 327, // 615 1847
	308, 309, 328, // 616 1850
	309, 329, 328, // 617 1853
	309, 310, 329, // 618 1856
	310, 330, 329, // 619 1859
	310, 311, 330, // 620 1862
	311, 331, 330, // 621 1865
	311, 312, 331, // 622 1868
	312, 332, 331, // 623 1871
	312, 313, 332, // 624 1874
	313, 333, 332, // 625 1877
	313, 314, 333, // 626 1880
	314, 334, 333, // 627 1883
	314, 315, 334, // 628 1886
	315, 335, 334, // 629 1889
	315, 316, 335, // 630 1892
	316, 336, 335, // 631 1895
	316, 317, 336, // 632 1898
	317, 337, 336, // 633 1901
	317, 318, 337, // 634 1904
	318, 338, 337, // 635 1907
	318, 319, 338, // 636 1910
	319, 339, 338, // 637 1913
	319, 301, 339, // 638 1916
	301, 321, 339, // 639 1919
	321, 320, 341, // 640 1922
	320, 340, 341, // 641 1925
	320, 322, 340, // 642 1928
	322, 342, 340, // 643 1931
	322, 323, 342, // 644 1934
	323, 343, 342, // 645 1937
	323, 324, 343, // 646 1940
	324, 344, 343, // 647 1943
	324, 325, 344, // 648 1946
	325, 345, 344, // 649 1949
	325, 326, 345, // 650 1952
	326, 346, 345, // 651 1955
	326, 327, 346, // 652 1958
	327, 347, 346, // 653 1961
	327, 328, 347, // 654 1964
	328, 348, 347, // 655 1967
	328, 329, 348, // 656 1970
	329, 349, 348, // 657 1973
	329, 330, 349, // 658 1976
	330, 350, 349, // 659 1979
	330, 331, 350, // 660 1982
	331, 351, 350, // 661 1985
	331, 332, 351, // 662 1988
	332, 352, 351, // 663 1991
	332, 333, 352, // 664 1994
	333, 353, 352, // 665 1997
	333, 334, 353, // 666 2000
	334, 354, 353, // 667 2003
	334, 335, 354, // 668 2006
	335, 355, 354, // 669 2009
	335, 336, 355, // 670 2012
	336, 356, 355, // 671 2015
	336, 337, 356, // 672 2018
	337, 357, 356, // 673 2021
	337, 338, 357, // 674 2024
	338, 358, 357, // 675 2027
	338, 339, 358, // 676 2030
	339, 359, 358, // 677 2033
	339, 321, 359, // 678 2036
	321, 341, 359, // 679 2039
	341, 340, 361, // 680 2042
	340, 360, 361, // 681 2045
	340, 342, 360, // 682 2048
	342, 362, 360, // 683 2051
	342, 343, 362, // 684 2054
	343, 363, 362, // 685 2057
	343, 344, 363, // 686 2060
	344, 364, 363, // 687 2063
	344, 345, 364, // 688 2066
	345, 365, 364, // 689 2069
	345, 346, 365, // 690 2072
	346, 366, 365, // 691 2075
	346, 347, 366, // 692 2078
	347, 367, 366, // 693 2081
	347, 348, 367, // 694 2084
	348, 368, 367, // 695 2087
	348, 349, 368, // 696 2090
	349, 369, 368, // 697 2093
	349, 350, 369, // 698 2096
	350, 370, 369, // 699 2099
	350, 351, 370, // 700 2102
	351, 371, 370, // 701 2105
	351, 352, 371, // 702 2108
	352, 372, 371, // 703 2111
	352, 353, 372, // 704 2114
	353, 373, 372, // 705 2117
	353, 354, 373, // 706 2120
	354, 374, 373, // 707 2123
	354, 355, 374, // 708 2126
	355, 375, 374, // 709 2129
	355, 356, 375, // 710 2132
	356, 376, 375, // 711 2135
	356, 357, 376, // 712 2138
	357, 377, 376, // 713 2141
	357, 358, 377, // 714 2144
	358, 378, 377, // 715 2147
	358, 359, 378, // 716 2150
	359, 379, 378, // 717 2153
	359, 341, 379, // 718 2156
	341, 361, 379, // 719 2159
	380, 381, 382, // 720 2162
	383, 380, 382, // 721 2165
	384, 383, 382, // 722 2168
	385, 384, 382, // 723 2171
	386, 385, 382, // 724 2174
	387, 386, 382, // 725 2177
	388, 387, 382, // 726 2180
	389, 388, 382, // 727 2183
	390, 389, 382, // 728 2186
	391, 390, 392, // 729 2189
	392, 390, 382, // 730 2192
	393, 391, 394, // 731 2195
	391, 392, 394, // 732 2198
	393, 394, 395, // 733 2201
	395, 394, 382, // 734 2204
	396, 395, 382, // 735 2207
	397, 396, 382, // 736 2210
	398, 397, 382, // 737 2213
	399, 398, 382, // 738 2216
	400, 399, 382, // 739 2219
	401, 400, 382, // 740 2222
	402, 401, 382, // 741 2225
	381, 402, 382, // 742 2228
	361, 360, 403, // 743 2231
	360, 362, 403, // 744 2234
	362, 363, 403, // 745 2237
	363, 364, 403, // 746 2240
	364, 365, 403, // 747 2243
	365, 366, 403, // 748 2246
	366, 367, 403, // 749 2249
	367, 368, 403, // 750 2252
	368, 369, 403, // 751 2255
	369, 370, 403, // 752 2258
	370, 371, 403, // 753 2261
	371, 372, 403, // 754 2264
	372, 373, 403, // 755 2267
	373, 374, 403, // 756 2270
	374, 375, 403, // 757 2273
	375, 376, 403, // 758 2276
	376, 377, 403, // 759 2279
	377, 378, 403, // 760 2282
	378, 379, 403, // 761 2285
	379, 361, 403, // 762 2288
	404, 405, 407, // 763 2291
	405, 406, 407, // 764 2294
	408, 404, 409, // 765 2297
	404, 407, 409, // 766 2300
	410, 408, 411, // 767 2303
	408, 409, 411, // 768 2306
	412, 410, 413, // 769 2309
	410, 411, 413, // 770 2312
	414, 412, 415, // 771 2315
	412, 413, 415, // 772 2318
	416, 414, 417, // 773 2321
	414, 415, 417, // 774 2324
	418, 416, 419, // 775 2327
	416, 417, 419, // 776 2330
	420, 418, 421, // 777 2333
	418, 419, 421, // 778 2336
	422, 420, 423, // 779 2339
	420, 421, 423, // 780 2342
	424, 422, 425, // 781 2345
	422, 423, 425, // 782 2348
	426, 424, 427, // 783 2351
	424, 425, 427, // 784 2354
	428, 426, 429, // 785 2357
	426, 427, 429, // 786 2360
	430, 428, 431, // 787 2363
	428, 429, 431, // 788 2366
	432, 430, 433, // 789 2369
	430, 431, 433, // 790 2372
	434, 432, 435, // 791 2375
	432, 433, 435, // 792 2378
	436, 434, 437, // 793 2381
	434, 435, 437, // 794 2384
	438, 436, 439, // 795 2387
	436, 437, 439, // 796 2390
	440, 438, 441, // 797 2393
	438, 439, 441, // 798 2396
	442, 440, 443, // 799 2399
	440, 441, 443, // 800 2402
	405, 442, 406, // 801 2405
	442, 443, 406, // 802 2408
DX3DINDEX_END
#endif

#else
#define index_Balloon___mBalloon_0	NULL
#endif




#if ((PT_Balloon___mBalloon_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP) ) || (PT_Balloon___mBalloon_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Balloon___mBalloon_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Balloon___mBalloon_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_VERTEXSTRIP) ) || (PT_Balloon___mBalloon_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Balloon___mBalloon_0_VERTEXSTRIP 	NULL
#define vertexbuff_Balloon___mBalloon_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_Balloon___mBalloonString_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Balloon___mBalloonString_1 == PT_TRILIST ) || ((PT_Balloon___mBalloonString_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP))  || (PT_Balloon___mBalloonString_1 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERT_START( VN, vertexbuff_Balloon___mBalloonString_1 )
DX3DVERT( -0.0356739, -0.975967, -0.0192473 ) DX3DVNORM( -0.144759, -0.98789, 0.0558411 )  //0
DX3DVERT( -0.0390998, -0.975716, -0.0236754 ) DX3DVNORM( -0.144759, -0.98789, 0.0558411 )  //1
DX3DVERT( -0.0245592, -0.978199, -0.0299186 ) DX3DVNORM( -0.144759, -0.98789, 0.0558411 )  //2
DX3DVERT( -0.00835046, -0.556654, 0.00960525 ) DX3DVNORM( -0.965398, 0.174728, 0.193591 )  //3
DX3DVERT( -0.00862979, -0.556402, 0.0027805 ) DX3DVNORM( -0.965398, 0.174728, 0.193591 )  //4
DX3DVERT( -0.0180848, -0.61132, 0.0104021 ) DX3DVNORM( -0.905103, 0.273364, 0.325669 )  //5
DX3DVERT( -0.0158574, -0.610693, 0.0157385 ) DX3DVNORM( -0.905103, 0.273364, 0.325669 )  //6
DX3DVERT( -0.00862979, -0.556402, 0.0027805 ) DX3DVNORM( -0.35335, -0.0632908, -0.933348 )  //7
DX3DVERT( -7.08106e-008, -0.558886, -5.6443e-008 ) DX3DVNORM( -0.35335, -0.0632908, -0.933348 )  //8
DX3DVERT( -0.00587955, -0.611897, 0.00550243 ) DX3DVNORM( -0.368569, 0.0153246, -0.929474 )  //9
DX3DVERT( -0.0180848, -0.61132, 0.0104021 ) DX3DVNORM( -0.368569, 0.0153246, -0.929474 )  //10
DX3DVERT( -7.08106e-008, -0.558886, -5.6443e-008 ) DX3DVNORM( 0.732913, -0.0177277, 0.680091 )  //11
DX3DVERT( -0.00835046, -0.556654, 0.00960525 ) DX3DVNORM( 0.732913, -0.0177277, 0.680091 )  //12
DX3DVERT( -0.0158574, -0.610693, 0.0157385 ) DX3DVNORM( 0.709617, -0.121398, 0.69405 )  //13
DX3DVERT( -0.00587955, -0.611897, 0.00550243 ) DX3DVNORM( 0.709617, -0.121398, 0.69405 )  //14
DX3DVERT( -0.0364888, -0.663034, 0.0188165 ) DX3DVNORM( -0.816252, 0.168302, 0.552636 )  //15
DX3DVERT( -0.0399267, -0.663121, 0.0143965 ) DX3DVNORM( -0.816252, 0.168302, 0.552636 )  //16
DX3DVERT( -0.0482478, -0.72269, 0.00101623 ) DX3DVNORM( -0.762238, -0.220349, 0.608637 )  //17
DX3DVERT( -0.0449427, -0.724009, 0.00482192 ) DX3DVNORM( -0.762238, -0.220349, 0.608637 )  //18
DX3DVERT( -0.0399267, -0.663121, 0.0143965 ) DX3DVNORM( -0.377595, 0.1724, -0.90978 )  //19
DX3DVERT( -0.0253028, -0.663246, 0.00809723 ) DX3DVNORM( -0.377595, 0.1724, -0.90978 )  //20
DX3DVERT( -0.0334359, -0.720806, -0.00441848 ) DX3DVNORM( -0.365169, 0.287109, -0.885562 )  //21
DX3DVERT( -0.0482478, -0.72269, 0.00101623 ) DX3DVNORM( -0.365169, 0.287109, -0.885562 )  //22
DX3DVERT( -0.0253028, -0.663246, 0.00809723 ) DX3DVNORM( 0.668068, -0.237315, 0.705242 )  //23
DX3DVERT( -0.0364888, -0.663034, 0.0188165 ) DX3DVNORM( 0.668068, -0.237315, 0.705242 )  //24
DX3DVERT( -0.0449427, -0.724009, 0.00482192 ) DX3DVNORM( 0.656302, -0.226725, 0.719627 )  //25
DX3DVERT( -0.0334359, -0.720806, -0.00441848 ) DX3DVNORM( 0.656302, -0.226725, 0.719627 )  //26
DX3DVERT( -0.0334058, -0.781321, -0.0212586 ) DX3DVNORM( -0.710441, -0.406332, 0.574602 )  //27
DX3DVERT( -0.0368657, -0.78203, -0.0256638 ) DX3DVNORM( -0.710441, -0.406332, 0.574602 )  //28
DX3DVERT( -0.0214004, -0.840747, -0.0491396 ) DX3DVNORM( -0.754989, -0.230208, 0.614 )  //29
DX3DVERT( -0.0179161, -0.8409, -0.0448375 ) DX3DVNORM( -0.754989, -0.230208, 0.614 )  //30
DX3DVERT( -0.0368657, -0.78203, -0.0256638 ) DX3DVNORM( -0.365496, 0.292078, -0.8838 )  //31
DX3DVERT( -0.0222731, -0.783041, -0.031942 ) DX3DVNORM( -0.365496, 0.292078, -0.8838 )  //32
DX3DVERT( -0.0068437, -0.84053, -0.055269 ) DX3DVNORM( -0.384322, 0.150427, -0.910861 )  //33
DX3DVERT( -0.0214004, -0.840747, -0.0491396 ) DX3DVNORM( -0.384322, 0.150427, -0.910861 )  //34
DX3DVERT( -0.0222731, -0.783041, -0.031942 ) DX3DVNORM( 0.668678, -0.156373, 0.726923 )  //35
DX3DVERT( -0.0334058, -0.781321, -0.0212586 ) DX3DVNORM( 0.668678, -0.156373, 0.726923 )  //36
DX3DVERT( -0.0179161, -0.8409, -0.0448375 ) DX3DVNORM( 0.685658, -0.0678753, 0.724753 )  //37
DX3DVERT( -0.0068437, -0.84053, -0.055269 ) DX3DVNORM( 0.685658, -0.0678753, 0.724753 )  //38
DX3DVERT( -0.0173709, -0.891409, -0.0470652 ) DX3DVNORM( -0.775021, 0.159841, 0.611386 )  //39
DX3DVERT( -0.0208092, -0.891508, -0.0514849 ) DX3DVNORM( -0.775021, 0.159841, 0.611386 )  //40
DX3DVERT( -0.0390998, -0.975716, -0.0236754 ) DX3DVNORM( -0.737096, 0.350307, 0.577905 )  //41
DX3DVERT( -0.0356739, -0.975967, -0.0192473 ) DX3DVNORM( -0.737096, 0.350307, 0.577905 )  //42
DX3DVERT( -0.0208092, -0.891508, -0.0514849 ) DX3DVNORM( -0.399938, -0.0834059, -0.912739 )  //43
DX3DVERT( -0.00618589, -0.891648, -0.0577838 ) DX3DVNORM( -0.399938, -0.0834059, -0.912739 )  //44
DX3DVERT( -0.0245592, -0.978199, -0.0299186 ) DX3DVNORM( -0.402192, -0.204605, -0.8924 )  //45
DX3DVERT( -0.0390998, -0.975716, -0.0236754 ) DX3DVNORM( -0.402192, -0.204605, -0.8924 )  //46
DX3DVERT( -0.00618589, -0.891648, -0.0577838 ) DX3DVNORM( 0.692703, 0.0290274, 0.720638 )  //47
DX3DVERT( -0.0173709, -0.891409, -0.0470652 ) DX3DVNORM( 0.692703, 0.0290274, 0.720638 )  //48
DX3DVERT( -0.0356739, -0.975967, -0.0192473 ) DX3DVNORM( 0.694617, 0.0836295, 0.714502 )  //49
DX3DVERT( -0.0245592, -0.978199, -0.0299186 ) DX3DVNORM( 0.694617, 0.0836295, 0.714502 )  //50
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Balloon___mBalloonString_1 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Balloon___mBalloonString_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 51 )
DX3DVERTEX_END


#else
#define vertex_Balloon___mBalloonString_1	NULL
#define vertexbuff_Balloon___mBalloonString_1	NULL
#endif




#if ((PT_Balloon___mBalloonString_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Balloon___mBalloonString_1 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DINDEX_START( index_Balloon___mBalloonString_1 )
	0, 1, 2, // 0 2
	3, 4, 6, // 1 5
	4, 5, 6, // 2 8
	7, 8, 10, // 3 11
	8, 9, 10, // 4 14
	11, 12, 14, // 5 17
	12, 13, 14, // 6 20
	15, 16, 18, // 7 23
	16, 17, 18, // 8 26
	19, 20, 22, // 9 29
	20, 21, 22, // 10 32
	23, 24, 26, // 11 35
	24, 25, 26, // 12 38
	27, 28, 30, // 13 41
	28, 29, 30, // 14 44
	31, 32, 34, // 15 47
	32, 33, 34, // 16 50
	35, 36, 38, // 17 53
	36, 37, 38, // 18 56
	39, 40, 42, // 19 59
	40, 41, 42, // 20 62
	43, 44, 46, // 21 65
	44, 45, 46, // 22 68
	47, 48, 50, // 23 71
	48, 49, 50, // 24 74
	6, 5, 15, // 25 77
	5, 16, 15, // 26 80
	10, 9, 19, // 27 83
	9, 20, 19, // 28 86
	14, 13, 23, // 29 89
	13, 24, 23, // 30 92
	18, 17, 27, // 31 95
	17, 28, 27, // 32 98
	22, 21, 31, // 33 101
	21, 32, 31, // 34 104
	26, 25, 35, // 35 107
	25, 36, 35, // 36 110
	30, 29, 39, // 37 113
	29, 40, 39, // 38 116
	34, 33, 43, // 39 119
	33, 44, 43, // 40 122
	38, 37, 47, // 41 125
	37, 48, 47, // 42 128
DX3DINDEX_END
#endif

#else
#define index_Balloon___mBalloonString_1	NULL
#endif




#if ((PT_Balloon___mBalloonString_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP) ) || (PT_Balloon___mBalloonString_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Balloon___mBalloonString_1_INDEXSTRIP 	NULL
#endif




#if ((PT_Balloon___mBalloonString_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_VERTEXSTRIP) ) || (PT_Balloon___mBalloonString_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Balloon___mBalloonString_1_VERTEXSTRIP 	NULL
#define vertexbuff_Balloon___mBalloonString_1_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Balloon__ )
DX3DMODEL_START( model_Balloon___mBalloon_0 )
DX3DMODEL_VERTEX( vertex_Balloon___mBalloon_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DMODEL_INDEX( index_Balloon___mBalloon_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 2409 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mBalloon )
DX3DMODEL_END
DX3DMODEL_START( model_Balloon___mBalloonString_1 )
DX3DMODEL_VERTEX( vertex_Balloon___mBalloonString_1 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DMODEL_INDEX( index_Balloon___mBalloonString_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 129 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mBalloonString )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Balloon__, 2305928201 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Balloon__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Missile__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mMissile )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 0.25, 0.25, 0.25 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_Missile___mMissile_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Missile___mMissile_0 == PT_TRILIST ) || ((PT_Missile___mMissile_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP))  || (PT_Missile___mMissile_0 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERT_START( VN, vertexbuff_Missile___mMissile_0 )
DX3DVERT( 0.0649393, -0.02103, -0.512661 ) DX3DVNORM( 0.951357, -0.308091, 5.29385e-008 )  //0
DX3DVERT( 0.0682596, 6.65188e-005, -0.512661 ) DX3DVNORM( 1, 0.000974041, 2.03501e-007 )  //1
DX3DVERT( 0.0682596, 6.63996e-005, -0.244472 ) DX3DVNORM( 0.999999, 0.000973879, 4.33885e-008 )  //2
DX3DVERT( 0.0649393, -0.0210302, -0.244472 ) DX3DVNORM( 0.951357, -0.308092, 9.392e-009 )  //3
DX3DVERT( 0.0648983, 0.0211565, -0.512661 ) DX3DVNORM( 0.950755, 0.309942, 2.25587e-007 )  //4
DX3DVERT( 0.0648982, 0.0211565, -0.244472 ) DX3DVNORM( 0.950755, 0.309942, 3.62497e-008 )  //5
DX3DVERT( 0.0551842, 0.0401757, -0.512661 ) DX3DVNORM( 0.890565, 0.454855, 1.59674e-007 )  //6
DX3DVERT( 0.0551842, 0.0401758, -0.244472 ) DX3DVNORM( 0.838351, 0.545131, -5.13084e-008 )  //7
DX3DVERT( 0.0759401, 0.0609722, -0.512661 ) DX3DVNORM( 0.706418, 0.707795, -5.59124e-007 )  //8
DX3DVERT( 0.0608242, 0.0760587, -0.512661 ) DX3DVNORM( 0.706418, 0.707795, -5.59124e-007 )  //9
DX3DVERT( 0.0608243, 0.0760588, -0.307188 ) DX3DVNORM( 0.706418, 0.707795, -5.59124e-007 )  //10
DX3DVERT( 0.0759402, 0.0609723, -0.307188 ) DX3DVNORM( 0.706418, 0.707795, -5.59124e-007 )  //11
DX3DVERT( 0.0400684, 0.0552626, -0.512661 ) DX3DVNORM( 0.453118, 0.891451, 8.63753e-007 )  //12
DX3DVERT( 0.0210302, 0.0649392, -0.512661 ) DX3DVNORM( 0.308087, 0.951358, 9.49948e-008 )  //13
DX3DVERT( 0.0210301, 0.0649393, -0.244472 ) DX3DVNORM( 0.30809, 0.951357, -2.21391e-008 )  //14
DX3DVERT( 0.0400682, 0.0552621, -0.244472 ) DX3DVNORM( 0.543496, 0.839411, 1.21601e-007 )  //15
DX3DVERT( -6.64406e-005, 0.0682594, -0.512661 ) DX3DVNORM( -0.000971422, 1, -6.6043e-007 )  //16
DX3DVERT( -6.64592e-005, 0.0682597, -0.244472 ) DX3DVNORM( -0.000972, 1, -2.79352e-007 )  //17
DX3DVERT( -0.0211566, 0.0648983, -0.512661 ) DX3DVNORM( -0.309941, 0.950756, -3.64062e-007 )  //18
DX3DVERT( -0.0211566, 0.0648983, -0.244472 ) DX3DVNORM( -0.309942, 0.950755, -1.23315e-007 )  //19
DX3DVERT( -0.0401758, 0.0551841, -0.512661 ) DX3DVNORM( -0.454861, 0.890562, -9.06611e-008 )  //20
DX3DVERT( -0.0401758, 0.0551841, -0.244472 ) DX3DVNORM( -0.545134, 0.838349, -2.3285e-008 )  //21
DX3DVERT( -0.0609723, 0.0759403, -0.512661 ) DX3DVNORM( -0.707795, 0.706418, 8.67264e-008 )  //22
DX3DVERT( -0.0760589, 0.0608243, -0.512661 ) DX3DVNORM( -0.707795, 0.706418, 8.67264e-008 )  //23
DX3DVERT( -0.0760587, 0.0608244, -0.307188 ) DX3DVNORM( -0.707795, 0.706418, 8.67264e-008 )  //24
DX3DVERT( -0.0609723, 0.0759402, -0.307188 ) DX3DVNORM( -0.707795, 0.706418, 8.67264e-008 )  //25
DX3DVERT( -0.0552622, 0.0400684, -0.512661 ) DX3DVNORM( -0.891448, 0.453122, -6.35932e-008 )  //26
DX3DVERT( -0.0649393, 0.02103, -0.512661 ) DX3DVNORM( -0.951357, 0.30809, -3.08395e-008 )  //27
DX3DVERT( -0.0649393, 0.0210303, -0.244472 ) DX3DVNORM( -0.951357, 0.308091, 3.57687e-008 )  //28
DX3DVERT( -0.0552623, 0.0400682, -0.244472 ) DX3DVNORM( -0.83941, 0.543499, 1.07454e-008 )  //29
DX3DVERT( -0.0682596, -6.65188e-005, -0.512661 ) DX3DVNORM( -0.999999, -0.000974576, 5.91409e-009 )  //30
DX3DVERT( -0.0682596, -6.63996e-005, -0.244472 ) DX3DVNORM( -0.999999, -0.000974271, 1.30024e-008 )  //31
DX3DVERT( -0.0648982, -0.0211565, -0.512661 ) DX3DVNORM( -0.950755, -0.309943, -8.67677e-008 )  //32
DX3DVERT( -0.0648982, -0.0211566, -0.244472 ) DX3DVNORM( -0.950755, -0.309942, -3.64797e-008 )  //33
DX3DVERT( -0.0551842, -0.0401756, -0.512661 ) DX3DVNORM( -0.890565, -0.454856, -1.80408e-007 )  //34
DX3DVERT( -0.0551841, -0.0401758, -0.244472 ) DX3DVNORM( -0.838351, -0.545131, -3.94946e-008 )  //35
DX3DVERT( -0.0759402, -0.0609723, -0.512661 ) DX3DVNORM( -0.706418, -0.707795, 4.23883e-007 )  //36
DX3DVERT( -0.0608243, -0.0760588, -0.512661 ) DX3DVNORM( -0.706418, -0.707795, 4.23883e-007 )  //37
DX3DVERT( -0.0608243, -0.0760587, -0.307188 ) DX3DVNORM( -0.706418, -0.707795, 4.23883e-007 )  //38
DX3DVERT( -0.0759401, -0.0609722, -0.307188 ) DX3DVNORM( -0.706418, -0.707795, 4.23883e-007 )  //39
DX3DVERT( -0.0400682, -0.0552621, -0.512661 ) DX3DVNORM( -0.453127, -0.891446, -2.0176e-007 )  //40
DX3DVERT( -0.0210302, -0.0649393, -0.512661 ) DX3DVNORM( -0.308093, -0.951356, 1.58656e-008 )  //41
DX3DVERT( -0.0210302, -0.0649393, -0.244472 ) DX3DVNORM( -0.308092, -0.951357, 7.10656e-009 )  //42
DX3DVERT( -0.0400682, -0.0552622, -0.244472 ) DX3DVNORM( -0.543499, -0.839409, -4.88993e-008 )  //43
DX3DVERT( 6.64555e-005, -0.0682597, -0.512661 ) DX3DVNORM( 0.000974539, -0.999999, 2.3498e-007 )  //44
DX3DVERT( 6.6448e-005, -0.0682596, -0.244472 ) DX3DVNORM( 0.00097415, -0.999999, 6.57862e-008 )  //45
DX3DVERT( 0.0211566, -0.0648982, -0.512661 ) DX3DVNORM( 0.309944, -0.950755, 1.28032e-007 )  //46
DX3DVERT( 0.0211566, -0.0648982, -0.244472 ) DX3DVNORM( 0.309943, -0.950755, 1.39115e-008 )  //47
DX3DVERT( 0.0401758, -0.055184, -0.512661 ) DX3DVNORM( 0.454858, -0.890564, 2.18374e-008 )  //48
DX3DVERT( 0.0401757, -0.0551841, -0.244472 ) DX3DVNORM( 0.545132, -0.83835, -1.56546e-008 )  //49
DX3DVERT( 0.0609723, -0.0759402, -0.512661 ) DX3DVNORM( 0.707796, -0.706416, -7.95887e-008 )  //50
DX3DVERT( 0.0760589, -0.0608242, -0.512661 ) DX3DVNORM( 0.707796, -0.706416, -7.95887e-008 )  //51
DX3DVERT( 0.0760587, -0.0608244, -0.307188 ) DX3DVNORM( 0.707796, -0.706416, -7.95887e-008 )  //52
DX3DVERT( 0.0609723, -0.0759402, -0.307188 ) DX3DVNORM( 0.707796, -0.706416, -7.95887e-008 )  //53
DX3DVERT( 0.0552622, -0.0400683, -0.512661 ) DX3DVNORM( 0.891448, -0.453123, -1.1471e-008 )  //54
DX3DVERT( 0.0552622, -0.0400682, -0.244472 ) DX3DVNORM( 0.83941, -0.543499, -2.01149e-008 )  //55
DX3DVERT( 0.0682596, 6.64536e-005, 0.0237174 ) DX3DVNORM( 0.999999, 0.000973558, -6.55245e-008 )  //56
DX3DVERT( 0.0649393, -0.0210302, 0.0237174 ) DX3DVNORM( 0.951357, -0.308092, -5.21803e-008 )  //57
DX3DVERT( 0.0648982, 0.0211566, 0.0237174 ) DX3DVNORM( 0.950755, 0.309942, -7.15508e-008 )  //58
DX3DVERT( 0.0551841, 0.0401757, 0.0237174 ) DX3DVNORM( 0.808444, 0.588573, -8.8522e-008 )  //59
DX3DVERT( 0.0400682, 0.0552622, 0.0237174 ) DX3DVNORM( 0.586997, 0.809589, -1.50554e-007 )  //60
DX3DVERT( 0.0210302, 0.0649393, 0.0237174 ) DX3DVNORM( 0.308092, 0.951357, -6.56602e-008 )  //61
DX3DVERT( -6.64368e-005, 0.0682596, 0.0237174 ) DX3DVNORM( -0.000973275, 0.999999, 1.21394e-007 )  //62
DX3DVERT( -0.0211566, 0.0648982, 0.0237174 ) DX3DVNORM( -0.309943, 0.950755, 1.32411e-007 )  //63
DX3DVERT( -0.0401757, 0.0551841, 0.0237174 ) DX3DVNORM( -0.588573, 0.808444, 4.06075e-008 )  //64
DX3DVERT( -0.0552622, 0.0400682, 0.0237174 ) DX3DVNORM( -0.809589, 0.586998, 3.9487e-008 )  //65
DX3DVERT( -0.0649393, 0.0210302, 0.0237174 ) DX3DVNORM( -0.951357, 0.308092, 5.92367e-008 )  //66
DX3DVERT( -0.0682596, -6.64393e-005, 0.0237174 ) DX3DVNORM( -0.999999, -0.000973864, 3.74324e-008 )  //67
DX3DVERT( -0.0648982, -0.0211566, 0.0237174 ) DX3DVNORM( -0.950755, -0.309942, 5.6931e-008 )  //68
DX3DVERT( -0.0551841, -0.0401757, 0.0237174 ) DX3DVNORM( -0.808444, -0.588573, 8.86759e-008 )  //69
DX3DVERT( -0.0400682, -0.0552622, 0.0237174 ) DX3DVNORM( -0.586997, -0.809589, 1.01047e-007 )  //70
DX3DVERT( -0.0210302, -0.0649392, 0.0237174 ) DX3DVNORM( -0.308092, -0.951356, -2.78797e-009 )  //71
DX3DVERT( 6.64443e-005, -0.0682596, 0.0237174 ) DX3DVNORM( 0.000973324, -0.999999, -1.53503e-007 )  //72
DX3DVERT( 0.0211566, -0.0648982, 0.0237174 ) DX3DVNORM( 0.309943, -0.950755, -1.41594e-007 )  //73
DX3DVERT( 0.0401757, -0.0551841, 0.0237174 ) DX3DVNORM( 0.588573, -0.808444, -3.88247e-008 )  //74
DX3DVERT( 0.0552622, -0.0400682, 0.0237174 ) DX3DVNORM( 0.809588, -0.586998, -2.13147e-008 )  //75
DX3DVERT( 0.0682596, 6.63996e-005, 0.291907 ) DX3DVNORM( 0.999999, 0.000973399, -1.43254e-008 )  //76
DX3DVERT( 0.0649393, -0.0210302, 0.291906 ) DX3DVNORM( 0.951356, -0.308092, -7.02061e-008 )  //77
DX3DVERT( 0.0648982, 0.0211566, 0.291906 ) DX3DVNORM( 0.950755, 0.309942, 9.98609e-009 )  //78
DX3DVERT( 0.0551841, 0.0401757, 0.291906 ) DX3DVNORM( 0.808444, 0.588572, -1.9142e-008 )  //79
DX3DVERT( 0.0400682, 0.0552623, 0.291906 ) DX3DVNORM( 0.586997, 0.809589, -4.65038e-008 )  //80
DX3DVERT( 0.0210302, 0.0649393, 0.291906 ) DX3DVNORM( 0.308091, 0.951357, 7.95254e-009 )  //81
DX3DVERT( -6.64443e-005, 0.0682596, 0.291906 ) DX3DVNORM( -0.000973973, 0.999999, 1.41063e-007 )  //82
DX3DVERT( -0.0211566, 0.0648982, 0.291906 ) DX3DVNORM( -0.309943, 0.950755, 1.4739e-007 )  //83
DX3DVERT( -0.0401758, 0.0551841, 0.291906 ) DX3DVNORM( -0.588573, 0.808444, 7.02955e-008 )  //84
DX3DVERT( -0.0552622, 0.0400682, 0.291906 ) DX3DVNORM( -0.809589, 0.586997, 3.06404e-008 )  //85
DX3DVERT( -0.0649393, 0.0210302, 0.291906 ) DX3DVNORM( -0.951357, 0.308092, 1.60967e-008 )  //86
DX3DVERT( -0.0682596, -6.64294e-005, 0.291906 ) DX3DVNORM( -0.999999, -0.000973762, 5.4774e-008 )  //87
DX3DVERT( -0.0648982, -0.0211565, 0.291906 ) DX3DVNORM( -0.950755, -0.309942, 1.00054e-007 )  //88
DX3DVERT( -0.0551841, -0.0401758, 0.291906 ) DX3DVNORM( -0.808444, -0.588573, 1.45348e-007 )  //89
DX3DVERT( -0.0400682, -0.0552621, 0.291906 ) DX3DVNORM( -0.586998, -0.809589, 1.73407e-007 )  //90
DX3DVERT( -0.0210302, -0.0649393, 0.291906 ) DX3DVNORM( -0.308093, -0.951356, -3.92342e-009 )  //91
DX3DVERT( 6.64555e-005, -0.0682597, 0.291906 ) DX3DVNORM( 0.000972887, -1, -2.03599e-007 )  //92
DX3DVERT( 0.0211566, -0.0648983, 0.291906 ) DX3DVNORM( 0.309944, -0.950755, -1.82979e-007 )  //93
DX3DVERT( 0.0401758, -0.0551841, 0.291907 ) DX3DVNORM( 0.588574, -0.808444, -4.308e-008 )  //94
DX3DVERT( 0.0552622, -0.0400682, 0.291906 ) DX3DVNORM( 0.809588, -0.586998, -1.82222e-008 )  //95
DX3DVERT( 0.0649393, -0.0210302, 0.291906 ) DX3DVNORM( 0.921962, -0.298573, 0.246657 )  //96
DX3DVERT( 0.0682596, 6.63996e-005, 0.291907 ) DX3DVNORM( 0.969102, 0.000943571, 0.246657 )  //97
DX3DVERT( -3.84567e-010, 0, 0.560096 ) DX3DVNORM( -8.80129e-007, -6.11201e-009, 1 )  //98
DX3DVERT( 0.0648982, 0.0211566, 0.291906 ) DX3DVNORM( 0.92138, 0.300366, 0.246657 )  //99
DX3DVERT( 0.0551841, 0.0401757, 0.291906 ) DX3DVNORM( 0.783466, 0.570387, 0.246657 )  //100
DX3DVERT( 0.0400682, 0.0552623, 0.291906 ) DX3DVNORM( 0.568861, 0.784575, 0.246657 )  //101
DX3DVERT( 0.0210302, 0.0649393, 0.291906 ) DX3DVNORM( 0.298571, 0.921963, 0.246657 )  //102
DX3DVERT( -6.64443e-005, 0.0682596, 0.291906 ) DX3DVNORM( -0.000944694, 0.969103, 0.246657 )  //103
DX3DVERT( -0.0211566, 0.0648982, 0.291906 ) DX3DVNORM( -0.300366, 0.92138, 0.246656 )  //104
DX3DVERT( -0.0401758, 0.0551841, 0.291906 ) DX3DVNORM( -0.570387, 0.783466, 0.246657 )  //105
DX3DVERT( -0.0552622, 0.0400682, 0.291906 ) DX3DVNORM( -0.784575, 0.568861, 0.246657 )  //106
DX3DVERT( -0.0649393, 0.0210302, 0.291906 ) DX3DVNORM( -0.921962, 0.298573, 0.246657 )  //107
DX3DVERT( -0.0682596, -6.64294e-005, 0.291906 ) DX3DVNORM( -0.969103, -0.000944167, 0.246657 )  //108
DX3DVERT( -0.0648982, -0.0211565, 0.291906 ) DX3DVNORM( -0.92138, -0.300366, 0.246656 )  //109
DX3DVERT( -0.0551841, -0.0401758, 0.291906 ) DX3DVNORM( -0.783465, -0.570388, 0.246657 )  //110
DX3DVERT( -0.0400682, -0.0552621, 0.291906 ) DX3DVNORM( -0.568862, -0.784575, 0.246656 )  //111
DX3DVERT( -0.0210302, -0.0649393, 0.291906 ) DX3DVNORM( -0.298576, -0.921961, 0.246657 )  //112
DX3DVERT( 6.64555e-005, -0.0682597, 0.291906 ) DX3DVNORM( 0.000942848, -0.969102, 0.246657 )  //113
DX3DVERT( 0.0211566, -0.0648983, 0.291906 ) DX3DVNORM( 0.300368, -0.921379, 0.246657 )  //114
DX3DVERT( 0.0401758, -0.0551841, 0.291907 ) DX3DVNORM( 0.57039, -0.783464, 0.246657 )  //115
DX3DVERT( 0.0552622, -0.0400682, 0.291906 ) DX3DVNORM( 0.784574, -0.568862, 0.246657 )  //116
DX3DVERT( 0.0682596, 6.65188e-005, -0.512661 ) DX3DVNORM( -0.591247, -0.000575524, -0.80649 )  //117
DX3DVERT( 0.0649393, -0.02103, -0.512661 ) DX3DVNORM( -0.562488, 0.182158, -0.80649 )  //118
DX3DVERT( 0.0292031, -0.00945715, -0.485123 ) DX3DVNORM( -0.562488, 0.182158, -0.80649 )  //119
DX3DVERT( 0.0307376, 2.99536e-005, -0.485153 ) DX3DVNORM( -0.591247, -0.000575524, -0.80649 )  //120
DX3DVERT( 0.0648983, 0.0211565, -0.512661 ) DX3DVNORM( -0.562131, -0.183253, -0.806491 )  //121
DX3DVERT( 0.0292633, 0.00953971, -0.485183 ) DX3DVNORM( -0.562131, -0.183253, -0.806491 )  //122
DX3DVERT( 0.0551842, 0.0401757, -0.512661 ) DX3DVNORM( -0.332855, -0.242325, -0.91131 )  //123
DX3DVERT( 0.0249134, 0.0181377, -0.485211 ) DX3DVNORM( -0.477994, -0.347988, -0.80649 )  //124
DX3DVERT( 0.0400684, 0.0552626, -0.512661 ) DX3DVNORM( -0.241678, -0.333323, -0.911311 )  //125
DX3DVERT( 0.0181067, 0.0249729, -0.485232 ) DX3DVNORM( -0.347061, -0.478666, -0.806491 )  //126
DX3DVERT( 0.0210302, 0.0649392, -0.512661 ) DX3DVNORM( -0.182151, -0.56249, -0.80649 )  //127
DX3DVERT( 0.00950938, 0.029364, -0.485246 ) DX3DVNORM( -0.182151, -0.56249, -0.80649 )  //128
DX3DVERT( -6.64406e-005, 0.0682594, -0.512661 ) DX3DVNORM( 0.000573263, -0.591249, -0.806489 )  //129
DX3DVERT( -3.00493e-005, 0.0308718, -0.485251 ) DX3DVNORM( 0.000573263, -0.591249, -0.806489 )  //130
DX3DVERT( -0.0211566, 0.0648983, -0.512661 ) DX3DVNORM( 0.18325, -0.562133, -0.80649 )  //131
DX3DVERT( -0.00956647, 0.0293454, -0.485246 ) DX3DVNORM( 0.18325, -0.562133, -0.80649 )  //132
DX3DVERT( -0.0401758, 0.0551841, -0.512661 ) DX3DVNORM( 0.242328, -0.332854, -0.91131 )  //133
DX3DVERT( -0.0181552, 0.0249373, -0.485232 ) DX3DVNORM( 0.347993, -0.477991, -0.80649 )  //134
DX3DVERT( -0.0552622, 0.0400684, -0.512661 ) DX3DVNORM( 0.333324, -0.241679, -0.91131 )  //135
DX3DVERT( -0.0249485, 0.0180891, -0.48521 ) DX3DVNORM( 0.478667, -0.347061, -0.80649 )  //136
DX3DVERT( -0.0649393, 0.02103, -0.512661 ) DX3DVNORM( 0.562488, -0.182158, -0.80649 )  //137
DX3DVERT( -0.0292816, 0.00948258, -0.485183 ) DX3DVNORM( 0.562488, -0.182158, -0.80649 )  //138
DX3DVERT( -0.0682596, -6.65188e-005, -0.512661 ) DX3DVNORM( 0.591247, 0.000576171, -0.806491 )  //139
DX3DVERT( -0.0307373, -2.99534e-005, -0.485153 ) DX3DVNORM( 0.591247, 0.000576171, -0.806491 )  //140
DX3DVERT( -0.0648982, -0.0211565, -0.512661 ) DX3DVNORM( 0.562131, 0.183255, -0.806491 )  //141
DX3DVERT( -0.0291844, -0.00951396, -0.485122 ) DX3DVNORM( 0.562131, 0.183255, -0.806491 )  //142
DX3DVERT( -0.0551842, -0.0401756, -0.512661 ) DX3DVNORM( 0.332853, 0.242328, -0.91131 )  //143
DX3DVERT( -0.0247859, -0.0180449, -0.485095 ) DX3DVNORM( 0.47799, 0.347993, -0.80649 )  //144
DX3DVERT( -0.0400682, -0.0552621, -0.512661 ) DX3DVNORM( 0.24168, 0.333324, -0.91131 )  //145
DX3DVERT( -0.0179793, -0.0247971, -0.485073 ) DX3DVNORM( 0.347062, 0.478667, -0.806489 )  //146
DX3DVERT( -0.0210302, -0.0649393, -0.512661 ) DX3DVNORM( 0.18216, 0.562486, -0.80649 )  //147
DX3DVERT( -0.00943081, -0.0291215, -0.48506 ) DX3DVNORM( 0.18216, 0.562486, -0.80649 )  //148
DX3DVERT( 6.64555e-005, -0.0682597, -0.512661 ) DX3DVNORM( -0.00057451, 0.591246, -0.806491 )  //149
DX3DVERT( 2.97952e-005, -0.0306041, -0.485055 ) DX3DVNORM( -0.00057451, 0.591246, -0.806491 )  //150
DX3DVERT( 0.0211566, -0.0648982, -0.512661 ) DX3DVNORM( -0.183253, 0.562131, -0.806491 )  //151
DX3DVERT( 0.00948756, -0.0291032, -0.48506 ) DX3DVNORM( -0.183253, 0.562131, -0.806491 )  //152
DX3DVERT( 0.0401758, -0.055184, -0.512661 ) DX3DVNORM( -0.242327, 0.332854, -0.91131 )  //153
DX3DVERT( 0.0180277, -0.0247622, -0.485074 ) DX3DVNORM( -0.347993, 0.47799, -0.80649 )  //154
DX3DVERT( 0.0552622, -0.0400683, -0.512661 ) DX3DVNORM( -0.333324, 0.241679, -0.91131 )  //155
DX3DVERT( 0.0248212, -0.0179968, -0.485095 ) DX3DVNORM( -0.478668, 0.34706, -0.80649 )  //156
DX3DVERT( 0.0608242, 0.0760587, -0.512661 ) DX3DVNORM( 1.48419e-006, 0, -1 )  //157
DX3DVERT( 0.0759401, 0.0609722, -0.512661 ) DX3DVNORM( 1.48419e-006, 0, -1 )  //158
DX3DVERT( 0.0400684, 0.0552626, -0.512661 ) DX3DVNORM( -0.707794, 0.706418, 5.68814e-007 )  //159
DX3DVERT( 0.0400682, 0.0552621, -0.244472 ) DX3DVNORM( -0.707794, 0.706418, 5.68814e-007 )  //160
DX3DVERT( 0.0608243, 0.0760588, -0.307188 ) DX3DVNORM( -0.707794, 0.706418, 5.68814e-007 )  //161
DX3DVERT( 0.0608242, 0.0760587, -0.512661 ) DX3DVNORM( -0.707794, 0.706418, 5.68814e-007 )  //162
DX3DVERT( 0.0400682, 0.0552621, -0.244472 ) DX3DVNORM( 0.639693, 0.640946, 0.424242 )  //163
DX3DVERT( 0.0551842, 0.0401758, -0.244472 ) DX3DVNORM( 0.639693, 0.640946, 0.424242 )  //164
DX3DVERT( 0.0759402, 0.0609723, -0.307188 ) DX3DVNORM( 0.639693, 0.640946, 0.424242 )  //165
DX3DVERT( 0.0608243, 0.0760588, -0.307188 ) DX3DVNORM( 0.639693, 0.640946, 0.424242 )  //166
DX3DVERT( 0.0551842, 0.0401758, -0.244472 ) DX3DVNORM( 0.707797, -0.706416, 2.34216e-007 )  //167
DX3DVERT( 0.0551842, 0.0401757, -0.512661 ) DX3DVNORM( 0.707797, -0.706416, 2.34216e-007 )  //168
DX3DVERT( 0.0759401, 0.0609722, -0.512661 ) DX3DVNORM( 0.707797, -0.706416, 2.34216e-007 )  //169
DX3DVERT( 0.0759402, 0.0609723, -0.307188 ) DX3DVNORM( 0.707797, -0.706416, 2.34216e-007 )  //170
DX3DVERT( -0.0760589, 0.0608243, -0.512661 ) DX3DVNORM( 0, 0, -1 )  //171
DX3DVERT( -0.0609723, 0.0759403, -0.512661 ) DX3DVNORM( 0, 0, -1 )  //172
DX3DVERT( -0.0552622, 0.0400684, -0.512661 ) DX3DVNORM( -0.706418, -0.707795, 1.00378e-007 )  //173
DX3DVERT( -0.0552623, 0.0400682, -0.244472 ) DX3DVNORM( -0.706418, -0.707795, 1.00378e-007 )  //174
DX3DVERT( -0.0760587, 0.0608244, -0.307188 ) DX3DVNORM( -0.706418, -0.707795, 1.00378e-007 )  //175
DX3DVERT( -0.0760589, 0.0608243, -0.512661 ) DX3DVNORM( -0.706418, -0.707795, 1.00378e-007 )  //176
DX3DVERT( -0.0552623, 0.0400682, -0.244472 ) DX3DVNORM( -0.640943, 0.639696, 0.424241 )  //177
DX3DVERT( -0.0401758, 0.0551841, -0.244472 ) DX3DVNORM( -0.640943, 0.639696, 0.424241 )  //178
DX3DVERT( -0.0609723, 0.0759402, -0.307188 ) DX3DVNORM( -0.640943, 0.639696, 0.424241 )  //179
DX3DVERT( -0.0760587, 0.0608244, -0.307188 ) DX3DVNORM( -0.640943, 0.639696, 0.424241 )  //180
DX3DVERT( -0.0401758, 0.0551841, -0.244472 ) DX3DVNORM( 0.70642, 0.707793, 1.50567e-007 )  //181
DX3DVERT( -0.0401758, 0.0551841, -0.512661 ) DX3DVNORM( 0.70642, 0.707793, 1.50567e-007 )  //182
DX3DVERT( -0.0609723, 0.0759403, -0.512661 ) DX3DVNORM( 0.70642, 0.707793, 1.50567e-007 )  //183
DX3DVERT( -0.0609723, 0.0759402, -0.307188 ) DX3DVNORM( 0.70642, 0.707793, 1.50567e-007 )  //184
DX3DVERT( -0.0608243, -0.0760588, -0.512661 ) DX3DVNORM( 0, -1.7037e-006, -1 )  //185
DX3DVERT( -0.0759402, -0.0609723, -0.512661 ) DX3DVNORM( 0, -1.7037e-006, -1 )  //186
DX3DVERT( -0.0400682, -0.0552621, -0.512661 ) DX3DVNORM( 0.707796, -0.706416, -2.17486e-007 )  //187
DX3DVERT( -0.0400682, -0.0552622, -0.244472 ) DX3DVNORM( 0.707796, -0.706416, -2.17486e-007 )  //188
DX3DVERT( -0.0608243, -0.0760587, -0.307188 ) DX3DVNORM( 0.707796, -0.706416, -2.17486e-007 )  //189
DX3DVERT( -0.0608243, -0.0760588, -0.512661 ) DX3DVNORM( 0.707796, -0.706416, -2.17486e-007 )  //190
DX3DVERT( -0.0400682, -0.0552622, -0.244472 ) DX3DVNORM( -0.639696, -0.640943, 0.42424 )  //191
DX3DVERT( -0.0551841, -0.0401758, -0.244472 ) DX3DVNORM( -0.639696, -0.640943, 0.42424 )  //192
DX3DVERT( -0.0759401, -0.0609722, -0.307188 ) DX3DVNORM( -0.639696, -0.640943, 0.42424 )  //193
DX3DVERT( -0.0608243, -0.0760587, -0.307188 ) DX3DVNORM( -0.639696, -0.640943, 0.42424 )  //194
DX3DVERT( -0.0551841, -0.0401758, -0.244472 ) DX3DVNORM( -0.707797, 0.706416, 1.33838e-007 )  //195
DX3DVERT( -0.0551842, -0.0401756, -0.512661 ) DX3DVNORM( -0.707797, 0.706416, 1.33838e-007 )  //196
DX3DVERT( -0.0759402, -0.0609723, -0.512661 ) DX3DVNORM( -0.707797, 0.706416, 1.33838e-007 )  //197
DX3DVERT( -0.0759401, -0.0609722, -0.307188 ) DX3DVNORM( -0.707797, 0.706416, 1.33838e-007 )  //198
DX3DVERT( 0.0760589, -0.0608242, -0.512661 ) DX3DVNORM( 1.48419e-006, 1.70424e-006, -1 )  //199
DX3DVERT( 0.0609723, -0.0759402, -0.512661 ) DX3DVNORM( 1.48419e-006, 1.70424e-006, -1 )  //200
DX3DVERT( 0.0552622, -0.0400683, -0.512661 ) DX3DVNORM( 0.706418, 0.707795, 4.85162e-007 )  //201
DX3DVERT( 0.0552622, -0.0400682, -0.244472 ) DX3DVNORM( 0.706418, 0.707795, 4.85162e-007 )  //202
DX3DVERT( 0.0760587, -0.0608244, -0.307188 ) DX3DVNORM( 0.706418, 0.707795, 4.85162e-007 )  //203
DX3DVERT( 0.0760589, -0.0608242, -0.512661 ) DX3DVNORM( 0.706418, 0.707795, 4.85162e-007 )  //204
DX3DVERT( 0.0552622, -0.0400682, -0.244472 ) DX3DVNORM( 0.640944, -0.639695, 0.424241 )  //205
DX3DVERT( 0.0401757, -0.0551841, -0.244472 ) DX3DVNORM( 0.640944, -0.639695, 0.424241 )  //206
DX3DVERT( 0.0609723, -0.0759402, -0.307188 ) DX3DVNORM( 0.640944, -0.639695, 0.424241 )  //207
DX3DVERT( 0.0760587, -0.0608244, -0.307188 ) DX3DVNORM( 0.640944, -0.639695, 0.424241 )  //208
DX3DVERT( 0.0401757, -0.0551841, -0.244472 ) DX3DVNORM( -0.706419, -0.707794, -2.00756e-007 )  //209
DX3DVERT( 0.0401758, -0.055184, -0.512661 ) DX3DVNORM( -0.706419, -0.707794, -2.00756e-007 )  //210
DX3DVERT( 0.0609723, -0.0759402, -0.512661 ) DX3DVNORM( -0.706419, -0.707794, -2.00756e-007 )  //211
DX3DVERT( 0.0609723, -0.0759402, -0.307188 ) DX3DVNORM( -0.706419, -0.707794, -2.00756e-007 )  //212
DX3DVERT( 0.0307376, 2.99536e-005, -0.485153 ) DX3DVNORM( 0.021081, -0.00326465, -0.999772 )  //213
DX3DVERT( 0.0292031, -0.00945715, -0.485123 ) DX3DVNORM( 0.0200554, -0.0097792, -0.999751 )  //214
DX3DVERT( -5.28632e-011, 0, -0.485801 ) DX3DVNORM( -7.64138e-007, -0.00328559, -0.999995 )  //215
DX3DVERT( 0.0292633, 0.00953971, -0.485183 ) DX3DVNORM( 0.0200393, 0.00324627, -0.999794 )  //216
DX3DVERT( 0.0249134, 0.0181377, -0.485211 ) DX3DVNORM( 0.0170369, 0.0091214, -0.999813 )  //217
DX3DVERT( 0.0181067, 0.0249729, -0.485232 ) DX3DVNORM( 0.012371, 0.013782, -0.999828 )  //218
DX3DVERT( 0.00950938, 0.029364, -0.485246 ) DX3DVNORM( 0.0064932, 0.0167705, -0.999838 )  //219
DX3DVERT( -3.00493e-005, 0.0308718, -0.485251 ) DX3DVNORM( -2.21452e-005, 0.0177954, -0.999842 )  //220
DX3DVERT( -0.00956647, 0.0293454, -0.485246 ) DX3DVNORM( -0.00653117, 0.0167576, -0.999838 )  //221
DX3DVERT( -0.0181552, 0.0249373, -0.485232 ) DX3DVNORM( -0.012403, 0.0137574, -0.999828 )  //222
DX3DVERT( -0.0249485, 0.0180891, -0.48521 ) DX3DVNORM( -0.0170657, 0.0090879, -0.999813 )  //223
DX3DVERT( -0.0292816, 0.00948258, -0.485183 ) DX3DVNORM( -0.020057, 0.0032078, -0.999794 )  //224
DX3DVERT( -0.0307373, -2.99534e-005, -0.485153 ) DX3DVNORM( -0.0210794, -0.00330419, -0.999772 )  //225
DX3DVERT( -0.0291844, -0.00951396, -0.485122 ) DX3DVNORM( -0.0200426, -0.00981717, -0.999751 )  //226
DX3DVERT( -0.0247859, -0.0180449, -0.485095 ) DX3DVNORM( -0.0170392, -0.0156941, -0.999732 )  //227
DX3DVERT( -0.0179793, -0.0247971, -0.485073 ) DX3DVNORM( -0.0123732, -0.0203518, -0.999716 )  //228
DX3DVERT( -0.00943081, -0.0291215, -0.48506 ) DX3DVNORM( -0.00649912, -0.023338, -0.999707 )  //229
DX3DVERT( 2.97952e-005, -0.0306041, -0.485055 ) DX3DVNORM( 1.92851e-005, -0.0243631, -0.999703 )  //230
DX3DVERT( 0.00948756, -0.0291032, -0.48506 ) DX3DVNORM( 0.00653443, -0.0233245, -0.999707 )  //231
DX3DVERT( 0.0180277, -0.0247622, -0.485074 ) DX3DVNORM( 0.0124052, -0.0203263, -0.999716 )  //232
DX3DVERT( 0.0248212, -0.0179968, -0.485095 ) DX3DVNORM( 0.0170614, -0.0156605, -0.999732 )  //233
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Missile___mMissile_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Missile___mMissile_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 234 )
DX3DVERTEX_END


#else
#define vertex_Missile___mMissile_0	NULL
#define vertexbuff_Missile___mMissile_0	NULL
#endif




#if ((PT_Missile___mMissile_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_TRILIST) ) || (PT_Missile___mMissile_0 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DINDEX_START( index_Missile___mMissile_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	8, 9, 11, // 6 20
	9, 10, 11, // 7 23
	12, 13, 15, // 8 26
	13, 14, 15, // 9 29
	13, 16, 14, // 10 32
	16, 17, 14, // 11 35
	16, 18, 17, // 12 38
	18, 19, 17, // 13 41
	18, 20, 19, // 14 44
	20, 21, 19, // 15 47
	22, 23, 25, // 16 50
	23, 24, 25, // 17 53
	26, 27, 29, // 18 56
	27, 28, 29, // 19 59
	27, 30, 28, // 20 62
	30, 31, 28, // 21 65
	30, 32, 31, // 22 68
	32, 33, 31, // 23 71
	32, 34, 33, // 24 74
	34, 35, 33, // 25 77
	36, 37, 39, // 26 80
	37, 38, 39, // 27 83
	40, 41, 43, // 28 86
	41, 42, 43, // 29 89
	41, 44, 42, // 30 92
	44, 45, 42, // 31 95
	44, 46, 45, // 32 98
	46, 47, 45, // 33 101
	46, 48, 47, // 34 104
	48, 49, 47, // 35 107
	50, 51, 53, // 36 110
	51, 52, 53, // 37 113
	54, 0, 55, // 38 116
	0, 3, 55, // 39 119
	3, 2, 57, // 40 122
	2, 56, 57, // 41 125
	2, 5, 56, // 42 128
	5, 58, 56, // 43 131
	5, 7, 58, // 44 134
	7, 59, 58, // 45 137
	7, 15, 59, // 46 140
	15, 60, 59, // 47 143
	15, 14, 60, // 48 146
	14, 61, 60, // 49 149
	14, 17, 61, // 50 152
	17, 62, 61, // 51 155
	17, 19, 62, // 52 158
	19, 63, 62, // 53 161
	19, 21, 63, // 54 164
	21, 64, 63, // 55 167
	21, 29, 64, // 56 170
	29, 65, 64, // 57 173
	29, 28, 65, // 58 176
	28, 66, 65, // 59 179
	28, 31, 66, // 60 182
	31, 67, 66, // 61 185
	31, 33, 67, // 62 188
	33, 68, 67, // 63 191
	33, 35, 68, // 64 194
	35, 69, 68, // 65 197
	35, 43, 69, // 66 200
	43, 70, 69, // 67 203
	43, 42, 70, // 68 206
	42, 71, 70, // 69 209
	42, 45, 71, // 70 212
	45, 72, 71, // 71 215
	45, 47, 72, // 72 218
	47, 73, 72, // 73 221
	47, 49, 73, // 74 224
	49, 74, 73, // 75 227
	49, 55, 74, // 76 230
	55, 75, 74, // 77 233
	55, 3, 75, // 78 236
	3, 57, 75, // 79 239
	57, 56, 77, // 80 242
	56, 76, 77, // 81 245
	56, 58, 76, // 82 248
	58, 78, 76, // 83 251
	58, 59, 78, // 84 254
	59, 79, 78, // 85 257
	59, 60, 79, // 86 260
	60, 80, 79, // 87 263
	60, 61, 80, // 88 266
	61, 81, 80, // 89 269
	61, 62, 81, // 90 272
	62, 82, 81, // 91 275
	62, 63, 82, // 92 278
	63, 83, 82, // 93 281
	63, 64, 83, // 94 284
	64, 84, 83, // 95 287
	64, 65, 84, // 96 290
	65, 85, 84, // 97 293
	65, 66, 85, // 98 296
	66, 86, 85, // 99 299
	66, 67, 86, // 100 302
	67, 87, 86, // 101 305
	67, 68, 87, // 102 308
	68, 88, 87, // 103 311
	68, 69, 88, // 104 314
	69, 89, 88, // 105 317
	69, 70, 89, // 106 320
	70, 90, 89, // 107 323
	70, 71, 90, // 108 326
	71, 91, 90, // 109 329
	71, 72, 91, // 110 332
	72, 92, 91, // 111 335
	72, 73, 92, // 112 338
	73, 93, 92, // 113 341
	73, 74, 93, // 114 344
	74, 94, 93, // 115 347
	74, 75, 94, // 116 350
	75, 95, 94, // 117 353
	75, 57, 95, // 118 356
	57, 77, 95, // 119 359
	96, 97, 98, // 120 362
	97, 99, 98, // 121 365
	99, 100, 98, // 122 368
	100, 101, 98, // 123 371
	101, 102, 98, // 124 374
	102, 103, 98, // 125 377
	103, 104, 98, // 126 380
	104, 105, 98, // 127 383
	105, 106, 98, // 128 386
	106, 107, 98, // 129 389
	107, 108, 98, // 130 392
	108, 109, 98, // 131 395
	109, 110, 98, // 132 398
	110, 111, 98, // 133 401
	111, 112, 98, // 134 404
	112, 113, 98, // 135 407
	113, 114, 98, // 136 410
	114, 115, 98, // 137 413
	115, 116, 98, // 138 416
	116, 96, 98, // 139 419
	117, 118, 120, // 140 422
	118, 119, 120, // 141 425
	121, 117, 122, // 142 428
	117, 120, 122, // 143 431
	123, 121, 124, // 144 434
	121, 122, 124, // 145 437
	125, 123, 126, // 146 440
	123, 124, 126, // 147 443
	127, 125, 128, // 148 446
	125, 126, 128, // 149 449
	129, 127, 130, // 150 452
	127, 128, 130, // 151 455
	131, 129, 132, // 152 458
	129, 130, 132, // 153 461
	133, 131, 134, // 154 464
	131, 132, 134, // 155 467
	135, 133, 136, // 156 470
	133, 134, 136, // 157 473
	137, 135, 138, // 158 476
	135, 136, 138, // 159 479
	139, 137, 140, // 160 482
	137, 138, 140, // 161 485
	141, 139, 142, // 162 488
	139, 140, 142, // 163 491
	143, 141, 144, // 164 494
	141, 142, 144, // 165 497
	145, 143, 146, // 166 500
	143, 144, 146, // 167 503
	147, 145, 148, // 168 506
	145, 146, 148, // 169 509
	149, 147, 150, // 170 512
	147, 148, 150, // 171 515
	151, 149, 152, // 172 518
	149, 150, 152, // 173 521
	153, 151, 154, // 174 524
	151, 152, 154, // 175 527
	155, 153, 156, // 176 530
	153, 154, 156, // 177 533
	118, 155, 119, // 178 536
	155, 156, 119, // 179 539
	123, 125, 158, // 180 542
	125, 157, 158, // 181 545
	159, 160, 162, // 182 548
	160, 161, 162, // 183 551
	163, 164, 166, // 184 554
	164, 165, 166, // 185 557
	167, 168, 170, // 186 560
	168, 169, 170, // 187 563
	133, 135, 172, // 188 566
	135, 171, 172, // 189 569
	173, 174, 176, // 190 572
	174, 175, 176, // 191 575
	177, 178, 180, // 192 578
	178, 179, 180, // 193 581
	181, 182, 184, // 194 584
	182, 183, 184, // 195 587
	143, 145, 186, // 196 590
	145, 185, 186, // 197 593
	187, 188, 190, // 198 596
	188, 189, 190, // 199 599
	191, 192, 194, // 200 602
	192, 193, 194, // 201 605
	195, 196, 198, // 202 608
	196, 197, 198, // 203 611
	153, 155, 200, // 204 614
	155, 199, 200, // 205 617
	201, 202, 204, // 206 620
	202, 203, 204, // 207 623
	205, 206, 208, // 208 626
	206, 207, 208, // 209 629
	209, 210, 212, // 210 632
	210, 211, 212, // 211 635
	213, 214, 215, // 212 638
	216, 213, 215, // 213 641
	217, 216, 215, // 214 644
	218, 217, 215, // 215 647
	219, 218, 215, // 216 650
	220, 219, 215, // 217 653
	221, 220, 215, // 218 656
	222, 221, 215, // 219 659
	223, 222, 215, // 220 662
	224, 223, 215, // 221 665
	225, 224, 215, // 222 668
	226, 225, 215, // 223 671
	227, 226, 215, // 224 674
	228, 227, 215, // 225 677
	229, 228, 215, // 226 680
	230, 229, 215, // 227 683
	231, 230, 215, // 228 686
	232, 231, 215, // 229 689
	233, 232, 215, // 230 692
	214, 233, 215, // 231 695
DX3DINDEX_END
#endif

#else
#define index_Missile___mMissile_0	NULL
#endif




#if ((PT_Missile___mMissile_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_INDEXSTRIP) ) || (PT_Missile___mMissile_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Missile___mMissile_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Missile___mMissile_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectShape00_tst__ == PT_VERTEXSTRIP) ) || (PT_Missile___mMissile_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Missile___mMissile_0_VERTEXSTRIP 	NULL
#define vertexbuff_Missile___mMissile_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Missile__ )
DX3DMODEL_START( model_Missile___mMissile_0 )
DX3DMODEL_VERTEX( vertex_Missile___mMissile_0 )
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DMODEL_INDEX( index_Missile___mMissile_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 696 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mMissile )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Missile__, 4198913341 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Missile__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



//skipped CubeCompass

//////////// export info ///////////////
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectShape00_tst___0, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectShape00_tst___1, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectShape00_tst___2, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectShape00_tst___3, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectShape00_tst___4, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectShape00_tst___5, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectShape00_tst___6, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectShape00_tst___7, 0 )




/////////////////////////////////////////////
#if ( !BINARY_GachanGameObjectShape00_tst__ )
DX3DBINARYFILE( binaryfile_GachanGameObjectShape00_tst__, NULL )
#else
DX3DBINARYFILE( binaryfile_GachanGameObjectShape00_tst__, "" )
#endif


DX3DBINARYSIZE( binarysize_GachanGameObjectShape00_tst__, 0 )


