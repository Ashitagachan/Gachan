//skipped groundPlane_transform
//skipped Manipulator1
//skipped UniversalManip
//skipped CubeCompass
/////////////////////////////////////////////
// object_MaruChan__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mFace )
DX3DMATERIAL_DIFF( 1, 0, 0, 0 )
DX3DMATERIAL_SPEC( 1, 0, 0, 0 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END


DX3DMATERIAL_START( material_mMaruChan )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 0.25, 0.25, 0.25 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_MaruChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_MaruChan___mFace_0 == PT_TRILIST ) || ((PT_MaruChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_MaruChan___mFace_0 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_MaruChan___mFace_0 )
DX3DVERT( -0.060255, -0.069183, 0.505098 ) DX3DVNORM( -9.31816e-009, 0, 1 )  //0
DX3DVERT( -0.0601352, -0.0910755, 0.505098 ) DX3DVNORM( -4.65908e-009, 0, 1 )  //1
DX3DVERT( 0.0100045, -0.0930636, 0.505098 ) DX3DVNORM( -1.61378e-007, 0, 1 )  //2
DX3DVERT( 0.00913404, -0.0736717, 0.505098 ) DX3DVNORM( -3.22756e-007, 0, 1 )  //3
DX3DVERT( 0.0842851, -0.0691421, 0.505098 ) DX3DVNORM( -0.00448007, 0.00839363, 0.999955 )  //4
DX3DVERT( 0.082015, -0.0891633, 0.505098 ) DX3DVNORM( -0.00484623, 0.00427455, 0.999979 )  //5
DX3DVERT( 0.142829, -0.0737947, 0.505701 ) DX3DVNORM( -0.00759423, 0.0079518, 0.99994 )  //6
DX3DVERT( 0.13695, -0.0598399, 0.505098 ) DX3DVNORM( -0.00997521, 0.0157474, 0.999826 )  //7
DX3DVERT( -0.185593, -0.0784804, 0.505098 ) DX3DVNORM( -7.23869e-007, 0, 1 )  //8
DX3DVERT( -0.137287, -0.108102, 0.505098 ) DX3DVNORM( -3.61935e-007, 0, 1 )  //9
DX3DVERT( -0.139968, -0.0728521, 0.505098 ) DX3DVNORM( -1.04697e-007, 0, 1 )  //10
DX3DVERT( -0.194263, -0.0587329, 0.505098 ) DX3DVNORM( -3.61935e-007, 0, 1 )  //11
DX3DVERT( -0.139908, -0.0564509, 0.505098 ) DX3DVNORM( 1.5254e-007, 0, 1 )  //12
DX3DVERT( 0.195332, -0.05719, 0.505701 ) DX3DVNORM( -0.00549613, 0.00735448, 0.999958 )  //13
DX3DVERT( 0.184148, -0.0429196, 0.505701 ) DX3DVNORM( -0.010991, 0.0147083, 0.999831 )  //14
DX3DVERT( -0.165248, 0.0772847, 0.494644 ) DX3DVNORM( -9.81954e-007, 0, 1 )  //15
DX3DVERT( -0.152477, 0.0656224, 0.494644 ) DX3DVNORM( -9.81954e-007, 0, 1 )  //16
DX3DVERT( -0.137393, 0.0599709, 0.494644 ) DX3DVNORM( 2.93684e-007, 0, 1 )  //17
DX3DVERT( -0.134734, 0.0986996, 0.494644 ) DX3DVNORM( 1.46842e-007, 0, 1 )  //18
DX3DVERT( -0.172333, 0.0942135, 0.494644 ) DX3DVNORM( -4.90977e-007, 0, 1 )  //19
DX3DVERT( 0.0952651, 0.135702, 0.494644 ) DX3DVNORM( -1.19311e-006, 0, 1 )  //20
DX3DVERT( 0.0831022, 0.122751, 0.494644 ) DX3DVNORM( -1.19311e-006, 0, 1 )  //21
DX3DVERT( 0.0795344, 0.107751, 0.494644 ) DX3DVNORM( -5.96556e-007, 0, 1 )  //22
DX3DVERT( 0.11601, 0.10523, 0.494644 ) DX3DVNORM( 1.69719e-007, 0, 1 )  //23
DX3DVERT( 0.115911, 0.141821, 0.494644 ) DX3DVNORM( 3.39438e-007, 0, 1 )  //24
DX3DVERT( -0.118938, 0.145539, 0.494644 ) DX3DVNORM( 4.71589e-007, 0, 1 )  //25
DX3DVERT( -0.124959, 0.109895, 0.494644 ) DX3DVNORM( 2.35794e-007, 0, 1 )  //26
DX3DVERT( -0.084964, 0.111442, 0.494644 ) DX3DVNORM( -5.42873e-007, 0, 1 )  //27
DX3DVERT( -0.0916717, 0.129104, 0.494644 ) DX3DVNORM( -1.08575e-006, 0, 1 )  //28
DX3DVERT( -0.103842, 0.141661, 0.494644 ) DX3DVNORM( -1.08575e-006, 0, 1 )  //29
DX3DVERT( -0.135058, 0.109996, 0.494644 ) DX3DVNORM( 5.07231e-007, 0, 1 )  //30
DX3DVERT( -0.172553, 0.110527, 0.494644 ) DX3DVNORM( 0, 0, 1 )  //31
DX3DVERT( -0.0855558, 0.0949412, 0.494644 ) DX3DVNORM( -4.47779e-007, 0, 1 )  //32
DX3DVERT( -0.125003, 0.0988417, 0.494644 ) DX3DVNORM( 1.68441e-007, 0, 1 )  //33
DX3DVERT( -0.120493, 0.0603048, 0.494644 ) DX3DVNORM( 3.36882e-007, 0, 1 )  //34
DX3DVERT( -0.099644, 0.0666975, 0.494644 ) DX3DVNORM( -8.95557e-007, 0, 1 )  //35
DX3DVERT( -0.0895398, 0.0813807, 0.494644 ) DX3DVNORM( -8.95557e-007, 0, 1 )  //36
DX3DVERT( 0.12735, 0.10523, 0.494644 ) DX3DVNORM( 9.31717e-007, 0, 1 )  //37
DX3DVERT( 0.131117, 0.141174, 0.494644 ) DX3DVNORM( 7.99172e-007, 0, 1 )  //38
DX3DVERT( 0.116637, 0.0981178, 0.494644 ) DX3DVNORM( 7.04396e-007, 0, 1 )  //39
DX3DVERT( 0.0802251, 0.0920765, 0.494644 ) DX3DVNORM( 1.00987e-006, 0, 1 )  //40
DX3DVERT( 0.085284, 0.0775964, 0.494644 ) DX3DVNORM( 2.01975e-006, 0, 1 )  //41
DX3DVERT( 0.0983013, 0.0661352, 0.494644 ) DX3DVNORM( 2.01975e-006, 0, 1 )  //42
DX3DVERT( 0.115432, 0.0600125, 0.494644 ) DX3DVNORM( 1.40879e-006, 0, 1 )  //43
DX3DVERT( 0.161744, 0.0893168, 0.494644 ) DX3DVNORM( 5.31745e-007, 0, 1 )  //44
DX3DVERT( 0.127205, 0.0981178, 0.494644 ) DX3DVNORM( 4.65332e-007, 0, 1 )  //45
DX3DVERT( 0.129498, 0.0599597, 0.494644 ) DX3DVNORM( -1.33597e-007, 0, 1 )  //46
DX3DVERT( 0.141818, 0.0626248, 0.494644 ) DX3DVNORM( -1.06503e-006, 0, 1 )  //47
DX3DVERT( 0.157017, 0.0741803, 0.494644 ) DX3DVNORM( -1.06503e-006, 0, 1 )  //48
DX3DVERT( -0.064447, -0.128054, 0.505098 ) DX3DVNORM( 0, 0, 1 )  //49
DX3DVERT( 0.00620586, -0.135476, 0.505098 ) DX3DVNORM( 0, 0, 1 )  //50
DX3DVERT( 0.0834518, -0.12592, 0.505098 ) DX3DVNORM( -0.0052123, 0.000155528, 0.999986 )  //51
DX3DVERT( 0.139302, -0.107077, 0.505701 ) DX3DVNORM( -0.00521271, 0.000155528, 0.999986 )  //52
DX3DVERT( -0.185593, -0.0444341, 0.505098 ) DX3DVNORM( 0, 0, 1 )  //53
DX3DVERT( 0.180861, -0.0811609, 0.505701 ) DX3DVNORM( -8.06329e-007, 0, 1 )  //54
DX3DVERT( -0.136549, 0.144851, 0.494644 ) DX3DVNORM( 1.01446e-006, 0, 1 )  //55
DX3DVERT( -0.153496, 0.140191, 0.494644 ) DX3DVNORM( 0, 0, 1 )  //56
DX3DVERT( -0.166089, 0.129303, 0.494644 ) DX3DVNORM( 0, 0, 1 )  //57
DX3DVERT( 0.162475, 0.107242, 0.494644 ) DX3DVNORM( 9.27439e-007, 0, 1 )  //58
DX3DVERT( 0.156854, 0.123606, 0.494644 ) DX3DVNORM( -2.73645e-007, 0, 1 )  //59
DX3DVERT( 0.147251, 0.134994, 0.494644 ) DX3DVNORM( -2.73645e-007, 0, 1 )  //60
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_MaruChan___mFace_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_MaruChan___mFace_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 61 )
DX3DVERTEX_END


#else
#define vertex_MaruChan___mFace_0	NULL
#define vertexbuff_MaruChan___mFace_0	NULL
#endif




#if ((PT_MaruChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_MaruChan___mFace_0 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_MaruChan___mFace_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 5, 7, // 2 8
	5, 6, 7, // 3 11
	8, 9, 11, // 4 14
	9, 10, 11, // 5 17
	12, 10, 0, // 6 20
	10, 1, 0, // 7 23
	3, 2, 4, // 8 26
	2, 5, 4, // 9 29
	7, 6, 14, // 10 32
	6, 13, 14, // 11 35
	15, 16, 19, // 12 38
	16, 17, 18, // 13 41
	16, 18, 19, // 14 44
	20, 21, 24, // 15 47
	21, 22, 23, // 16 50
	21, 23, 24, // 17 53
	25, 26, 29, // 18 56
	26, 27, 28, // 19 59
	26, 28, 29, // 20 62
	19, 18, 31, // 21 65
	18, 30, 31, // 22 68
	32, 33, 36, // 23 71
	33, 34, 35, // 24 74
	33, 35, 36, // 25 77
	24, 23, 38, // 26 80
	23, 37, 38, // 27 83
	39, 40, 43, // 28 86
	40, 41, 42, // 29 89
	40, 42, 43, // 30 92
	44, 45, 48, // 31 95
	45, 46, 47, // 32 98
	45, 47, 48, // 33 101
	2, 1, 50, // 34 104
	1, 49, 50, // 35 107
	6, 5, 52, // 36 110
	5, 51, 52, // 37 113
	11, 10, 53, // 38 116
	10, 12, 53, // 39 119
	1, 10, 49, // 40 122
	10, 9, 49, // 41 125
	5, 2, 51, // 42 128
	2, 50, 51, // 43 131
	13, 6, 54, // 44 134
	6, 52, 54, // 45 137
	18, 17, 33, // 46 140
	17, 34, 33, // 47 143
	55, 30, 25, // 48 146
	30, 26, 25, // 49 149
	27, 26, 32, // 50 152
	26, 33, 32, // 51 155
	31, 30, 57, // 52 158
	30, 55, 56, // 53 161
	30, 56, 57, // 54 164
	26, 30, 33, // 55 167
	30, 18, 33, // 56 170
	38, 37, 60, // 57 173
	37, 58, 59, // 58 176
	37, 59, 60, // 59 179
	46, 45, 43, // 60 182
	45, 39, 43, // 61 185
	23, 22, 39, // 62 188
	22, 40, 39, // 63 191
	37, 23, 45, // 64 194
	23, 39, 45, // 65 197
	58, 37, 44, // 66 200
	37, 45, 44, // 67 203
DX3DINDEX_END
#endif

#else
#define index_MaruChan___mFace_0	NULL
#endif




#if ((PT_MaruChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_MaruChan___mFace_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_MaruChan___mFace_0_INDEXSTRIP 	NULL
#endif




#if ((PT_MaruChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_MaruChan___mFace_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_MaruChan___mFace_0_VERTEXSTRIP 	NULL
#define vertexbuff_MaruChan___mFace_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_MaruChan___mMaruChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_MaruChan___mMaruChan_1 == PT_TRILIST ) || ((PT_MaruChan___mMaruChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_MaruChan___mMaruChan_1 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_MaruChan___mMaruChan_1 )
DX3DVERT( 0.074389, -0.493844, -0.0241705 ) DX3DVNORM( 0.148756, -0.987692, -0.0483333 )  //0
DX3DVERT( 0.0632791, -0.493844, -0.045975 ) DX3DVNORM( 0.126539, -0.987692, -0.0919352 )  //1
DX3DVERT( 0.125, -0.475528, -0.0908179 ) DX3DVNORM( 0.249965, -0.951071, -0.18161 )  //2
DX3DVERT( 0.146946, -0.475528, -0.0477458 ) DX3DVNORM( 0.293852, -0.951071, -0.0954778 )  //3
DX3DVERT( 0.045975, -0.493844, -0.0632791 ) DX3DVNORM( 0.0919359, -0.987692, -0.126538 )  //4
DX3DVERT( 0.0908179, -0.475528, -0.125 ) DX3DVNORM( 0.18161, -0.951071, -0.249965 )  //5
DX3DVERT( 0.0241705, -0.493844, -0.074389 ) DX3DVNORM( 0.0483336, -0.987692, -0.148755 )  //6
DX3DVERT( 0.0477458, -0.475528, -0.146946 ) DX3DVNORM( 0.0954781, -0.951071, -0.293852 )  //7
DX3DVERT( 5.52461e-010, -0.493844, -0.0782173 ) DX3DVNORM( -4.67279e-010, -0.987692, -0.156411 )  //8
DX3DVERT( 1.09132e-009, -0.475528, -0.154509 ) DX3DVNORM( 9.35379e-010, -0.951071, -0.308974 )  //9
DX3DVERT( -0.0241705, -0.493844, -0.074389 ) DX3DVNORM( -0.0483336, -0.987692, -0.148755 )  //10
DX3DVERT( -0.0477458, -0.475528, -0.146946 ) DX3DVNORM( -0.0954782, -0.951071, -0.293852 )  //11
DX3DVERT( -0.045975, -0.493844, -0.0632791 ) DX3DVNORM( -0.091936, -0.987692, -0.126539 )  //12
DX3DVERT( -0.0908178, -0.475528, -0.125 ) DX3DVNORM( -0.18161, -0.951071, -0.249965 )  //13
DX3DVERT( -0.0632791, -0.493844, -0.045975 ) DX3DVNORM( -0.126539, -0.987692, -0.0919356 )  //14
DX3DVERT( -0.125, -0.475528, -0.0908178 ) DX3DVNORM( -0.249965, -0.951071, -0.18161 )  //15
DX3DVERT( -0.074389, -0.493844, -0.0241705 ) DX3DVNORM( -0.148755, -0.987692, -0.0483337 )  //16
DX3DVERT( -0.146946, -0.475528, -0.0477458 ) DX3DVNORM( -0.293852, -0.95107, -0.0954784 )  //17
DX3DVERT( -0.0782173, -0.493844, -1.32875e-009 ) DX3DVNORM( -0.156411, -0.987692, -7.00918e-010 )  //18
DX3DVERT( -0.154509, -0.475528, -2.62479e-009 ) DX3DVNORM( -0.308974, -0.951071, -9.35379e-010 )  //19
DX3DVERT( -0.074389, -0.493844, 0.0241705 ) DX3DVNORM( -0.148756, -0.987692, 0.0483337 )  //20
DX3DVERT( -0.146946, -0.475528, 0.0477458 ) DX3DVNORM( -0.293852, -0.95107, 0.0954783 )  //21
DX3DVERT( -0.0632791, -0.493844, 0.0459749 ) DX3DVNORM( -0.126539, -0.987692, 0.0919353 )  //22
DX3DVERT( -0.125, -0.475528, 0.0908178 ) DX3DVNORM( -0.249965, -0.951071, 0.18161 )  //23
DX3DVERT( -0.0459749, -0.493844, 0.0632791 ) DX3DVNORM( -0.091936, -0.987692, 0.126539 )  //24
DX3DVERT( -0.0908178, -0.475528, 0.125 ) DX3DVNORM( -0.18161, -0.95107, 0.249965 )  //25
DX3DVERT( -0.0241705, -0.493844, 0.074389 ) DX3DVNORM( -0.0483336, -0.987692, 0.148755 )  //26
DX3DVERT( -0.0477458, -0.475528, 0.146946 ) DX3DVNORM( -0.0954782, -0.951071, 0.293852 )  //27
DX3DVERT( 7.76294e-010, -0.493844, 0.0782172 ) DX3DVNORM( 2.64012e-008, -0.987692, 0.15641 )  //28
DX3DVERT( 1.53347e-009, -0.475528, 0.154509 ) DX3DVNORM( 7.01534e-008, -0.951071, 0.308974 )  //29
DX3DVERT( 0.0241705, -0.493844, 0.074389 ) DX3DVNORM( 0.0483336, -0.987692, 0.148755 )  //30
DX3DVERT( 0.0477458, -0.475528, 0.146946 ) DX3DVNORM( 0.0954783, -0.951071, 0.293852 )  //31
DX3DVERT( 0.0459749, -0.493844, 0.0632791 ) DX3DVNORM( 0.091936, -0.987692, 0.126539 )  //32
DX3DVERT( 0.0908178, -0.475528, 0.125 ) DX3DVNORM( 0.18161, -0.95107, 0.249965 )  //33
DX3DVERT( 0.0632791, -0.493844, 0.0459749 ) DX3DVNORM( 0.126539, -0.987692, 0.091936 )  //34
DX3DVERT( 0.125, -0.475528, 0.0908178 ) DX3DVNORM( 0.249965, -0.951071, 0.181611 )  //35
DX3DVERT( 0.074389, -0.493844, 0.0241705 ) DX3DVNORM( 0.148756, -0.987692, 0.0483337 )  //36
DX3DVERT( 0.146946, -0.475528, 0.0477458 ) DX3DVNORM( 0.293852, -0.951071, 0.0954785 )  //37
DX3DVERT( 0.0782172, -0.493844, 0 ) DX3DVNORM( 0.156411, -0.987692, 3.37375e-007 )  //38
DX3DVERT( 0.154509, -0.475528, 0 ) DX3DVNORM( 0.308974, -0.951071, 3.45155e-007 )  //39
DX3DVERT( 0.183643, -0.445503, -0.133425 ) DX3DVNORM( 0.367241, -0.891035, -0.266816 )  //40
DX3DVERT( 0.215885, -0.445503, -0.0701454 ) DX3DVNORM( 0.431718, -0.891035, -0.140273 )  //41
DX3DVERT( 0.133425, -0.445503, -0.183643 ) DX3DVNORM( 0.266816, -0.891035, -0.367241 )  //42
DX3DVERT( 0.0701454, -0.445503, -0.215885 ) DX3DVNORM( 0.140274, -0.891035, -0.431718 )  //43
DX3DVERT( 1.6033e-009, -0.445503, -0.226995 ) DX3DVNORM( 0, -0.891035, -0.453935 )  //44
DX3DVERT( -0.0701454, -0.445503, -0.215885 ) DX3DVNORM( -0.140274, -0.891035, -0.431718 )  //45
DX3DVERT( -0.133425, -0.445503, -0.183643 ) DX3DVNORM( -0.266816, -0.891035, -0.367241 )  //46
DX3DVERT( -0.183643, -0.445503, -0.133425 ) DX3DVNORM( -0.367241, -0.891035, -0.266816 )  //47
DX3DVERT( -0.215885, -0.445503, -0.0701454 ) DX3DVNORM( -0.431718, -0.891035, -0.140274 )  //48
DX3DVERT( -0.226995, -0.445503, -3.8562e-009 ) DX3DVNORM( -0.453935, -0.891035, 7.49325e-008 )  //49
DX3DVERT( -0.215885, -0.445503, 0.0701454 ) DX3DVNORM( -0.431718, -0.891035, 0.140274 )  //50
DX3DVERT( -0.183643, -0.445503, 0.133424 ) DX3DVNORM( -0.367241, -0.891035, 0.266816 )  //51
DX3DVERT( -0.133424, -0.445503, 0.183643 ) DX3DVNORM( -0.266816, -0.891035, 0.367241 )  //52
DX3DVERT( -0.0701454, -0.445503, 0.215885 ) DX3DVNORM( -0.140274, -0.891035, 0.431718 )  //53
DX3DVERT( 2.25289e-009, -0.445503, 0.226995 ) DX3DVNORM( 4.49595e-008, -0.891035, 0.453935 )  //54
DX3DVERT( 0.0701454, -0.445503, 0.215885 ) DX3DVNORM( 0.140274, -0.891035, 0.431718 )  //55
DX3DVERT( 0.133424, -0.445503, 0.183643 ) DX3DVNORM( 0.266816, -0.891035, 0.367241 )  //56
DX3DVERT( 0.183643, -0.445503, 0.133424 ) DX3DVNORM( 0.367241, -0.891035, 0.266817 )  //57
DX3DVERT( 0.215885, -0.445503, 0.0701454 ) DX3DVNORM( 0.431718, -0.891035, 0.140274 )  //58
DX3DVERT( 0.226995, -0.445503, 0 ) DX3DVNORM( 0.453935, -0.891035, 1.87331e-008 )  //59
DX3DVERT( 0.237764, -0.404509, -0.172746 ) DX3DVNORM( 0.47548, -0.80906, -0.345457 )  //60
DX3DVERT( 0.279509, -0.404509, -0.0908179 ) DX3DVNORM( 0.558961, -0.80906, -0.181617 )  //61
DX3DVERT( 0.172746, -0.404509, -0.237764 ) DX3DVNORM( 0.345457, -0.80906, -0.475481 )  //62
DX3DVERT( 0.0908179, -0.404509, -0.279509 ) DX3DVNORM( 0.181617, -0.80906, -0.558961 )  //63
DX3DVERT( 2.07581e-009, -0.404509, -0.293893 ) DX3DVNORM( -3.75305e-009, -0.80906, -0.587726 )  //64
DX3DVERT( -0.0908178, -0.404509, -0.279509 ) DX3DVNORM( -0.181618, -0.80906, -0.558961 )  //65
DX3DVERT( -0.172746, -0.404509, -0.237764 ) DX3DVNORM( -0.345457, -0.80906, -0.475481 )  //66
DX3DVERT( -0.237764, -0.404509, -0.172746 ) DX3DVNORM( -0.475481, -0.80906, -0.345457 )  //67
DX3DVERT( -0.279509, -0.404509, -0.0908178 ) DX3DVNORM( -0.558961, -0.80906, -0.181617 )  //68
DX3DVERT( -0.293893, -0.404509, -4.99265e-009 ) DX3DVNORM( -0.587726, -0.80906, 7.69376e-008 )  //69
DX3DVERT( -0.279509, -0.404509, 0.0908178 ) DX3DVNORM( -0.558961, -0.80906, 0.181617 )  //70
DX3DVERT( -0.237764, -0.404509, 0.172746 ) DX3DVNORM( -0.47548, -0.80906, 0.345457 )  //71
DX3DVERT( -0.172746, -0.404509, 0.237764 ) DX3DVNORM( -0.345457, -0.80906, 0.475481 )  //72
DX3DVERT( -0.0908178, -0.404509, 0.279509 ) DX3DVNORM( -0.181617, -0.80906, 0.558961 )  //73
DX3DVERT( 2.91684e-009, -0.404509, 0.293893 ) DX3DVNORM( -7.5061e-009, -0.80906, 0.587726 )  //74
DX3DVERT( 0.0908178, -0.404509, 0.279509 ) DX3DVNORM( 0.181617, -0.80906, 0.558961 )  //75
DX3DVERT( 0.172746, -0.404509, 0.237764 ) DX3DVNORM( 0.345457, -0.80906, 0.475481 )  //76
DX3DVERT( 0.237764, -0.404509, 0.172746 ) DX3DVNORM( 0.475481, -0.80906, 0.345457 )  //77
DX3DVERT( 0.279509, -0.404509, 0.0908178 ) DX3DVNORM( 0.558961, -0.80906, 0.181617 )  //78
DX3DVERT( 0.293893, -0.404509, 0 ) DX3DVNORM( 0.587726, -0.80906, 3.1338e-007 )  //79
DX3DVERT( 0.286031, -0.353553, -0.207814 ) DX3DVNORM( 0.572018, -0.707161, -0.415595 )  //80
DX3DVERT( 0.336249, -0.353553, -0.109254 ) DX3DVNORM( 0.672447, -0.707161, -0.218491 )  //81
DX3DVERT( 0.207814, -0.353553, -0.286031 ) DX3DVNORM( 0.415595, -0.707161, -0.572018 )  //82
DX3DVERT( 0.109254, -0.353553, -0.336249 ) DX3DVNORM( 0.218491, -0.707161, -0.672447 )  //83
DX3DVERT( 2.49721e-009, -0.353553, -0.353554 ) DX3DVNORM( -9.96444e-008, -0.707161, -0.707053 )  //84
DX3DVERT( -0.109254, -0.353553, -0.336249 ) DX3DVNORM( -0.218491, -0.707161, -0.672447 )  //85
DX3DVERT( -0.207814, -0.353553, -0.286031 ) DX3DVNORM( -0.415595, -0.707161, -0.572018 )  //86
DX3DVERT( -0.286031, -0.353553, -0.207814 ) DX3DVNORM( -0.572018, -0.707161, -0.415595 )  //87
DX3DVERT( -0.336249, -0.353553, -0.109254 ) DX3DVNORM( -0.672447, -0.707161, -0.218491 )  //88
DX3DVERT( -0.353553, -0.353553, -6.00617e-009 ) DX3DVNORM( -0.707053, -0.707161, 1.88008e-008 )  //89
DX3DVERT( -0.336249, -0.353553, 0.109254 ) DX3DVNORM( -0.672447, -0.707161, 0.218491 )  //90
DX3DVERT( -0.286031, -0.353553, 0.207814 ) DX3DVNORM( -0.572018, -0.707161, 0.415595 )  //91
DX3DVERT( -0.207814, -0.353553, 0.286031 ) DX3DVNORM( -0.415595, -0.707161, 0.572018 )  //92
DX3DVERT( -0.109254, -0.353553, 0.336249 ) DX3DVNORM( -0.218491, -0.707161, 0.672447 )  //93
DX3DVERT( 3.50896e-009, -0.353553, 0.353553 ) DX3DVNORM( -3.76017e-009, -0.707161, 0.707053 )  //94
DX3DVERT( 0.109254, -0.353553, 0.336249 ) DX3DVNORM( 0.218491, -0.707161, 0.672447 )  //95
DX3DVERT( 0.207813, -0.353553, 0.286031 ) DX3DVNORM( 0.415595, -0.707161, 0.572018 )  //96
DX3DVERT( 0.286031, -0.353553, 0.207813 ) DX3DVNORM( 0.572018, -0.707161, 0.415595 )  //97
DX3DVERT( 0.336249, -0.353553, 0.109254 ) DX3DVNORM( 0.672447, -0.707161, 0.218491 )  //98
DX3DVERT( 0.353553, -0.353553, 0 ) DX3DVNORM( 0.707053, -0.707161, 5.67785e-007 )  //99
DX3DVERT( 0.327254, -0.293893, -0.237764 ) DX3DVNORM( 0.654474, -0.587844, -0.475503 )  //100
DX3DVERT( 0.384711, -0.293893, -0.125 ) DX3DVNORM( 0.769381, -0.587844, -0.249986 )  //101
DX3DVERT( 0.237764, -0.293893, -0.327254 ) DX3DVNORM( 0.475503, -0.587844, -0.654474 )  //102
DX3DVERT( 0.125, -0.293893, -0.384711 ) DX3DVNORM( 0.249987, -0.587844, -0.76938 )  //103
DX3DVERT( 2.85711e-009, -0.293893, -0.404509 ) DX3DVNORM( -1.43156e-007, -0.587844, -0.808974 )  //104
DX3DVERT( -0.125, -0.293893, -0.384711 ) DX3DVNORM( -0.249987, -0.587844, -0.76938 )  //105
DX3DVERT( -0.237764, -0.293893, -0.327254 ) DX3DVNORM( -0.475503, -0.587844, -0.654474 )  //106
DX3DVERT( -0.327254, -0.293893, -0.237764 ) DX3DVNORM( -0.654474, -0.587844, -0.475503 )  //107
DX3DVERT( -0.384711, -0.293893, -0.125 ) DX3DVNORM( -0.76938, -0.587844, -0.249987 )  //108
DX3DVERT( -0.404509, -0.293893, -6.87179e-009 ) DX3DVNORM( -0.808974, -0.587844, -3.01381e-008 )  //109
DX3DVERT( -0.384711, -0.293893, 0.125 ) DX3DVNORM( -0.76938, -0.587844, 0.249987 )  //110
DX3DVERT( -0.327254, -0.293893, 0.237764 ) DX3DVNORM( -0.654474, -0.587844, 0.475503 )  //111
DX3DVERT( -0.237764, -0.293893, 0.327254 ) DX3DVNORM( -0.475503, -0.587844, 0.654474 )  //112
DX3DVERT( -0.125, -0.293893, 0.38471 ) DX3DVNORM( -0.249987, -0.587844, 0.76938 )  //113
DX3DVERT( 4.01468e-009, -0.293893, 0.404509 ) DX3DVNORM( 1.13018e-008, -0.587844, 0.808974 )  //114
DX3DVERT( 0.125, -0.293893, 0.38471 ) DX3DVNORM( 0.249987, -0.587844, 0.76938 )  //115
DX3DVERT( 0.237764, -0.293893, 0.327254 ) DX3DVNORM( 0.475503, -0.587844, 0.654474 )  //116
DX3DVERT( 0.327254, -0.293893, 0.237764 ) DX3DVNORM( 0.654474, -0.587844, 0.475503 )  //117
DX3DVERT( 0.38471, -0.293893, 0.125 ) DX3DVNORM( 0.769381, -0.587844, 0.249987 )  //118
DX3DVERT( 0.404509, -0.293893, 0 ) DX3DVNORM( 0.808975, -0.587844, 5.98996e-007 )  //119
DX3DVERT( 0.36042, -0.226995, -0.26186 ) DX3DVNORM( 0.720817, -0.454045, -0.523704 )  //120
DX3DVERT( 0.423699, -0.226995, -0.137668 ) DX3DVNORM( 0.847371, -0.454045, -0.275327 )  //121
DX3DVERT( 0.26186, -0.226995, -0.36042 ) DX3DVNORM( 0.523704, -0.454045, -0.720817 )  //122
DX3DVERT( 0.137668, -0.226995, -0.423699 ) DX3DVNORM( 0.275327, -0.454045, -0.847371 )  //123
DX3DVERT( 3.14666e-009, -0.226995, -0.445503 ) DX3DVNORM( -1.35852e-007, -0.454045, -0.890979 )  //124
DX3DVERT( -0.137668, -0.226995, -0.423699 ) DX3DVNORM( -0.275328, -0.454045, -0.847371 )  //125
DX3DVERT( -0.26186, -0.226995, -0.36042 ) DX3DVNORM( -0.523704, -0.454045, -0.720817 )  //126
DX3DVERT( -0.36042, -0.226995, -0.26186 ) DX3DVNORM( -0.720817, -0.454045, -0.523704 )  //127
DX3DVERT( -0.423699, -0.226995, -0.137668 ) DX3DVNORM( -0.847371, -0.454045, -0.275328 )  //128
DX3DVERT( -0.445503, -0.226995, -7.56821e-009 ) DX3DVNORM( -0.890979, -0.454045, -6.03786e-008 )  //129
DX3DVERT( -0.423699, -0.226995, 0.137668 ) DX3DVNORM( -0.847371, -0.454045, 0.275327 )  //130
DX3DVERT( -0.36042, -0.226995, 0.26186 ) DX3DVNORM( -0.720817, -0.454045, 0.523704 )  //131
DX3DVERT( -0.26186, -0.226995, 0.36042 ) DX3DVNORM( -0.523704, -0.454045, 0.720817 )  //132
DX3DVERT( -0.137668, -0.226995, 0.423699 ) DX3DVNORM( -0.275327, -0.454045, 0.847371 )  //133
DX3DVERT( 4.42155e-009, -0.226995, 0.445503 ) DX3DVNORM( 9.43416e-008, -0.454045, 0.890979 )  //134
DX3DVERT( 0.137668, -0.226995, 0.423699 ) DX3DVNORM( 0.275328, -0.454045, 0.847371 )  //135
DX3DVERT( 0.26186, -0.226995, 0.36042 ) DX3DVNORM( 0.523704, -0.454045, 0.720817 )  //136
DX3DVERT( 0.36042, -0.226995, 0.26186 ) DX3DVNORM( 0.720817, -0.454045, 0.523704 )  //137
DX3DVERT( 0.423699, -0.226995, 0.137668 ) DX3DVNORM( 0.847371, -0.454045, 0.275327 )  //138
DX3DVERT( 0.445503, -0.226995, 0 ) DX3DVNORM( 0.890979, -0.454045, 6.90581e-007 )  //139
DX3DVERT( 0.384711, -0.154508, -0.279509 ) DX3DVNORM( 0.76941, -0.309059, -0.559009 )  //140
DX3DVERT( 0.452254, -0.154508, -0.146946 ) DX3DVNORM( 0.904496, -0.309059, -0.293888 )  //141
DX3DVERT( 0.279509, -0.154508, -0.384711 ) DX3DVNORM( 0.559009, -0.309059, -0.76941 )  //142
DX3DVERT( 0.146946, -0.154508, -0.452254 ) DX3DVNORM( 0.293888, -0.309059, -0.904496 )  //143
DX3DVERT( 3.35873e-009, -0.154508, -0.475528 ) DX3DVNORM( -1.62486e-007, -0.309059, -0.951043 )  //144
DX3DVERT( -0.146946, -0.154508, -0.452254 ) DX3DVNORM( -0.293888, -0.309059, -0.904495 )  //145
DX3DVERT( -0.279509, -0.154508, -0.384711 ) DX3DVNORM( -0.559009, -0.309059, -0.76941 )  //146
DX3DVERT( -0.384711, -0.154508, -0.279509 ) DX3DVNORM( -0.76941, -0.309059, -0.559009 )  //147
DX3DVERT( -0.452254, -0.154508, -0.146946 ) DX3DVNORM( -0.904495, -0.309059, -0.293888 )  //148
DX3DVERT( -0.475528, -0.154508, -8.07828e-009 ) DX3DVNORM( -0.951043, -0.309059, -1.88937e-008 )  //149
DX3DVERT( -0.452254, -0.154508, 0.146946 ) DX3DVNORM( -0.904495, -0.309059, 0.293888 )  //150
DX3DVERT( -0.384711, -0.154508, 0.279509 ) DX3DVNORM( -0.76941, -0.309059, 0.559009 )  //151
DX3DVERT( -0.279509, -0.154508, 0.384711 ) DX3DVNORM( -0.559009, -0.309059, 0.76941 )  //152
DX3DVERT( -0.146946, -0.154508, 0.452254 ) DX3DVNORM( -0.293888, -0.309059, 0.904495 )  //153
DX3DVERT( 4.71954e-009, -0.154508, 0.475528 ) DX3DVNORM( 1.54928e-007, -0.309059, 0.951043 )  //154
DX3DVERT( 0.146946, -0.154508, 0.452254 ) DX3DVNORM( 0.293888, -0.309059, 0.904495 )  //155
DX3DVERT( 0.279509, -0.154508, 0.38471 ) DX3DVNORM( 0.559009, -0.309059, 0.76941 )  //156
DX3DVERT( 0.38471, -0.154508, 0.279509 ) DX3DVNORM( 0.76941, -0.309059, 0.559009 )  //157
DX3DVERT( 0.452254, -0.154508, 0.146946 ) DX3DVNORM( 0.904495, -0.309059, 0.293888 )  //158
DX3DVERT( 0.475528, -0.154508, 0 ) DX3DVNORM( 0.951043, -0.309059, 6.8773e-007 )  //159
DX3DVERT( 0.399529, -0.0782172, -0.290274 ) DX3DVNORM( 0.799054, -0.156457, -0.580546 )  //160
DX3DVERT( 0.469674, -0.0782172, -0.152606 ) DX3DVNORM( 0.939344, -0.156457, -0.305211 )  //161
DX3DVERT( 0.290274, -0.0782172, -0.399529 ) DX3DVNORM( 0.580546, -0.156457, -0.799054 )  //162
DX3DVERT( 0.152606, -0.0782172, -0.469674 ) DX3DVNORM( 0.305211, -0.156457, -0.939344 )  //163
DX3DVERT( 3.4881e-009, -0.0782172, -0.493844 ) DX3DVNORM( -1.51279e-007, -0.156457, -0.987685 )  //164
DX3DVERT( -0.152606, -0.0782172, -0.469674 ) DX3DVNORM( -0.305211, -0.156457, -0.939344 )  //165
DX3DVERT( -0.290274, -0.0782172, -0.399528 ) DX3DVNORM( -0.580546, -0.156457, -0.799054 )  //166
DX3DVERT( -0.399528, -0.0782172, -0.290274 ) DX3DVNORM( -0.799054, -0.156457, -0.580546 )  //167
DX3DVERT( -0.469674, -0.0782172, -0.152606 ) DX3DVNORM( -0.939344, -0.156457, -0.305211 )  //168
DX3DVERT( -0.493844, -0.0782172, -8.38943e-009 ) DX3DVNORM( -0.987685, -0.156457, -3.78198e-009 )  //169
DX3DVERT( -0.469674, -0.0782172, 0.152606 ) DX3DVNORM( -0.939344, -0.156457, 0.305211 )  //170
DX3DVERT( -0.399528, -0.0782172, 0.290274 ) DX3DVNORM( -0.799054, -0.156457, 0.580547 )  //171
DX3DVERT( -0.290274, -0.0782172, 0.399528 ) DX3DVNORM( -0.580546, -0.156457, 0.799054 )  //172
DX3DVERT( -0.152606, -0.0782172, 0.469674 ) DX3DVNORM( -0.305211, -0.156457, 0.939344 )  //173
DX3DVERT( 4.90133e-009, -0.0782172, 0.493844 ) DX3DVNORM( 7.18577e-008, -0.156457, 0.987685 )  //174
DX3DVERT( 0.152606, -0.0782172, 0.469674 ) DX3DVNORM( 0.305211, -0.156457, 0.939344 )  //175
DX3DVERT( 0.290274, -0.0782172, 0.399528 ) DX3DVNORM( 0.580547, -0.156457, 0.799054 )  //176
DX3DVERT( 0.399528, -0.0782172, 0.290274 ) DX3DVNORM( 0.799054, -0.156457, 0.580546 )  //177
DX3DVERT( 0.469674, -0.0782172, 0.152606 ) DX3DVNORM( 0.939344, -0.156457, 0.305211 )  //178
DX3DVERT( 0.493844, -0.0782172, 0 ) DX3DVNORM( 0.987685, -0.156457, 6.58065e-007 )  //179
DX3DVERT( 0.404509, 0, -0.293893 ) DX3DVNORM( 0.809017, 0, -0.587785 )  //180
DX3DVERT( 0.475528, 0, -0.154509 ) DX3DVNORM( 0.951057, 0, -0.309016 )  //181
DX3DVERT( 0.293893, 0, -0.404509 ) DX3DVNORM( 0.587785, -2.08071e-008, -0.809017 )  //182
DX3DVERT( 0.154509, 0, -0.475528 ) DX3DVNORM( 0.309017, -2.08071e-008, -0.951057 )  //183
DX3DVERT( 3.53158e-009, 0, -0.5 ) DX3DVNORM( -1.5889e-007, 1.89155e-009, -1 )  //184
DX3DVERT( -0.154509, 0, -0.475528 ) DX3DVNORM( -0.309017, -1.89155e-008, -0.951056 )  //185
DX3DVERT( -0.293893, 0, -0.404509 ) DX3DVNORM( -0.587785, -1.89155e-008, -0.809017 )  //186
DX3DVERT( -0.404509, 0, -0.293893 ) DX3DVNORM( -0.809017, 1.89155e-009, -0.587785 )  //187
DX3DVERT( -0.475528, 0, -0.154509 ) DX3DVNORM( -0.951056, 0, -0.309017 )  //188
DX3DVERT( -0.5, 0, -8.494e-009 ) DX3DVNORM( -1, 0, 0 )  //189
DX3DVERT( -0.475528, 0, 0.154509 ) DX3DVNORM( -0.951056, 1.89155e-009, 0.309017 )  //190
DX3DVERT( -0.404509, 0, 0.293893 ) DX3DVNORM( -0.809017, 1.89155e-009, 0.587785 )  //191
DX3DVERT( -0.293893, 0, 0.404509 ) DX3DVNORM( -0.587785, 0, 0.809017 )  //192
DX3DVERT( -0.154509, 0, 0.475528 ) DX3DVNORM( -0.309017, 1.89155e-009, 0.951056 )  //193
DX3DVERT( 4.96242e-009, 0, 0.5 ) DX3DVNORM( 0, -1.89155e-009, 1 )  //194
DX3DVERT( 0.154509, 0, 0.475528 ) DX3DVNORM( 0.309017, 0, 0.951056 )  //195
DX3DVERT( 0.293893, 0, 0.404509 ) DX3DVNORM( 0.587785, -1.89155e-009, 0.809017 )  //196
DX3DVERT( 0.404509, 0, 0.293893 ) DX3DVNORM( 0.809017, 1.89155e-009, 0.587785 )  //197
DX3DVERT( 0.475528, 0, 0.154509 ) DX3DVNORM( 0.951056, -1.89155e-009, 0.309017 )  //198
DX3DVERT( 0.5, 0, 0 ) DX3DVNORM( 1, -1.89155e-009, 6.50694e-007 )  //199
DX3DVERT( 0.399529, 0.0782172, -0.290274 ) DX3DVNORM( 0.799054, 0.156457, -0.580546 )  //200
DX3DVERT( 0.469674, 0.0782172, -0.152606 ) DX3DVNORM( 0.939344, 0.156457, -0.305211 )  //201
DX3DVERT( 0.290274, 0.0782172, -0.399529 ) DX3DVNORM( 0.580546, 0.156457, -0.799054 )  //202
DX3DVERT( 0.152606, 0.0782172, -0.469674 ) DX3DVNORM( 0.305211, 0.156457, -0.939344 )  //203
DX3DVERT( 3.4881e-009, 0.0782172, -0.493844 ) DX3DVNORM( -1.58843e-007, 0.156457, -0.987685 )  //204
DX3DVERT( -0.152606, 0.0782172, -0.469674 ) DX3DVNORM( -0.305211, 0.156457, -0.939344 )  //205
DX3DVERT( -0.290274, 0.0782172, -0.399528 ) DX3DVNORM( -0.580546, 0.156457, -0.799054 )  //206
DX3DVERT( -0.399528, 0.0782172, -0.290274 ) DX3DVNORM( -0.799054, 0.156457, -0.580546 )  //207
DX3DVERT( -0.469674, 0.0782172, -0.152606 ) DX3DVNORM( -0.939344, 0.156457, -0.305211 )  //208
DX3DVERT( -0.493844, 0.0782172, -8.38943e-009 ) DX3DVNORM( -0.987685, 0.156457, 0 )  //209
DX3DVERT( -0.469674, 0.0782172, 0.152606 ) DX3DVNORM( -0.939344, 0.156457, 0.305211 )  //210
DX3DVERT( -0.399528, 0.0782172, 0.290274 ) DX3DVNORM( -0.799054, 0.156457, 0.580547 )  //211
DX3DVERT( -0.290274, 0.0782172, 0.399528 ) DX3DVNORM( -0.580546, 0.156457, 0.799054 )  //212
DX3DVERT( -0.152606, 0.0782172, 0.469674 ) DX3DVNORM( -0.305211, 0.156457, 0.939344 )  //213
DX3DVERT( 4.90133e-009, 0.0782172, 0.493844 ) DX3DVNORM( 7.56397e-008, 0.156457, 0.987685 )  //214
DX3DVERT( 0.152606, 0.0782172, 0.469674 ) DX3DVNORM( 0.305211, 0.156457, 0.939344 )  //215
DX3DVERT( 0.290274, 0.0782172, 0.399528 ) DX3DVNORM( 0.580547, 0.156457, 0.799054 )  //216
DX3DVERT( 0.399528, 0.0782172, 0.290274 ) DX3DVNORM( 0.799054, 0.156457, 0.580546 )  //217
DX3DVERT( 0.469674, 0.0782172, 0.152606 ) DX3DVNORM( 0.939344, 0.156457, 0.305211 )  //218
DX3DVERT( 0.493844, 0.0782172, 0 ) DX3DVNORM( 0.987685, 0.156457, 6.54283e-007 )  //219
DX3DVERT( 0.384711, 0.154508, -0.279509 ) DX3DVNORM( 0.76941, 0.309059, -0.559009 )  //220
DX3DVERT( 0.452254, 0.154508, -0.146946 ) DX3DVNORM( 0.904496, 0.309059, -0.293888 )  //221
DX3DVERT( 0.279509, 0.154508, -0.384711 ) DX3DVNORM( 0.559009, 0.309059, -0.76941 )  //222
DX3DVERT( 0.146946, 0.154508, -0.452254 ) DX3DVNORM( 0.293888, 0.309059, -0.904496 )  //223
DX3DVERT( 3.35873e-009, 0.154508, -0.475528 ) DX3DVNORM( -1.66264e-007, 0.309059, -0.951043 )  //224
DX3DVERT( -0.146946, 0.154508, -0.452254 ) DX3DVNORM( -0.293888, 0.309059, -0.904496 )  //225
DX3DVERT( -0.279509, 0.154508, -0.384711 ) DX3DVNORM( -0.559009, 0.309059, -0.76941 )  //226
DX3DVERT( -0.384711, 0.154508, -0.279509 ) DX3DVNORM( -0.76941, 0.309059, -0.559009 )  //227
DX3DVERT( -0.452254, 0.154508, -0.146946 ) DX3DVNORM( -0.904495, 0.309059, -0.293888 )  //228
DX3DVERT( -0.475528, 0.154508, -8.07828e-009 ) DX3DVNORM( -0.951043, 0.309059, -1.51149e-008 )  //229
DX3DVERT( -0.452254, 0.154508, 0.146946 ) DX3DVNORM( -0.904495, 0.309059, 0.293888 )  //230
DX3DVERT( -0.384711, 0.154508, 0.279509 ) DX3DVNORM( -0.76941, 0.309059, 0.559009 )  //231
DX3DVERT( -0.279509, 0.154508, 0.384711 ) DX3DVNORM( -0.559009, 0.309059, 0.76941 )  //232
DX3DVERT( -0.146946, 0.154508, 0.452254 ) DX3DVNORM( -0.293888, 0.309059, 0.904496 )  //233
DX3DVERT( 4.71954e-009, 0.154508, 0.475528 ) DX3DVNORM( 1.58707e-007, 0.309059, 0.951043 )  //234
DX3DVERT( 0.146946, 0.154508, 0.452254 ) DX3DVNORM( 0.293888, 0.309059, 0.904495 )  //235
DX3DVERT( 0.279509, 0.154508, 0.38471 ) DX3DVNORM( 0.559009, 0.309059, 0.76941 )  //236
DX3DVERT( 0.38471, 0.154508, 0.279509 ) DX3DVNORM( 0.76941, 0.309059, 0.559009 )  //237
DX3DVERT( 0.452254, 0.154508, 0.146946 ) DX3DVNORM( 0.904495, 0.309059, 0.293888 )  //238
DX3DVERT( 0.475528, 0.154508, 0 ) DX3DVNORM( 0.951043, 0.309059, 6.72615e-007 )  //239
DX3DVERT( 0.36042, 0.226995, -0.26186 ) DX3DVNORM( 0.720817, 0.454045, -0.523704 )  //240
DX3DVERT( 0.423699, 0.226995, -0.137668 ) DX3DVNORM( 0.847371, 0.454045, -0.275327 )  //241
DX3DVERT( 0.26186, 0.226995, -0.36042 ) DX3DVNORM( 0.523704, 0.454045, -0.720817 )  //242
DX3DVERT( 0.137668, 0.226995, -0.423699 ) DX3DVNORM( 0.275327, 0.454045, -0.847371 )  //243
DX3DVERT( 3.14666e-009, 0.226995, -0.445503 ) DX3DVNORM( -1.32078e-007, 0.454045, -0.890979 )  //244
DX3DVERT( -0.137668, 0.226995, -0.423699 ) DX3DVNORM( -0.275328, 0.454045, -0.847371 )  //245
DX3DVERT( -0.26186, 0.226995, -0.36042 ) DX3DVNORM( -0.523704, 0.454045, -0.720817 )  //246
DX3DVERT( -0.36042, 0.226995, -0.26186 ) DX3DVNORM( -0.720817, 0.454045, -0.523704 )  //247
DX3DVERT( -0.423699, 0.226995, -0.137668 ) DX3DVNORM( -0.847371, 0.454045, -0.275328 )  //248
DX3DVERT( -0.445503, 0.226995, -7.56821e-009 ) DX3DVNORM( -0.890979, 0.454045, -6.03786e-008 )  //249
DX3DVERT( -0.423699, 0.226995, 0.137668 ) DX3DVNORM( -0.847371, 0.454045, 0.275327 )  //250
DX3DVERT( -0.36042, 0.226995, 0.26186 ) DX3DVNORM( -0.720817, 0.454045, 0.523704 )  //251
DX3DVERT( -0.26186, 0.226995, 0.36042 ) DX3DVNORM( -0.523704, 0.454045, 0.720817 )  //252
DX3DVERT( -0.137668, 0.226995, 0.423699 ) DX3DVNORM( -0.275327, 0.454045, 0.847371 )  //253
DX3DVERT( 4.42155e-009, 0.226995, 0.445503 ) DX3DVNORM( 9.43416e-008, 0.454045, 0.890979 )  //254
DX3DVERT( 0.137668, 0.226995, 0.423699 ) DX3DVNORM( 0.275328, 0.454045, 0.847371 )  //255
DX3DVERT( 0.26186, 0.226995, 0.36042 ) DX3DVNORM( 0.523704, 0.454045, 0.720817 )  //256
DX3DVERT( 0.36042, 0.226995, 0.26186 ) DX3DVNORM( 0.720817, 0.454045, 0.523704 )  //257
DX3DVERT( 0.423699, 0.226995, 0.137668 ) DX3DVNORM( 0.847371, 0.454045, 0.275327 )  //258
DX3DVERT( 0.445503, 0.226995, 0 ) DX3DVNORM( 0.890979, 0.454045, 6.56618e-007 )  //259
DX3DVERT( 0.327254, 0.293893, -0.237764 ) DX3DVNORM( 0.654474, 0.587844, -0.475503 )  //260
DX3DVERT( 0.384711, 0.293893, -0.125 ) DX3DVNORM( 0.769381, 0.587844, -0.249986 )  //261
DX3DVERT( 0.237764, 0.293893, -0.327254 ) DX3DVNORM( 0.475503, 0.587844, -0.654474 )  //262
DX3DVERT( 0.125, 0.293893, -0.384711 ) DX3DVNORM( 0.249987, 0.587844, -0.76938 )  //263
DX3DVERT( 2.85711e-009, 0.293893, -0.404509 ) DX3DVNORM( -1.41273e-007, 0.587844, -0.808974 )  //264
DX3DVERT( -0.125, 0.293893, -0.384711 ) DX3DVNORM( -0.249987, 0.587844, -0.76938 )  //265
DX3DVERT( -0.237764, 0.293893, -0.327254 ) DX3DVNORM( -0.475503, 0.587844, -0.654474 )  //266
DX3DVERT( -0.327254, 0.293893, -0.237764 ) DX3DVNORM( -0.654474, 0.587844, -0.475503 )  //267
DX3DVERT( -0.384711, 0.293893, -0.125 ) DX3DVNORM( -0.76938, 0.587844, -0.249987 )  //268
DX3DVERT( -0.404509, 0.293893, -6.87179e-009 ) DX3DVNORM( -0.808975, 0.587844, -2.82545e-008 )  //269
DX3DVERT( -0.384711, 0.293893, 0.125 ) DX3DVNORM( -0.76938, 0.587844, 0.249987 )  //270
DX3DVERT( -0.327254, 0.293893, 0.237764 ) DX3DVNORM( -0.654474, 0.587844, 0.475503 )  //271
DX3DVERT( -0.237764, 0.293893, 0.327254 ) DX3DVNORM( -0.475503, 0.587844, 0.654474 )  //272
DX3DVERT( -0.125, 0.293893, 0.38471 ) DX3DVNORM( -0.249987, 0.587844, 0.76938 )  //273
DX3DVERT( 4.01468e-009, 0.293893, 0.404509 ) DX3DVNORM( 1.13018e-008, 0.587844, 0.808975 )  //274
DX3DVERT( 0.125, 0.293893, 0.38471 ) DX3DVNORM( 0.249987, 0.587844, 0.76938 )  //275
DX3DVERT( 0.237764, 0.293893, 0.327254 ) DX3DVNORM( 0.475503, 0.587844, 0.654474 )  //276
DX3DVERT( 0.327254, 0.293893, 0.237764 ) DX3DVNORM( 0.654474, 0.587844, 0.475503 )  //277
DX3DVERT( 0.38471, 0.293893, 0.125 ) DX3DVNORM( 0.769381, 0.587844, 0.249987 )  //278
DX3DVERT( 0.404509, 0.293893, 0 ) DX3DVNORM( 0.808975, 0.587844, 5.76392e-007 )  //279
DX3DVERT( 0.286031, 0.353553, -0.207814 ) DX3DVNORM( 0.572018, 0.707161, -0.415595 )  //280
DX3DVERT( 0.336249, 0.353553, -0.109254 ) DX3DVNORM( 0.672447, 0.707161, -0.218491 )  //281
DX3DVERT( 0.207814, 0.353553, -0.286031 ) DX3DVNORM( 0.415595, 0.707161, -0.572018 )  //282
DX3DVERT( 0.109254, 0.353553, -0.336249 ) DX3DVNORM( 0.218491, 0.707161, -0.672447 )  //283
DX3DVERT( 2.49721e-009, 0.353553, -0.353554 ) DX3DVNORM( -9.96444e-008, 0.707161, -0.707053 )  //284
DX3DVERT( -0.109254, 0.353553, -0.336249 ) DX3DVNORM( -0.218491, 0.707161, -0.672447 )  //285
DX3DVERT( -0.207814, 0.353553, -0.286031 ) DX3DVNORM( -0.415595, 0.707161, -0.572018 )  //286
DX3DVERT( -0.286031, 0.353553, -0.207814 ) DX3DVNORM( -0.572018, 0.707161, -0.415595 )  //287
DX3DVERT( -0.336249, 0.353553, -0.109254 ) DX3DVNORM( -0.672447, 0.707161, -0.218491 )  //288
DX3DVERT( -0.353553, 0.353553, -6.00617e-009 ) DX3DVNORM( -0.707053, 0.707161, 1.88008e-008 )  //289
DX3DVERT( -0.336249, 0.353553, 0.109254 ) DX3DVNORM( -0.672447, 0.707161, 0.218491 )  //290
DX3DVERT( -0.286031, 0.353553, 0.207814 ) DX3DVNORM( -0.572018, 0.707161, 0.415595 )  //291
DX3DVERT( -0.207814, 0.353553, 0.286031 ) DX3DVNORM( -0.415595, 0.707161, 0.572018 )  //292
DX3DVERT( -0.109254, 0.353553, 0.336249 ) DX3DVNORM( -0.218491, 0.707161, 0.672447 )  //293
DX3DVERT( 3.50896e-009, 0.353553, 0.353553 ) DX3DVNORM( -3.76017e-009, 0.707161, 0.707053 )  //294
DX3DVERT( 0.109254, 0.353553, 0.336249 ) DX3DVNORM( 0.218491, 0.707161, 0.672447 )  //295
DX3DVERT( 0.207813, 0.353553, 0.286031 ) DX3DVNORM( 0.415595, 0.707161, 0.572018 )  //296
DX3DVERT( 0.286031, 0.353553, 0.207813 ) DX3DVNORM( 0.572018, 0.707161, 0.415595 )  //297
DX3DVERT( 0.336249, 0.353553, 0.109254 ) DX3DVNORM( 0.672447, 0.707161, 0.218491 )  //298
DX3DVERT( 0.353553, 0.353553, 0 ) DX3DVNORM( 0.707053, 0.707161, 5.67785e-007 )  //299
DX3DVERT( 0.237764, 0.404509, -0.172746 ) DX3DVNORM( 0.47548, 0.80906, -0.345457 )  //300
DX3DVERT( 0.279509, 0.404509, -0.0908179 ) DX3DVNORM( 0.558961, 0.80906, -0.181617 )  //301
DX3DVERT( 0.172746, 0.404509, -0.237764 ) DX3DVNORM( 0.345457, 0.80906, -0.475481 )  //302
DX3DVERT( 0.0908179, 0.404509, -0.279509 ) DX3DVNORM( 0.181617, 0.80906, -0.558961 )  //303
DX3DVERT( 2.07581e-009, 0.404509, -0.293893 ) DX3DVNORM( -7.5061e-009, 0.80906, -0.587726 )  //304
DX3DVERT( -0.0908178, 0.404509, -0.279509 ) DX3DVNORM( -0.181618, 0.80906, -0.558961 )  //305
DX3DVERT( -0.172746, 0.404509, -0.237764 ) DX3DVNORM( -0.345457, 0.80906, -0.475481 )  //306
DX3DVERT( -0.237764, 0.404509, -0.172746 ) DX3DVNORM( -0.475481, 0.80906, -0.345457 )  //307
DX3DVERT( -0.279509, 0.404509, -0.0908178 ) DX3DVNORM( -0.558961, 0.80906, -0.181617 )  //308
DX3DVERT( -0.293893, 0.404509, -4.99265e-009 ) DX3DVNORM( -0.587726, 0.80906, 7.5061e-008 )  //309
DX3DVERT( -0.279509, 0.404509, 0.0908178 ) DX3DVNORM( -0.558961, 0.80906, 0.181618 )  //310
DX3DVERT( -0.237764, 0.404509, 0.172746 ) DX3DVNORM( -0.47548, 0.80906, 0.345457 )  //311
DX3DVERT( -0.172746, 0.404509, 0.237764 ) DX3DVNORM( -0.345457, 0.80906, 0.475481 )  //312
DX3DVERT( -0.0908178, 0.404509, 0.279509 ) DX3DVNORM( -0.181617, 0.80906, 0.558961 )  //313
DX3DVERT( 2.91684e-009, 0.404509, 0.293893 ) DX3DVNORM( -7.5061e-009, 0.80906, 0.587726 )  //314
DX3DVERT( 0.0908178, 0.404509, 0.279509 ) DX3DVNORM( 0.181617, 0.80906, 0.558961 )  //315
DX3DVERT( 0.172746, 0.404509, 0.237764 ) DX3DVNORM( 0.345457, 0.80906, 0.475481 )  //316
DX3DVERT( 0.237764, 0.404509, 0.172746 ) DX3DVNORM( 0.475481, 0.80906, 0.345457 )  //317
DX3DVERT( 0.279509, 0.404509, 0.0908178 ) DX3DVNORM( 0.558961, 0.80906, 0.181618 )  //318
DX3DVERT( 0.293893, 0.404509, 0 ) DX3DVNORM( 0.587727, 0.80906, 3.11503e-007 )  //319
DX3DVERT( 0.183643, 0.445503, -0.133425 ) DX3DVNORM( 0.367241, 0.891035, -0.266817 )  //320
DX3DVERT( 0.215885, 0.445503, -0.0701454 ) DX3DVNORM( 0.431718, 0.891035, -0.140274 )  //321
DX3DVERT( 0.133425, 0.445503, -0.183643 ) DX3DVNORM( 0.266816, 0.891035, -0.367241 )  //322
DX3DVERT( 0.0701454, 0.445503, -0.215885 ) DX3DVNORM( 0.140274, 0.891035, -0.431718 )  //323
DX3DVERT( 1.6033e-009, 0.445503, -0.226995 ) DX3DVNORM( -2.80997e-009, 0.891035, -0.453935 )  //324
DX3DVERT( -0.0701454, 0.445503, -0.215885 ) DX3DVNORM( -0.140274, 0.891035, -0.431718 )  //325
DX3DVERT( -0.133425, 0.445503, -0.183643 ) DX3DVNORM( -0.266816, 0.891035, -0.367241 )  //326
DX3DVERT( -0.183643, 0.445503, -0.133425 ) DX3DVNORM( -0.367241, 0.891035, -0.266816 )  //327
DX3DVERT( -0.215885, 0.445503, -0.0701454 ) DX3DVNORM( -0.431718, 0.891035, -0.140274 )  //328
DX3DVERT( -0.226995, 0.445503, -3.8562e-009 ) DX3DVNORM( -0.453935, 0.891035, 6.93125e-008 )  //329
DX3DVERT( -0.215885, 0.445503, 0.0701454 ) DX3DVNORM( -0.431718, 0.891035, 0.140274 )  //330
DX3DVERT( -0.183643, 0.445503, 0.133424 ) DX3DVNORM( -0.367241, 0.891035, 0.266816 )  //331
DX3DVERT( -0.133424, 0.445503, 0.183643 ) DX3DVNORM( -0.266816, 0.891035, 0.367241 )  //332
DX3DVERT( -0.0701454, 0.445503, 0.215885 ) DX3DVNORM( -0.140274, 0.891035, 0.431718 )  //333
DX3DVERT( 2.25289e-009, 0.445503, 0.226995 ) DX3DVNORM( 4.68328e-008, 0.891035, 0.453935 )  //334
DX3DVERT( 0.0701454, 0.445503, 0.215885 ) DX3DVNORM( 0.140274, 0.891035, 0.431718 )  //335
DX3DVERT( 0.133424, 0.445503, 0.183643 ) DX3DVNORM( 0.266816, 0.891035, 0.367241 )  //336
DX3DVERT( 0.183643, 0.445503, 0.133424 ) DX3DVNORM( 0.367241, 0.891035, 0.266816 )  //337
DX3DVERT( 0.215885, 0.445503, 0.0701454 ) DX3DVNORM( 0.431718, 0.891035, 0.140274 )  //338
DX3DVERT( 0.226995, 0.445503, 0 ) DX3DVNORM( 0.453935, 0.891035, 1.87331e-008 )  //339
DX3DVERT( 0.125, 0.475528, -0.0908179 ) DX3DVNORM( 0.249965, 0.951071, -0.18161 )  //340
DX3DVERT( 0.146946, 0.475528, -0.0477458 ) DX3DVNORM( 0.293852, 0.951071, -0.095478 )  //341
DX3DVERT( 0.0908179, 0.475528, -0.125 ) DX3DVNORM( 0.18161, 0.951071, -0.249965 )  //342
DX3DVERT( 0.0477458, 0.475528, -0.146946 ) DX3DVNORM( 0.0954781, 0.951071, -0.293852 )  //343
DX3DVERT( 1.09132e-009, 0.475528, -0.154509 ) DX3DVNORM( 9.35379e-010, 0.951071, -0.308974 )  //344
DX3DVERT( -0.0477458, 0.475528, -0.146946 ) DX3DVNORM( -0.0954782, 0.951071, -0.293852 )  //345
DX3DVERT( -0.0908178, 0.475528, -0.125 ) DX3DVNORM( -0.18161, 0.951071, -0.249965 )  //346
DX3DVERT( -0.125, 0.475528, -0.0908178 ) DX3DVNORM( -0.249965, 0.951071, -0.18161 )  //347
DX3DVERT( -0.146946, 0.475528, -0.0477458 ) DX3DVNORM( -0.293852, 0.951071, -0.0954783 )  //348
DX3DVERT( -0.154509, 0.475528, -2.62479e-009 ) DX3DVNORM( -0.308974, 0.951071, -3.74151e-009 )  //349
DX3DVERT( -0.146946, 0.475528, 0.0477458 ) DX3DVNORM( -0.293852, 0.95107, 0.0954785 )  //350
DX3DVERT( -0.125, 0.475528, 0.0908178 ) DX3DVNORM( -0.249965, 0.951071, 0.18161 )  //351
DX3DVERT( -0.0908178, 0.475528, 0.125 ) DX3DVNORM( -0.18161, 0.951071, 0.249965 )  //352
DX3DVERT( -0.0477458, 0.475528, 0.146946 ) DX3DVNORM( -0.0954782, 0.951071, 0.293851 )  //353
DX3DVERT( 1.53347e-009, 0.475528, 0.154509 ) DX3DVNORM( 7.10888e-008, 0.951071, 0.308974 )  //354
DX3DVERT( 0.0477458, 0.475528, 0.146946 ) DX3DVNORM( 0.0954783, 0.951071, 0.293852 )  //355
DX3DVERT( 0.0908178, 0.475528, 0.125 ) DX3DVNORM( 0.18161, 0.95107, 0.249965 )  //356
DX3DVERT( 0.125, 0.475528, 0.0908178 ) DX3DVNORM( 0.249965, 0.951071, 0.18161 )  //357
DX3DVERT( 0.146946, 0.475528, 0.0477458 ) DX3DVNORM( 0.293852, 0.951071, 0.0954783 )  //358
DX3DVERT( 0.154509, 0.475528, 0 ) DX3DVNORM( 0.308974, 0.951071, 3.47025e-007 )  //359
DX3DVERT( 0.0632791, 0.493844, -0.045975 ) DX3DVNORM( 0.126539, 0.987692, -0.0919356 )  //360
DX3DVERT( 0.074389, 0.493844, -0.0241705 ) DX3DVNORM( 0.148756, 0.987692, -0.0483333 )  //361
DX3DVERT( 0.045975, 0.493844, -0.0632791 ) DX3DVNORM( 0.0919359, 0.987692, -0.126539 )  //362
DX3DVERT( 0.0241705, 0.493844, -0.074389 ) DX3DVNORM( 0.0483336, 0.987692, -0.148755 )  //363
DX3DVERT( 5.52461e-010, 0.493844, -0.0782173 ) DX3DVNORM( -4.67279e-010, 0.987692, -0.156411 )  //364
DX3DVERT( -0.0241705, 0.493844, -0.074389 ) DX3DVNORM( -0.0483336, 0.987692, -0.148755 )  //365
DX3DVERT( -0.045975, 0.493844, -0.0632791 ) DX3DVNORM( -0.0919359, 0.987692, -0.126538 )  //366
DX3DVERT( -0.0632791, 0.493844, -0.045975 ) DX3DVNORM( -0.126539, 0.987692, -0.0919351 )  //367
DX3DVERT( -0.074389, 0.493844, -0.0241705 ) DX3DVNORM( -0.148755, 0.987692, -0.0483335 )  //368
DX3DVERT( -0.0782173, 0.493844, -1.32875e-009 ) DX3DVNORM( -0.156411, 0.987692, -7.00918e-010 )  //369
DX3DVERT( -0.074389, 0.493844, 0.0241705 ) DX3DVNORM( -0.148756, 0.987692, 0.0483337 )  //370
DX3DVERT( -0.0632791, 0.493844, 0.0459749 ) DX3DVNORM( -0.126539, 0.987692, 0.0919358 )  //371
DX3DVERT( -0.0459749, 0.493844, 0.0632791 ) DX3DVNORM( -0.0919359, 0.987692, 0.126539 )  //372
DX3DVERT( -0.0241705, 0.493844, 0.074389 ) DX3DVNORM( -0.0483336, 0.987692, 0.148755 )  //373
DX3DVERT( 7.76294e-010, 0.493844, 0.0782172 ) DX3DVNORM( 2.47658e-008, 0.987692, 0.15641 )  //374
DX3DVERT( 0.0241705, 0.493844, 0.074389 ) DX3DVNORM( 0.0483336, 0.987692, 0.148755 )  //375
DX3DVERT( 0.0459749, 0.493844, 0.0632791 ) DX3DVNORM( 0.091936, 0.987692, 0.126539 )  //376
DX3DVERT( 0.0632791, 0.493844, 0.0459749 ) DX3DVNORM( 0.126539, 0.987692, 0.0919351 )  //377
DX3DVERT( 0.074389, 0.493844, 0.0241705 ) DX3DVNORM( 0.148755, 0.987692, 0.0483335 )  //378
DX3DVERT( 0.0782172, 0.493844, 0 ) DX3DVNORM( 0.156411, 0.987692, 3.37375e-007 )  //379
DX3DVERT( 0, -0.5, 0 ) DX3DVNORM( 5.23194e-009, -1, 4.82086e-008 )  //380
DX3DVERT( 0, 0.5, 0 ) DX3DVNORM( 2.98968e-009, 1, 7.58631e-008 )  //381
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_MaruChan___mMaruChan_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_MaruChan___mMaruChan_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 382 )
DX3DVERTEX_END


#else
#define vertex_MaruChan___mMaruChan_1	NULL
#define vertexbuff_MaruChan___mMaruChan_1	NULL
#endif




#if ((PT_MaruChan___mMaruChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_MaruChan___mMaruChan_1 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_MaruChan___mMaruChan_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 24, 23, // 22 68
	24, 25, 23, // 23 71
	24, 26, 25, // 24 74
	26, 27, 25, // 25 77
	26, 28, 27, // 26 80
	28, 29, 27, // 27 83
	28, 30, 29, // 28 86
	30, 31, 29, // 29 89
	30, 32, 31, // 30 92
	32, 33, 31, // 31 95
	32, 34, 33, // 32 98
	34, 35, 33, // 33 101
	34, 36, 35, // 34 104
	36, 37, 35, // 35 107
	36, 38, 37, // 36 110
	38, 39, 37, // 37 113
	38, 0, 39, // 38 116
	0, 3, 39, // 39 119
	3, 2, 41, // 40 122
	2, 40, 41, // 41 125
	2, 5, 40, // 42 128
	5, 42, 40, // 43 131
	5, 7, 42, // 44 134
	7, 43, 42, // 45 137
	7, 9, 43, // 46 140
	9, 44, 43, // 47 143
	9, 11, 44, // 48 146
	11, 45, 44, // 49 149
	11, 13, 45, // 50 152
	13, 46, 45, // 51 155
	13, 15, 46, // 52 158
	15, 47, 46, // 53 161
	15, 17, 47, // 54 164
	17, 48, 47, // 55 167
	17, 19, 48, // 56 170
	19, 49, 48, // 57 173
	19, 21, 49, // 58 176
	21, 50, 49, // 59 179
	21, 23, 50, // 60 182
	23, 51, 50, // 61 185
	23, 25, 51, // 62 188
	25, 52, 51, // 63 191
	25, 27, 52, // 64 194
	27, 53, 52, // 65 197
	27, 29, 53, // 66 200
	29, 54, 53, // 67 203
	29, 31, 54, // 68 206
	31, 55, 54, // 69 209
	31, 33, 55, // 70 212
	33, 56, 55, // 71 215
	33, 35, 56, // 72 218
	35, 57, 56, // 73 221
	35, 37, 57, // 74 224
	37, 58, 57, // 75 227
	37, 39, 58, // 76 230
	39, 59, 58, // 77 233
	39, 3, 59, // 78 236
	3, 41, 59, // 79 239
	41, 40, 61, // 80 242
	40, 60, 61, // 81 245
	40, 42, 60, // 82 248
	42, 62, 60, // 83 251
	42, 43, 62, // 84 254
	43, 63, 62, // 85 257
	43, 44, 63, // 86 260
	44, 64, 63, // 87 263
	44, 45, 64, // 88 266
	45, 65, 64, // 89 269
	45, 46, 65, // 90 272
	46, 66, 65, // 91 275
	46, 47, 66, // 92 278
	47, 67, 66, // 93 281
	47, 48, 67, // 94 284
	48, 68, 67, // 95 287
	48, 49, 68, // 96 290
	49, 69, 68, // 97 293
	49, 50, 69, // 98 296
	50, 70, 69, // 99 299
	50, 51, 70, // 100 302
	51, 71, 70, // 101 305
	51, 52, 71, // 102 308
	52, 72, 71, // 103 311
	52, 53, 72, // 104 314
	53, 73, 72, // 105 317
	53, 54, 73, // 106 320
	54, 74, 73, // 107 323
	54, 55, 74, // 108 326
	55, 75, 74, // 109 329
	55, 56, 75, // 110 332
	56, 76, 75, // 111 335
	56, 57, 76, // 112 338
	57, 77, 76, // 113 341
	57, 58, 77, // 114 344
	58, 78, 77, // 115 347
	58, 59, 78, // 116 350
	59, 79, 78, // 117 353
	59, 41, 79, // 118 356
	41, 61, 79, // 119 359
	61, 60, 81, // 120 362
	60, 80, 81, // 121 365
	60, 62, 80, // 122 368
	62, 82, 80, // 123 371
	62, 63, 82, // 124 374
	63, 83, 82, // 125 377
	63, 64, 83, // 126 380
	64, 84, 83, // 127 383
	64, 65, 84, // 128 386
	65, 85, 84, // 129 389
	65, 66, 85, // 130 392
	66, 86, 85, // 131 395
	66, 67, 86, // 132 398
	67, 87, 86, // 133 401
	67, 68, 87, // 134 404
	68, 88, 87, // 135 407
	68, 69, 88, // 136 410
	69, 89, 88, // 137 413
	69, 70, 89, // 138 416
	70, 90, 89, // 139 419
	70, 71, 90, // 140 422
	71, 91, 90, // 141 425
	71, 72, 91, // 142 428
	72, 92, 91, // 143 431
	72, 73, 92, // 144 434
	73, 93, 92, // 145 437
	73, 74, 93, // 146 440
	74, 94, 93, // 147 443
	74, 75, 94, // 148 446
	75, 95, 94, // 149 449
	75, 76, 95, // 150 452
	76, 96, 95, // 151 455
	76, 77, 96, // 152 458
	77, 97, 96, // 153 461
	77, 78, 97, // 154 464
	78, 98, 97, // 155 467
	78, 79, 98, // 156 470
	79, 99, 98, // 157 473
	79, 61, 99, // 158 476
	61, 81, 99, // 159 479
	81, 80, 101, // 160 482
	80, 100, 101, // 161 485
	80, 82, 100, // 162 488
	82, 102, 100, // 163 491
	82, 83, 102, // 164 494
	83, 103, 102, // 165 497
	83, 84, 103, // 166 500
	84, 104, 103, // 167 503
	84, 85, 104, // 168 506
	85, 105, 104, // 169 509
	85, 86, 105, // 170 512
	86, 106, 105, // 171 515
	86, 87, 106, // 172 518
	87, 107, 106, // 173 521
	87, 88, 107, // 174 524
	88, 108, 107, // 175 527
	88, 89, 108, // 176 530
	89, 109, 108, // 177 533
	89, 90, 109, // 178 536
	90, 110, 109, // 179 539
	90, 91, 110, // 180 542
	91, 111, 110, // 181 545
	91, 92, 111, // 182 548
	92, 112, 111, // 183 551
	92, 93, 112, // 184 554
	93, 113, 112, // 185 557
	93, 94, 113, // 186 560
	94, 114, 113, // 187 563
	94, 95, 114, // 188 566
	95, 115, 114, // 189 569
	95, 96, 115, // 190 572
	96, 116, 115, // 191 575
	96, 97, 116, // 192 578
	97, 117, 116, // 193 581
	97, 98, 117, // 194 584
	98, 118, 117, // 195 587
	98, 99, 118, // 196 590
	99, 119, 118, // 197 593
	99, 81, 119, // 198 596
	81, 101, 119, // 199 599
	101, 100, 121, // 200 602
	100, 120, 121, // 201 605
	100, 102, 120, // 202 608
	102, 122, 120, // 203 611
	102, 103, 122, // 204 614
	103, 123, 122, // 205 617
	103, 104, 123, // 206 620
	104, 124, 123, // 207 623
	104, 105, 124, // 208 626
	105, 125, 124, // 209 629
	105, 106, 125, // 210 632
	106, 126, 125, // 211 635
	106, 107, 126, // 212 638
	107, 127, 126, // 213 641
	107, 108, 127, // 214 644
	108, 128, 127, // 215 647
	108, 109, 128, // 216 650
	109, 129, 128, // 217 653
	109, 110, 129, // 218 656
	110, 130, 129, // 219 659
	110, 111, 130, // 220 662
	111, 131, 130, // 221 665
	111, 112, 131, // 222 668
	112, 132, 131, // 223 671
	112, 113, 132, // 224 674
	113, 133, 132, // 225 677
	113, 114, 133, // 226 680
	114, 134, 133, // 227 683
	114, 115, 134, // 228 686
	115, 135, 134, // 229 689
	115, 116, 135, // 230 692
	116, 136, 135, // 231 695
	116, 117, 136, // 232 698
	117, 137, 136, // 233 701
	117, 118, 137, // 234 704
	118, 138, 137, // 235 707
	118, 119, 138, // 236 710
	119, 139, 138, // 237 713
	119, 101, 139, // 238 716
	101, 121, 139, // 239 719
	121, 120, 141, // 240 722
	120, 140, 141, // 241 725
	120, 122, 140, // 242 728
	122, 142, 140, // 243 731
	122, 123, 142, // 244 734
	123, 143, 142, // 245 737
	123, 124, 143, // 246 740
	124, 144, 143, // 247 743
	124, 125, 144, // 248 746
	125, 145, 144, // 249 749
	125, 126, 145, // 250 752
	126, 146, 145, // 251 755
	126, 127, 146, // 252 758
	127, 147, 146, // 253 761
	127, 128, 147, // 254 764
	128, 148, 147, // 255 767
	128, 129, 148, // 256 770
	129, 149, 148, // 257 773
	129, 130, 149, // 258 776
	130, 150, 149, // 259 779
	130, 131, 150, // 260 782
	131, 151, 150, // 261 785
	131, 132, 151, // 262 788
	132, 152, 151, // 263 791
	132, 133, 152, // 264 794
	133, 153, 152, // 265 797
	133, 134, 153, // 266 800
	134, 154, 153, // 267 803
	134, 135, 154, // 268 806
	135, 155, 154, // 269 809
	135, 136, 155, // 270 812
	136, 156, 155, // 271 815
	136, 137, 156, // 272 818
	137, 157, 156, // 273 821
	137, 138, 157, // 274 824
	138, 158, 157, // 275 827
	138, 139, 158, // 276 830
	139, 159, 158, // 277 833
	139, 121, 159, // 278 836
	121, 141, 159, // 279 839
	141, 140, 161, // 280 842
	140, 160, 161, // 281 845
	140, 142, 160, // 282 848
	142, 162, 160, // 283 851
	142, 143, 162, // 284 854
	143, 163, 162, // 285 857
	143, 144, 163, // 286 860
	144, 164, 163, // 287 863
	144, 145, 164, // 288 866
	145, 165, 164, // 289 869
	145, 146, 165, // 290 872
	146, 166, 165, // 291 875
	146, 147, 166, // 292 878
	147, 167, 166, // 293 881
	147, 148, 167, // 294 884
	148, 168, 167, // 295 887
	148, 149, 168, // 296 890
	149, 169, 168, // 297 893
	149, 150, 169, // 298 896
	150, 170, 169, // 299 899
	150, 151, 170, // 300 902
	151, 171, 170, // 301 905
	151, 152, 171, // 302 908
	152, 172, 171, // 303 911
	152, 153, 172, // 304 914
	153, 173, 172, // 305 917
	153, 154, 173, // 306 920
	154, 174, 173, // 307 923
	154, 155, 174, // 308 926
	155, 175, 174, // 309 929
	155, 156, 175, // 310 932
	156, 176, 175, // 311 935
	156, 157, 176, // 312 938
	157, 177, 176, // 313 941
	157, 158, 177, // 314 944
	158, 178, 177, // 315 947
	158, 159, 178, // 316 950
	159, 179, 178, // 317 953
	159, 141, 179, // 318 956
	141, 161, 179, // 319 959
	161, 160, 181, // 320 962
	160, 180, 181, // 321 965
	160, 162, 180, // 322 968
	162, 182, 180, // 323 971
	162, 163, 182, // 324 974
	163, 183, 182, // 325 977
	163, 164, 183, // 326 980
	164, 184, 183, // 327 983
	164, 165, 184, // 328 986
	165, 185, 184, // 329 989
	165, 166, 185, // 330 992
	166, 186, 185, // 331 995
	166, 167, 186, // 332 998
	167, 187, 186, // 333 1001
	167, 168, 187, // 334 1004
	168, 188, 187, // 335 1007
	168, 169, 188, // 336 1010
	169, 189, 188, // 337 1013
	169, 170, 189, // 338 1016
	170, 190, 189, // 339 1019
	170, 171, 190, // 340 1022
	171, 191, 190, // 341 1025
	171, 172, 191, // 342 1028
	172, 192, 191, // 343 1031
	172, 173, 192, // 344 1034
	173, 193, 192, // 345 1037
	173, 174, 193, // 346 1040
	174, 194, 193, // 347 1043
	174, 175, 194, // 348 1046
	175, 195, 194, // 349 1049
	175, 176, 195, // 350 1052
	176, 196, 195, // 351 1055
	176, 177, 196, // 352 1058
	177, 197, 196, // 353 1061
	177, 178, 197, // 354 1064
	178, 198, 197, // 355 1067
	178, 179, 198, // 356 1070
	179, 199, 198, // 357 1073
	179, 161, 199, // 358 1076
	161, 181, 199, // 359 1079
	181, 180, 201, // 360 1082
	180, 200, 201, // 361 1085
	180, 182, 200, // 362 1088
	182, 202, 200, // 363 1091
	182, 183, 202, // 364 1094
	183, 203, 202, // 365 1097
	183, 184, 203, // 366 1100
	184, 204, 203, // 367 1103
	184, 185, 204, // 368 1106
	185, 205, 204, // 369 1109
	185, 186, 205, // 370 1112
	186, 206, 205, // 371 1115
	186, 187, 206, // 372 1118
	187, 207, 206, // 373 1121
	187, 188, 207, // 374 1124
	188, 208, 207, // 375 1127
	188, 189, 208, // 376 1130
	189, 209, 208, // 377 1133
	189, 190, 209, // 378 1136
	190, 210, 209, // 379 1139
	190, 191, 210, // 380 1142
	191, 211, 210, // 381 1145
	191, 192, 211, // 382 1148
	192, 212, 211, // 383 1151
	192, 193, 212, // 384 1154
	193, 213, 212, // 385 1157
	193, 194, 213, // 386 1160
	194, 214, 213, // 387 1163
	194, 195, 214, // 388 1166
	195, 215, 214, // 389 1169
	195, 196, 215, // 390 1172
	196, 216, 215, // 391 1175
	196, 197, 216, // 392 1178
	197, 217, 216, // 393 1181
	197, 198, 217, // 394 1184
	198, 218, 217, // 395 1187
	198, 199, 218, // 396 1190
	199, 219, 218, // 397 1193
	199, 181, 219, // 398 1196
	181, 201, 219, // 399 1199
	201, 200, 221, // 400 1202
	200, 220, 221, // 401 1205
	200, 202, 220, // 402 1208
	202, 222, 220, // 403 1211
	202, 203, 222, // 404 1214
	203, 223, 222, // 405 1217
	203, 204, 223, // 406 1220
	204, 224, 223, // 407 1223
	204, 205, 224, // 408 1226
	205, 225, 224, // 409 1229
	205, 206, 225, // 410 1232
	206, 226, 225, // 411 1235
	206, 207, 226, // 412 1238
	207, 227, 226, // 413 1241
	207, 208, 227, // 414 1244
	208, 228, 227, // 415 1247
	208, 209, 228, // 416 1250
	209, 229, 228, // 417 1253
	209, 210, 229, // 418 1256
	210, 230, 229, // 419 1259
	210, 211, 230, // 420 1262
	211, 231, 230, // 421 1265
	211, 212, 231, // 422 1268
	212, 232, 231, // 423 1271
	212, 213, 232, // 424 1274
	213, 233, 232, // 425 1277
	213, 214, 233, // 426 1280
	214, 234, 233, // 427 1283
	214, 215, 234, // 428 1286
	215, 235, 234, // 429 1289
	215, 216, 235, // 430 1292
	216, 236, 235, // 431 1295
	216, 217, 236, // 432 1298
	217, 237, 236, // 433 1301
	217, 218, 237, // 434 1304
	218, 238, 237, // 435 1307
	218, 219, 238, // 436 1310
	219, 239, 238, // 437 1313
	219, 201, 239, // 438 1316
	201, 221, 239, // 439 1319
	221, 220, 241, // 440 1322
	220, 240, 241, // 441 1325
	220, 222, 240, // 442 1328
	222, 242, 240, // 443 1331
	222, 223, 242, // 444 1334
	223, 243, 242, // 445 1337
	223, 224, 243, // 446 1340
	224, 244, 243, // 447 1343
	224, 225, 244, // 448 1346
	225, 245, 244, // 449 1349
	225, 226, 245, // 450 1352
	226, 246, 245, // 451 1355
	226, 227, 246, // 452 1358
	227, 247, 246, // 453 1361
	227, 228, 247, // 454 1364
	228, 248, 247, // 455 1367
	228, 229, 248, // 456 1370
	229, 249, 248, // 457 1373
	229, 230, 249, // 458 1376
	230, 250, 249, // 459 1379
	230, 231, 250, // 460 1382
	231, 251, 250, // 461 1385
	231, 232, 251, // 462 1388
	232, 252, 251, // 463 1391
	232, 233, 252, // 464 1394
	233, 253, 252, // 465 1397
	233, 234, 253, // 466 1400
	234, 254, 253, // 467 1403
	234, 235, 254, // 468 1406
	235, 255, 254, // 469 1409
	235, 236, 255, // 470 1412
	236, 256, 255, // 471 1415
	236, 237, 256, // 472 1418
	237, 257, 256, // 473 1421
	237, 238, 257, // 474 1424
	238, 258, 257, // 475 1427
	238, 239, 258, // 476 1430
	239, 259, 258, // 477 1433
	239, 221, 259, // 478 1436
	221, 241, 259, // 479 1439
	241, 240, 261, // 480 1442
	240, 260, 261, // 481 1445
	240, 242, 260, // 482 1448
	242, 262, 260, // 483 1451
	242, 243, 262, // 484 1454
	243, 263, 262, // 485 1457
	243, 244, 263, // 486 1460
	244, 264, 263, // 487 1463
	244, 245, 264, // 488 1466
	245, 265, 264, // 489 1469
	245, 246, 265, // 490 1472
	246, 266, 265, // 491 1475
	246, 247, 266, // 492 1478
	247, 267, 266, // 493 1481
	247, 248, 267, // 494 1484
	248, 268, 267, // 495 1487
	248, 249, 268, // 496 1490
	249, 269, 268, // 497 1493
	249, 250, 269, // 498 1496
	250, 270, 269, // 499 1499
	250, 251, 270, // 500 1502
	251, 271, 270, // 501 1505
	251, 252, 271, // 502 1508
	252, 272, 271, // 503 1511
	252, 253, 272, // 504 1514
	253, 273, 272, // 505 1517
	253, 254, 273, // 506 1520
	254, 274, 273, // 507 1523
	254, 255, 274, // 508 1526
	255, 275, 274, // 509 1529
	255, 256, 275, // 510 1532
	256, 276, 275, // 511 1535
	256, 257, 276, // 512 1538
	257, 277, 276, // 513 1541
	257, 258, 277, // 514 1544
	258, 278, 277, // 515 1547
	258, 259, 278, // 516 1550
	259, 279, 278, // 517 1553
	259, 241, 279, // 518 1556
	241, 261, 279, // 519 1559
	261, 260, 281, // 520 1562
	260, 280, 281, // 521 1565
	260, 262, 280, // 522 1568
	262, 282, 280, // 523 1571
	262, 263, 282, // 524 1574
	263, 283, 282, // 525 1577
	263, 264, 283, // 526 1580
	264, 284, 283, // 527 1583
	264, 265, 284, // 528 1586
	265, 285, 284, // 529 1589
	265, 266, 285, // 530 1592
	266, 286, 285, // 531 1595
	266, 267, 286, // 532 1598
	267, 287, 286, // 533 1601
	267, 268, 287, // 534 1604
	268, 288, 287, // 535 1607
	268, 269, 288, // 536 1610
	269, 289, 288, // 537 1613
	269, 270, 289, // 538 1616
	270, 290, 289, // 539 1619
	270, 271, 290, // 540 1622
	271, 291, 290, // 541 1625
	271, 272, 291, // 542 1628
	272, 292, 291, // 543 1631
	272, 273, 292, // 544 1634
	273, 293, 292, // 545 1637
	273, 274, 293, // 546 1640
	274, 294, 293, // 547 1643
	274, 275, 294, // 548 1646
	275, 295, 294, // 549 1649
	275, 276, 295, // 550 1652
	276, 296, 295, // 551 1655
	276, 277, 296, // 552 1658
	277, 297, 296, // 553 1661
	277, 278, 297, // 554 1664
	278, 298, 297, // 555 1667
	278, 279, 298, // 556 1670
	279, 299, 298, // 557 1673
	279, 261, 299, // 558 1676
	261, 281, 299, // 559 1679
	281, 280, 301, // 560 1682
	280, 300, 301, // 561 1685
	280, 282, 300, // 562 1688
	282, 302, 300, // 563 1691
	282, 283, 302, // 564 1694
	283, 303, 302, // 565 1697
	283, 284, 303, // 566 1700
	284, 304, 303, // 567 1703
	284, 285, 304, // 568 1706
	285, 305, 304, // 569 1709
	285, 286, 305, // 570 1712
	286, 306, 305, // 571 1715
	286, 287, 306, // 572 1718
	287, 307, 306, // 573 1721
	287, 288, 307, // 574 1724
	288, 308, 307, // 575 1727
	288, 289, 308, // 576 1730
	289, 309, 308, // 577 1733
	289, 290, 309, // 578 1736
	290, 310, 309, // 579 1739
	290, 291, 310, // 580 1742
	291, 311, 310, // 581 1745
	291, 292, 311, // 582 1748
	292, 312, 311, // 583 1751
	292, 293, 312, // 584 1754
	293, 313, 312, // 585 1757
	293, 294, 313, // 586 1760
	294, 314, 313, // 587 1763
	294, 295, 314, // 588 1766
	295, 315, 314, // 589 1769
	295, 296, 315, // 590 1772
	296, 316, 315, // 591 1775
	296, 297, 316, // 592 1778
	297, 317, 316, // 593 1781
	297, 298, 317, // 594 1784
	298, 318, 317, // 595 1787
	298, 299, 318, // 596 1790
	299, 319, 318, // 597 1793
	299, 281, 319, // 598 1796
	281, 301, 319, // 599 1799
	301, 300, 321, // 600 1802
	300, 320, 321, // 601 1805
	300, 302, 320, // 602 1808
	302, 322, 320, // 603 1811
	302, 303, 322, // 604 1814
	303, 323, 322, // 605 1817
	303, 304, 323, // 606 1820
	304, 324, 323, // 607 1823
	304, 305, 324, // 608 1826
	305, 325, 324, // 609 1829
	305, 306, 325, // 610 1832
	306, 326, 325, // 611 1835
	306, 307, 326, // 612 1838
	307, 327, 326, // 613 1841
	307, 308, 327, // 614 1844
	308, 328, 327, // 615 1847
	308, 309, 328, // 616 1850
	309, 329, 328, // 617 1853
	309, 310, 329, // 618 1856
	310, 330, 329, // 619 1859
	310, 311, 330, // 620 1862
	311, 331, 330, // 621 1865
	311, 312, 331, // 622 1868
	312, 332, 331, // 623 1871
	312, 313, 332, // 624 1874
	313, 333, 332, // 625 1877
	313, 314, 333, // 626 1880
	314, 334, 333, // 627 1883
	314, 315, 334, // 628 1886
	315, 335, 334, // 629 1889
	315, 316, 335, // 630 1892
	316, 336, 335, // 631 1895
	316, 317, 336, // 632 1898
	317, 337, 336, // 633 1901
	317, 318, 337, // 634 1904
	318, 338, 337, // 635 1907
	318, 319, 338, // 636 1910
	319, 339, 338, // 637 1913
	319, 301, 339, // 638 1916
	301, 321, 339, // 639 1919
	321, 320, 341, // 640 1922
	320, 340, 341, // 641 1925
	320, 322, 340, // 642 1928
	322, 342, 340, // 643 1931
	322, 323, 342, // 644 1934
	323, 343, 342, // 645 1937
	323, 324, 343, // 646 1940
	324, 344, 343, // 647 1943
	324, 325, 344, // 648 1946
	325, 345, 344, // 649 1949
	325, 326, 345, // 650 1952
	326, 346, 345, // 651 1955
	326, 327, 346, // 652 1958
	327, 347, 346, // 653 1961
	327, 328, 347, // 654 1964
	328, 348, 347, // 655 1967
	328, 329, 348, // 656 1970
	329, 349, 348, // 657 1973
	329, 330, 349, // 658 1976
	330, 350, 349, // 659 1979
	330, 331, 350, // 660 1982
	331, 351, 350, // 661 1985
	331, 332, 351, // 662 1988
	332, 352, 351, // 663 1991
	332, 333, 352, // 664 1994
	333, 353, 352, // 665 1997
	333, 334, 353, // 666 2000
	334, 354, 353, // 667 2003
	334, 335, 354, // 668 2006
	335, 355, 354, // 669 2009
	335, 336, 355, // 670 2012
	336, 356, 355, // 671 2015
	336, 337, 356, // 672 2018
	337, 357, 356, // 673 2021
	337, 338, 357, // 674 2024
	338, 358, 357, // 675 2027
	338, 339, 358, // 676 2030
	339, 359, 358, // 677 2033
	339, 321, 359, // 678 2036
	321, 341, 359, // 679 2039
	341, 340, 361, // 680 2042
	340, 360, 361, // 681 2045
	340, 342, 360, // 682 2048
	342, 362, 360, // 683 2051
	342, 343, 362, // 684 2054
	343, 363, 362, // 685 2057
	343, 344, 363, // 686 2060
	344, 364, 363, // 687 2063
	344, 345, 364, // 688 2066
	345, 365, 364, // 689 2069
	345, 346, 365, // 690 2072
	346, 366, 365, // 691 2075
	346, 347, 366, // 692 2078
	347, 367, 366, // 693 2081
	347, 348, 367, // 694 2084
	348, 368, 367, // 695 2087
	348, 349, 368, // 696 2090
	349, 369, 368, // 697 2093
	349, 350, 369, // 698 2096
	350, 370, 369, // 699 2099
	350, 351, 370, // 700 2102
	351, 371, 370, // 701 2105
	351, 352, 371, // 702 2108
	352, 372, 371, // 703 2111
	352, 353, 372, // 704 2114
	353, 373, 372, // 705 2117
	353, 354, 373, // 706 2120
	354, 374, 373, // 707 2123
	354, 355, 374, // 708 2126
	355, 375, 374, // 709 2129
	355, 356, 375, // 710 2132
	356, 376, 375, // 711 2135
	356, 357, 376, // 712 2138
	357, 377, 376, // 713 2141
	357, 358, 377, // 714 2144
	358, 378, 377, // 715 2147
	358, 359, 378, // 716 2150
	359, 379, 378, // 717 2153
	359, 341, 379, // 718 2156
	341, 361, 379, // 719 2159
	1, 0, 380, // 720 2162
	4, 1, 380, // 721 2165
	6, 4, 380, // 722 2168
	8, 6, 380, // 723 2171
	10, 8, 380, // 724 2174
	12, 10, 380, // 725 2177
	14, 12, 380, // 726 2180
	16, 14, 380, // 727 2183
	18, 16, 380, // 728 2186
	20, 18, 380, // 729 2189
	22, 20, 380, // 730 2192
	24, 22, 380, // 731 2195
	26, 24, 380, // 732 2198
	28, 26, 380, // 733 2201
	30, 28, 380, // 734 2204
	32, 30, 380, // 735 2207
	34, 32, 380, // 736 2210
	36, 34, 380, // 737 2213
	38, 36, 380, // 738 2216
	0, 38, 380, // 739 2219
	361, 360, 381, // 740 2222
	360, 362, 381, // 741 2225
	362, 363, 381, // 742 2228
	363, 364, 381, // 743 2231
	364, 365, 381, // 744 2234
	365, 366, 381, // 745 2237
	366, 367, 381, // 746 2240
	367, 368, 381, // 747 2243
	368, 369, 381, // 748 2246
	369, 370, 381, // 749 2249
	370, 371, 381, // 750 2252
	371, 372, 381, // 751 2255
	372, 373, 381, // 752 2258
	373, 374, 381, // 753 2261
	374, 375, 381, // 754 2264
	375, 376, 381, // 755 2267
	376, 377, 381, // 756 2270
	377, 378, 381, // 757 2273
	378, 379, 381, // 758 2276
	379, 361, 381, // 759 2279
DX3DINDEX_END
#endif

#else
#define index_MaruChan___mMaruChan_1	NULL
#endif




#if ((PT_MaruChan___mMaruChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_MaruChan___mMaruChan_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_MaruChan___mMaruChan_1_INDEXSTRIP 	NULL
#endif




#if ((PT_MaruChan___mMaruChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_MaruChan___mMaruChan_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_MaruChan___mMaruChan_1_VERTEXSTRIP 	NULL
#define vertexbuff_MaruChan___mMaruChan_1_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_MaruChan__ )
DX3DMODEL_START( model_MaruChan___mFace_0 )
DX3DMODEL_VERTEX( vertex_MaruChan___mFace_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_MaruChan___mFace_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 204 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mFace )
DX3DMODEL_END
DX3DMODEL_START( model_MaruChan___mMaruChan_1 )
DX3DMODEL_VERTEX( vertex_MaruChan___mMaruChan_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_MaruChan___mMaruChan_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 2280 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mMaruChan )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_MaruChan__, 3503904553 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_MaruChan__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_UnChan__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mUnChan )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 0.25, 0.25, 0.25 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_UnChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_UnChan___mFace_0 == PT_TRILIST ) || ((PT_UnChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_UnChan___mFace_0 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_UnChan___mFace_0 )
DX3DVERT( -0.060255, -0.0331507, 0.457797 ) DX3DVNORM( -8.09291e-008, 0, 1 )  //0
DX3DVERT( -0.0601352, -0.0550431, 0.457797 ) DX3DVNORM( -3.80095e-008, 0, 1 )  //1
DX3DVERT( 0.0100045, -0.0570312, 0.457797 ) DX3DVNORM( -1.25526e-007, 0, 1 )  //2
DX3DVERT( 0.00913404, -0.0376393, 0.457797 ) DX3DVNORM( 7.99685e-008, 0, 1 )  //3
DX3DVERT( 0.0842851, -0.0331097, 0.457797 ) DX3DVNORM( -0.00448069, 0.00839445, 0.999955 )  //4
DX3DVERT( 0.082015, -0.053131, 0.457797 ) DX3DVNORM( -0.00484666, 0.00427497, 0.999979 )  //5
DX3DVERT( 0.142829, -0.0377623, 0.4584 ) DX3DVNORM( -0.00759488, 0.00795258, 0.99994 )  //6
DX3DVERT( 0.13695, -0.0238076, 0.457797 ) DX3DVNORM( -0.0099767, 0.015749, 0.999826 )  //7
DX3DVERT( -0.185593, -0.042448, 0.457797 ) DX3DVNORM( -7.23869e-007, 0, 1 )  //8
DX3DVERT( -0.137287, -0.0720698, 0.457797 ) DX3DVNORM( -2.60043e-008, 0, 1 )  //9
DX3DVERT( -0.139968, -0.0368197, 0.457797 ) DX3DVNORM( -1.30021e-008, 0, 1 )  //10
DX3DVERT( -0.194263, -0.0227006, 0.457797 ) DX3DVNORM( -3.61935e-007, 0, 1 )  //11
DX3DVERT( -0.139908, -0.0204185, 0.457797 ) DX3DVNORM( 0, 0, 1 )  //12
DX3DVERT( 0.195332, -0.0211576, 0.4584 ) DX3DVNORM( -0.00549627, 0.00735521, 0.999958 )  //13
DX3DVERT( 0.184148, -0.00688724, 0.4584 ) DX3DVNORM( -0.0109921, 0.0147098, 0.999831 )  //14
DX3DVERT( -0.165248, 0.0863895, 0.439067 ) DX3DVNORM( 4.90977e-007, 0, 1 )  //15
DX3DVERT( -0.152477, 0.0747272, 0.439067 ) DX3DVNORM( 4.90977e-007, 0, 1 )  //16
DX3DVERT( -0.137393, 0.0690757, 0.439067 ) DX3DVNORM( -5.95725e-007, 0, 1 )  //17
DX3DVERT( -0.134734, 0.107804, 0.439067 ) DX3DVNORM( -2.97862e-007, 0, 1 )  //18
DX3DVERT( -0.172333, 0.103318, 0.439067 ) DX3DVNORM( 2.45489e-007, 0, 1 )  //19
DX3DVERT( 0.0952651, 0.144806, 0.439067 ) DX3DVNORM( -2.38622e-007, 0, 1 )  //20
DX3DVERT( 0.0831022, 0.131856, 0.439067 ) DX3DVNORM( -2.38622e-007, 0, 1 )  //21
DX3DVERT( 0.0795344, 0.116856, 0.439067 ) DX3DVNORM( -1.19311e-007, 0, 1 )  //22
DX3DVERT( 0.11601, 0.114335, 0.439067 ) DX3DVNORM( -3.76686e-007, 0, 1 )  //23
DX3DVERT( 0.115911, 0.150925, 0.439067 ) DX3DVNORM( -7.53371e-007, 0, 1 )  //24
DX3DVERT( -0.118938, 0.154643, 0.439067 ) DX3DVNORM( -2.0628e-007, 0, 1 )  //25
DX3DVERT( -0.124959, 0.119, 0.439067 ) DX3DVNORM( -1.0314e-007, 0, 1 )  //26
DX3DVERT( -0.084964, 0.120546, 0.439067 ) DX3DVNORM( 2.41277e-007, 0, 1 )  //27
DX3DVERT( -0.0916717, 0.138208, 0.439067 ) DX3DVNORM( 4.82554e-007, 0, 1 )  //28
DX3DVERT( -0.103842, 0.150766, 0.439067 ) DX3DVNORM( 4.82554e-007, 0, 1 )  //29
DX3DVERT( -0.135058, 0.119101, 0.439067 ) DX3DVNORM( 2.31155e-008, 0, 1 )  //30
DX3DVERT( -0.172553, 0.119632, 0.439067 ) DX3DVNORM( 4.93788e-007, 0, 1 )  //31
DX3DVERT( -0.0855558, 0.104046, 0.439067 ) DX3DVNORM( 6.71668e-007, 0, 1 )  //32
DX3DVERT( -0.125003, 0.107947, 0.439067 ) DX3DVNORM( -8.47728e-008, 0, 1 )  //33
DX3DVERT( -0.120493, 0.0694096, 0.439067 ) DX3DVNORM( -1.69546e-007, 0, 1 )  //34
DX3DVERT( -0.099644, 0.0758023, 0.439067 ) DX3DVNORM( 1.34334e-006, 0, 1 )  //35
DX3DVERT( -0.0895398, 0.0904854, 0.439067 ) DX3DVNORM( 1.34334e-006, 0, 1 )  //36
DX3DVERT( 0.12735, 0.114335, 0.439067 ) DX3DVNORM( -4.53852e-007, 0, 1 )  //37
DX3DVERT( 0.131117, 0.150278, 0.439067 ) DX3DVNORM( -9.07704e-007, 0, 1 )  //38
DX3DVERT( 0.116637, 0.107223, 0.439067 ) DX3DVNORM( -5.92079e-007, 0, 1 )  //39
DX3DVERT( 0.0802251, 0.101181, 0.439067 ) DX3DVNORM( -1.00987e-006, 0, 1 )  //40
DX3DVERT( 0.085284, 0.0867011, 0.439067 ) DX3DVNORM( -2.01975e-006, 0, 1 )  //41
DX3DVERT( 0.0983013, 0.07524, 0.439067 ) DX3DVNORM( -2.01975e-006, 0, 1 )  //42
DX3DVERT( 0.115432, 0.0691172, 0.439067 ) DX3DVNORM( -1.18416e-006, 0, 1 )  //43
DX3DVERT( 0.161744, 0.0984216, 0.439067 ) DX3DVNORM( 0, 0, 1 )  //44
DX3DVERT( 0.127205, 0.107223, 0.439067 ) DX3DVNORM( -8.71423e-008, 0, 1 )  //45
DX3DVERT( 0.129498, 0.0690645, 0.439067 ) DX3DVNORM( -1.74285e-007, 0, 1 )  //46
DX3DVERT( 0.141818, 0.0717296, 0.439067 ) DX3DVNORM( 0, 0, 1 )  //47
DX3DVERT( 0.157017, 0.0832851, 0.439067 ) DX3DVNORM( 0, 0, 1 )  //48
DX3DVERT( -0.064447, -0.0920212, 0.457797 ) DX3DVNORM( 4.91008e-009, 0, 1 )  //49
DX3DVERT( 0.00620586, -0.099444, 0.457797 ) DX3DVNORM( -3.3102e-007, 0, 1 )  //50
DX3DVERT( 0.0834518, -0.0898878, 0.457797 ) DX3DVNORM( -0.00521254, 0.000155544, 0.999986 )  //51
DX3DVERT( 0.139302, -0.0710442, 0.4584 ) DX3DVNORM( -0.00521254, 0.000155544, 0.999986 )  //52
DX3DVERT( -0.185593, -0.00840178, 0.457797 ) DX3DVNORM( 0, 0, 1 )  //53
DX3DVERT( 0.180861, -0.0451286, 0.4584 ) DX3DVNORM( 0, 0, 1 )  //54
DX3DVERT( -0.136549, 0.153956, 0.439067 ) DX3DVNORM( 4.62309e-008, 0, 1 )  //55
DX3DVERT( -0.153496, 0.149295, 0.439067 ) DX3DVNORM( 9.87576e-007, 0, 1 )  //56
DX3DVERT( -0.166089, 0.138408, 0.439067 ) DX3DVNORM( 9.87576e-007, 0, 1 )  //57
DX3DVERT( 0.162475, 0.116347, 0.439067 ) DX3DVNORM( -2.73644e-007, 0, 1 )  //58
DX3DVERT( 0.156854, 0.132711, 0.439067 ) DX3DVNORM( -5.47288e-007, 0, 1 )  //59
DX3DVERT( 0.147251, 0.144099, 0.439067 ) DX3DVNORM( -5.47288e-007, 0, 1 )  //60
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_UnChan___mFace_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_UnChan___mFace_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 61 )
DX3DVERTEX_END


#else
#define vertex_UnChan___mFace_0	NULL
#define vertexbuff_UnChan___mFace_0	NULL
#endif




#if ((PT_UnChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_UnChan___mFace_0 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_UnChan___mFace_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 5, 7, // 2 8
	5, 6, 7, // 3 11
	8, 9, 11, // 4 14
	9, 10, 11, // 5 17
	12, 10, 0, // 6 20
	10, 1, 0, // 7 23
	3, 2, 4, // 8 26
	2, 5, 4, // 9 29
	7, 6, 14, // 10 32
	6, 13, 14, // 11 35
	15, 16, 19, // 12 38
	16, 17, 18, // 13 41
	16, 18, 19, // 14 44
	20, 21, 24, // 15 47
	21, 22, 23, // 16 50
	21, 23, 24, // 17 53
	25, 26, 29, // 18 56
	26, 27, 28, // 19 59
	26, 28, 29, // 20 62
	19, 18, 31, // 21 65
	18, 30, 31, // 22 68
	32, 33, 36, // 23 71
	33, 34, 35, // 24 74
	33, 35, 36, // 25 77
	24, 23, 38, // 26 80
	23, 37, 38, // 27 83
	39, 40, 43, // 28 86
	40, 41, 42, // 29 89
	40, 42, 43, // 30 92
	44, 45, 48, // 31 95
	45, 46, 47, // 32 98
	45, 47, 48, // 33 101
	2, 1, 50, // 34 104
	1, 49, 50, // 35 107
	6, 5, 52, // 36 110
	5, 51, 52, // 37 113
	11, 10, 53, // 38 116
	10, 12, 53, // 39 119
	1, 10, 49, // 40 122
	10, 9, 49, // 41 125
	5, 2, 51, // 42 128
	2, 50, 51, // 43 131
	13, 6, 54, // 44 134
	6, 52, 54, // 45 137
	18, 17, 33, // 46 140
	17, 34, 33, // 47 143
	55, 30, 25, // 48 146
	30, 26, 25, // 49 149
	27, 26, 32, // 50 152
	26, 33, 32, // 51 155
	31, 30, 57, // 52 158
	30, 55, 56, // 53 161
	30, 56, 57, // 54 164
	26, 30, 33, // 55 167
	30, 18, 33, // 56 170
	38, 37, 60, // 57 173
	37, 58, 59, // 58 176
	37, 59, 60, // 59 179
	46, 45, 43, // 60 182
	45, 39, 43, // 61 185
	23, 22, 39, // 62 188
	22, 40, 39, // 63 191
	37, 23, 45, // 64 194
	23, 39, 45, // 65 197
	58, 37, 44, // 66 200
	37, 45, 44, // 67 203
DX3DINDEX_END
#endif

#else
#define index_UnChan___mFace_0	NULL
#endif




#if ((PT_UnChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_UnChan___mFace_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_UnChan___mFace_0_INDEXSTRIP 	NULL
#endif




#if ((PT_UnChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_UnChan___mFace_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_UnChan___mFace_0_VERTEXSTRIP 	NULL
#define vertexbuff_UnChan___mFace_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_UnChan___mUnChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_UnChan___mUnChan_1 == PT_TRILIST ) || ((PT_UnChan___mUnChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_UnChan___mUnChan_1 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_UnChan___mUnChan_1 )
DX3DVERT( 0.273607, -0.10378, -0.198787 ) DX3DVNORM( -0.126558, 0.987688, 0.0919499 )  //0
DX3DVERT( 0.321644, -0.10378, -0.104509 ) DX3DVNORM( -0.148778, 0.987688, 0.0483408 )  //1
DX3DVERT( 0.380423, -0.0939917, -0.123607 ) DX3DVNORM( -1.32051e-007, 1, 2.7825e-008 )  //2
DX3DVERT( 0.323607, -0.0939917, -0.235114 ) DX3DVNORM( -1.30165e-007, 1, 9.8095e-008 )  //3
DX3DVERT( 0.198787, -0.10378, -0.273607 ) DX3DVNORM( -0.0919499, 0.987688, 0.126558 )  //4
DX3DVERT( 0.235114, -0.0939917, -0.323607 ) DX3DVNORM( -8.86628e-008, 1, 1.32051e-007 )  //5
DX3DVERT( 0.104509, -0.10378, -0.321644 ) DX3DVNORM( -0.0483409, 0.987688, 0.148778 )  //6
DX3DVERT( 0.123607, -0.0939917, -0.380423 ) DX3DVNORM( -2.12225e-008, 1, 1.50915e-007 )  //7
DX3DVERT( 2.38874e-009, -0.10378, -0.338197 ) DX3DVNORM( 4.93752e-008, 0.987688, 0.156435 )  //8
DX3DVERT( 2.82527e-009, -0.0939917, -0.4 ) DX3DVNORM( 2.45237e-008, 1, 1.32051e-007 )  //9
DX3DVERT( -0.104509, -0.10378, -0.321644 ) DX3DVNORM( 0.0483409, 0.987688, 0.148778 )  //10
DX3DVERT( -0.123607, -0.0939917, -0.380423 ) DX3DVNORM( 2.45237e-008, 1, 8.30035e-008 )  //11
DX3DVERT( -0.198787, -0.10378, -0.273607 ) DX3DVNORM( 0.0919499, 0.987688, 0.126558 )  //12
DX3DVERT( -0.235114, -0.0939917, -0.323607 ) DX3DVNORM( 6.03661e-008, 1, 6.4139e-008 )  //13
DX3DVERT( -0.273607, -0.10378, -0.198787 ) DX3DVNORM( 0.126558, 0.987688, 0.0919499 )  //14
DX3DVERT( -0.323607, -0.0939917, -0.235114 ) DX3DVNORM( 9.8095e-008, 1, 6.97984e-008 )  //15
DX3DVERT( -0.321644, -0.10378, -0.104509 ) DX3DVNORM( 0.148778, 0.987688, 0.048341 )  //16
DX3DVERT( -0.380423, -0.0939917, -0.123607 ) DX3DVNORM( 1.28278e-007, 1, 3.91437e-008 )  //17
DX3DVERT( -0.338197, -0.10378, -5.74529e-009 ) DX3DVNORM( 0.156435, 0.987688, 0 )  //18
DX3DVERT( -0.4, -0.0939917, -6.7952e-009 ) DX3DVNORM( 1.9619e-007, 1, -2.16941e-008 )  //19
DX3DVERT( -0.321644, -0.10378, 0.104509 ) DX3DVNORM( 0.148778, 0.987688, -0.048341 )  //20
DX3DVERT( -0.380423, -0.0939917, 0.123607 ) DX3DVNORM( 1.6978e-007, 1, -9.05492e-008 )  //21
DX3DVERT( -0.273607, -0.10378, 0.198787 ) DX3DVNORM( 0.126558, 0.987688, -0.0919499 )  //22
DX3DVERT( -0.323607, -0.0939917, 0.235114 ) DX3DVNORM( 9.43221e-008, 1, -8.48899e-008 )  //23
DX3DVERT( -0.198787, -0.10378, 0.273607 ) DX3DVNORM( 0.0919499, 0.987688, -0.126558 )  //24
DX3DVERT( -0.235114, -0.0939917, 0.323607 ) DX3DVNORM( 6.4139e-008, 1, -6.03661e-008 )  //25
DX3DVERT( -0.104509, -0.10378, 0.321644 ) DX3DVNORM( 0.0483409, 0.987688, -0.148778 )  //26
DX3DVERT( -0.123607, -0.0939917, 0.380423 ) DX3DVNORM( 3.30127e-008, 1, -1.05641e-007 )  //27
DX3DVERT( 3.35655e-009, -0.10378, 0.338197 ) DX3DVNORM( -2.79483e-009, 0.987688, -0.156435 )  //28
DX3DVERT( 3.96994e-009, -0.0939917, 0.4 ) DX3DVNORM( 1.22619e-008, 1, -1.13187e-007 )  //29
DX3DVERT( 0.104509, -0.10378, 0.321644 ) DX3DVNORM( -0.048341, 0.987688, -0.148778 )  //30
DX3DVERT( 0.123607, -0.0939917, 0.380423 ) DX3DVNORM( -3.58424e-008, 1, -1.01868e-007 )  //31
DX3DVERT( 0.198787, -0.10378, 0.273607 ) DX3DVNORM( -0.09195, 0.987688, -0.126558 )  //32
DX3DVERT( 0.235114, -0.0939917, 0.323607 ) DX3DVNORM( -7.92306e-008, 1, -6.79119e-008 )  //33
DX3DVERT( 0.273607, -0.10378, 0.198787 ) DX3DVNORM( -0.126558, 0.987688, -0.09195 )  //34
DX3DVERT( 0.323607, -0.0939917, 0.235114 ) DX3DVNORM( -1.05641e-007, 1, -6.22526e-008 )  //35
DX3DVERT( 0.321644, -0.10378, 0.104509 ) DX3DVNORM( -0.148778, 0.987688, -0.048341 )  //36
DX3DVERT( 0.380423, -0.0939917, 0.123607 ) DX3DVNORM( -1.50915e-007, 1, -4.10301e-008 )  //37
DX3DVERT( 0.338197, -0.10378, 0 ) DX3DVNORM( -0.156435, 0.987688, -1.42536e-007 )  //38
DX3DVERT( 0.4, -0.0939917, 0 ) DX3DVNORM( -1.47142e-007, 1, -1.55631e-008 )  //39
DX3DVERT( 0.439201, -0.10378, -0.142705 ) DX3DVNORM( 0.29373, 0.951112, -0.0954383 )  //40
DX3DVERT( 0.373607, -0.10378, -0.271441 ) DX3DVNORM( 0.249861, 0.951112, -0.181535 )  //41
DX3DVERT( 0.271441, -0.10378, -0.373607 ) DX3DVNORM( 0.181535, 0.951112, -0.249861 )  //42
DX3DVERT( 0.142705, -0.10378, -0.439201 ) DX3DVNORM( 0.0954385, 0.951112, -0.29373 )  //43
DX3DVERT( 3.26179e-009, -0.10378, -0.461804 ) DX3DVNORM( -5.09918e-008, 0.951112, -0.308846 )  //44
DX3DVERT( -0.142705, -0.10378, -0.439201 ) DX3DVNORM( -0.0954386, 0.951112, -0.29373 )  //45
DX3DVERT( -0.271441, -0.10378, -0.373607 ) DX3DVNORM( -0.181535, 0.951112, -0.249861 )  //46
DX3DVERT( -0.373607, -0.10378, -0.271441 ) DX3DVNORM( -0.249861, 0.951112, -0.181535 )  //47
DX3DVERT( -0.439201, -0.10378, -0.142705 ) DX3DVNORM( -0.29373, 0.951112, -0.0954386 )  //48
DX3DVERT( -0.461804, -0.10378, -7.84512e-009 ) DX3DVNORM( -0.308846, 0.951112, -7.55434e-009 )  //49
DX3DVERT( -0.439201, -0.10378, 0.142705 ) DX3DVNORM( -0.29373, 0.951112, 0.0954386 )  //50
DX3DVERT( -0.373607, -0.10378, 0.271441 ) DX3DVNORM( -0.249861, 0.951112, 0.181535 )  //51
DX3DVERT( -0.271441, -0.10378, 0.373607 ) DX3DVNORM( -0.181535, 0.951112, 0.249861 )  //52
DX3DVERT( -0.142705, -0.10378, 0.439201 ) DX3DVNORM( -0.0954385, 0.951112, 0.29373 )  //53
DX3DVERT( 4.58333e-009, -0.10378, 0.461803 ) DX3DVNORM( 3.77717e-008, 0.951112, 0.308846 )  //54
DX3DVERT( 0.142705, -0.10378, 0.439201 ) DX3DVNORM( 0.0954386, 0.951112, 0.29373 )  //55
DX3DVERT( 0.271441, -0.10378, 0.373607 ) DX3DVNORM( 0.181535, 0.951112, 0.249861 )  //56
DX3DVERT( 0.373607, -0.10378, 0.271441 ) DX3DVNORM( 0.249861, 0.951112, 0.181535 )  //57
DX3DVERT( 0.439201, -0.10378, 0.142705 ) DX3DVNORM( 0.29373, 0.951112, 0.0954386 )  //58
DX3DVERT( 0.461803, -0.10378, 0 ) DX3DVNORM( 0.308846, 0.951112, 2.45516e-007 )  //59
DX3DVERT( 0.492226, -0.132188, -0.159934 ) DX3DVNORM( 0.558794, 0.809187, -0.181563 )  //60
DX3DVERT( 0.418713, -0.132188, -0.304213 ) DX3DVNORM( 0.475339, 0.809187, -0.345354 )  //61
DX3DVERT( 0.304213, -0.132188, -0.418713 ) DX3DVNORM( 0.345354, 0.809187, -0.475339 )  //62
DX3DVERT( 0.159934, -0.132188, -0.492226 ) DX3DVNORM( 0.181563, 0.809187, -0.558794 )  //63
DX3DVERT( 3.65559e-009, -0.132188, -0.517557 ) DX3DVNORM( -1.06074e-007, 0.809187, -0.587551 )  //64
DX3DVERT( -0.159934, -0.132188, -0.492226 ) DX3DVNORM( -0.181563, 0.809187, -0.558794 )  //65
DX3DVERT( -0.304213, -0.132188, -0.418713 ) DX3DVNORM( -0.345354, 0.809187, -0.475339 )  //66
DX3DVERT( -0.418713, -0.132188, -0.304213 ) DX3DVNORM( -0.475339, 0.809187, -0.345354 )  //67
DX3DVERT( -0.492226, -0.132188, -0.159934 ) DX3DVNORM( -0.558794, 0.809187, -0.181563 )  //68
DX3DVERT( -0.517557, -0.132188, -8.79226e-009 ) DX3DVNORM( -0.587551, 0.809187, 1.32593e-008 )  //69
DX3DVERT( -0.492226, -0.132188, 0.159934 ) DX3DVNORM( -0.558794, 0.809187, 0.181563 )  //70
DX3DVERT( -0.418713, -0.132188, 0.304212 ) DX3DVNORM( -0.475339, 0.809187, 0.345354 )  //71
DX3DVERT( -0.304212, -0.132188, 0.418713 ) DX3DVNORM( -0.345354, 0.809187, 0.475339 )  //72
DX3DVERT( -0.159934, -0.132188, 0.492226 ) DX3DVNORM( -0.181563, 0.809187, 0.558794 )  //73
DX3DVERT( 5.13667e-009, -0.132188, 0.517557 ) DX3DVNORM( 1.21228e-007, 0.809187, 0.587551 )  //74
DX3DVERT( 0.159934, -0.132188, 0.492226 ) DX3DVNORM( 0.181563, 0.809187, 0.558794 )  //75
DX3DVERT( 0.304212, -0.132188, 0.418713 ) DX3DVNORM( 0.345354, 0.809187, 0.475339 )  //76
DX3DVERT( 0.418713, -0.132188, 0.304212 ) DX3DVNORM( 0.475339, 0.809187, 0.345354 )  //77
DX3DVERT( 0.492226, -0.132188, 0.159934 ) DX3DVNORM( 0.558794, 0.809187, 0.181563 )  //78
DX3DVERT( 0.517557, -0.132188, 0 ) DX3DVNORM( 0.587551, 0.809187, 3.95885e-007 )  //79
DX3DVERT( 0.534307, -0.176435, -0.173607 ) DX3DVNORM( 0.76926, 0.588018, -0.249947 )  //80
DX3DVERT( 0.454509, -0.176435, -0.33022 ) DX3DVNORM( 0.654372, 0.588018, -0.475429 )  //81
DX3DVERT( 0.33022, -0.176435, -0.454509 ) DX3DVNORM( 0.475429, 0.588018, -0.654372 )  //82
DX3DVERT( 0.173607, -0.176435, -0.534307 ) DX3DVNORM( 0.249948, 0.588018, -0.76926 )  //83
DX3DVERT( 3.96811e-009, -0.176435, -0.561804 ) DX3DVNORM( -3.80219e-008, 0.588018, -0.808848 )  //84
DX3DVERT( -0.173607, -0.176435, -0.534307 ) DX3DVNORM( -0.249948, 0.588018, -0.76926 )  //85
DX3DVERT( -0.33022, -0.176435, -0.454509 ) DX3DVNORM( -0.475429, 0.588018, -0.654372 )  //86
DX3DVERT( -0.454509, -0.176435, -0.33022 ) DX3DVNORM( -0.654372, 0.588018, -0.475429 )  //87
DX3DVERT( -0.534307, -0.176435, -0.173607 ) DX3DVNORM( -0.76926, 0.588018, -0.249948 )  //88
DX3DVERT( -0.561804, -0.176435, -9.54392e-009 ) DX3DVNORM( -0.808848, 0.588018, -1.14066e-008 )  //89
DX3DVERT( -0.534307, -0.176435, 0.173607 ) DX3DVNORM( -0.76926, 0.588018, 0.249948 )  //90
DX3DVERT( -0.454509, -0.176435, 0.33022 ) DX3DVNORM( -0.654372, 0.588018, 0.475429 )  //91
DX3DVERT( -0.33022, -0.176435, 0.454509 ) DX3DVNORM( -0.475429, 0.588018, 0.654372 )  //92
DX3DVERT( -0.173607, -0.176435, 0.534307 ) DX3DVNORM( -0.249948, 0.588018, 0.76926 )  //93
DX3DVERT( 5.57581e-009, -0.176435, 0.561804 ) DX3DVNORM( 1.02659e-007, 0.588018, 0.808848 )  //94
DX3DVERT( 0.173607, -0.176435, 0.534307 ) DX3DVNORM( 0.249948, 0.588018, 0.76926 )  //95
DX3DVERT( 0.33022, -0.176435, 0.454509 ) DX3DVNORM( 0.475429, 0.588018, 0.654372 )  //96
DX3DVERT( 0.454509, -0.176435, 0.33022 ) DX3DVNORM( 0.654372, 0.588018, 0.475429 )  //97
DX3DVERT( 0.534307, -0.176435, 0.173607 ) DX3DVNORM( 0.76926, 0.588018, 0.249948 )  //98
DX3DVERT( 0.561803, -0.176435, 0 ) DX3DVNORM( 0.808848, 0.588018, 4.79076e-007 )  //99
DX3DVERT( 0.561325, -0.232188, -0.182385 ) DX3DVNORM( 0.904457, 0.309185, -0.293875 )  //100
DX3DVERT( 0.477491, -0.232188, -0.346918 ) DX3DVNORM( 0.769377, 0.309185, -0.558985 )  //101
DX3DVERT( 0.346918, -0.232188, -0.477491 ) DX3DVNORM( 0.558985, 0.309185, -0.769377 )  //102
DX3DVERT( 0.182385, -0.232188, -0.561325 ) DX3DVNORM( 0.293876, 0.309185, -0.904457 )  //103
DX3DVERT( 4.16876e-009, -0.232188, -0.590212 ) DX3DVNORM( -8.00802e-008, 0.309185, -0.951002 )  //104
DX3DVERT( -0.182385, -0.232188, -0.561325 ) DX3DVNORM( -0.293876, 0.309185, -0.904456 )  //105
DX3DVERT( -0.346918, -0.232188, -0.477491 ) DX3DVNORM( -0.558985, 0.309185, -0.769377 )  //106
DX3DVERT( -0.477491, -0.232188, -0.346918 ) DX3DVNORM( -0.769377, 0.309185, -0.558985 )  //107
DX3DVERT( -0.561325, -0.232188, -0.182385 ) DX3DVNORM( -0.904457, 0.309185, -0.293876 )  //108
DX3DVERT( -0.590212, -0.232188, -1.00265e-008 ) DX3DVNORM( -0.951002, 0.309185, -2.28801e-008 )  //109
DX3DVERT( -0.561325, -0.232188, 0.182385 ) DX3DVNORM( -0.904457, 0.309185, 0.293876 )  //110
DX3DVERT( -0.477491, -0.232188, 0.346918 ) DX3DVNORM( -0.769377, 0.309185, 0.558985 )  //111
DX3DVERT( -0.346918, -0.232188, 0.477491 ) DX3DVNORM( -0.558985, 0.309185, 0.769377 )  //112
DX3DVERT( -0.182385, -0.232188, 0.561324 ) DX3DVNORM( -0.293876, 0.309185, 0.904457 )  //113
DX3DVERT( 5.85776e-009, -0.232188, 0.590211 ) DX3DVNORM( 0, 0.309185, 0.951002 )  //114
DX3DVERT( 0.182385, -0.232188, 0.561324 ) DX3DVNORM( 0.293876, 0.309185, 0.904457 )  //115
DX3DVERT( 0.346918, -0.232188, 0.477491 ) DX3DVNORM( 0.558985, 0.309185, 0.769377 )  //116
DX3DVERT( 0.477491, -0.232188, 0.346918 ) DX3DVNORM( 0.769377, 0.309185, 0.558985 )  //117
DX3DVERT( 0.561324, -0.232188, 0.182385 ) DX3DVNORM( 0.904457, 0.309185, 0.293876 )  //118
DX3DVERT( 0.590211, -0.232188, 0 ) DX3DVNORM( 0.951002, 0.309185, 6.21575e-007 )  //119
DX3DVERT( 0.570634, -0.293992, -0.18541 ) DX3DVNORM( 0.951057, 2.29056e-008, -0.309016 )  //120
DX3DVERT( 0.48541, -0.293992, -0.352671 ) DX3DVNORM( 0.809017, 2.29056e-008, -0.587785 )  //121
DX3DVERT( 0.352671, -0.293992, -0.48541 ) DX3DVNORM( 0.587785, 2.29056e-008, -0.809017 )  //122
DX3DVERT( 0.18541, -0.293992, -0.570634 ) DX3DVNORM( 0.309017, -7.6352e-009, -0.951056 )  //123
DX3DVERT( 4.2379e-009, -0.293992, -0.6 ) DX3DVNORM( -1.67974e-007, -7.6352e-009, -1 )  //124
DX3DVERT( -0.18541, -0.293992, -0.570634 ) DX3DVNORM( -0.309017, 1.52704e-008, -0.951056 )  //125
DX3DVERT( -0.352671, -0.293992, -0.48541 ) DX3DVNORM( -0.587785, 2.67232e-008, -0.809017 )  //126
DX3DVERT( -0.48541, -0.293992, -0.352671 ) DX3DVNORM( -0.809017, 1.9088e-008, -0.587785 )  //127
DX3DVERT( -0.570634, -0.293992, -0.18541 ) DX3DVNORM( -0.951056, 2.29056e-008, -0.309017 )  //128
DX3DVERT( -0.6, -0.293992, -1.01928e-008 ) DX3DVNORM( -1, 2.67232e-008, -1.52704e-008 )  //129
DX3DVERT( -0.570634, -0.293992, 0.18541 ) DX3DVNORM( -0.951056, 2.67232e-008, 0.309017 )  //130
DX3DVERT( -0.48541, -0.293992, 0.352671 ) DX3DVNORM( -0.809017, 1.9088e-008, 0.587785 )  //131
DX3DVERT( -0.352671, -0.293992, 0.48541 ) DX3DVNORM( -0.587785, 7.6352e-009, 0.809017 )  //132
DX3DVERT( -0.18541, -0.293992, 0.570634 ) DX3DVNORM( -0.309017, 3.05408e-008, 0.951057 )  //133
DX3DVERT( 5.95491e-009, -0.293992, 0.6 ) DX3DVNORM( -1.14528e-008, 5.7264e-008, 1 )  //134
DX3DVERT( 0.18541, -0.293992, 0.570634 ) DX3DVNORM( 0.309017, 3.8176e-008, 0.951057 )  //135
DX3DVERT( 0.352671, -0.293992, 0.48541 ) DX3DVNORM( 0.587785, 1.14528e-008, 0.809017 )  //136
DX3DVERT( 0.48541, -0.293992, 0.352671 ) DX3DVNORM( 0.809017, 1.52704e-008, 0.587785 )  //137
DX3DVERT( 0.570634, -0.293992, 0.18541 ) DX3DVNORM( 0.951056, 1.9088e-008, 0.309017 )  //138
DX3DVERT( 0.6, -0.293992, 0 ) DX3DVNORM( 1, 2.29056e-008, 6.90985e-007 )  //139
DX3DVERT( 0.561325, -0.355795, -0.182385 ) DX3DVNORM( 0.904457, -0.309185, -0.293875 )  //140
DX3DVERT( 0.477491, -0.355795, -0.346918 ) DX3DVNORM( 0.769377, -0.309185, -0.558985 )  //141
DX3DVERT( 0.346918, -0.355795, -0.477491 ) DX3DVNORM( 0.558985, -0.309185, -0.769377 )  //142
DX3DVERT( 0.182385, -0.355795, -0.561325 ) DX3DVNORM( 0.293876, -0.309185, -0.904456 )  //143
DX3DVERT( 4.16876e-009, -0.355795, -0.590212 ) DX3DVNORM( -6.48268e-008, -0.309185, -0.951002 )  //144
DX3DVERT( -0.182385, -0.355795, -0.561325 ) DX3DVNORM( -0.293876, -0.309185, -0.904456 )  //145
DX3DVERT( -0.346918, -0.355795, -0.477491 ) DX3DVNORM( -0.558985, -0.309185, -0.769377 )  //146
DX3DVERT( -0.477491, -0.355795, -0.346918 ) DX3DVNORM( -0.769377, -0.309185, -0.558985 )  //147
DX3DVERT( -0.561325, -0.355795, -0.182385 ) DX3DVNORM( -0.904457, -0.309185, -0.293876 )  //148
DX3DVERT( -0.590212, -0.355795, -1.00265e-008 ) DX3DVNORM( -0.951002, -0.309185, -3.81334e-009 )  //149
DX3DVERT( -0.561325, -0.355795, 0.182385 ) DX3DVNORM( -0.904457, -0.309185, 0.293876 )  //150
DX3DVERT( -0.477491, -0.355795, 0.346918 ) DX3DVNORM( -0.769377, -0.309185, 0.558985 )  //151
DX3DVERT( -0.346918, -0.355795, 0.477491 ) DX3DVNORM( -0.558985, -0.309185, 0.769377 )  //152
DX3DVERT( -0.182385, -0.355795, 0.561324 ) DX3DVNORM( -0.293876, -0.309185, 0.904457 )  //153
DX3DVERT( 5.85776e-009, -0.355795, 0.590211 ) DX3DVNORM( -7.62669e-009, -0.309185, 0.951002 )  //154
DX3DVERT( 0.182385, -0.355795, 0.561324 ) DX3DVNORM( 0.293876, -0.309185, 0.904456 )  //155
DX3DVERT( 0.346918, -0.355795, 0.477491 ) DX3DVNORM( 0.558985, -0.309185, 0.769377 )  //156
DX3DVERT( 0.477491, -0.355795, 0.346918 ) DX3DVNORM( 0.769377, -0.309185, 0.558985 )  //157
DX3DVERT( 0.561324, -0.355795, 0.182385 ) DX3DVNORM( 0.904457, -0.309185, 0.293876 )  //158
DX3DVERT( 0.590211, -0.355795, 0 ) DX3DVNORM( 0.951002, -0.309185, 6.29202e-007 )  //159
DX3DVERT( 0.534307, -0.411549, -0.173607 ) DX3DVNORM( 0.76926, -0.588018, -0.249947 )  //160
DX3DVERT( 0.454509, -0.411549, -0.33022 ) DX3DVNORM( 0.654372, -0.588018, -0.475429 )  //161
DX3DVERT( 0.33022, -0.411549, -0.454509 ) DX3DVNORM( 0.475429, -0.588018, -0.654372 )  //162
DX3DVERT( 0.173607, -0.411549, -0.534307 ) DX3DVNORM( 0.249948, -0.588018, -0.76926 )  //163
DX3DVERT( 3.96811e-009, -0.411549, -0.561804 ) DX3DVNORM( -1.06461e-007, -0.588018, -0.808848 )  //164
DX3DVERT( -0.173607, -0.411549, -0.534307 ) DX3DVNORM( -0.249948, -0.588018, -0.76926 )  //165
DX3DVERT( -0.33022, -0.411549, -0.454509 ) DX3DVNORM( -0.475429, -0.588018, -0.654372 )  //166
DX3DVERT( -0.454509, -0.411549, -0.33022 ) DX3DVNORM( -0.654372, -0.588018, -0.475429 )  //167
DX3DVERT( -0.534307, -0.411549, -0.173607 ) DX3DVNORM( -0.76926, -0.588018, -0.249948 )  //168
DX3DVERT( -0.561804, -0.411549, -9.54392e-009 ) DX3DVNORM( -0.808848, -0.588018, 0 )  //169
DX3DVERT( -0.534307, -0.411549, 0.173607 ) DX3DVNORM( -0.76926, -0.588018, 0.249948 )  //170
DX3DVERT( -0.454509, -0.411549, 0.33022 ) DX3DVNORM( -0.654372, -0.588018, 0.475429 )  //171
DX3DVERT( -0.33022, -0.411549, 0.454509 ) DX3DVNORM( -0.475429, -0.588018, 0.654372 )  //172
DX3DVERT( -0.173607, -0.411549, 0.534307 ) DX3DVNORM( -0.249948, -0.588018, 0.76926 )  //173
DX3DVERT( 5.57581e-009, -0.411549, 0.561804 ) DX3DVNORM( 1.02659e-007, -0.588018, 0.808848 )  //174
DX3DVERT( 0.173607, -0.411549, 0.534307 ) DX3DVNORM( 0.249948, -0.588018, 0.76926 )  //175
DX3DVERT( 0.33022, -0.411549, 0.454509 ) DX3DVNORM( 0.475429, -0.588018, 0.654372 )  //176
DX3DVERT( 0.454509, -0.411549, 0.33022 ) DX3DVNORM( 0.654372, -0.588018, 0.475429 )  //177
DX3DVERT( 0.534307, -0.411549, 0.173607 ) DX3DVNORM( 0.76926, -0.588018, 0.249948 )  //178
DX3DVERT( 0.561803, -0.411549, 0 ) DX3DVNORM( 0.808848, -0.588018, 5.15197e-007 )  //179
DX3DVERT( 0.492226, -0.455795, -0.159934 ) DX3DVNORM( 0.558794, -0.809187, -0.181563 )  //180
DX3DVERT( 0.418713, -0.455795, -0.304213 ) DX3DVNORM( 0.475339, -0.809187, -0.345354 )  //181
DX3DVERT( 0.304213, -0.455795, -0.418713 ) DX3DVNORM( 0.345354, -0.809187, -0.475339 )  //182
DX3DVERT( 0.159934, -0.455795, -0.492226 ) DX3DVNORM( 0.181563, -0.809187, -0.558794 )  //183
DX3DVERT( 3.65559e-009, -0.455795, -0.517557 ) DX3DVNORM( -1.45852e-007, -0.809187, -0.587551 )  //184
DX3DVERT( -0.159934, -0.455795, -0.492226 ) DX3DVNORM( -0.181563, -0.809187, -0.558794 )  //185
DX3DVERT( -0.304213, -0.455795, -0.418713 ) DX3DVNORM( -0.345354, -0.809187, -0.475339 )  //186
DX3DVERT( -0.418713, -0.455795, -0.304213 ) DX3DVNORM( -0.475339, -0.809187, -0.345354 )  //187
DX3DVERT( -0.492226, -0.455795, -0.159934 ) DX3DVNORM( -0.558794, -0.809187, -0.181563 )  //188
DX3DVERT( -0.517557, -0.455795, -8.79226e-009 ) DX3DVNORM( -0.587551, -0.809187, 4.73547e-008 )  //189
DX3DVERT( -0.492226, -0.455795, 0.159934 ) DX3DVNORM( -0.558794, -0.809187, 0.181563 )  //190
DX3DVERT( -0.418713, -0.455795, 0.304212 ) DX3DVNORM( -0.475339, -0.809187, 0.345354 )  //191
DX3DVERT( -0.304212, -0.455795, 0.418713 ) DX3DVNORM( -0.345354, -0.809187, 0.475339 )  //192
DX3DVERT( -0.159934, -0.455795, 0.492226 ) DX3DVNORM( -0.181563, -0.809187, 0.558794 )  //193
DX3DVERT( 5.13667e-009, -0.455795, 0.517557 ) DX3DVNORM( 1.30699e-007, -0.809187, 0.587551 )  //194
DX3DVERT( 0.159934, -0.455795, 0.492226 ) DX3DVNORM( 0.181563, -0.809187, 0.558794 )  //195
DX3DVERT( 0.304212, -0.455795, 0.418713 ) DX3DVNORM( 0.345354, -0.809187, 0.475339 )  //196
DX3DVERT( 0.418713, -0.455795, 0.304212 ) DX3DVNORM( 0.475339, -0.809187, 0.345354 )  //197
DX3DVERT( 0.492226, -0.455795, 0.159934 ) DX3DVNORM( 0.558794, -0.809187, 0.181563 )  //198
DX3DVERT( 0.517557, -0.455795, 0 ) DX3DVNORM( 0.587551, -0.809187, 3.4853e-007 )  //199
DX3DVERT( 0.439201, -0.484203, -0.142705 ) DX3DVNORM( 0.29373, -0.951112, -0.0954384 )  //200
DX3DVERT( 0.373607, -0.484203, -0.271441 ) DX3DVNORM( 0.249862, -0.951112, -0.181535 )  //201
DX3DVERT( 0.271441, -0.484203, -0.373607 ) DX3DVNORM( 0.181535, -0.951112, -0.249861 )  //202
DX3DVERT( 0.142705, -0.484203, -0.439201 ) DX3DVNORM( 0.0954386, -0.951112, -0.29373 )  //203
DX3DVERT( 3.26179e-009, -0.484203, -0.461804 ) DX3DVNORM( -4.62703e-008, -0.951112, -0.308846 )  //204
DX3DVERT( -0.142705, -0.484203, -0.439201 ) DX3DVNORM( -0.0954387, -0.951112, -0.29373 )  //205
DX3DVERT( -0.271441, -0.484203, -0.373607 ) DX3DVNORM( -0.181535, -0.951112, -0.249861 )  //206
DX3DVERT( -0.373607, -0.484203, -0.271441 ) DX3DVNORM( -0.249862, -0.951112, -0.181535 )  //207
DX3DVERT( -0.439201, -0.484203, -0.142705 ) DX3DVNORM( -0.29373, -0.951112, -0.0954386 )  //208
DX3DVERT( -0.461804, -0.484203, -7.84512e-009 ) DX3DVNORM( -0.308846, -0.951112, -1.41644e-008 )  //209
DX3DVERT( -0.439201, -0.484203, 0.142705 ) DX3DVNORM( -0.29373, -0.951112, 0.0954387 )  //210
DX3DVERT( -0.373607, -0.484203, 0.271441 ) DX3DVNORM( -0.249862, -0.951112, 0.181535 )  //211
DX3DVERT( -0.271441, -0.484203, 0.373607 ) DX3DVNORM( -0.181535, -0.951112, 0.249862 )  //212
DX3DVERT( -0.142705, -0.484203, 0.439201 ) DX3DVNORM( -0.0954386, -0.951112, 0.29373 )  //213
DX3DVERT( 4.58333e-009, -0.484203, 0.461803 ) DX3DVNORM( 5.71297e-008, -0.951112, 0.308846 )  //214
DX3DVERT( 0.142705, -0.484203, 0.439201 ) DX3DVNORM( 0.0954387, -0.951112, 0.29373 )  //215
DX3DVERT( 0.271441, -0.484203, 0.373607 ) DX3DVNORM( 0.181535, -0.951112, 0.249861 )  //216
DX3DVERT( 0.373607, -0.484203, 0.271441 ) DX3DVNORM( 0.249862, -0.951112, 0.181535 )  //217
DX3DVERT( 0.439201, -0.484203, 0.142705 ) DX3DVNORM( 0.29373, -0.951112, 0.0954386 )  //218
DX3DVERT( 0.461803, -0.484203, 0 ) DX3DVNORM( 0.308846, -0.951112, 1.25119e-007 )  //219
DX3DVERT( 0.380423, -0.493992, -0.123607 ) DX3DVNORM( 0.0630023, -0.997803, -0.0204707 )  //220
DX3DVERT( 0.323607, -0.493992, -0.235114 ) DX3DVNORM( 0.0535929, -0.997803, -0.0389376 )  //221
DX3DVERT( 0.235114, -0.493992, -0.323607 ) DX3DVNORM( 0.0389375, -0.997803, -0.0535928 )  //222
DX3DVERT( 0.123607, -0.493992, -0.380423 ) DX3DVNORM( 0.0204707, -0.997803, -0.0630023 )  //223
DX3DVERT( 2.82527e-009, -0.493992, -0.4 ) DX3DVNORM( -1.27437e-008, -0.997803, -0.0662446 )  //224
DX3DVERT( -0.123607, -0.493992, -0.380423 ) DX3DVNORM( -0.0204707, -0.997803, -0.0630024 )  //225
DX3DVERT( -0.235114, -0.493992, -0.323607 ) DX3DVNORM( -0.0389375, -0.997803, -0.0535929 )  //226
DX3DVERT( -0.323607, -0.493992, -0.235114 ) DX3DVNORM( -0.0535929, -0.997803, -0.0389373 )  //227
DX3DVERT( -0.380423, -0.493992, -0.123607 ) DX3DVNORM( -0.0630023, -0.997803, -0.0204707 )  //228
DX3DVERT( -0.4, -0.493992, -6.7952e-009 ) DX3DVNORM( -0.0662445, -0.997803, -6.07958e-008 )  //229
DX3DVERT( -0.380423, -0.493992, 0.123607 ) DX3DVNORM( -0.0630022, -0.997803, 0.0204708 )  //230
DX3DVERT( -0.323607, -0.493992, 0.235114 ) DX3DVNORM( -0.0535929, -0.997803, 0.0389375 )  //231
DX3DVERT( -0.235114, -0.493992, 0.323607 ) DX3DVNORM( -0.0389375, -0.997803, 0.0535929 )  //232
DX3DVERT( -0.123607, -0.493992, 0.380423 ) DX3DVNORM( -0.0204707, -0.997803, 0.0630024 )  //233
DX3DVERT( 3.96994e-009, -0.493992, 0.4 ) DX3DVNORM( 2.73581e-008, -0.997803, 0.0662446 )  //234
DX3DVERT( 0.123607, -0.493992, 0.380423 ) DX3DVNORM( 0.0204707, -0.997803, 0.0630021 )  //235
DX3DVERT( 0.235114, -0.493992, 0.323607 ) DX3DVNORM( 0.0389375, -0.997803, 0.0535928 )  //236
DX3DVERT( 0.323607, -0.493992, 0.235114 ) DX3DVNORM( 0.0535929, -0.997803, 0.0389374 )  //237
DX3DVERT( 0.380423, -0.493992, 0.123607 ) DX3DVNORM( 0.0630023, -0.997803, 0.0204706 )  //238
DX3DVERT( 0.4, -0.493992, 0 ) DX3DVNORM( 0.0662446, -0.997803, 1.9291e-009 )  //239
DX3DVERT( -2.05744e-009, -0.484203, -2.96075e-008 ) DX3DVNORM( 1.86322e-010, -1, -6.83568e-009 )  //240
DX3DVERT( 0.202254, 0.179396, -0.146946 ) DX3DVNORM( 0.126558, 0.987688, -0.0919499 )  //241
DX3DVERT( 0.237764, 0.179396, -0.0772543 ) DX3DVNORM( 0.148778, 0.987688, -0.0483408 )  //242
DX3DVERT( 0.296543, 0.169607, -0.0963526 ) DX3DVNORM( 0.29373, 0.951112, -0.0954383 )  //243
DX3DVERT( 0.252254, 0.169607, -0.183274 ) DX3DVNORM( 0.249861, 0.951112, -0.181535 )  //244
DX3DVERT( 0.146946, 0.179396, -0.202254 ) DX3DVNORM( 0.0919498, 0.987688, -0.126558 )  //245
DX3DVERT( 0.183274, 0.169607, -0.252254 ) DX3DVNORM( 0.181535, 0.951112, -0.249861 )  //246
DX3DVERT( 0.0772543, 0.179396, -0.237764 ) DX3DVNORM( 0.0483408, 0.987688, -0.148778 )  //247
DX3DVERT( 0.0963526, 0.169607, -0.296543 ) DX3DVNORM( 0.0954386, 0.951112, -0.29373 )  //248
DX3DVERT( 1.76579e-009, 0.179396, -0.25 ) DX3DVNORM( 0, 0.987688, -0.156434 )  //249
DX3DVERT( 2.20232e-009, 0.169607, -0.311804 ) DX3DVNORM( -1.88858e-009, 0.951112, -0.308846 )  //250
DX3DVERT( -0.0772543, 0.179396, -0.237764 ) DX3DVNORM( -0.0483409, 0.987688, -0.148778 )  //251
DX3DVERT( -0.0963526, 0.169607, -0.296543 ) DX3DVNORM( -0.0954387, 0.951112, -0.29373 )  //252
DX3DVERT( -0.146946, 0.179396, -0.202254 ) DX3DVNORM( -0.0919498, 0.987688, -0.126558 )  //253
DX3DVERT( -0.183273, 0.169607, -0.252254 ) DX3DVNORM( -0.181535, 0.951112, -0.249862 )  //254
DX3DVERT( -0.202254, 0.179396, -0.146946 ) DX3DVNORM( -0.126558, 0.987688, -0.0919498 )  //255
DX3DVERT( -0.252254, 0.169607, -0.183273 ) DX3DVNORM( -0.249861, 0.951112, -0.181535 )  //256
DX3DVERT( -0.237764, 0.179396, -0.0772543 ) DX3DVNORM( -0.148778, 0.987688, -0.0483409 )  //257
DX3DVERT( -0.296543, 0.169607, -0.0963526 ) DX3DVNORM( -0.29373, 0.951112, -0.0954386 )  //258
DX3DVERT( -0.25, 0.179396, -4.247e-009 ) DX3DVNORM( -0.156434, 0.987688, 2.79483e-009 )  //259
DX3DVERT( -0.311803, 0.169607, -5.29692e-009 ) DX3DVNORM( -0.308846, 0.951112, -1.88858e-009 )  //260
DX3DVERT( -0.237764, 0.179396, 0.0772543 ) DX3DVNORM( -0.148778, 0.987688, 0.0483409 )  //261
DX3DVERT( -0.296543, 0.169607, 0.0963526 ) DX3DVNORM( -0.29373, 0.951112, 0.0954386 )  //262
DX3DVERT( -0.202254, 0.179396, 0.146946 ) DX3DVNORM( -0.126558, 0.987688, 0.0919498 )  //263
DX3DVERT( -0.252254, 0.169607, 0.183273 ) DX3DVNORM( -0.249861, 0.951112, 0.181535 )  //264
DX3DVERT( -0.146946, 0.179396, 0.202254 ) DX3DVNORM( -0.0919498, 0.987688, 0.126558 )  //265
DX3DVERT( -0.183273, 0.169607, 0.252254 ) DX3DVNORM( -0.181535, 0.951112, 0.249862 )  //266
DX3DVERT( -0.0772543, 0.179396, 0.237764 ) DX3DVNORM( -0.0483409, 0.987688, 0.148778 )  //267
DX3DVERT( -0.0963526, 0.169607, 0.296543 ) DX3DVNORM( -0.0954385, 0.951112, 0.29373 )  //268
DX3DVERT( 2.48121e-009, 0.179396, 0.25 ) DX3DVNORM( 2.51534e-008, 0.987688, 0.156434 )  //269
DX3DVERT( 3.0946e-009, 0.169607, 0.311803 ) DX3DVNORM( 1.32201e-008, 0.951112, 0.308846 )  //270
DX3DVERT( 0.0772543, 0.179396, 0.237764 ) DX3DVNORM( 0.0483409, 0.987688, 0.148778 )  //271
DX3DVERT( 0.0963526, 0.169607, 0.296543 ) DX3DVNORM( 0.0954386, 0.951112, 0.29373 )  //272
DX3DVERT( 0.146946, 0.179396, 0.202254 ) DX3DVNORM( 0.0919498, 0.987688, 0.126558 )  //273
DX3DVERT( 0.183273, 0.169607, 0.252254 ) DX3DVNORM( 0.181535, 0.951112, 0.249861 )  //274
DX3DVERT( 0.202254, 0.179396, 0.146946 ) DX3DVNORM( 0.126558, 0.987688, 0.0919498 )  //275
DX3DVERT( 0.252254, 0.169607, 0.183273 ) DX3DVNORM( 0.249862, 0.951112, 0.181535 )  //276
DX3DVERT( 0.237764, 0.179396, 0.0772543 ) DX3DVNORM( 0.148778, 0.987688, 0.0483409 )  //277
DX3DVERT( 0.296543, 0.169607, 0.0963526 ) DX3DVNORM( 0.29373, 0.951112, 0.0954386 )  //278
DX3DVERT( 0.25, 0.179396, 0 ) DX3DVNORM( 0.156434, 0.987688, 9.22292e-008 )  //279
DX3DVERT( 0.311803, 0.169607, 0 ) DX3DVNORM( 0.308846, 0.951112, 2.47405e-007 )  //280
DX3DVERT( 0.349568, 0.141199, -0.113581 ) DX3DVNORM( 0.558794, 0.809187, -0.181563 )  //281
DX3DVERT( 0.29736, 0.141199, -0.216045 ) DX3DVNORM( 0.475339, 0.809187, -0.345354 )  //282
DX3DVERT( 0.216045, 0.141199, -0.29736 ) DX3DVNORM( 0.345354, 0.809187, -0.475339 )  //283
DX3DVERT( 0.113581, 0.141199, -0.349568 ) DX3DVNORM( 0.181563, 0.809187, -0.558794 )  //284
DX3DVERT( 2.59612e-009, 0.141199, -0.367557 ) DX3DVNORM( -5.68256e-009, 0.809187, -0.587551 )  //285
DX3DVERT( -0.113581, 0.141199, -0.349568 ) DX3DVNORM( -0.181563, 0.809187, -0.558794 )  //286
DX3DVERT( -0.216045, 0.141199, -0.29736 ) DX3DVNORM( -0.345354, 0.809187, -0.475339 )  //287
DX3DVERT( -0.29736, 0.141199, -0.216045 ) DX3DVNORM( -0.475339, 0.809187, -0.345354 )  //288
DX3DVERT( -0.349568, 0.141199, -0.113581 ) DX3DVNORM( -0.558794, 0.809187, -0.181563 )  //289
DX3DVERT( -0.367557, 0.141199, -6.24406e-009 ) DX3DVNORM( -0.587551, 0.809187, 1.89419e-009 )  //290
DX3DVERT( -0.349568, 0.141199, 0.113581 ) DX3DVNORM( -0.558794, 0.809187, 0.181563 )  //291
DX3DVERT( -0.29736, 0.141199, 0.216045 ) DX3DVNORM( -0.475339, 0.809187, 0.345354 )  //292
DX3DVERT( -0.216045, 0.141199, 0.29736 ) DX3DVNORM( -0.345354, 0.809187, 0.475339 )  //293
DX3DVERT( -0.113581, 0.141199, 0.349568 ) DX3DVNORM( -0.181563, 0.809187, 0.558794 )  //294
DX3DVERT( 3.64795e-009, 0.141199, 0.367557 ) DX3DVNORM( 6.25082e-008, 0.809187, 0.587551 )  //295
DX3DVERT( 0.113581, 0.141199, 0.349568 ) DX3DVNORM( 0.181563, 0.809187, 0.558794 )  //296
DX3DVERT( 0.216045, 0.141199, 0.29736 ) DX3DVNORM( 0.345354, 0.809187, 0.475339 )  //297
DX3DVERT( 0.29736, 0.141199, 0.216045 ) DX3DVNORM( 0.475339, 0.809187, 0.345354 )  //298
DX3DVERT( 0.349568, 0.141199, 0.113581 ) DX3DVNORM( 0.558794, 0.809187, 0.181563 )  //299
DX3DVERT( 0.367557, 0.141199, 0 ) DX3DVNORM( 0.587551, 0.809187, 4.05356e-007 )  //300
DX3DVERT( 0.391649, 0.096953, -0.127254 ) DX3DVNORM( 0.76926, 0.588018, -0.249947 )  //301
DX3DVERT( 0.333156, 0.096953, -0.242052 ) DX3DVNORM( 0.654372, 0.588018, -0.475429 )  //302
DX3DVERT( 0.242052, 0.096953, -0.333156 ) DX3DVNORM( 0.475429, 0.588018, -0.654372 )  //303
DX3DVERT( 0.127254, 0.096953, -0.391649 ) DX3DVNORM( 0.249948, 0.588018, -0.76926 )  //304
DX3DVERT( 2.90863e-009, 0.096953, -0.411804 ) DX3DVNORM( -6.0835e-008, 0.588018, -0.808848 )  //305
DX3DVERT( -0.127254, 0.096953, -0.391648 ) DX3DVNORM( -0.249948, 0.588018, -0.76926 )  //306
DX3DVERT( -0.242052, 0.096953, -0.333156 ) DX3DVNORM( -0.475429, 0.588018, -0.654372 )  //307
DX3DVERT( -0.333156, 0.096953, -0.242052 ) DX3DVNORM( -0.654372, 0.588018, -0.475429 )  //308
DX3DVERT( -0.391648, 0.096953, -0.127254 ) DX3DVNORM( -0.76926, 0.588018, -0.249948 )  //309
DX3DVERT( -0.411804, 0.096953, -6.99572e-009 ) DX3DVNORM( -0.808848, 0.588018, -7.60438e-009 )  //310
DX3DVERT( -0.391648, 0.096953, 0.127254 ) DX3DVNORM( -0.76926, 0.588018, 0.249948 )  //311
DX3DVERT( -0.333156, 0.096953, 0.242052 ) DX3DVNORM( -0.654372, 0.588018, 0.475429 )  //312
DX3DVERT( -0.242052, 0.096953, 0.333156 ) DX3DVNORM( -0.475429, 0.588018, 0.654372 )  //313
DX3DVERT( -0.127254, 0.096953, 0.391648 ) DX3DVNORM( -0.249948, 0.588018, 0.76926 )  //314
DX3DVERT( 4.08709e-009, 0.096953, 0.411803 ) DX3DVNORM( 6.0835e-008, 0.588018, 0.808848 )  //315
DX3DVERT( 0.127254, 0.096953, 0.391648 ) DX3DVNORM( 0.249948, 0.588018, 0.76926 )  //316
DX3DVERT( 0.242052, 0.096953, 0.333156 ) DX3DVNORM( 0.475429, 0.588018, 0.654372 )  //317
DX3DVERT( 0.333156, 0.096953, 0.242052 ) DX3DVNORM( 0.654372, 0.588018, 0.475429 )  //318
DX3DVERT( 0.391648, 0.096953, 0.127254 ) DX3DVNORM( 0.76926, 0.588018, 0.249948 )  //319
DX3DVERT( 0.411803, 0.096953, 0 ) DX3DVNORM( 0.808848, 0.588018, 5.209e-007 )  //320
DX3DVERT( 0.418666, 0.0411993, -0.136033 ) DX3DVNORM( 0.904457, 0.309185, -0.293875 )  //321
DX3DVERT( 0.356139, 0.0411993, -0.25875 ) DX3DVNORM( 0.769377, 0.309185, -0.558985 )  //322
DX3DVERT( 0.25875, 0.0411993, -0.356139 ) DX3DVNORM( 0.558985, 0.309185, -0.769377 )  //323
DX3DVERT( 0.136033, 0.0411993, -0.418666 ) DX3DVNORM( 0.293876, 0.309185, -0.904457 )  //324
DX3DVERT( 3.10928e-009, 0.0411993, -0.440212 ) DX3DVNORM( -5.72002e-008, 0.309185, -0.951002 )  //325
DX3DVERT( -0.136033, 0.0411993, -0.418666 ) DX3DVNORM( -0.293876, 0.309185, -0.904456 )  //326
DX3DVERT( -0.25875, 0.0411993, -0.356139 ) DX3DVNORM( -0.558985, 0.309185, -0.769377 )  //327
DX3DVERT( -0.356139, 0.0411993, -0.25875 ) DX3DVNORM( -0.769377, 0.309185, -0.558985 )  //328
DX3DVERT( -0.418666, 0.0411993, -0.136033 ) DX3DVNORM( -0.904457, 0.309185, -0.293876 )  //329
DX3DVERT( -0.440211, 0.0411993, -7.47831e-009 ) DX3DVNORM( -0.951002, 0.309185, -2.66934e-008 )  //330
DX3DVERT( -0.418666, 0.0411993, 0.136033 ) DX3DVNORM( -0.904456, 0.309185, 0.293876 )  //331
DX3DVERT( -0.356139, 0.0411993, 0.25875 ) DX3DVNORM( -0.769377, 0.309185, 0.558985 )  //332
DX3DVERT( -0.25875, 0.0411993, 0.356139 ) DX3DVNORM( -0.558985, 0.309185, 0.769377 )  //333
DX3DVERT( -0.136033, 0.0411993, 0.418666 ) DX3DVNORM( -0.293876, 0.309185, 0.904457 )  //334
DX3DVERT( 4.36903e-009, 0.0411993, 0.440211 ) DX3DVNORM( 4.95735e-008, 0.309185, 0.951002 )  //335
DX3DVERT( 0.136033, 0.0411993, 0.418666 ) DX3DVNORM( 0.293876, 0.309185, 0.904457 )  //336
DX3DVERT( 0.25875, 0.0411993, 0.356138 ) DX3DVNORM( 0.558985, 0.309185, 0.769377 )  //337
DX3DVERT( 0.356138, 0.0411993, 0.25875 ) DX3DVNORM( 0.769377, 0.309185, 0.558985 )  //338
DX3DVERT( 0.418666, 0.0411993, 0.136033 ) DX3DVNORM( 0.904457, 0.309185, 0.293876 )  //339
DX3DVERT( 0.440211, 0.0411993, 0 ) DX3DVNORM( 0.951002, 0.309185, 6.78775e-007 )  //340
DX3DVERT( 0.427976, -0.0206041, -0.139058 ) DX3DVNORM( 0.951057, -7.6352e-009, -0.309016 )  //341
DX3DVERT( 0.364058, -0.0206041, -0.264504 ) DX3DVNORM( 0.809017, -5.34464e-008, -0.587785 )  //342
DX3DVERT( 0.264504, -0.0206041, -0.364058 ) DX3DVNORM( 0.587785, -5.34464e-008, -0.809017 )  //343
DX3DVERT( 0.139058, -0.0206041, -0.427976 ) DX3DVNORM( 0.309017, 3.8176e-009, -0.951057 )  //344
DX3DVERT( 3.17842e-009, -0.0206041, -0.45 ) DX3DVNORM( -1.14528e-008, -1.14528e-008, -1 )  //345
DX3DVERT( -0.139058, -0.0206041, -0.427976 ) DX3DVNORM( -0.309017, -1.14528e-008, -0.951056 )  //346
DX3DVERT( -0.264503, -0.0206041, -0.364058 ) DX3DVNORM( -0.587785, 0, -0.809017 )  //347
DX3DVERT( -0.364058, -0.0206041, -0.264503 ) DX3DVNORM( -0.809017, 3.8176e-009, -0.587785 )  //348
DX3DVERT( -0.427976, -0.0206041, -0.139058 ) DX3DVNORM( -0.951057, 3.8176e-009, -0.309017 )  //349
DX3DVERT( -0.45, -0.0206041, -7.6446e-009 ) DX3DVNORM( -1, -3.8176e-009, -2.29056e-008 )  //350
DX3DVERT( -0.427976, -0.0206041, 0.139058 ) DX3DVNORM( -0.951056, -3.8176e-009, 0.309017 )  //351
DX3DVERT( -0.364058, -0.0206041, 0.264503 ) DX3DVNORM( -0.809017, 5.34464e-008, 0.587785 )  //352
DX3DVERT( -0.264503, -0.0206041, 0.364058 ) DX3DVNORM( -0.587785, 4.96288e-008, 0.809017 )  //353
DX3DVERT( -0.139058, -0.0206041, 0.427976 ) DX3DVNORM( -0.309017, 3.8176e-009, 0.951056 )  //354
DX3DVERT( 4.46618e-009, -0.0206041, 0.45 ) DX3DVNORM( 1.03075e-007, -3.8176e-009, 1 )  //355
DX3DVERT( 0.139058, -0.0206041, 0.427976 ) DX3DVNORM( 0.309017, 2.29056e-008, 0.951056 )  //356
DX3DVERT( 0.264503, -0.0206041, 0.364058 ) DX3DVNORM( 0.587785, 8.01696e-008, 0.809017 )  //357
DX3DVERT( 0.364058, -0.0206041, 0.264503 ) DX3DVNORM( 0.809017, 4.58112e-008, 0.587785 )  //358
DX3DVERT( 0.427975, -0.0206041, 0.139058 ) DX3DVNORM( 0.951056, 3.8176e-009, 0.309017 )  //359
DX3DVERT( 0.45, -0.0206041, 0 ) DX3DVNORM( 1, 0, 7.21526e-007 )  //360
DX3DVERT( 0.418666, -0.0824075, -0.136033 ) DX3DVNORM( 0.904457, -0.309185, -0.293875 )  //361
DX3DVERT( 0.356139, -0.0824075, -0.25875 ) DX3DVNORM( 0.769377, -0.309185, -0.558985 )  //362
DX3DVERT( 0.25875, -0.0824075, -0.356139 ) DX3DVNORM( 0.558985, -0.309185, -0.769377 )  //363
DX3DVERT( 0.136033, -0.0824075, -0.418666 ) DX3DVNORM( 0.293876, -0.309185, -0.904457 )  //364
DX3DVERT( 3.10928e-009, -0.0824075, -0.440212 ) DX3DVNORM( -1.144e-008, -0.309185, -0.951002 )  //365
DX3DVERT( -0.136033, -0.0824075, -0.418666 ) DX3DVNORM( -0.293876, -0.309185, -0.904457 )  //366
DX3DVERT( -0.25875, -0.0824075, -0.356139 ) DX3DVNORM( -0.558985, -0.309185, -0.769377 )  //367
DX3DVERT( -0.356139, -0.0824075, -0.25875 ) DX3DVNORM( -0.769377, -0.309185, -0.558985 )  //368
DX3DVERT( -0.418666, -0.0824075, -0.136033 ) DX3DVNORM( -0.904457, -0.309185, -0.293876 )  //369
DX3DVERT( -0.440211, -0.0824075, -7.47831e-009 ) DX3DVNORM( -0.951002, -0.309185, -3.43201e-008 )  //370
DX3DVERT( -0.418666, -0.0824075, 0.136033 ) DX3DVNORM( -0.904456, -0.309185, 0.293876 )  //371
DX3DVERT( -0.356139, -0.0824075, 0.25875 ) DX3DVNORM( -0.769377, -0.309185, 0.558985 )  //372
DX3DVERT( -0.25875, -0.0824075, 0.356139 ) DX3DVNORM( -0.558985, -0.309185, 0.769377 )  //373
DX3DVERT( -0.136033, -0.0824075, 0.418666 ) DX3DVNORM( -0.293876, -0.309185, 0.904457 )  //374
DX3DVERT( 4.36903e-009, -0.0824075, 0.440211 ) DX3DVNORM( 1.10587e-007, -0.309185, 0.951002 )  //375
DX3DVERT( 0.136033, -0.0824075, 0.418666 ) DX3DVNORM( 0.293876, -0.309185, 0.904457 )  //376
DX3DVERT( 0.25875, -0.0824075, 0.356138 ) DX3DVNORM( 0.558985, -0.309185, 0.769377 )  //377
DX3DVERT( 0.356138, -0.0824075, 0.25875 ) DX3DVNORM( 0.769377, -0.309185, 0.558985 )  //378
DX3DVERT( 0.418666, -0.0824075, 0.136033 ) DX3DVNORM( 0.904457, -0.309185, 0.293876 )  //379
DX3DVERT( 0.440211, -0.0824075, 0 ) DX3DVNORM( 0.951002, -0.309185, 6.44455e-007 )  //380
DX3DVERT( 0.391649, -0.138161, -0.127254 ) DX3DVNORM( 0.847398, -0.453991, -0.275336 )  //381
DX3DVERT( 0.333156, -0.138161, -0.242052 ) DX3DVNORM( 0.720839, -0.45399, -0.523721 )  //382
DX3DVERT( 0.242052, -0.138161, -0.333156 ) DX3DVNORM( 0.523721, -0.45399, -0.72084 )  //383
DX3DVERT( 0.127254, -0.138161, -0.391649 ) DX3DVNORM( 0.275336, -0.45399, -0.847398 )  //384
DX3DVERT( 2.90863e-009, -0.138161, -0.411804 ) DX3DVNORM( 0, -0.45399, -0.891007 )  //385
DX3DVERT( -0.127254, -0.138161, -0.391649 ) DX3DVNORM( -0.275336, -0.45399, -0.847398 )  //386
DX3DVERT( -0.242052, -0.138161, -0.333156 ) DX3DVNORM( -0.523721, -0.45399, -0.720839 )  //387
DX3DVERT( -0.333156, -0.138161, -0.242052 ) DX3DVNORM( -0.72084, -0.45399, -0.52372 )  //388
DX3DVERT( -0.391648, -0.138161, -0.127254 ) DX3DVNORM( -0.847398, -0.45399, -0.275336 )  //389
DX3DVERT( -0.411804, -0.138161, -6.99572e-009 ) DX3DVNORM( -0.891006, -0.453991, -4.51464e-008 )  //390
DX3DVERT( -0.391648, -0.138161, 0.127254 ) DX3DVNORM( -0.847397, -0.453991, 0.275336 )  //391
DX3DVERT( -0.333156, -0.138161, 0.242052 ) DX3DVNORM( -0.720839, -0.45399, 0.523721 )  //392
DX3DVERT( -0.242052, -0.138161, 0.333156 ) DX3DVNORM( -0.52372, -0.45399, 0.72084 )  //393
DX3DVERT( -0.127254, -0.138161, 0.391648 ) DX3DVNORM( -0.275336, -0.45399, 0.847398 )  //394
DX3DVERT( 4.08709e-009, -0.138161, 0.411804 ) DX3DVNORM( 1.12866e-007, -0.453991, 0.891007 )  //395
DX3DVERT( 0.127254, -0.138161, 0.391648 ) DX3DVNORM( 0.275336, -0.453991, 0.847398 )  //396
DX3DVERT( 0.242052, -0.138161, 0.333156 ) DX3DVNORM( 0.523721, -0.45399, 0.72084 )  //397
DX3DVERT( 0.333156, -0.138161, 0.242052 ) DX3DVNORM( 0.72084, -0.45399, 0.523721 )  //398
DX3DVERT( 0.391648, -0.138161, 0.127254 ) DX3DVNORM( 0.847398, -0.45399, 0.275336 )  //399
DX3DVERT( 0.411803, -0.138161, 0 ) DX3DVNORM( 0.891007, -0.45399, 5.6433e-007 )  //400
DX3DVERT( 0.254219, 0.132568, -0.0826009 ) DX3DVNORM( 0.805207, -0.532159, -0.261627 )  //401
DX3DVERT( 0.216252, 0.132568, -0.157116 ) DX3DVNORM( 0.684949, -0.53216, -0.497645 )  //402
DX3DVERT( 0.230826, 0.161229, -0.167705 ) DX3DVNORM( 0.726578, -0.439791, -0.52789 )  //403
DX3DVERT( 0.271353, 0.161229, -0.0881678 ) DX3DVNORM( 0.854144, -0.439791, -0.277528 )  //404
DX3DVERT( 0.157116, 0.132568, -0.216252 ) DX3DVNORM( 0.497645, -0.53216, -0.684949 )  //405
DX3DVERT( 0.167705, 0.161229, -0.230826 ) DX3DVNORM( 0.52789, -0.439791, -0.726578 )  //406
DX3DVERT( 0.0826009, 0.132568, -0.254219 ) DX3DVNORM( 0.261627, -0.53216, -0.805206 )  //407
DX3DVERT( 0.0881678, 0.161229, -0.271353 ) DX3DVNORM( 0.277528, -0.439791, -0.854144 )  //408
DX3DVERT( 1.888e-009, 0.132568, -0.267302 ) DX3DVNORM( 0, -0.53216, -0.846644 )  //409
DX3DVERT( 2.01524e-009, 0.161229, -0.285317 ) DX3DVNORM( -1.02159e-007, -0.439791, -0.8981 )  //410
DX3DVERT( -0.0826009, 0.132568, -0.254219 ) DX3DVNORM( -0.261627, -0.532159, -0.805206 )  //411
DX3DVERT( -0.0881678, 0.161229, -0.271353 ) DX3DVNORM( -0.277528, -0.439791, -0.854144 )  //412
DX3DVERT( -0.157116, 0.132568, -0.216252 ) DX3DVNORM( -0.497645, -0.53216, -0.684949 )  //413
DX3DVERT( -0.167705, 0.161229, -0.230826 ) DX3DVNORM( -0.52789, -0.439791, -0.726578 )  //414
DX3DVERT( -0.216252, 0.132568, -0.157116 ) DX3DVNORM( -0.684949, -0.53216, -0.497645 )  //415
DX3DVERT( -0.230826, 0.161229, -0.167705 ) DX3DVNORM( -0.726578, -0.439791, -0.52789 )  //416
DX3DVERT( -0.254219, 0.132568, -0.0826009 ) DX3DVNORM( -0.805206, -0.53216, -0.261627 )  //417
DX3DVERT( -0.271353, 0.161229, -0.0881678 ) DX3DVNORM( -0.854144, -0.439791, -0.277528 )  //418
DX3DVERT( -0.267302, 0.132568, -4.54093e-009 ) DX3DVNORM( -0.846644, -0.53216, -3.75863e-008 )  //419
DX3DVERT( -0.285317, 0.161229, -4.84697e-009 ) DX3DVNORM( -0.8981, -0.439791, 7.56733e-009 )  //420
DX3DVERT( -0.254219, 0.132568, 0.0826009 ) DX3DVNORM( -0.805206, -0.53216, 0.261627 )  //421
DX3DVERT( -0.271353, 0.161229, 0.0881678 ) DX3DVNORM( -0.854144, -0.439791, 0.277528 )  //422
DX3DVERT( -0.216252, 0.132568, 0.157116 ) DX3DVNORM( -0.684949, -0.53216, 0.497645 )  //423
DX3DVERT( -0.230826, 0.161229, 0.167705 ) DX3DVNORM( -0.726578, -0.439791, 0.52789 )  //424
DX3DVERT( -0.157116, 0.132568, 0.216252 ) DX3DVNORM( -0.497645, -0.53216, 0.684949 )  //425
DX3DVERT( -0.167705, 0.161229, 0.230826 ) DX3DVNORM( -0.52789, -0.439791, 0.726578 )  //426
DX3DVERT( -0.0826009, 0.132568, 0.254219 ) DX3DVNORM( -0.261627, -0.53216, 0.805206 )  //427
DX3DVERT( -0.0881678, 0.161229, 0.271353 ) DX3DVNORM( -0.277528, -0.439791, 0.854144 )  //428
DX3DVERT( 2.65293e-009, 0.132568, 0.267302 ) DX3DVNORM( 2.25518e-008, -0.53216, 0.846644 )  //429
DX3DVERT( 2.83173e-009, 0.161229, 0.285317 ) DX3DVNORM( 8.70243e-008, -0.439791, 0.8981 )  //430
DX3DVERT( 0.0826009, 0.132568, 0.254219 ) DX3DVNORM( 0.261627, -0.532159, 0.805207 )  //431
DX3DVERT( 0.0881678, 0.161229, 0.271353 ) DX3DVNORM( 0.277528, -0.439791, 0.854144 )  //432
DX3DVERT( 0.157116, 0.132568, 0.216252 ) DX3DVNORM( 0.497645, -0.53216, 0.684949 )  //433
DX3DVERT( 0.167705, 0.161229, 0.230826 ) DX3DVNORM( 0.52789, -0.439791, 0.726578 )  //434
DX3DVERT( 0.216252, 0.132568, 0.157116 ) DX3DVNORM( 0.684949, -0.53216, 0.497645 )  //435
DX3DVERT( 0.230826, 0.161229, 0.167705 ) DX3DVNORM( 0.726578, -0.439791, 0.52789 )  //436
DX3DVERT( 0.254219, 0.132568, 0.0826009 ) DX3DVNORM( 0.805206, -0.53216, 0.261627 )  //437
DX3DVERT( 0.271353, 0.161229, 0.0881678 ) DX3DVNORM( 0.854144, -0.439791, 0.277528 )  //438
DX3DVERT( 0.267302, 0.132568, 0 ) DX3DVNORM( 0.846644, -0.532159, 6.01381e-007 )  //439
DX3DVERT( 0.285317, 0.161229, 0 ) DX3DVNORM( 0.8981, -0.439791, 6.24305e-007 )  //440
DX3DVERT( 0.239717, 0.191395, -0.174165 ) DX3DVNORM( 0.786933, -0.232053, -0.571741 )  //441
DX3DVERT( 0.281804, 0.191395, -0.0915638 ) DX3DVNORM( 0.925096, -0.232053, -0.300581 )  //442
DX3DVERT( 0.174165, 0.191395, -0.239717 ) DX3DVNORM( 0.571741, -0.232053, -0.786933 )  //443
DX3DVERT( 0.0915638, 0.191395, -0.281804 ) DX3DVNORM( 0.300582, -0.232053, -0.925096 )  //444
DX3DVERT( 2.09286e-009, 0.191395, -0.296307 ) DX3DVNORM( -1.70724e-007, -0.232053, -0.972703 )  //445
DX3DVERT( -0.0915638, 0.191395, -0.281804 ) DX3DVNORM( -0.300582, -0.232053, -0.925096 )  //446
DX3DVERT( -0.174165, 0.191395, -0.239717 ) DX3DVNORM( -0.571741, -0.232053, -0.786933 )  //447
DX3DVERT( -0.239717, 0.191395, -0.174165 ) DX3DVNORM( -0.786933, -0.232053, -0.571741 )  //448
DX3DVERT( -0.281804, 0.191395, -0.0915638 ) DX3DVNORM( -0.925096, -0.232053, -0.300582 )  //449
DX3DVERT( -0.296307, 0.191395, -5.03366e-009 ) DX3DVNORM( -0.972703, -0.232053, 2.6557e-008 )  //450
DX3DVERT( -0.281804, 0.191395, 0.0915638 ) DX3DVNORM( -0.925096, -0.232053, 0.300582 )  //451
DX3DVERT( -0.239717, 0.191395, 0.174165 ) DX3DVNORM( -0.786933, -0.232053, 0.571741 )  //452
DX3DVERT( -0.174165, 0.191395, 0.239717 ) DX3DVNORM( -0.57174, -0.232053, 0.786933 )  //453
DX3DVERT( -0.0915638, 0.191395, 0.281804 ) DX3DVNORM( -0.300582, -0.232053, 0.925096 )  //454
DX3DVERT( 2.9408e-009, 0.191395, 0.296307 ) DX3DVNORM( 6.44957e-008, -0.232053, 0.972703 )  //455
DX3DVERT( 0.0915638, 0.191395, 0.281804 ) DX3DVNORM( 0.300582, -0.232053, 0.925096 )  //456
DX3DVERT( 0.174165, 0.191395, 0.239717 ) DX3DVNORM( 0.571741, -0.232053, 0.786933 )  //457
DX3DVERT( 0.239717, 0.191395, 0.174165 ) DX3DVNORM( 0.786933, -0.232053, 0.571741 )  //458
DX3DVERT( 0.281804, 0.191395, 0.0915638 ) DX3DVNORM( 0.925096, -0.232053, 0.300582 )  //459
DX3DVERT( 0.296307, 0.191395, 0 ) DX3DVNORM( 0.972703, -0.232053, 6.60132e-007 )  //460
DX3DVERT( 0.242705, 0.222322, -0.176336 ) DX3DVNORM( 0.809017, 2.84841e-008, -0.587785 )  //461
DX3DVERT( 0.285317, 0.222322, -0.0927051 ) DX3DVNORM( 0.951057, 2.84841e-008, -0.309016 )  //462
DX3DVERT( 0.176336, 0.222322, -0.242705 ) DX3DVNORM( 0.587785, 1.70904e-008, -0.809017 )  //463
DX3DVERT( 0.0927051, 0.222322, -0.285317 ) DX3DVNORM( 0.309017, 2.65851e-008, -0.951056 )  //464
DX3DVERT( 2.11895e-009, 0.222322, -0.3 ) DX3DVNORM( -1.51915e-007, 7.02607e-008, -1 )  //465
DX3DVERT( -0.0927051, 0.222322, -0.285317 ) DX3DVNORM( -0.309017, 3.79788e-008, -0.951056 )  //466
DX3DVERT( -0.176336, 0.222322, -0.242705 ) DX3DVNORM( -0.587785, 1.89894e-008, -0.809017 )  //467
DX3DVERT( -0.242705, 0.222322, -0.176336 ) DX3DVNORM( -0.809017, 3.98777e-008, -0.587785 )  //468
DX3DVERT( -0.285317, 0.222322, -0.0927051 ) DX3DVNORM( -0.951057, 3.22819e-008, -0.309017 )  //469
DX3DVERT( -0.3, 0.222322, -5.0964e-009 ) DX3DVNORM( -1, 3.41809e-008, 1.89894e-008 )  //470
DX3DVERT( -0.285317, 0.222322, 0.0927051 ) DX3DVNORM( -0.951056, 2.46862e-008, 0.309017 )  //471
DX3DVERT( -0.242705, 0.222322, 0.176336 ) DX3DVNORM( -0.809017, 3.0383e-008, 0.587785 )  //472
DX3DVERT( -0.176336, 0.222322, 0.242705 ) DX3DVNORM( -0.587785, 2.08883e-008, 0.809017 )  //473
DX3DVERT( -0.0927051, 0.222322, 0.285317 ) DX3DVNORM( -0.309017, 3.41809e-008, 0.951057 )  //474
DX3DVERT( 2.97745e-009, 0.222322, 0.3 ) DX3DVNORM( -1.13936e-008, 6.83617e-008, 1 )  //475
DX3DVERT( 0.0927051, 0.222322, 0.285317 ) DX3DVNORM( 0.309017, 4.17766e-008, 0.951057 )  //476
DX3DVERT( 0.176336, 0.222322, 0.242705 ) DX3DVNORM( 0.587785, 3.60798e-008, 0.809017 )  //477
DX3DVERT( 0.242705, 0.222322, 0.176336 ) DX3DVNORM( 0.809017, 4.17766e-008, 0.587785 )  //478
DX3DVERT( 0.285317, 0.222322, 0.0927051 ) DX3DVNORM( 0.951056, 3.0383e-008, 0.309017 )  //479
DX3DVERT( 0.3, 0.222322, 0 ) DX3DVNORM( 1, 3.22819e-008, 6.30447e-007 )  //480
DX3DVERT( 0.239717, 0.253248, -0.174165 ) DX3DVNORM( 0.786933, 0.232053, -0.571741 )  //481
DX3DVERT( 0.281804, 0.253248, -0.0915638 ) DX3DVNORM( 0.925096, 0.232053, -0.300581 )  //482
DX3DVERT( 0.174165, 0.253248, -0.239717 ) DX3DVNORM( 0.57174, 0.232053, -0.786934 )  //483
DX3DVERT( 0.0915638, 0.253248, -0.281804 ) DX3DVNORM( 0.300582, 0.232053, -0.925096 )  //484
DX3DVERT( 2.09286e-009, 0.253248, -0.296307 ) DX3DVNORM( -1.6693e-007, 0.232053, -0.972703 )  //485
DX3DVERT( -0.0915638, 0.253248, -0.281804 ) DX3DVNORM( -0.300582, 0.232053, -0.925096 )  //486
DX3DVERT( -0.174165, 0.253248, -0.239717 ) DX3DVNORM( -0.571741, 0.232053, -0.786933 )  //487
DX3DVERT( -0.239717, 0.253248, -0.174165 ) DX3DVNORM( -0.786933, 0.232053, -0.571741 )  //488
DX3DVERT( -0.281804, 0.253248, -0.0915638 ) DX3DVNORM( -0.925096, 0.232053, -0.300582 )  //489
DX3DVERT( -0.296307, 0.253248, -5.03366e-009 ) DX3DVNORM( -0.972703, 0.232052, 1.89693e-008 )  //490
DX3DVERT( -0.281804, 0.253248, 0.0915638 ) DX3DVNORM( -0.925096, 0.232053, 0.300582 )  //491
DX3DVERT( -0.239717, 0.253248, 0.174165 ) DX3DVNORM( -0.786933, 0.232053, 0.571741 )  //492
DX3DVERT( -0.174165, 0.253248, 0.239717 ) DX3DVNORM( -0.571741, 0.232053, 0.786934 )  //493
DX3DVERT( -0.0915638, 0.253248, 0.281804 ) DX3DVNORM( -0.300582, 0.232053, 0.925096 )  //494
DX3DVERT( 2.9408e-009, 0.253248, 0.296307 ) DX3DVNORM( 8.72588e-008, 0.232053, 0.972703 )  //495
DX3DVERT( 0.0915638, 0.253248, 0.281804 ) DX3DVNORM( 0.300582, 0.232053, 0.925096 )  //496
DX3DVERT( 0.174165, 0.253248, 0.239717 ) DX3DVNORM( 0.571741, 0.232053, 0.786933 )  //497
DX3DVERT( 0.239717, 0.253248, 0.174165 ) DX3DVNORM( 0.786933, 0.232053, 0.57174 )  //498
DX3DVERT( 0.281804, 0.253248, 0.0915638 ) DX3DVNORM( 0.925096, 0.232053, 0.300582 )  //499
DX3DVERT( 0.296307, 0.253248, 0 ) DX3DVNORM( 0.972703, 0.232053, 6.29781e-007 )  //500
DX3DVERT( 0.230826, 0.283414, -0.167705 ) DX3DVNORM( 0.726578, 0.439791, -0.52789 )  //501
DX3DVERT( 0.271353, 0.283414, -0.0881678 ) DX3DVNORM( 0.854144, 0.439791, -0.277528 )  //502
DX3DVERT( 0.167705, 0.283414, -0.230826 ) DX3DVNORM( 0.52789, 0.439791, -0.726578 )  //503
DX3DVERT( 0.0881678, 0.283414, -0.271353 ) DX3DVNORM( 0.277528, 0.439791, -0.854144 )  //504
DX3DVERT( 2.01524e-009, 0.283414, -0.285317 ) DX3DVNORM( -1.1351e-007, 0.439791, -0.8981 )  //505
DX3DVERT( -0.0881678, 0.283414, -0.271353 ) DX3DVNORM( -0.277528, 0.439791, -0.854144 )  //506
DX3DVERT( -0.167705, 0.283414, -0.230826 ) DX3DVNORM( -0.52789, 0.439791, -0.726578 )  //507
DX3DVERT( -0.230826, 0.283414, -0.167705 ) DX3DVNORM( -0.726578, 0.439791, -0.52789 )  //508
DX3DVERT( -0.271353, 0.283414, -0.0881678 ) DX3DVNORM( -0.854144, 0.439791, -0.277528 )  //509
DX3DVERT( -0.285317, 0.283414, -4.84697e-009 ) DX3DVNORM( -0.8981, 0.439791, 3.4053e-008 )  //510
DX3DVERT( -0.271353, 0.283414, 0.0881678 ) DX3DVNORM( -0.854144, 0.439791, 0.277528 )  //511
DX3DVERT( -0.230826, 0.283414, 0.167705 ) DX3DVNORM( -0.726578, 0.439791, 0.52789 )  //512
DX3DVERT( -0.167705, 0.283414, 0.230826 ) DX3DVNORM( -0.52789, 0.439791, 0.726578 )  //513
DX3DVERT( -0.0881678, 0.283414, 0.271353 ) DX3DVNORM( -0.277528, 0.439791, 0.854144 )  //514
DX3DVERT( 2.83173e-009, 0.283414, 0.285317 ) DX3DVNORM( 9.83753e-008, 0.439791, 0.8981 )  //515
DX3DVERT( 0.0881678, 0.283414, 0.271353 ) DX3DVNORM( 0.277528, 0.439791, 0.854144 )  //516
DX3DVERT( 0.167705, 0.283414, 0.230826 ) DX3DVNORM( 0.52789, 0.439791, 0.726578 )  //517
DX3DVERT( 0.230826, 0.283414, 0.167705 ) DX3DVNORM( 0.726578, 0.439791, 0.52789 )  //518
DX3DVERT( 0.271353, 0.283414, 0.0881678 ) DX3DVNORM( 0.854144, 0.439791, 0.277528 )  //519
DX3DVERT( 0.285317, 0.283414, 0 ) DX3DVNORM( 0.8981, 0.439791, 6.73492e-007 )  //520
DX3DVERT( 0.216252, 0.312075, -0.157116 ) DX3DVNORM( 0.641478, 0.609338, -0.466061 )  //521
DX3DVERT( 0.254219, 0.312075, -0.0826009 ) DX3DVNORM( 0.754103, 0.609338, -0.245022 )  //522
DX3DVERT( 0.157116, 0.312075, -0.216252 ) DX3DVNORM( 0.466061, 0.609338, -0.641478 )  //523
DX3DVERT( 0.0826009, 0.312075, -0.254219 ) DX3DVNORM( 0.245023, 0.609338, -0.754103 )  //524
DX3DVERT( 1.888e-009, 0.312075, -0.267302 ) DX3DVNORM( -1.13133e-008, 0.609338, -0.792911 )  //525
DX3DVERT( -0.0826009, 0.312075, -0.254219 ) DX3DVNORM( -0.245023, 0.609338, -0.754103 )  //526
DX3DVERT( -0.157116, 0.312075, -0.216252 ) DX3DVNORM( -0.466061, 0.609338, -0.641478 )  //527
DX3DVERT( -0.216252, 0.312075, -0.157116 ) DX3DVNORM( -0.641478, 0.609338, -0.466061 )  //528
DX3DVERT( -0.254219, 0.312075, -0.0826009 ) DX3DVNORM( -0.754103, 0.609338, -0.245023 )  //529
DX3DVERT( -0.267302, 0.312075, -4.54093e-009 ) DX3DVNORM( -0.795394, 0.606092, -0.00134242 )  //530
DX3DVERT( -0.254219, 0.312075, 0.0826009 ) DX3DVNORM( -0.766243, 0.594049, 0.244903 )  //531
DX3DVERT( -0.216252, 0.312075, 0.157116 ) DX3DVNORM( -0.66126, 0.578968, 0.477002 )  //532
DX3DVERT( -0.157116, 0.312075, 0.216252 ) DX3DVNORM( -0.48562, 0.567429, 0.664979 )  //533
DX3DVERT( -0.0826009, 0.312075, 0.254219 ) DX3DVNORM( -0.253393, 0.566379, 0.784224 )  //534
DX3DVERT( 2.65293e-009, 0.312075, 0.267302 ) DX3DVNORM( 0.0059149, 0.582745, 0.812633 )  //535
DX3DVERT( 0.0826009, 0.312075, 0.254219 ) DX3DVNORM( 0.249253, 0.60261, 0.758112 )  //536
DX3DVERT( 0.157116, 0.312075, 0.216252 ) DX3DVNORM( 0.466061, 0.609338, 0.641478 )  //537
DX3DVERT( 0.216252, 0.312075, 0.157116 ) DX3DVNORM( 0.641478, 0.609338, 0.466061 )  //538
DX3DVERT( 0.254219, 0.312075, 0.0826009 ) DX3DVNORM( 0.754103, 0.609338, 0.245023 )  //539
DX3DVERT( 0.267302, 0.312075, 0 ) DX3DVNORM( 0.792911, 0.609338, 6.39199e-007 )  //540
DX3DVERT( 0.196353, 0.338526, -0.142659 ) DX3DVNORM( 0.545125, 0.738903, -0.396056 )  //541
DX3DVERT( 0.230826, 0.338526, -0.075 ) DX3DVNORM( 0.640833, 0.738903, -0.208219 )  //542
DX3DVERT( 0.142659, 0.338526, -0.196353 ) DX3DVNORM( 0.396057, 0.738903, -0.545125 )  //543
DX3DVERT( 0.075, 0.338526, -0.230826 ) DX3DVNORM( 0.208219, 0.738903, -0.640833 )  //544
DX3DVERT( 1.71427e-009, 0.338526, -0.242705 ) DX3DVNORM( -2.44347e-008, 0.738903, -0.673812 )  //545
DX3DVERT( -0.075, 0.338526, -0.230826 ) DX3DVNORM( -0.208219, 0.738903, -0.640833 )  //546
DX3DVERT( -0.142659, 0.338526, -0.196353 ) DX3DVNORM( -0.396057, 0.738903, -0.545125 )  //547
DX3DVERT( -0.196353, 0.338526, -0.142659 ) DX3DVNORM( -0.545125, 0.738903, -0.396057 )  //548
DX3DVERT( -0.230826, 0.338526, -0.075 ) DX3DVNORM( -0.640833, 0.738903, -0.208219 )  //549
DX3DVERT( -0.242705, 0.338526, -4.12308e-009 ) DX3DVNORM( -0.685787, 0.727735, -0.00988137 )  //550
DX3DVERT( -0.231559, 0.33936, 0.0752379 ) DX3DVNORM( -0.69079, 0.695043, 0.199311 )  //551
DX3DVERT( -0.198147, 0.340897, 0.143969 ) DX3DVNORM( -0.603336, 0.672555, 0.42855 )  //552
DX3DVERT( -0.14402, 0.341017, 0.198313 ) DX3DVNORM( -0.430346, 0.679555, 0.594144 )  //553
DX3DVERT( -0.0760381, 0.342165, 0.234021 ) DX3DVNORM( -0.216882, 0.695864, 0.684643 )  //554
DX3DVERT( 2.38616e-009, 0.340255, 0.244301 ) DX3DVNORM( 0.0231231, 0.709776, 0.704048 )  //555
DX3DVERT( 0.075, 0.338526, 0.230826 ) DX3DVNORM( 0.223691, 0.729069, 0.646854 )  //556
DX3DVERT( 0.142659, 0.338526, 0.196353 ) DX3DVNORM( 0.396543, 0.736136, 0.548505 )  //557
DX3DVERT( 0.196353, 0.338526, 0.142659 ) DX3DVNORM( 0.548042, 0.734949, 0.399374 )  //558
DX3DVERT( 0.230826, 0.338526, 0.075 ) DX3DVNORM( 0.642916, 0.737193, 0.20786 )  //559
DX3DVERT( 0.242705, 0.338526, 0 ) DX3DVNORM( 0.673812, 0.738903, 4.94333e-007 )  //560
DX3DVERT( 0.171619, 0.362116, -0.124688 ) DX3DVNORM( 0.446637, 0.833795, -0.324501 )  //561
DX3DVERT( 0.20175, 0.362116, -0.0655524 ) DX3DVNORM( 0.525053, 0.833795, -0.1706 )  //562
DX3DVERT( 0.124688, 0.362116, -0.171619 ) DX3DVNORM( 0.324501, 0.833795, -0.446637 )  //563
DX3DVERT( 0.0655524, 0.362116, -0.20175 ) DX3DVNORM( 0.1706, 0.833795, -0.525053 )  //564
DX3DVERT( 1.49832e-009, 0.362116, -0.212132 ) DX3DVNORM( -6.93636e-008, 0.833795, -0.552074 )  //565
DX3DVERT( -0.0655524, 0.362116, -0.20175 ) DX3DVNORM( -0.1706, 0.833795, -0.525053 )  //566
DX3DVERT( -0.124688, 0.362116, -0.171618 ) DX3DVNORM( -0.325129, 0.830048, -0.453113 )  //567
DX3DVERT( -0.171618, 0.362116, -0.124688 ) DX3DVNORM( -0.459725, 0.819198, -0.342882 )  //568
DX3DVERT( -0.20175, 0.362116, -0.0655524 ) DX3DVNORM( -0.560225, 0.807038, -0.186646 )  //569
DX3DVERT( -0.212132, 0.362116, -3.6037e-009 ) DX3DVNORM( -0.60831, 0.793255, -0.0265784 )  //570
DX3DVERT( -0.204305, 0.365829, 0.0664105 ) DX3DVNORM( -0.604169, 0.784156, 0.1417 )  //571
DX3DVERT( -0.176166, 0.370194, 0.128227 ) DX3DVNORM( -0.487932, 0.797251, 0.355405 )  //572
DX3DVERT( -0.126243, 0.366214, 0.174024 ) DX3DVNORM( -0.311896, 0.821329, 0.477639 )  //573
DX3DVERT( -0.066435, 0.366241, 0.204434 ) DX3DVNORM( -0.153748, 0.844925, 0.512311 )  //574
DX3DVERT( 3.05307e-006, 0.365246, 0.214287 ) DX3DVNORM( 0.0307355, 0.841912, 0.538739 )  //575
DX3DVERT( 0.0655524, 0.362116, 0.20175 ) DX3DVNORM( 0.192247, 0.83293, 0.51891 )  //576
DX3DVERT( 0.124688, 0.362116, 0.171618 ) DX3DVNORM( 0.323453, 0.830226, 0.453986 )  //577
DX3DVERT( 0.171618, 0.362116, 0.127317 ) DX3DVNORM( 0.451537, 0.828659, 0.330815 )  //578
DX3DVERT( 0.20175, 0.362116, 0.0655524 ) DX3DVNORM( 0.532054, 0.83, 0.167386 )  //579
DX3DVERT( 0.212132, 0.362116, 0 ) DX3DVNORM( 0.552074, 0.833795, 3.93685e-007 )  //580
DX3DVERT( 0.142659, 0.382263, -0.103648 ) DX3DVNORM( 0.395448, 0.869978, -0.294548 )  //581
DX3DVERT( 0.167705, 0.382263, -0.0544907 ) DX3DVNORM( 0.475241, 0.866145, -0.15472 )  //582
DX3DVERT( 0.103647, 0.382263, -0.142659 ) DX3DVNORM( 0.276582, 0.877777, -0.391165 )  //583
DX3DVERT( 0.0544907, 0.382263, -0.167705 ) DX3DVNORM( 0.140274, 0.884412, -0.445128 )  //584
DX3DVERT( 1.24549e-009, 0.382263, -0.176336 ) DX3DVNORM( -0.00258761, 0.888714, -0.458455 )  //585
DX3DVERT( -0.0544907, 0.382263, -0.167705 ) DX3DVNORM( -0.138454, 0.887041, -0.440442 )  //586
DX3DVERT( -0.103647, 0.382263, -0.142659 ) DX3DVNORM( -0.266045, 0.873791, -0.407075 )  //587
DX3DVERT( -0.143436, 0.384054, -0.104228 ) DX3DVNORM( -0.398894, 0.855504, -0.330146 )  //588
DX3DVERT( -0.169743, 0.386128, -0.055161 ) DX3DVNORM( -0.503791, 0.845066, -0.179049 )  //589
DX3DVERT( -0.178624, 0.386408, 1.72487e-005 ) DX3DVNORM( -0.551058, 0.833197, -0.0460187 )  //590
DX3DVERT( -0.172069, 0.389775, 0.055967 ) DX3DVNORM( -0.538724, 0.83557, 0.107702 )  //591
DX3DVERT( -0.146918, 0.390489, 0.10714 ) DX3DVNORM( -0.409152, 0.850171, 0.331367 )  //592
DX3DVERT( -0.105023, 0.386066, 0.144897 ) DX3DVNORM( -0.249664, 0.85508, 0.454429 )  //593
DX3DVERT( -0.0547041, 0.383534, 0.168384 ) DX3DVNORM( -0.129321, 0.866215, 0.482647 )  //594
DX3DVERT( 9.46254e-006, 0.383437, 0.176936 ) DX3DVNORM( 0.0220933, 0.867694, 0.496608 )  //595
DX3DVERT( 0.0545753, 0.382809, 0.167962 ) DX3DVNORM( 0.181998, 0.859669, 0.477331 )  //596
DX3DVERT( 0.103943, 0.383398, 0.138758 ) DX3DVNORM( 0.301747, 0.856718, 0.418309 )  //597
DX3DVERT( 0.143324, 0.383829, 0.104111 ) DX3DVNORM( 0.415693, 0.856997, 0.304558 )  //598
DX3DVERT( 0.167705, 0.382263, 0.0544907 ) DX3DVNORM( 0.498199, 0.854891, 0.144775 )  //599
DX3DVERT( 0.176336, 0.382263, 0 ) DX3DVNORM( 0.507389, 0.861705, -0.00461093 )  //600
DX3DVERT( 0.112172, 0.403923, -0.0815492 ) DX3DVNORM( 0.385503, 0.872627, -0.299849 )  //601
DX3DVERT( 0.13135, 0.40555, -0.0427008 ) DX3DVNORM( 0.463354, 0.873284, -0.150595 )  //602
DX3DVERT( 0.0811271, 0.402401, -0.111675 ) DX3DVNORM( 0.265256, 0.876441, -0.401859 )  //603
DX3DVERT( 0.0424432, 0.401279, -0.130725 ) DX3DVNORM( 0.135648, 0.880304, -0.454603 )  //604
DX3DVERT( -4.64238e-005, 0.400694, -0.137068 ) DX3DVNORM( -0.00777123, 0.884462, -0.466548 )  //605
DX3DVERT( -0.042303, 0.400224, -0.130129 ) DX3DVNORM( -0.131058, 0.88133, -0.453962 )  //606
DX3DVERT( -0.0811131, 0.402568, -0.111676 ) DX3DVNORM( -0.232064, 0.875656, -0.423524 )  //607
DX3DVERT( -0.113186, 0.406534, -0.0823482 ) DX3DVNORM( -0.355463, 0.872703, -0.334715 )  //608
DX3DVERT( -0.133783, 0.408008, -0.0435105 ) DX3DVNORM( -0.464811, 0.863952, -0.193749 )  //609
DX3DVERT( -0.140594, 0.407523, 1.92255e-005 ) DX3DVNORM( -0.532602, 0.842433, -0.0814933 )  //610
DX3DVERT( -0.138073, 0.414154, 0.0446834 ) DX3DVNORM( -0.532879, 0.841626, 0.0877831 )  //611
DX3DVERT( -0.117919, 0.414481, 0.0857008 ) DX3DVNORM( -0.411678, 0.841065, 0.350901 )  //612
DX3DVERT( -0.0836022, 0.410151, 0.115385 ) DX3DVNORM( -0.256285, 0.825243, 0.503281 )  //613
DX3DVERT( -0.0434439, 0.410553, 0.130775 ) DX3DVNORM( -0.128466, 0.826681, 0.54781 )  //614
DX3DVERT( 0.000651301, 0.41093, 0.133994 ) DX3DVNORM( 0.0310364, 0.82883, 0.55864 )  //615
DX3DVERT( 0.0434847, 0.412198, 0.123268 ) DX3DVNORM( 0.212656, 0.828044, 0.518768 )  //616
DX3DVERT( 0.0803397, 0.411995, 0.10061 ) DX3DVNORM( 0.349861, 0.828863, 0.436559 )  //617
DX3DVERT( 0.11245, 0.410069, 0.073554 ) DX3DVNORM( 0.449643, 0.840401, 0.302567 )  //618
DX3DVERT( 0.133608, 0.406702, 0.0432634 ) DX3DVNORM( 0.513802, 0.850709, 0.110916 )  //619
DX3DVERT( 0.138692, 0.40407, 7.36627e-005 ) DX3DVNORM( 0.504551, 0.862924, -0.0281297 )  //620
DX3DVERT( 0.0755502, 0.428977, -0.0543159 ) DX3DVNORM( 0.451883, 0.838747, -0.303816 )  //621
DX3DVERT( 0.0881258, 0.428705, -0.0294754 ) DX3DVNORM( 0.510062, 0.837979, -0.193979 )  //622
DX3DVERT( 0.0566417, 0.428608, -0.0738843 ) DX3DVNORM( 0.322233, 0.827439, -0.459904 )  //623
DX3DVERT( 0.0313298, 0.427182, -0.0864473 ) DX3DVNORM( 0.161638, 0.825668, -0.540504 )  //624
DX3DVERT( 0.00179385, 0.426577, -0.0948536 ) DX3DVNORM( -0.0195809, 0.844278, -0.535548 )  //625
DX3DVERT( -0.0301262, 0.422887, -0.0926966 ) DX3DVNORM( -0.150277, 0.853606, -0.498772 )  //626
DX3DVERT( -0.0579658, 0.425088, -0.0804685 ) DX3DVNORM( -0.218653, 0.861258, -0.458721 )  //627
DX3DVERT( -0.0809888, 0.426992, -0.0587142 ) DX3DVNORM( -0.346803, 0.870664, -0.348815 )  //628
DX3DVERT( -0.0960371, 0.429653, -0.031256 ) DX3DVNORM( -0.440728, 0.865743, -0.237165 )  //629
DX3DVERT( -0.103452, 0.435219, -0.00146435 ) DX3DVNORM( -0.483222, 0.865596, -0.131304 )  //630
DX3DVERT( -0.102232, 0.436257, 0.0311515 ) DX3DVNORM( -0.48056, 0.875696, 0.0470984 )  //631
DX3DVERT( -0.0874072, 0.439471, 0.0631214 ) DX3DVNORM( -0.378807, 0.879047, 0.28945 )  //632
DX3DVERT( -0.0590701, 0.438149, 0.0825424 ) DX3DVNORM( -0.233645, 0.851741, 0.468985 )  //633
DX3DVERT( -0.0249646, 0.442721, 0.0865597 ) DX3DVNORM( -0.111531, 0.841639, 0.528399 )  //634
DX3DVERT( 0.00592377, 0.443026, 0.0879539 ) DX3DVNORM( 0.0457239, 0.832734, 0.551782 )  //635
DX3DVERT( 0.0357931, 0.443424, 0.0793964 ) DX3DVNORM( 0.246693, 0.815536, 0.523493 )  //636
DX3DVERT( 0.0610877, 0.4421, 0.0625644 ) DX3DVNORM( 0.41894, 0.798775, 0.431796 )  //637
DX3DVERT( 0.0793876, 0.438629, 0.0452856 ) DX3DVNORM( 0.532093, 0.803088, 0.268191 )  //638
DX3DVERT( 0.0943822, 0.431099, 0.0281531 ) DX3DVNORM( 0.585211, 0.808999, 0.0552232 )  //639
DX3DVERT( 0.0948635, 0.42756, -0.000477749 ) DX3DVNORM( 0.563005, 0.819192, -0.109319 )  //640
DX3DVERT( 0.0442369, 0.458035, -0.0320639 ) DX3DVNORM( 0.714698, 0.574116, -0.399497 )  //641
DX3DVERT( 0.0512271, 0.4544, -0.0206212 ) DX3DVNORM( 0.738532, 0.563134, -0.370743 )  //642
DX3DVERT( 0.0382535, 0.459195, -0.041528 ) DX3DVNORM( 0.546826, 0.591276, -0.592768 )  //643
DX3DVERT( 0.0260743, 0.456354, -0.0508486 ) DX3DVNORM( 0.270024, 0.630841, -0.727411 )  //644
DX3DVERT( 0.00755052, 0.452242, -0.0571522 ) DX3DVNORM( 0.00451077, 0.698273, -0.715817 )  //645
DX3DVERT( -0.0130081, 0.446106, -0.0588545 ) DX3DVNORM( -0.172114, 0.744363, -0.645214 )  //646
DX3DVERT( -0.0339326, 0.444543, -0.053335 ) DX3DVNORM( -0.252012, 0.770036, -0.586118 )  //647
DX3DVERT( -0.0536071, 0.449412, -0.038079 ) DX3DVNORM( -0.393079, 0.829569, -0.396615 )  //648
DX3DVERT( -0.0622142, 0.448451, -0.0194919 ) DX3DVNORM( -0.460936, 0.85276, -0.245639 )  //649
DX3DVERT( -0.0660243, 0.451544, -0.0030695 ) DX3DVNORM( -0.454293, 0.87501, -0.167257 )  //650
DX3DVERT( -0.0637394, 0.45492, 0.0180273 ) DX3DVNORM( -0.441589, 0.897159, 0.0102168 )  //651
DX3DVERT( -0.0540825, 0.457583, 0.0395681 ) DX3DVNORM( -0.362429, 0.90952, 0.203517 )  //652
DX3DVERT( -0.0346898, 0.460968, 0.0508116 ) DX3DVNORM( -0.219753, 0.89551, 0.387003 )  //653
DX3DVERT( -0.0119722, 0.46319, 0.0530574 ) DX3DVNORM( -0.106744, 0.877238, 0.468037 )  //654
DX3DVERT( 0.00887466, 0.465835, 0.051933 ) DX3DVNORM( 0.0259669, 0.865071, 0.500977 )  //655
DX3DVERT( 0.031083, 0.47291, 0.0349796 ) DX3DVNORM( 0.249936, 0.830148, 0.498383 )  //656
DX3DVERT( 0.0451134, 0.472334, 0.0246354 ) DX3DVNORM( 0.478965, 0.774046, 0.41406 )  //657
DX3DVERT( 0.052962, 0.4675, 0.0204787 ) DX3DVNORM( 0.663026, 0.709857, 0.237697 )  //658
DX3DVERT( 0.0570727, 0.462893, 0.0137031 ) DX3DVNORM( 0.759544, 0.648936, 0.0444295 )  //659
DX3DVERT( 0.0582988, 0.460717, -0.00552632 ) DX3DVNORM( 0.771497, 0.596841, -0.220391 )  //660
DX3DVERT( 0.0328987, 0.505018, -0.021864 ) DX3DVNORM( 0.203279, 0.952804, -0.225483 )  //661
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_UnChan___mUnChan_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_UnChan___mUnChan_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 662 )
DX3DVERTEX_END


#else
#define vertex_UnChan___mUnChan_1	NULL
#define vertexbuff_UnChan___mUnChan_1	NULL
#endif




#if ((PT_UnChan___mUnChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_UnChan___mUnChan_1 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_UnChan___mUnChan_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 0, 5, // 2 8
	0, 3, 5, // 3 11
	6, 4, 7, // 4 14
	4, 5, 7, // 5 17
	8, 6, 9, // 6 20
	6, 7, 9, // 7 23
	10, 8, 11, // 8 26
	8, 9, 11, // 9 29
	12, 10, 13, // 10 32
	10, 11, 13, // 11 35
	14, 12, 15, // 12 38
	12, 13, 15, // 13 41
	16, 14, 17, // 14 44
	14, 15, 17, // 15 47
	18, 16, 19, // 16 50
	16, 17, 19, // 17 53
	20, 18, 21, // 18 56
	18, 19, 21, // 19 59
	22, 20, 23, // 20 62
	20, 21, 23, // 21 65
	24, 22, 25, // 22 68
	22, 23, 25, // 23 71
	26, 24, 27, // 24 74
	24, 25, 27, // 25 77
	28, 26, 29, // 26 80
	26, 27, 29, // 27 83
	30, 28, 31, // 28 86
	28, 29, 31, // 29 89
	32, 30, 33, // 30 92
	30, 31, 33, // 31 95
	34, 32, 35, // 32 98
	32, 33, 35, // 33 101
	36, 34, 37, // 34 104
	34, 35, 37, // 35 107
	38, 36, 39, // 36 110
	36, 37, 39, // 37 113
	1, 38, 2, // 38 116
	38, 39, 2, // 39 119
	3, 2, 41, // 40 122
	2, 40, 41, // 41 125
	5, 3, 42, // 42 128
	3, 41, 42, // 43 131
	7, 5, 43, // 44 134
	5, 42, 43, // 45 137
	9, 7, 44, // 46 140
	7, 43, 44, // 47 143
	11, 9, 45, // 48 146
	9, 44, 45, // 49 149
	13, 11, 46, // 50 152
	11, 45, 46, // 51 155
	15, 13, 47, // 52 158
	13, 46, 47, // 53 161
	17, 15, 48, // 54 164
	15, 47, 48, // 55 167
	19, 17, 49, // 56 170
	17, 48, 49, // 57 173
	21, 19, 50, // 58 176
	19, 49, 50, // 59 179
	23, 21, 51, // 60 182
	21, 50, 51, // 61 185
	25, 23, 52, // 62 188
	23, 51, 52, // 63 191
	27, 25, 53, // 64 194
	25, 52, 53, // 65 197
	29, 27, 54, // 66 200
	27, 53, 54, // 67 203
	31, 29, 55, // 68 206
	29, 54, 55, // 69 209
	33, 31, 56, // 70 212
	31, 55, 56, // 71 215
	35, 33, 57, // 72 218
	33, 56, 57, // 73 221
	37, 35, 58, // 74 224
	35, 57, 58, // 75 227
	39, 37, 59, // 76 230
	37, 58, 59, // 77 233
	2, 39, 40, // 78 236
	39, 59, 40, // 79 239
	41, 40, 61, // 80 242
	40, 60, 61, // 81 245
	42, 41, 62, // 82 248
	41, 61, 62, // 83 251
	43, 42, 63, // 84 254
	42, 62, 63, // 85 257
	44, 43, 64, // 86 260
	43, 63, 64, // 87 263
	45, 44, 65, // 88 266
	44, 64, 65, // 89 269
	46, 45, 66, // 90 272
	45, 65, 66, // 91 275
	47, 46, 67, // 92 278
	46, 66, 67, // 93 281
	48, 47, 68, // 94 284
	47, 67, 68, // 95 287
	49, 48, 69, // 96 290
	48, 68, 69, // 97 293
	50, 49, 70, // 98 296
	49, 69, 70, // 99 299
	51, 50, 71, // 100 302
	50, 70, 71, // 101 305
	52, 51, 72, // 102 308
	51, 71, 72, // 103 311
	53, 52, 73, // 104 314
	52, 72, 73, // 105 317
	54, 53, 74, // 106 320
	53, 73, 74, // 107 323
	55, 54, 75, // 108 326
	54, 74, 75, // 109 329
	56, 55, 76, // 110 332
	55, 75, 76, // 111 335
	57, 56, 77, // 112 338
	56, 76, 77, // 113 341
	58, 57, 78, // 114 344
	57, 77, 78, // 115 347
	59, 58, 79, // 116 350
	58, 78, 79, // 117 353
	40, 59, 60, // 118 356
	59, 79, 60, // 119 359
	61, 60, 81, // 120 362
	60, 80, 81, // 121 365
	62, 61, 82, // 122 368
	61, 81, 82, // 123 371
	63, 62, 83, // 124 374
	62, 82, 83, // 125 377
	64, 63, 84, // 126 380
	63, 83, 84, // 127 383
	65, 64, 85, // 128 386
	64, 84, 85, // 129 389
	66, 65, 86, // 130 392
	65, 85, 86, // 131 395
	67, 66, 87, // 132 398
	66, 86, 87, // 133 401
	68, 67, 88, // 134 404
	67, 87, 88, // 135 407
	69, 68, 89, // 136 410
	68, 88, 89, // 137 413
	70, 69, 90, // 138 416
	69, 89, 90, // 139 419
	71, 70, 91, // 140 422
	70, 90, 91, // 141 425
	72, 71, 92, // 142 428
	71, 91, 92, // 143 431
	73, 72, 93, // 144 434
	72, 92, 93, // 145 437
	74, 73, 94, // 146 440
	73, 93, 94, // 147 443
	75, 74, 95, // 148 446
	74, 94, 95, // 149 449
	76, 75, 96, // 150 452
	75, 95, 96, // 151 455
	77, 76, 97, // 152 458
	76, 96, 97, // 153 461
	78, 77, 98, // 154 464
	77, 97, 98, // 155 467
	79, 78, 99, // 156 470
	78, 98, 99, // 157 473
	60, 79, 80, // 158 476
	79, 99, 80, // 159 479
	81, 80, 101, // 160 482
	80, 100, 101, // 161 485
	82, 81, 102, // 162 488
	81, 101, 102, // 163 491
	83, 82, 103, // 164 494
	82, 102, 103, // 165 497
	84, 83, 104, // 166 500
	83, 103, 104, // 167 503
	85, 84, 105, // 168 506
	84, 104, 105, // 169 509
	86, 85, 106, // 170 512
	85, 105, 106, // 171 515
	87, 86, 107, // 172 518
	86, 106, 107, // 173 521
	88, 87, 108, // 174 524
	87, 107, 108, // 175 527
	89, 88, 109, // 176 530
	88, 108, 109, // 177 533
	90, 89, 110, // 178 536
	89, 109, 110, // 179 539
	91, 90, 111, // 180 542
	90, 110, 111, // 181 545
	92, 91, 112, // 182 548
	91, 111, 112, // 183 551
	93, 92, 113, // 184 554
	92, 112, 113, // 185 557
	94, 93, 114, // 186 560
	93, 113, 114, // 187 563
	95, 94, 115, // 188 566
	94, 114, 115, // 189 569
	96, 95, 116, // 190 572
	95, 115, 116, // 191 575
	97, 96, 117, // 192 578
	96, 116, 117, // 193 581
	98, 97, 118, // 194 584
	97, 117, 118, // 195 587
	99, 98, 119, // 196 590
	98, 118, 119, // 197 593
	80, 99, 100, // 198 596
	99, 119, 100, // 199 599
	101, 100, 121, // 200 602
	100, 120, 121, // 201 605
	102, 101, 122, // 202 608
	101, 121, 122, // 203 611
	103, 102, 123, // 204 614
	102, 122, 123, // 205 617
	104, 103, 124, // 206 620
	103, 123, 124, // 207 623
	105, 104, 125, // 208 626
	104, 124, 125, // 209 629
	106, 105, 126, // 210 632
	105, 125, 126, // 211 635
	107, 106, 127, // 212 638
	106, 126, 127, // 213 641
	108, 107, 128, // 214 644
	107, 127, 128, // 215 647
	109, 108, 129, // 216 650
	108, 128, 129, // 217 653
	110, 109, 130, // 218 656
	109, 129, 130, // 219 659
	111, 110, 131, // 220 662
	110, 130, 131, // 221 665
	112, 111, 132, // 222 668
	111, 131, 132, // 223 671
	113, 112, 133, // 224 674
	112, 132, 133, // 225 677
	114, 113, 134, // 226 680
	113, 133, 134, // 227 683
	115, 114, 135, // 228 686
	114, 134, 135, // 229 689
	116, 115, 136, // 230 692
	115, 135, 136, // 231 695
	117, 116, 137, // 232 698
	116, 136, 137, // 233 701
	118, 117, 138, // 234 704
	117, 137, 138, // 235 707
	119, 118, 139, // 236 710
	118, 138, 139, // 237 713
	100, 119, 120, // 238 716
	119, 139, 120, // 239 719
	121, 120, 141, // 240 722
	120, 140, 141, // 241 725
	122, 121, 142, // 242 728
	121, 141, 142, // 243 731
	123, 122, 143, // 244 734
	122, 142, 143, // 245 737
	124, 123, 144, // 246 740
	123, 143, 144, // 247 743
	125, 124, 145, // 248 746
	124, 144, 145, // 249 749
	126, 125, 146, // 250 752
	125, 145, 146, // 251 755
	127, 126, 147, // 252 758
	126, 146, 147, // 253 761
	128, 127, 148, // 254 764
	127, 147, 148, // 255 767
	129, 128, 149, // 256 770
	128, 148, 149, // 257 773
	130, 129, 150, // 258 776
	129, 149, 150, // 259 779
	131, 130, 151, // 260 782
	130, 150, 151, // 261 785
	132, 131, 152, // 262 788
	131, 151, 152, // 263 791
	133, 132, 153, // 264 794
	132, 152, 153, // 265 797
	134, 133, 154, // 266 800
	133, 153, 154, // 267 803
	135, 134, 155, // 268 806
	134, 154, 155, // 269 809
	136, 135, 156, // 270 812
	135, 155, 156, // 271 815
	137, 136, 157, // 272 818
	136, 156, 157, // 273 821
	138, 137, 158, // 274 824
	137, 157, 158, // 275 827
	139, 138, 159, // 276 830
	138, 158, 159, // 277 833
	120, 139, 140, // 278 836
	139, 159, 140, // 279 839
	141, 140, 161, // 280 842
	140, 160, 161, // 281 845
	142, 141, 162, // 282 848
	141, 161, 162, // 283 851
	143, 142, 163, // 284 854
	142, 162, 163, // 285 857
	144, 143, 164, // 286 860
	143, 163, 164, // 287 863
	145, 144, 165, // 288 866
	144, 164, 165, // 289 869
	146, 145, 166, // 290 872
	145, 165, 166, // 291 875
	147, 146, 167, // 292 878
	146, 166, 167, // 293 881
	148, 147, 168, // 294 884
	147, 167, 168, // 295 887
	149, 148, 169, // 296 890
	148, 168, 169, // 297 893
	150, 149, 170, // 298 896
	149, 169, 170, // 299 899
	151, 150, 171, // 300 902
	150, 170, 171, // 301 905
	152, 151, 172, // 302 908
	151, 171, 172, // 303 911
	153, 152, 173, // 304 914
	152, 172, 173, // 305 917
	154, 153, 174, // 306 920
	153, 173, 174, // 307 923
	155, 154, 175, // 308 926
	154, 174, 175, // 309 929
	156, 155, 176, // 310 932
	155, 175, 176, // 311 935
	157, 156, 177, // 312 938
	156, 176, 177, // 313 941
	158, 157, 178, // 314 944
	157, 177, 178, // 315 947
	159, 158, 179, // 316 950
	158, 178, 179, // 317 953
	140, 159, 160, // 318 956
	159, 179, 160, // 319 959
	161, 160, 181, // 320 962
	160, 180, 181, // 321 965
	162, 161, 182, // 322 968
	161, 181, 182, // 323 971
	163, 162, 183, // 324 974
	162, 182, 183, // 325 977
	164, 163, 184, // 326 980
	163, 183, 184, // 327 983
	165, 164, 185, // 328 986
	164, 184, 185, // 329 989
	166, 165, 186, // 330 992
	165, 185, 186, // 331 995
	167, 166, 187, // 332 998
	166, 186, 187, // 333 1001
	168, 167, 188, // 334 1004
	167, 187, 188, // 335 1007
	169, 168, 189, // 336 1010
	168, 188, 189, // 337 1013
	170, 169, 190, // 338 1016
	169, 189, 190, // 339 1019
	171, 170, 191, // 340 1022
	170, 190, 191, // 341 1025
	172, 171, 192, // 342 1028
	171, 191, 192, // 343 1031
	173, 172, 193, // 344 1034
	172, 192, 193, // 345 1037
	174, 173, 194, // 346 1040
	173, 193, 194, // 347 1043
	175, 174, 195, // 348 1046
	174, 194, 195, // 349 1049
	176, 175, 196, // 350 1052
	175, 195, 196, // 351 1055
	177, 176, 197, // 352 1058
	176, 196, 197, // 353 1061
	178, 177, 198, // 354 1064
	177, 197, 198, // 355 1067
	179, 178, 199, // 356 1070
	178, 198, 199, // 357 1073
	160, 179, 180, // 358 1076
	179, 199, 180, // 359 1079
	181, 180, 201, // 360 1082
	180, 200, 201, // 361 1085
	182, 181, 202, // 362 1088
	181, 201, 202, // 363 1091
	183, 182, 203, // 364 1094
	182, 202, 203, // 365 1097
	184, 183, 204, // 366 1100
	183, 203, 204, // 367 1103
	185, 184, 205, // 368 1106
	184, 204, 205, // 369 1109
	186, 185, 206, // 370 1112
	185, 205, 206, // 371 1115
	187, 186, 207, // 372 1118
	186, 206, 207, // 373 1121
	188, 187, 208, // 374 1124
	187, 207, 208, // 375 1127
	189, 188, 209, // 376 1130
	188, 208, 209, // 377 1133
	190, 189, 210, // 378 1136
	189, 209, 210, // 379 1139
	191, 190, 211, // 380 1142
	190, 210, 211, // 381 1145
	192, 191, 212, // 382 1148
	191, 211, 212, // 383 1151
	193, 192, 213, // 384 1154
	192, 212, 213, // 385 1157
	194, 193, 214, // 386 1160
	193, 213, 214, // 387 1163
	195, 194, 215, // 388 1166
	194, 214, 215, // 389 1169
	196, 195, 216, // 390 1172
	195, 215, 216, // 391 1175
	197, 196, 217, // 392 1178
	196, 216, 217, // 393 1181
	198, 197, 218, // 394 1184
	197, 217, 218, // 395 1187
	199, 198, 219, // 396 1190
	198, 218, 219, // 397 1193
	180, 199, 200, // 398 1196
	199, 219, 200, // 399 1199
	201, 200, 221, // 400 1202
	200, 220, 221, // 401 1205
	202, 201, 222, // 402 1208
	201, 221, 222, // 403 1211
	203, 202, 223, // 404 1214
	202, 222, 223, // 405 1217
	204, 203, 224, // 406 1220
	203, 223, 224, // 407 1223
	205, 204, 225, // 408 1226
	204, 224, 225, // 409 1229
	206, 205, 226, // 410 1232
	205, 225, 226, // 411 1235
	207, 206, 227, // 412 1238
	206, 226, 227, // 413 1241
	208, 207, 228, // 414 1244
	207, 227, 228, // 415 1247
	209, 208, 229, // 416 1250
	208, 228, 229, // 417 1253
	210, 209, 230, // 418 1256
	209, 229, 230, // 419 1259
	211, 210, 231, // 420 1262
	210, 230, 231, // 421 1265
	212, 211, 232, // 422 1268
	211, 231, 232, // 423 1271
	213, 212, 233, // 424 1274
	212, 232, 233, // 425 1277
	214, 213, 234, // 426 1280
	213, 233, 234, // 427 1283
	215, 214, 235, // 428 1286
	214, 234, 235, // 429 1289
	216, 215, 236, // 430 1292
	215, 235, 236, // 431 1295
	217, 216, 237, // 432 1298
	216, 236, 237, // 433 1301
	218, 217, 238, // 434 1304
	217, 237, 238, // 435 1307
	219, 218, 239, // 436 1310
	218, 238, 239, // 437 1313
	200, 219, 220, // 438 1316
	219, 239, 220, // 439 1319
	221, 220, 240, // 440 1322
	222, 221, 240, // 441 1325
	223, 222, 240, // 442 1328
	224, 223, 240, // 443 1331
	225, 224, 240, // 444 1334
	226, 225, 240, // 445 1337
	227, 226, 240, // 446 1340
	228, 227, 240, // 447 1343
	229, 228, 240, // 448 1346
	230, 229, 240, // 449 1349
	231, 230, 240, // 450 1352
	232, 231, 240, // 451 1355
	233, 232, 240, // 452 1358
	234, 233, 240, // 453 1361
	235, 234, 240, // 454 1364
	236, 235, 240, // 455 1367
	237, 236, 240, // 456 1370
	238, 237, 240, // 457 1373
	239, 238, 240, // 458 1376
	220, 239, 240, // 459 1379
	241, 242, 244, // 460 1382
	242, 243, 244, // 461 1385
	245, 241, 246, // 462 1388
	241, 244, 246, // 463 1391
	247, 245, 248, // 464 1394
	245, 246, 248, // 465 1397
	249, 247, 250, // 466 1400
	247, 248, 250, // 467 1403
	251, 249, 252, // 468 1406
	249, 250, 252, // 469 1409
	253, 251, 254, // 470 1412
	251, 252, 254, // 471 1415
	255, 253, 256, // 472 1418
	253, 254, 256, // 473 1421
	257, 255, 258, // 474 1424
	255, 256, 258, // 475 1427
	259, 257, 260, // 476 1430
	257, 258, 260, // 477 1433
	261, 259, 262, // 478 1436
	259, 260, 262, // 479 1439
	263, 261, 264, // 480 1442
	261, 262, 264, // 481 1445
	265, 263, 266, // 482 1448
	263, 264, 266, // 483 1451
	267, 265, 268, // 484 1454
	265, 266, 268, // 485 1457
	269, 267, 270, // 486 1460
	267, 268, 270, // 487 1463
	271, 269, 272, // 488 1466
	269, 270, 272, // 489 1469
	273, 271, 274, // 490 1472
	271, 272, 274, // 491 1475
	275, 273, 276, // 492 1478
	273, 274, 276, // 493 1481
	277, 275, 278, // 494 1484
	275, 276, 278, // 495 1487
	279, 277, 280, // 496 1490
	277, 278, 280, // 497 1493
	242, 279, 243, // 498 1496
	279, 280, 243, // 499 1499
	244, 243, 282, // 500 1502
	243, 281, 282, // 501 1505
	246, 244, 283, // 502 1508
	244, 282, 283, // 503 1511
	248, 246, 284, // 504 1514
	246, 283, 284, // 505 1517
	250, 248, 285, // 506 1520
	248, 284, 285, // 507 1523
	252, 250, 286, // 508 1526
	250, 285, 286, // 509 1529
	254, 252, 287, // 510 1532
	252, 286, 287, // 511 1535
	256, 254, 288, // 512 1538
	254, 287, 288, // 513 1541
	258, 256, 289, // 514 1544
	256, 288, 289, // 515 1547
	260, 258, 290, // 516 1550
	258, 289, 290, // 517 1553
	262, 260, 291, // 518 1556
	260, 290, 291, // 519 1559
	264, 262, 292, // 520 1562
	262, 291, 292, // 521 1565
	266, 264, 293, // 522 1568
	264, 292, 293, // 523 1571
	268, 266, 294, // 524 1574
	266, 293, 294, // 525 1577
	270, 268, 295, // 526 1580
	268, 294, 295, // 527 1583
	272, 270, 296, // 528 1586
	270, 295, 296, // 529 1589
	274, 272, 297, // 530 1592
	272, 296, 297, // 531 1595
	276, 274, 298, // 532 1598
	274, 297, 298, // 533 1601
	278, 276, 299, // 534 1604
	276, 298, 299, // 535 1607
	280, 278, 300, // 536 1610
	278, 299, 300, // 537 1613
	243, 280, 281, // 538 1616
	280, 300, 281, // 539 1619
	282, 281, 302, // 540 1622
	281, 301, 302, // 541 1625
	283, 282, 303, // 542 1628
	282, 302, 303, // 543 1631
	284, 283, 304, // 544 1634
	283, 303, 304, // 545 1637
	285, 284, 305, // 546 1640
	284, 304, 305, // 547 1643
	286, 285, 306, // 548 1646
	285, 305, 306, // 549 1649
	287, 286, 307, // 550 1652
	286, 306, 307, // 551 1655
	288, 287, 308, // 552 1658
	287, 307, 308, // 553 1661
	289, 288, 309, // 554 1664
	288, 308, 309, // 555 1667
	290, 289, 310, // 556 1670
	289, 309, 310, // 557 1673
	291, 290, 311, // 558 1676
	290, 310, 311, // 559 1679
	292, 291, 312, // 560 1682
	291, 311, 312, // 561 1685
	293, 292, 313, // 562 1688
	292, 312, 313, // 563 1691
	294, 293, 314, // 564 1694
	293, 313, 314, // 565 1697
	295, 294, 315, // 566 1700
	294, 314, 315, // 567 1703
	296, 295, 316, // 568 1706
	295, 315, 316, // 569 1709
	297, 296, 317, // 570 1712
	296, 316, 317, // 571 1715
	298, 297, 318, // 572 1718
	297, 317, 318, // 573 1721
	299, 298, 319, // 574 1724
	298, 318, 319, // 575 1727
	300, 299, 320, // 576 1730
	299, 319, 320, // 577 1733
	281, 300, 301, // 578 1736
	300, 320, 301, // 579 1739
	302, 301, 322, // 580 1742
	301, 321, 322, // 581 1745
	303, 302, 323, // 582 1748
	302, 322, 323, // 583 1751
	304, 303, 324, // 584 1754
	303, 323, 324, // 585 1757
	305, 304, 325, // 586 1760
	304, 324, 325, // 587 1763
	306, 305, 326, // 588 1766
	305, 325, 326, // 589 1769
	307, 306, 327, // 590 1772
	306, 326, 327, // 591 1775
	308, 307, 328, // 592 1778
	307, 327, 328, // 593 1781
	309, 308, 329, // 594 1784
	308, 328, 329, // 595 1787
	310, 309, 330, // 596 1790
	309, 329, 330, // 597 1793
	311, 310, 331, // 598 1796
	310, 330, 331, // 599 1799
	312, 311, 332, // 600 1802
	311, 331, 332, // 601 1805
	313, 312, 333, // 602 1808
	312, 332, 333, // 603 1811
	314, 313, 334, // 604 1814
	313, 333, 334, // 605 1817
	315, 314, 335, // 606 1820
	314, 334, 335, // 607 1823
	316, 315, 336, // 608 1826
	315, 335, 336, // 609 1829
	317, 316, 337, // 610 1832
	316, 336, 337, // 611 1835
	318, 317, 338, // 612 1838
	317, 337, 338, // 613 1841
	319, 318, 339, // 614 1844
	318, 338, 339, // 615 1847
	320, 319, 340, // 616 1850
	319, 339, 340, // 617 1853
	301, 320, 321, // 618 1856
	320, 340, 321, // 619 1859
	322, 321, 342, // 620 1862
	321, 341, 342, // 621 1865
	323, 322, 343, // 622 1868
	322, 342, 343, // 623 1871
	324, 323, 344, // 624 1874
	323, 343, 344, // 625 1877
	325, 324, 345, // 626 1880
	324, 344, 345, // 627 1883
	326, 325, 346, // 628 1886
	325, 345, 346, // 629 1889
	327, 326, 347, // 630 1892
	326, 346, 347, // 631 1895
	328, 327, 348, // 632 1898
	327, 347, 348, // 633 1901
	329, 328, 349, // 634 1904
	328, 348, 349, // 635 1907
	330, 329, 350, // 636 1910
	329, 349, 350, // 637 1913
	331, 330, 351, // 638 1916
	330, 350, 351, // 639 1919
	332, 331, 352, // 640 1922
	331, 351, 352, // 641 1925
	333, 332, 353, // 642 1928
	332, 352, 353, // 643 1931
	334, 333, 354, // 644 1934
	333, 353, 354, // 645 1937
	335, 334, 355, // 646 1940
	334, 354, 355, // 647 1943
	336, 335, 356, // 648 1946
	335, 355, 356, // 649 1949
	337, 336, 357, // 650 1952
	336, 356, 357, // 651 1955
	338, 337, 358, // 652 1958
	337, 357, 358, // 653 1961
	339, 338, 359, // 654 1964
	338, 358, 359, // 655 1967
	340, 339, 360, // 656 1970
	339, 359, 360, // 657 1973
	321, 340, 341, // 658 1976
	340, 360, 341, // 659 1979
	342, 341, 362, // 660 1982
	341, 361, 362, // 661 1985
	343, 342, 363, // 662 1988
	342, 362, 363, // 663 1991
	344, 343, 364, // 664 1994
	343, 363, 364, // 665 1997
	345, 344, 365, // 666 2000
	344, 364, 365, // 667 2003
	346, 345, 366, // 668 2006
	345, 365, 366, // 669 2009
	347, 346, 367, // 670 2012
	346, 366, 367, // 671 2015
	348, 347, 368, // 672 2018
	347, 367, 368, // 673 2021
	349, 348, 369, // 674 2024
	348, 368, 369, // 675 2027
	350, 349, 370, // 676 2030
	349, 369, 370, // 677 2033
	351, 350, 371, // 678 2036
	350, 370, 371, // 679 2039
	352, 351, 372, // 680 2042
	351, 371, 372, // 681 2045
	353, 352, 373, // 682 2048
	352, 372, 373, // 683 2051
	354, 353, 374, // 684 2054
	353, 373, 374, // 685 2057
	355, 354, 375, // 686 2060
	354, 374, 375, // 687 2063
	356, 355, 376, // 688 2066
	355, 375, 376, // 689 2069
	357, 356, 377, // 690 2072
	356, 376, 377, // 691 2075
	358, 357, 378, // 692 2078
	357, 377, 378, // 693 2081
	359, 358, 379, // 694 2084
	358, 378, 379, // 695 2087
	360, 359, 380, // 696 2090
	359, 379, 380, // 697 2093
	341, 360, 361, // 698 2096
	360, 380, 361, // 699 2099
	362, 361, 382, // 700 2102
	361, 381, 382, // 701 2105
	363, 362, 383, // 702 2108
	362, 382, 383, // 703 2111
	364, 363, 384, // 704 2114
	363, 383, 384, // 705 2117
	365, 364, 385, // 706 2120
	364, 384, 385, // 707 2123
	366, 365, 386, // 708 2126
	365, 385, 386, // 709 2129
	367, 366, 387, // 710 2132
	366, 386, 387, // 711 2135
	368, 367, 388, // 712 2138
	367, 387, 388, // 713 2141
	369, 368, 389, // 714 2144
	368, 388, 389, // 715 2147
	370, 369, 390, // 716 2150
	369, 389, 390, // 717 2153
	371, 370, 391, // 718 2156
	370, 390, 391, // 719 2159
	372, 371, 392, // 720 2162
	371, 391, 392, // 721 2165
	373, 372, 393, // 722 2168
	372, 392, 393, // 723 2171
	374, 373, 394, // 724 2174
	373, 393, 394, // 725 2177
	375, 374, 395, // 726 2180
	374, 394, 395, // 727 2183
	376, 375, 396, // 728 2186
	375, 395, 396, // 729 2189
	377, 376, 397, // 730 2192
	376, 396, 397, // 731 2195
	378, 377, 398, // 732 2198
	377, 397, 398, // 733 2201
	379, 378, 399, // 734 2204
	378, 398, 399, // 735 2207
	380, 379, 400, // 736 2210
	379, 399, 400, // 737 2213
	361, 380, 381, // 738 2216
	380, 400, 381, // 739 2219
	401, 402, 404, // 740 2222
	402, 403, 404, // 741 2225
	402, 405, 403, // 742 2228
	405, 406, 403, // 743 2231
	405, 407, 406, // 744 2234
	407, 408, 406, // 745 2237
	407, 409, 408, // 746 2240
	409, 410, 408, // 747 2243
	409, 411, 410, // 748 2246
	411, 412, 410, // 749 2249
	411, 413, 412, // 750 2252
	413, 414, 412, // 751 2255
	413, 415, 414, // 752 2258
	415, 416, 414, // 753 2261
	415, 417, 416, // 754 2264
	417, 418, 416, // 755 2267
	417, 419, 418, // 756 2270
	419, 420, 418, // 757 2273
	419, 421, 420, // 758 2276
	421, 422, 420, // 759 2279
	421, 423, 422, // 760 2282
	423, 424, 422, // 761 2285
	423, 425, 424, // 762 2288
	425, 426, 424, // 763 2291
	425, 427, 426, // 764 2294
	427, 428, 426, // 765 2297
	427, 429, 428, // 766 2300
	429, 430, 428, // 767 2303
	429, 431, 430, // 768 2306
	431, 432, 430, // 769 2309
	431, 433, 432, // 770 2312
	433, 434, 432, // 771 2315
	433, 435, 434, // 772 2318
	435, 436, 434, // 773 2321
	435, 437, 436, // 774 2324
	437, 438, 436, // 775 2327
	437, 439, 438, // 776 2330
	439, 440, 438, // 777 2333
	439, 401, 440, // 778 2336
	401, 404, 440, // 779 2339
	404, 403, 442, // 780 2342
	403, 441, 442, // 781 2345
	403, 406, 441, // 782 2348
	406, 443, 441, // 783 2351
	406, 408, 443, // 784 2354
	408, 444, 443, // 785 2357
	408, 410, 444, // 786 2360
	410, 445, 444, // 787 2363
	410, 412, 445, // 788 2366
	412, 446, 445, // 789 2369
	412, 414, 446, // 790 2372
	414, 447, 446, // 791 2375
	414, 416, 447, // 792 2378
	416, 448, 447, // 793 2381
	416, 418, 448, // 794 2384
	418, 449, 448, // 795 2387
	418, 420, 449, // 796 2390
	420, 450, 449, // 797 2393
	420, 422, 450, // 798 2396
	422, 451, 450, // 799 2399
	422, 424, 451, // 800 2402
	424, 452, 451, // 801 2405
	424, 426, 452, // 802 2408
	426, 453, 452, // 803 2411
	426, 428, 453, // 804 2414
	428, 454, 453, // 805 2417
	428, 430, 454, // 806 2420
	430, 455, 454, // 807 2423
	430, 432, 455, // 808 2426
	432, 456, 455, // 809 2429
	432, 434, 456, // 810 2432
	434, 457, 456, // 811 2435
	434, 436, 457, // 812 2438
	436, 458, 457, // 813 2441
	436, 438, 458, // 814 2444
	438, 459, 458, // 815 2447
	438, 440, 459, // 816 2450
	440, 460, 459, // 817 2453
	440, 404, 460, // 818 2456
	404, 442, 460, // 819 2459
	442, 441, 462, // 820 2462
	441, 461, 462, // 821 2465
	441, 443, 461, // 822 2468
	443, 463, 461, // 823 2471
	443, 444, 463, // 824 2474
	444, 464, 463, // 825 2477
	444, 445, 464, // 826 2480
	445, 465, 464, // 827 2483
	445, 446, 465, // 828 2486
	446, 466, 465, // 829 2489
	446, 447, 466, // 830 2492
	447, 467, 466, // 831 2495
	447, 448, 467, // 832 2498
	448, 468, 467, // 833 2501
	448, 449, 468, // 834 2504
	449, 469, 468, // 835 2507
	449, 450, 469, // 836 2510
	450, 470, 469, // 837 2513
	450, 451, 470, // 838 2516
	451, 471, 470, // 839 2519
	451, 452, 471, // 840 2522
	452, 472, 471, // 841 2525
	452, 453, 472, // 842 2528
	453, 473, 472, // 843 2531
	453, 454, 473, // 844 2534
	454, 474, 473, // 845 2537
	454, 455, 474, // 846 2540
	455, 475, 474, // 847 2543
	455, 456, 475, // 848 2546
	456, 476, 475, // 849 2549
	456, 457, 476, // 850 2552
	457, 477, 476, // 851 2555
	457, 458, 477, // 852 2558
	458, 478, 477, // 853 2561
	458, 459, 478, // 854 2564
	459, 479, 478, // 855 2567
	459, 460, 479, // 856 2570
	460, 480, 479, // 857 2573
	460, 442, 480, // 858 2576
	442, 462, 480, // 859 2579
	462, 461, 482, // 860 2582
	461, 481, 482, // 861 2585
	461, 463, 481, // 862 2588
	463, 483, 481, // 863 2591
	463, 464, 483, // 864 2594
	464, 484, 483, // 865 2597
	464, 465, 484, // 866 2600
	465, 485, 484, // 867 2603
	465, 466, 485, // 868 2606
	466, 486, 485, // 869 2609
	466, 467, 486, // 870 2612
	467, 487, 486, // 871 2615
	467, 468, 487, // 872 2618
	468, 488, 487, // 873 2621
	468, 469, 488, // 874 2624
	469, 489, 488, // 875 2627
	469, 470, 489, // 876 2630
	470, 490, 489, // 877 2633
	470, 471, 490, // 878 2636
	471, 491, 490, // 879 2639
	471, 472, 491, // 880 2642
	472, 492, 491, // 881 2645
	472, 473, 492, // 882 2648
	473, 493, 492, // 883 2651
	473, 474, 493, // 884 2654
	474, 494, 493, // 885 2657
	474, 475, 494, // 886 2660
	475, 495, 494, // 887 2663
	475, 476, 495, // 888 2666
	476, 496, 495, // 889 2669
	476, 477, 496, // 890 2672
	477, 497, 496, // 891 2675
	477, 478, 497, // 892 2678
	478, 498, 497, // 893 2681
	478, 479, 498, // 894 2684
	479, 499, 498, // 895 2687
	479, 480, 499, // 896 2690
	480, 500, 499, // 897 2693
	480, 462, 500, // 898 2696
	462, 482, 500, // 899 2699
	482, 481, 502, // 900 2702
	481, 501, 502, // 901 2705
	481, 483, 501, // 902 2708
	483, 503, 501, // 903 2711
	483, 484, 503, // 904 2714
	484, 504, 503, // 905 2717
	484, 485, 504, // 906 2720
	485, 505, 504, // 907 2723
	485, 486, 505, // 908 2726
	486, 506, 505, // 909 2729
	486, 487, 506, // 910 2732
	487, 507, 506, // 911 2735
	487, 488, 507, // 912 2738
	488, 508, 507, // 913 2741
	488, 489, 508, // 914 2744
	489, 509, 508, // 915 2747
	489, 490, 509, // 916 2750
	490, 510, 509, // 917 2753
	490, 491, 510, // 918 2756
	491, 511, 510, // 919 2759
	491, 492, 511, // 920 2762
	492, 512, 511, // 921 2765
	492, 493, 512, // 922 2768
	493, 513, 512, // 923 2771
	493, 494, 513, // 924 2774
	494, 514, 513, // 925 2777
	494, 495, 514, // 926 2780
	495, 515, 514, // 927 2783
	495, 496, 515, // 928 2786
	496, 516, 515, // 929 2789
	496, 497, 516, // 930 2792
	497, 517, 516, // 931 2795
	497, 498, 517, // 932 2798
	498, 518, 517, // 933 2801
	498, 499, 518, // 934 2804
	499, 519, 518, // 935 2807
	499, 500, 519, // 936 2810
	500, 520, 519, // 937 2813
	500, 482, 520, // 938 2816
	482, 502, 520, // 939 2819
	502, 501, 522, // 940 2822
	501, 521, 522, // 941 2825
	501, 503, 521, // 942 2828
	503, 523, 521, // 943 2831
	503, 504, 523, // 944 2834
	504, 524, 523, // 945 2837
	504, 505, 524, // 946 2840
	505, 525, 524, // 947 2843
	505, 506, 525, // 948 2846
	506, 526, 525, // 949 2849
	506, 507, 526, // 950 2852
	507, 527, 526, // 951 2855
	507, 508, 527, // 952 2858
	508, 528, 527, // 953 2861
	508, 509, 528, // 954 2864
	509, 529, 528, // 955 2867
	509, 510, 529, // 956 2870
	510, 530, 529, // 957 2873
	510, 511, 530, // 958 2876
	511, 531, 530, // 959 2879
	511, 512, 531, // 960 2882
	512, 532, 531, // 961 2885
	512, 513, 532, // 962 2888
	513, 533, 532, // 963 2891
	513, 514, 533, // 964 2894
	514, 534, 533, // 965 2897
	514, 515, 534, // 966 2900
	515, 535, 534, // 967 2903
	515, 516, 535, // 968 2906
	516, 536, 535, // 969 2909
	516, 517, 536, // 970 2912
	517, 537, 536, // 971 2915
	517, 518, 537, // 972 2918
	518, 538, 537, // 973 2921
	518, 519, 538, // 974 2924
	519, 539, 538, // 975 2927
	519, 520, 539, // 976 2930
	520, 540, 539, // 977 2933
	520, 502, 540, // 978 2936
	502, 522, 540, // 979 2939
	522, 521, 542, // 980 2942
	521, 541, 542, // 981 2945
	521, 523, 541, // 982 2948
	523, 543, 541, // 983 2951
	523, 524, 543, // 984 2954
	524, 544, 543, // 985 2957
	524, 525, 544, // 986 2960
	525, 545, 544, // 987 2963
	525, 526, 545, // 988 2966
	526, 546, 545, // 989 2969
	526, 527, 546, // 990 2972
	527, 547, 546, // 991 2975
	527, 528, 547, // 992 2978
	528, 548, 547, // 993 2981
	528, 529, 548, // 994 2984
	529, 549, 548, // 995 2987
	529, 530, 549, // 996 2990
	530, 550, 549, // 997 2993
	530, 531, 550, // 998 2996
	531, 551, 550, // 999 2999
	531, 532, 551, // 1000 3002
	532, 552, 551, // 1001 3005
	532, 533, 552, // 1002 3008
	533, 553, 552, // 1003 3011
	533, 534, 553, // 1004 3014
	534, 554, 553, // 1005 3017
	534, 535, 554, // 1006 3020
	535, 555, 554, // 1007 3023
	535, 536, 555, // 1008 3026
	536, 556, 555, // 1009 3029
	536, 537, 556, // 1010 3032
	537, 557, 556, // 1011 3035
	537, 538, 557, // 1012 3038
	538, 558, 557, // 1013 3041
	538, 539, 558, // 1014 3044
	539, 559, 558, // 1015 3047
	539, 540, 559, // 1016 3050
	540, 560, 559, // 1017 3053
	540, 522, 560, // 1018 3056
	522, 542, 560, // 1019 3059
	542, 541, 562, // 1020 3062
	541, 561, 562, // 1021 3065
	541, 543, 561, // 1022 3068
	543, 563, 561, // 1023 3071
	543, 544, 563, // 1024 3074
	544, 564, 563, // 1025 3077
	544, 545, 564, // 1026 3080
	545, 565, 564, // 1027 3083
	545, 546, 565, // 1028 3086
	546, 566, 565, // 1029 3089
	546, 547, 566, // 1030 3092
	547, 567, 566, // 1031 3095
	547, 548, 567, // 1032 3098
	548, 568, 567, // 1033 3101
	548, 549, 568, // 1034 3104
	549, 569, 568, // 1035 3107
	549, 550, 569, // 1036 3110
	550, 570, 569, // 1037 3113
	550, 551, 570, // 1038 3116
	551, 571, 570, // 1039 3119
	551, 552, 571, // 1040 3122
	552, 572, 571, // 1041 3125
	552, 553, 572, // 1042 3128
	553, 573, 572, // 1043 3131
	553, 554, 573, // 1044 3134
	554, 574, 573, // 1045 3137
	554, 555, 574, // 1046 3140
	555, 575, 574, // 1047 3143
	555, 556, 575, // 1048 3146
	556, 576, 575, // 1049 3149
	556, 557, 576, // 1050 3152
	557, 577, 576, // 1051 3155
	557, 558, 577, // 1052 3158
	558, 578, 577, // 1053 3161
	558, 559, 578, // 1054 3164
	559, 579, 578, // 1055 3167
	559, 560, 579, // 1056 3170
	560, 580, 579, // 1057 3173
	560, 542, 580, // 1058 3176
	542, 562, 580, // 1059 3179
	562, 561, 582, // 1060 3182
	561, 581, 582, // 1061 3185
	561, 563, 581, // 1062 3188
	563, 583, 581, // 1063 3191
	563, 564, 583, // 1064 3194
	564, 584, 583, // 1065 3197
	564, 565, 584, // 1066 3200
	565, 585, 584, // 1067 3203
	565, 566, 585, // 1068 3206
	566, 586, 585, // 1069 3209
	566, 567, 586, // 1070 3212
	567, 587, 586, // 1071 3215
	567, 568, 587, // 1072 3218
	568, 588, 587, // 1073 3221
	568, 569, 588, // 1074 3224
	569, 589, 588, // 1075 3227
	569, 570, 589, // 1076 3230
	570, 590, 589, // 1077 3233
	570, 571, 590, // 1078 3236
	571, 591, 590, // 1079 3239
	571, 572, 591, // 1080 3242
	572, 592, 591, // 1081 3245
	572, 573, 592, // 1082 3248
	573, 593, 592, // 1083 3251
	573, 574, 593, // 1084 3254
	574, 594, 593, // 1085 3257
	574, 575, 594, // 1086 3260
	575, 595, 594, // 1087 3263
	575, 576, 595, // 1088 3266
	576, 596, 595, // 1089 3269
	576, 577, 596, // 1090 3272
	577, 597, 596, // 1091 3275
	577, 578, 597, // 1092 3278
	578, 598, 597, // 1093 3281
	578, 579, 598, // 1094 3284
	579, 599, 598, // 1095 3287
	579, 580, 599, // 1096 3290
	580, 600, 599, // 1097 3293
	580, 562, 600, // 1098 3296
	562, 582, 600, // 1099 3299
	582, 581, 602, // 1100 3302
	581, 601, 602, // 1101 3305
	581, 583, 601, // 1102 3308
	583, 603, 601, // 1103 3311
	583, 584, 603, // 1104 3314
	584, 604, 603, // 1105 3317
	584, 585, 604, // 1106 3320
	585, 605, 604, // 1107 3323
	585, 586, 605, // 1108 3326
	586, 606, 605, // 1109 3329
	586, 587, 606, // 1110 3332
	587, 607, 606, // 1111 3335
	587, 588, 607, // 1112 3338
	588, 608, 607, // 1113 3341
	588, 589, 608, // 1114 3344
	589, 609, 608, // 1115 3347
	589, 590, 609, // 1116 3350
	590, 610, 609, // 1117 3353
	590, 591, 610, // 1118 3356
	591, 611, 610, // 1119 3359
	591, 592, 611, // 1120 3362
	592, 612, 611, // 1121 3365
	592, 593, 612, // 1122 3368
	593, 613, 612, // 1123 3371
	593, 594, 613, // 1124 3374
	594, 614, 613, // 1125 3377
	594, 595, 614, // 1126 3380
	595, 615, 614, // 1127 3383
	595, 596, 615, // 1128 3386
	596, 616, 615, // 1129 3389
	596, 597, 616, // 1130 3392
	597, 617, 616, // 1131 3395
	597, 598, 617, // 1132 3398
	598, 618, 617, // 1133 3401
	598, 599, 618, // 1134 3404
	599, 619, 618, // 1135 3407
	599, 600, 619, // 1136 3410
	600, 620, 619, // 1137 3413
	600, 582, 620, // 1138 3416
	582, 602, 620, // 1139 3419
	602, 601, 622, // 1140 3422
	601, 621, 622, // 1141 3425
	601, 603, 621, // 1142 3428
	603, 623, 621, // 1143 3431
	603, 604, 623, // 1144 3434
	604, 624, 623, // 1145 3437
	604, 605, 624, // 1146 3440
	605, 625, 624, // 1147 3443
	605, 606, 625, // 1148 3446
	606, 626, 625, // 1149 3449
	606, 607, 626, // 1150 3452
	607, 627, 626, // 1151 3455
	607, 608, 627, // 1152 3458
	608, 628, 627, // 1153 3461
	608, 609, 628, // 1154 3464
	609, 629, 628, // 1155 3467
	609, 610, 629, // 1156 3470
	610, 630, 629, // 1157 3473
	610, 611, 630, // 1158 3476
	611, 631, 630, // 1159 3479
	611, 612, 631, // 1160 3482
	612, 632, 631, // 1161 3485
	612, 613, 632, // 1162 3488
	613, 633, 632, // 1163 3491
	613, 614, 633, // 1164 3494
	614, 634, 633, // 1165 3497
	614, 615, 634, // 1166 3500
	615, 635, 634, // 1167 3503
	615, 616, 635, // 1168 3506
	616, 636, 635, // 1169 3509
	616, 617, 636, // 1170 3512
	617, 637, 636, // 1171 3515
	617, 618, 637, // 1172 3518
	618, 638, 637, // 1173 3521
	618, 619, 638, // 1174 3524
	619, 639, 638, // 1175 3527
	619, 620, 639, // 1176 3530
	620, 640, 639, // 1177 3533
	620, 602, 640, // 1178 3536
	602, 622, 640, // 1179 3539
	622, 621, 642, // 1180 3542
	621, 641, 642, // 1181 3545
	621, 623, 641, // 1182 3548
	623, 643, 641, // 1183 3551
	623, 624, 643, // 1184 3554
	624, 644, 643, // 1185 3557
	624, 625, 644, // 1186 3560
	625, 645, 644, // 1187 3563
	625, 626, 645, // 1188 3566
	626, 646, 645, // 1189 3569
	626, 627, 646, // 1190 3572
	627, 647, 646, // 1191 3575
	627, 628, 647, // 1192 3578
	628, 648, 647, // 1193 3581
	628, 629, 648, // 1194 3584
	629, 649, 648, // 1195 3587
	629, 630, 649, // 1196 3590
	630, 650, 649, // 1197 3593
	630, 631, 650, // 1198 3596
	631, 651, 650, // 1199 3599
	631, 632, 651, // 1200 3602
	632, 652, 651, // 1201 3605
	632, 633, 652, // 1202 3608
	633, 653, 652, // 1203 3611
	633, 634, 653, // 1204 3614
	634, 654, 653, // 1205 3617
	634, 635, 654, // 1206 3620
	635, 655, 654, // 1207 3623
	635, 636, 655, // 1208 3626
	636, 656, 655, // 1209 3629
	636, 637, 656, // 1210 3632
	637, 657, 656, // 1211 3635
	637, 638, 657, // 1212 3638
	638, 658, 657, // 1213 3641
	638, 639, 658, // 1214 3644
	639, 659, 658, // 1215 3647
	639, 640, 659, // 1216 3650
	640, 660, 659, // 1217 3653
	640, 622, 660, // 1218 3656
	622, 642, 660, // 1219 3659
	642, 641, 661, // 1220 3662
	641, 643, 661, // 1221 3665
	643, 644, 661, // 1222 3668
	644, 645, 661, // 1223 3671
	645, 646, 661, // 1224 3674
	646, 647, 661, // 1225 3677
	647, 648, 661, // 1226 3680
	648, 649, 661, // 1227 3683
	649, 650, 661, // 1228 3686
	650, 651, 661, // 1229 3689
	651, 652, 661, // 1230 3692
	652, 653, 661, // 1231 3695
	653, 654, 661, // 1232 3698
	654, 655, 661, // 1233 3701
	655, 656, 661, // 1234 3704
	656, 657, 661, // 1235 3707
	657, 658, 661, // 1236 3710
	658, 659, 661, // 1237 3713
	659, 660, 661, // 1238 3716
	660, 642, 661, // 1239 3719
DX3DINDEX_END
#endif

#else
#define index_UnChan___mUnChan_1	NULL
#endif




#if ((PT_UnChan___mUnChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_UnChan___mUnChan_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_UnChan___mUnChan_1_INDEXSTRIP 	NULL
#endif




#if ((PT_UnChan___mUnChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_UnChan___mUnChan_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_UnChan___mUnChan_1_VERTEXSTRIP 	NULL
#define vertexbuff_UnChan___mUnChan_1_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_UnChan__ )
DX3DMODEL_START( model_UnChan___mFace_0 )
DX3DMODEL_VERTEX( vertex_UnChan___mFace_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_UnChan___mFace_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 204 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mFace )
DX3DMODEL_END
DX3DMODEL_START( model_UnChan___mUnChan_1 )
DX3DMODEL_VERTEX( vertex_UnChan___mUnChan_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_UnChan___mUnChan_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 3720 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mUnChan )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_UnChan__, 3245210857 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_UnChan__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_TogeChan__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mTogeChan )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 0.25, 0.25, 0.25 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_TogeChan___mTogeChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_TogeChan___mTogeChan_0 == PT_TRILIST ) || ((PT_TogeChan___mTogeChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_TogeChan___mTogeChan_0 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_TogeChan___mTogeChan_0 )
DX3DVERT( 0.0936806, 0.454735, -0.00751968 ) DX3DVNORM( 0.210416, 0.961634, -0.176025 )  //0
DX3DVERT( 0.18172, 0.424531, 0.00127658 ) DX3DVNORM( 0.447052, 0.880723, -0.156436 )  //1
DX3DVERT( 0.225414, 0.391927, -0.0764233 ) DX3DVNORM( 0.454644, 0.863815, -0.21708 )  //2
DX3DVERT( 0.0825208, 0.514966, -0.265805 ) DX3DVNORM( 0.150736, 0.888955, -0.432478 )  //3
DX3DVERT( 0.262655, 0.348106, -0.151936 ) DX3DVNORM( 0.527499, 0.782735, -0.330258 )  //4
DX3DVERT( 0.21111, 0.34385, -0.229819 ) DX3DVNORM( 0.437071, 0.733665, -0.520293 )  //5
DX3DVERT( 0.160718, 0.310849, -0.301319 ) DX3DVNORM( 0.274018, 0.645432, -0.712974 )  //6
DX3DVERT( 0.0689615, 0.334746, -0.305694 ) DX3DVNORM( 0.119704, 0.646357, -0.753587 )  //7
DX3DVERT( -0.0247683, 0.349061, -0.301319 ) DX3DVNORM( -0.0682926, 0.698384, -0.712458 )  //8
DX3DVERT( -0.0580146, 0.399292, -0.229819 ) DX3DVNORM( -0.188208, 0.836012, -0.515424 )  //9
DX3DVERT( -0.10368, 0.423575, -0.151936 ) DX3DVNORM( -0.212628, 0.931078, -0.296449 )  //10
DX3DVERT( -0.0521507, 0.449109, -0.0764233 ) DX3DVNORM( -0.131744, 0.972865, -0.190205 )  //11
DX3DVERT( 0.000871104, 0.461788, 0.00127658 ) DX3DVNORM( -0.0576952, 0.993727, -0.0958005 )  //12
DX3DVERT( -0.192851, 0.399292, -0.137807 ) DX3DVNORM( -0.449158, 0.848983, -0.278361 )  //13
DX3DVERT( -0.279309, 0.522704, 0.0028731 ) DX3DVNORM( -0.456289, 0.889729, 0.0135243 )  //14
DX3DVERT( -0.27155, 0.349061, -0.132916 ) DX3DVNORM( -0.717422, 0.662426, -0.215633 )  //15
DX3DVERT( -0.309795, 0.334746, -0.0472323 ) DX3DVNORM( -0.771789, 0.615767, -0.158658 )  //16
DX3DVERT( -0.339173, 0.310849, 0.0398036 ) DX3DVNORM( -0.760752, 0.645744, -0.0653503 )  //17
DX3DVERT( -0.290966, 0.34385, 0.112795 ) DX3DVNORM( -0.624437, 0.755508, 0.198207 )  //18
DX3DVERT( -0.237236, 0.348106, 0.189186 ) DX3DVNORM( -0.46771, 0.788909, 0.398585 )  //19
DX3DVERT( -0.153343, 0.391927, 0.182038 ) DX3DVNORM( -0.356715, 0.854158, 0.378376 )  //20
DX3DVERT( -0.0650617, 0.424531, 0.169679 ) DX3DVNORM( -0.190176, 0.913884, 0.358676 )  //21
DX3DVERT( -0.0411556, 0.454735, 0.0844916 ) DX3DVNORM( -0.140594, 0.980315, 0.138622 )  //22
DX3DVERT( -0.000631874, 0.401441, 0.233369 ) DX3DVNORM( -0.00947353, 0.861166, 0.508235 )  //23
DX3DVERT( 0.0750391, 0.364247, 0.273757 ) DX3DVNORM( 0.181735, 0.739899, 0.647705 )  //24
DX3DVERT( 0.159249, 0.368504, 0.233369 ) DX3DVNORM( 0.407545, 0.736738, 0.539559 )  //25
DX3DVERT( 0.152993, 0.562688, 0.128775 ) DX3DVNORM( 0.253436, 0.942286, 0.218786 )  //26
DX3DVERT( 0.227559, 0.364247, 0.169679 ) DX3DVNORM( 0.590814, 0.713952, 0.375781 )  //27
DX3DVERT( 0.217538, 0.401441, 0.0844916 ) DX3DVNORM( 0.576457, 0.809768, 0.109423 )  //28
DX3DVERT( 0.295766, 0.299406, 0.182038 ) DX3DVNORM( 0.656587, 0.653181, 0.377158 )  //29
DX3DVERT( 0.355507, 0.225995, 0.189186 ) DX3DVNORM( 0.767006, 0.506346, 0.394102 )  //30
DX3DVERT( 0.40318, 0.200848, 0.112795 ) DX3DVNORM( 0.881288, 0.411564, 0.232264 )  //31
DX3DVERT( 0.432974, 0.388231, -0.0121788 ) DX3DVNORM( 0.741277, 0.671171, -0.00613109 )  //32
DX3DVERT( 0.434418, 0.15148, 0.0398036 ) DX3DVNORM( 0.9548, 0.297245, 0.00167037 )  //33
DX3DVERT( 0.416878, 0.185043, -0.0472323 ) DX3DVNORM( 0.934224, 0.318526, -0.16052 )  //34
DX3DVERT( 0.387405, 0.213309, -0.132916 ) DX3DVNORM( 0.871534, 0.394883, -0.290683 )  //35
DX3DVERT( 0.334967, 0.290556, -0.137807 ) DX3DVNORM( 0.710004, 0.608954, -0.353651 )  //36
DX3DVERT( -0.0799729, 0.292705, -0.35149 ) DX3DVNORM( -0.18155, 0.613491, -0.76855 )  //37
DX3DVERT( -0.143869, 0.228495, -0.374622 ) DX3DVNORM( -0.344711, 0.412103, -0.843413 )  //38
DX3DVERT( -0.22838, 0.22683, -0.334675 ) DX3DVNORM( -0.546372, 0.361568, -0.755478 )  //39
DX3DVERT( -0.275936, 0.417044, -0.312007 ) DX3DVNORM( -0.463861, 0.708745, -0.53152 )  //40
DX3DVERT( -0.296388, 0.228495, -0.270544 ) DX3DVNORM( -0.754211, 0.355824, -0.551865 )  //41
DX3DVERT( -0.298142, 0.292705, -0.202612 ) DX3DVNORM( -0.789321, 0.526523, -0.315825 )  //42
DX3DVERT( -0.250443, 0.290556, 0.261672 ) DX3DVNORM( -0.546799, 0.628701, 0.552942 )  //43
DX3DVERT( -0.265005, 0.213309, 0.312284 ) DX3DVNORM( -0.569911, 0.408654, 0.712884 )  //44
DX3DVERT( -0.195964, 0.185043, 0.370967 ) DX3DVNORM( -0.472822, 0.338539, 0.81353 )  //45
DX3DVERT( -0.154921, 0.390076, 0.407588 ) DX3DVNORM( -0.255718, 0.670373, 0.696569 )  //46
DX3DVERT( -0.121313, 0.15148, 0.419031 ) DX3DVNORM( -0.201576, 0.241953, 0.949119 )  //47
DX3DVERT( -0.0419565, 0.200848, 0.416553 ) DX3DVNORM( -0.0130219, 0.260708, 0.96533 )  //48
DX3DVERT( 0.0465574, 0.225995, 0.400012 ) DX3DVNORM( 0.133263, 0.410589, 0.90203 )  //49
DX3DVERT( 0.061681, 0.299406, 0.341776 ) DX3DVNORM( 0.192767, 0.642097, 0.741992 )  //50
DX3DVERT( 0.389557, 0.151031, -0.202612 ) DX3DVNORM( 0.852758, 0.287826, -0.435843 )  //51
DX3DVERT( 0.351885, 0.288205, -0.348825 ) DX3DVNORM( 0.616606, 0.503969, -0.604824 )  //52
DX3DVERT( 0.362567, 0.0927429, -0.270544 ) DX3DVNORM( 0.788079, 0.128223, -0.602072 )  //53
DX3DVERT( 0.299438, 0.118094, -0.334675 ) DX3DVNORM( 0.628205, 0.16297, -0.760789 )  //54
DX3DVERT( 0.222466, 0.153026, -0.374622 ) DX3DVNORM( 0.428411, 0.237241, -0.871883 )  //55
DX3DVERT( 0.189152, 0.237262, -0.35149 ) DX3DVNORM( 0.327245, 0.491229, -0.80722 )  //56
DX3DVERT( 0.286208, 0.300021, 0.356512 ) DX3DVNORM( 0.508027, 0.545225, 0.666812 )  //57
DX3DVERT( 0.117925, 0.16791, 0.416553 ) DX3DVNORM( 0.177635, 0.293589, 0.939283 )  //58
DX3DVERT( 0.171307, 0.0911973, 0.419031 ) DX3DVNORM( 0.338147, 0.163382, 0.926803 )  //59
DX3DVERT( 0.253145, 0.0925215, 0.370967 ) DX3DVNORM( 0.569505, 0.144609, 0.809167 )  //60
DX3DVERT( 0.327737, 0.0911973, 0.312284 ) DX3DVNORM( 0.648238, 0.157953, 0.744875 )  //61
DX3DVERT( 0.344892, 0.16791, 0.261672 ) DX3DVNORM( 0.742233, 0.357293, 0.566949 )  //62
DX3DVERT( -0.347916, 0.149703, -0.258461 ) DX3DVNORM( -0.778418, 0.327464, -0.535568 )  //63
DX3DVERT( -0.476162, 0.222295, -0.103697 ) DX3DVNORM( -0.879202, 0.427727, -0.20989 )  //64
DX3DVERT( -0.389486, 0.066626, -0.238981 ) DX3DVNORM( -0.835599, 0.19776, -0.512508 )  //65
DX3DVERT( -0.433219, 0.0578456, -0.156816 ) DX3DVNORM( -0.937404, 0.154784, -0.311955 )  //66
DX3DVERT( -0.455418, 0.0293689, -0.0705782 ) DX3DVNORM( -0.983776, 0.113393, -0.139017 )  //67
DX3DVERT( -0.449108, 0.0925215, 0 ) DX3DVNORM( -0.976313, 0.215284, -0.0215861 )  //68
DX3DVERT( -0.429944, 0.153026, 0.0705782 ) DX3DVNORM( -0.968097, 0.246553, 0.0447119 )  //69
DX3DVERT( -0.396258, 0.237262, 0.0479903 ) DX3DVNORM( -0.873993, 0.481816, -0.0631583 )  //70
DX3DVERT( 0.0281949, 0.230192, -0.52532 ) DX3DVNORM( 0.0601402, 0.412601, -0.908925 )  //71
DX3DVERT( 0.163733, 0.0925215, -0.418199 ) DX3DVNORM( 0.385146, 0.150729, -0.910463 )  //72
DX3DVERT( 0.100313, 0.0293689, -0.449806 ) DX3DVNORM( 0.244747, 0.0258902, -0.969241 )  //73
DX3DVERT( 0.0119167, 0.0578456, -0.460574 ) DX3DVNORM( -0.00532741, 0.0298166, -0.999541 )  //74
DX3DVERT( -0.0805368, 0.066626, -0.449806 ) DX3DVNORM( -0.233536, 0.116644, -0.965326 )  //75
DX3DVERT( -0.113832, 0.149703, -0.418199 ) DX3DVNORM( -0.332075, 0.274955, -0.902289 )  //76
DX3DVERT( -0.474495, 0.31417, 0.195493 ) DX3DVNORM( -0.787594, 0.521872, 0.327635 )  //77
DX3DVERT( -0.420808, 0.118094, 0.156816 ) DX3DVNORM( -0.946861, 0.151773, 0.283582 )  //78
DX3DVERT( -0.384106, 0.0927429, 0.238981 ) DX3DVNORM( -0.861379, 0.112265, 0.495402 )  //79
DX3DVERT( -0.330689, 0.151031, 0.288879 ) DX3DVNORM( -0.717152, 0.290019, 0.633705 )  //80
DX3DVERT( 0.457769, 0.0613228, 0.0479903 ) DX3DVNORM( 0.996165, 0.0819691, -0.0306052 )  //81
DX3DVERT( 0.455418, -0.0293689, 0.0705782 ) DX3DVNORM( 0.990028, -0.140317, 0.0124462 )  //82
DX3DVERT( 0.449108, -0.0925215, 1.86265e-009 ) DX3DVNORM( 0.98372, -0.171313, -0.0542753 )  //83
DX3DVERT( 0.519873, 0.0276871, -0.17177 ) DX3DVNORM( 0.955559, 0.0573754, -0.289163 )  //84
DX3DVERT( 0.429944, -0.153026, -0.0705782 ) DX3DVNORM( 0.948008, -0.279809, -0.15162 )  //85
DX3DVERT( 0.420808, -0.118094, -0.156816 ) DX3DVNORM( 0.90668, -0.238295, -0.348062 )  //86
DX3DVERT( 0.384106, -0.0927429, -0.238981 ) DX3DVNORM( 0.832456, -0.170723, -0.527135 )  //87
DX3DVERT( 0.378757, 0, -0.258461 ) DX3DVNORM( 0.815389, -0.0167375, -0.578672 )  //88
DX3DVERT( 0.363457, 0.008029, 0.288879 ) DX3DVNORM( 0.707683, -0.0883075, 0.700989 )  //89
DX3DVERT( 0.389486, -0.066626, 0.238981 ) DX3DVNORM( 0.77297, -0.28729, 0.565668 )  //90
DX3DVERT( 0.433219, -0.0578456, 0.156816 ) DX3DVNORM( 0.918468, -0.268124, 0.290735 )  //91
DX3DVERT( 0.532749, 0.0405215, 0.217148 ) DX3DVNORM( 0.922617, 0.0777809, 0.377794 )  //92
DX3DVERT( -0.313375, 0.0599874, -0.445355 ) DX3DVNORM( -0.567221, 0.126247, -0.813832 )  //93
DX3DVERT( -0.13649, -0.008029, -0.44376 ) DX3DVNORM( -0.304921, -0.0312451, -0.951865 )  //94
DX3DVERT( -0.171307, -0.0911973, -0.419031 ) DX3DVNORM( -0.421913, -0.241613, -0.873849 )  //95
DX3DVERT( -0.253145, -0.0925215, -0.370967 ) DX3DVNORM( -0.549726, -0.262865, -0.792908 )  //96
DX3DVERT( -0.327737, -0.0911973, -0.312284 ) DX3DVNORM( -0.680876, -0.236211, -0.693263 )  //97
DX3DVERT( -0.363457, -0.008029, -0.288879 ) DX3DVNORM( -0.789441, -0.0293503, -0.613124 )  //98
DX3DVERT( -0.122203, 0.0613228, 0.44376 ) DX3DVNORM( -0.122459, 0.148029, 0.981372 )  //99
DX3DVERT( -0.100313, -0.0293689, 0.449806 ) DX3DVNORM( -0.154009, -0.00807346, 0.988037 )  //100
DX3DVERT( -0.0119167, -0.0578456, 0.460574 ) DX3DVNORM( -0.00448796, 0.00825546, 0.999956 )  //101
DX3DVERT( 0.0166055, 0.0806046, 0.46235 ) DX3DVNORM( 0.0353596, 0.171639, 0.984525 )  //102
DX3DVERT( 0.0805368, -0.066626, 0.449806 ) DX3DVNORM( 0.191992, -0.0934214, 0.97694 )  //103
DX3DVERT( 0.13649, 0.008029, 0.44376 ) DX3DVNORM( 0.242605, 0.0498373, 0.968844 )  //104
DX3DVERT( -0.378757, 0, 0.258461 ) DX3DVNORM( -0.874652, -0.0261688, 0.484045 )  //105
DX3DVERT( -0.362567, -0.0927429, 0.270544 ) DX3DVNORM( -0.834679, -0.173073, 0.522835 )  //106
DX3DVERT( -0.299438, -0.118094, 0.334675 ) DX3DVNORM( -0.667533, -0.301177, 0.680949 )  //107
DX3DVERT( -0.359285, 0.012005, 0.445866 ) DX3DVNORM( -0.614267, 0.0332232, 0.788398 )  //108
DX3DVERT( -0.222466, -0.153026, 0.374622 ) DX3DVNORM( -0.463193, -0.348573, 0.814831 )  //109
DX3DVERT( -0.163733, -0.0925215, 0.418199 ) DX3DVNORM( -0.353075, -0.229811, 0.906932 )  //110
DX3DVERT( 0.330689, -0.151031, -0.288879 ) DX3DVNORM( 0.708426, -0.337743, -0.619727 )  //111
DX3DVERT( 0.265005, -0.213309, -0.312284 ) DX3DVNORM( 0.487461, -0.503898, -0.71307 )  //112
DX3DVERT( 0.195964, -0.185043, -0.370967 ) DX3DVNORM( 0.385665, -0.479058, -0.788521 )  //113
DX3DVERT( 0.331001, -0.0769455, -0.445969 ) DX3DVNORM( 0.586559, -0.119048, -0.801109 )  //114
DX3DVERT( 0.121313, -0.15148, -0.419031 ) DX3DVNORM( 0.262503, -0.374269, -0.88939 )  //115
DX3DVERT( 0.122203, -0.0613228, -0.44376 ) DX3DVNORM( 0.234575, -0.151357, -0.960242 )  //116
DX3DVERT( 0.305683, -0.0949259, 0.404035 ) DX3DVNORM( 0.576677, -0.173751, 0.798282 )  //117
DX3DVERT( 0.113832, -0.149703, 0.418199 ) DX3DVNORM( 0.288153, -0.310923, 0.905701 )  //118
DX3DVERT( 0.143869, -0.228495, 0.374622 ) DX3DVNORM( 0.315204, -0.446122, 0.837628 )  //119
DX3DVERT( 0.22838, -0.22683, 0.334675 ) DX3DVNORM( 0.507411, -0.461769, 0.727533 )  //120
DX3DVERT( 0.296388, -0.228495, 0.270544 ) DX3DVNORM( 0.661392, -0.458568, 0.593528 )  //121
DX3DVERT( 0.347916, -0.149703, 0.258461 ) DX3DVNORM( 0.751116, -0.318798, 0.578094 )  //122
DX3DVERT( -0.344892, -0.16791, -0.261672 ) DX3DVNORM( -0.728323, -0.388604, -0.564387 )  //123
DX3DVERT( -0.502468, -0.101858, -0.19422 ) DX3DVNORM( -0.9145, -0.183434, -0.360614 )  //124
DX3DVERT( -0.355507, -0.225995, -0.189186 ) DX3DVNORM( -0.741909, -0.551947, -0.380692 )  //125
DX3DVERT( -0.40318, -0.200848, -0.112795 ) DX3DVNORM( -0.856931, -0.477269, -0.194638 )  //126
DX3DVERT( -0.434418, -0.15148, -0.0398036 ) DX3DVNORM( -0.924311, -0.379428, -0.0410262 )  //127
DX3DVERT( -0.457769, -0.0613228, -0.0479903 ) DX3DVNORM( -0.984993, -0.136892, -0.105116 )  //128
DX3DVERT( -0.416878, -0.185043, 0.0472323 ) DX3DVNORM( -0.903655, -0.417297, 0.0962892 )  //129
DX3DVERT( -0.548345, -0.0436062, 0.102161 ) DX3DVNORM( -0.977186, -0.076362, 0.198182 )  //130
DX3DVERT( -0.387405, -0.213309, 0.132916 ) DX3DVNORM( -0.879758, -0.428001, 0.206978 )  //131
DX3DVERT( -0.389557, -0.151031, 0.202612 ) DX3DVNORM( -0.879963, -0.284515, 0.380417 )  //132
DX3DVERT( -0.0362955, -0.10586, -0.52191 ) DX3DVNORM( -0.0605335, -0.192244, -0.979478 )  //133
DX3DVERT( 0.0419565, -0.200848, -0.416553 ) DX3DVNORM( 0.0835649, -0.457497, -0.885276 )  //134
DX3DVERT( -0.0465574, -0.225995, -0.400012 ) DX3DVNORM( -0.133804, -0.538913, -0.831666 )  //135
DX3DVERT( -0.117925, -0.16791, -0.416553 ) DX3DVNORM( -0.29712, -0.399753, -0.867132 )  //136
DX3DVERT( 0.396258, -0.237262, -0.0479903 ) DX3DVNORM( 0.846739, -0.515825, -0.130224 )  //137
DX3DVERT( 0.339173, -0.310849, -0.0398036 ) DX3DVNORM( 0.682143, -0.728861, -0.0586729 )  //138
DX3DVERT( 0.290966, -0.34385, -0.112795 ) DX3DVNORM( 0.582048, -0.783149, -0.218858 )  //139
DX3DVERT( 0.418834, -0.292554, -0.227408 ) DX3DVNORM( 0.750764, -0.522076, -0.40471 )  //140
DX3DVERT( 0.237236, -0.348106, -0.189186 ) DX3DVNORM( 0.431377, -0.79443, -0.427544 )  //141
DX3DVERT( 0.250443, -0.290556, -0.261672 ) DX3DVNORM( 0.452975, -0.651905, -0.608139 )  //142
DX3DVERT( 0.487039, -0.261735, 0.0973311 ) DX3DVNORM( 0.866217, -0.461694, 0.191068 )  //143
DX3DVERT( 0.298142, -0.292705, 0.202612 ) DX3DVNORM( 0.641555, -0.643683, 0.417227 )  //144
DX3DVERT( 0.27155, -0.349061, 0.132916 ) DX3DVNORM( 0.593677, -0.775456, 0.214978 )  //145
DX3DVERT( 0.309795, -0.334746, 0.0472323 ) DX3DVNORM( 0.629593, -0.774422, 0.0623112 )  //146
DX3DVERT( -0.265997, -0.309554, -0.354413 ) DX3DVNORM( -0.486229, -0.560894, -0.670059 )  //147
DX3DVERT( -0.061681, -0.299406, -0.341776 ) DX3DVNORM( -0.162886, -0.655427, -0.737484 )  //148
DX3DVERT( -0.0750391, -0.364247, -0.273757 ) DX3DVNORM( -0.184613, -0.831958, -0.523225 )  //149
DX3DVERT( -0.159249, -0.368504, -0.233369 ) DX3DVNORM( -0.274905, -0.877599, -0.392744 )  //150
DX3DVERT( -0.227559, -0.364247, -0.169679 ) DX3DVNORM( -0.446461, -0.836501, -0.317708 )  //151
DX3DVERT( -0.295766, -0.299406, -0.182038 ) DX3DVNORM( -0.661304, -0.664174, -0.348641 )  //152
DX3DVERT( -0.0742078, -0.241729, 0.481719 ) DX3DVNORM( -0.121791, -0.446078, 0.886669 )  //153
DX3DVERT( -0.189152, -0.237262, 0.35149 ) DX3DVNORM( -0.421561, -0.510756, 0.749276 )  //154
DX3DVERT( -0.160718, -0.310849, 0.301319 ) DX3DVNORM( -0.307508, -0.708865, 0.634783 )  //155
DX3DVERT( -0.0689615, -0.334746, 0.305694 ) DX3DVNORM( -0.164675, -0.753928, 0.635984 )  //156
DX3DVERT( 0.0247683, -0.349061, 0.301319 ) DX3DVNORM( -0.0203233, -0.764442, 0.644372 )  //157
DX3DVERT( 0.0799729, -0.292705, 0.35149 ) DX3DVNORM( 0.146492, -0.63171, 0.761237 )  //158
DX3DVERT( -0.334967, -0.290556, 0.137807 ) DX3DVNORM( -0.737385, -0.629182, 0.245752 )  //159
DX3DVERT( -0.262655, -0.348106, 0.151936 ) DX3DVNORM( -0.529262, -0.799524, 0.283978 )  //160
DX3DVERT( -0.21111, -0.34385, 0.229819 ) DX3DVNORM( -0.430137, -0.778898, 0.4564 )  //161
DX3DVERT( -0.383558, -0.284547, 0.283397 ) DX3DVNORM( -0.684297, -0.512911, 0.518324 )  //162
DX3DVERT( 0.153343, -0.391927, -0.182038 ) DX3DVNORM( 0.311532, -0.847789, -0.429188 )  //163
DX3DVERT( 0.0650617, -0.424531, -0.169679 ) DX3DVNORM( 0.0470982, -0.927111, -0.371815 )  //164
DX3DVERT( 0.000631874, -0.401441, -0.233369 ) DX3DVNORM( -0.0996049, -0.910608, -0.401088 )  //165
DX3DVERT( 0.0951519, -0.376648, -0.373317 ) DX3DVNORM( 0.193397, -0.69333, -0.694184 )  //166
DX3DVERT( 0.199611, -0.414417, 0.281606 ) DX3DVNORM( 0.373612, -0.760341, 0.531314 )  //167
DX3DVERT( 0.0580146, -0.399292, 0.229819 ) DX3DVNORM( 0.0599385, -0.889033, 0.453902 )  //168
DX3DVERT( 0.10368, -0.423575, 0.151936 ) DX3DVNORM( 0.163424, -0.951324, 0.261296 )  //169
DX3DVERT( 0.192851, -0.399292, 0.137807 ) DX3DVNORM( 0.403862, -0.885721, 0.228896 )  //170
DX3DVERT( -0.217538, -0.401441, -0.0844916 ) DX3DVNORM( -0.362003, -0.906116, -0.218876 )  //171
DX3DVERT( -0.18172, -0.424531, -0.00127658 ) DX3DVNORM( -0.361986, -0.928709, -0.0804106 )  //172
DX3DVERT( -0.225414, -0.391927, 0.0764233 ) DX3DVNORM( -0.491648, -0.853951, 0.170439 )  //173
DX3DVERT( -0.403561, -0.366461, 0.00834245 ) DX3DVNORM( -0.737143, -0.675722, -0.00441545 )  //174
DX3DVERT( 0.193843, -0.508247, -0.0451285 ) DX3DVNORM( 0.370036, -0.926338, -0.0705125 )  //175
DX3DVERT( 0.0521507, -0.449109, 0.0764233 ) DX3DVNORM( 0.0869289, -0.982627, 0.163976 )  //176
DX3DVERT( -0.000871104, -0.461788, -0.00127658 ) DX3DVNORM( -0.0635393, -0.995689, -0.0675676 )  //177
DX3DVERT( 0.0411556, -0.454735, -0.0844916 ) DX3DVNORM( -0.07364, -0.966664, -0.245231 )  //178
DX3DVERT( -0.0908674, -0.44108, -0.13316 ) DX3DVNORM( -0.193493, -0.939234, -0.28355 )  //179
DX3DVERT( -0.0936806, -0.454735, 0.00751968 ) DX3DVNORM( -0.2034, -0.969434, -0.13721 )  //180
DX3DVERT( -0.11512, -0.49815, 0.164475 ) DX3DVNORM( -0.205023, -0.92345, 0.324354 )  //181
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_TogeChan___mTogeChan_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_TogeChan___mTogeChan_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 182 )
DX3DVERTEX_END


#else
#define vertex_TogeChan___mTogeChan_0	NULL
#define vertexbuff_TogeChan___mTogeChan_0	NULL
#endif




#if ((PT_TogeChan___mTogeChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_TogeChan___mTogeChan_0 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_TogeChan___mTogeChan_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	2, 4, 3, // 2 8
	4, 5, 3, // 3 11
	5, 6, 3, // 4 14
	6, 7, 3, // 5 17
	7, 8, 3, // 6 20
	8, 9, 3, // 7 23
	9, 10, 3, // 8 26
	10, 11, 3, // 9 29
	11, 12, 3, // 10 32
	12, 0, 3, // 11 35
	11, 10, 14, // 12 38
	10, 13, 14, // 13 41
	13, 15, 14, // 14 44
	15, 16, 14, // 15 47
	16, 17, 14, // 16 50
	17, 18, 14, // 17 53
	18, 19, 14, // 18 56
	19, 20, 14, // 19 59
	20, 21, 14, // 20 62
	21, 22, 14, // 21 65
	22, 12, 14, // 22 68
	12, 11, 14, // 23 71
	23, 24, 26, // 24 74
	24, 25, 26, // 25 77
	25, 27, 26, // 26 80
	27, 28, 26, // 27 83
	28, 1, 26, // 28 86
	1, 0, 26, // 29 89
	0, 12, 26, // 30 92
	12, 22, 26, // 31 95
	22, 21, 26, // 32 98
	21, 23, 26, // 33 101
	29, 30, 32, // 34 104
	30, 31, 32, // 35 107
	31, 33, 32, // 36 110
	33, 34, 32, // 37 113
	34, 35, 32, // 38 116
	35, 36, 32, // 39 119
	36, 4, 32, // 40 122
	4, 2, 32, // 41 125
	2, 1, 32, // 42 128
	1, 28, 32, // 43 131
	28, 27, 32, // 44 134
	27, 29, 32, // 45 137
	37, 38, 40, // 46 140
	38, 39, 40, // 47 143
	39, 41, 40, // 48 146
	41, 42, 40, // 49 149
	42, 15, 40, // 50 152
	15, 13, 40, // 51 155
	13, 10, 40, // 52 158
	10, 9, 40, // 53 161
	9, 8, 40, // 54 164
	8, 37, 40, // 55 167
	43, 44, 46, // 56 170
	44, 45, 46, // 57 173
	45, 47, 46, // 58 176
	47, 48, 46, // 59 179
	48, 49, 46, // 60 182
	49, 50, 46, // 61 185
	50, 24, 46, // 62 188
	24, 23, 46, // 63 191
	23, 21, 46, // 64 194
	21, 20, 46, // 65 197
	20, 19, 46, // 66 200
	19, 43, 46, // 67 203
	36, 35, 52, // 68 206
	35, 51, 52, // 69 209
	51, 53, 52, // 70 212
	53, 54, 52, // 71 215
	54, 55, 52, // 72 218
	55, 56, 52, // 73 221
	56, 6, 52, // 74 224
	6, 5, 52, // 75 227
	5, 4, 52, // 76 230
	4, 36, 52, // 77 233
	25, 24, 57, // 78 236
	24, 50, 57, // 79 239
	50, 49, 57, // 80 242
	49, 58, 57, // 81 245
	58, 59, 57, // 82 248
	59, 60, 57, // 83 251
	60, 61, 57, // 84 254
	61, 62, 57, // 85 257
	62, 30, 57, // 86 260
	30, 29, 57, // 87 263
	29, 27, 57, // 88 266
	27, 25, 57, // 89 269
	42, 41, 64, // 90 272
	41, 63, 64, // 91 275
	63, 65, 64, // 92 278
	65, 66, 64, // 93 281
	66, 67, 64, // 94 284
	67, 68, 64, // 95 287
	68, 69, 64, // 96 290
	69, 70, 64, // 97 293
	70, 17, 64, // 98 296
	17, 16, 64, // 99 299
	16, 15, 64, // 100 302
	15, 42, 64, // 101 305
	7, 6, 71, // 102 308
	6, 56, 71, // 103 311
	56, 55, 71, // 104 314
	55, 72, 71, // 105 317
	72, 73, 71, // 106 320
	73, 74, 71, // 107 323
	74, 75, 71, // 108 326
	75, 76, 71, // 109 329
	76, 38, 71, // 110 332
	38, 37, 71, // 111 335
	37, 8, 71, // 112 338
	8, 7, 71, // 113 341
	18, 17, 77, // 114 344
	17, 70, 77, // 115 347
	70, 69, 77, // 116 350
	69, 78, 77, // 117 353
	78, 79, 77, // 118 356
	79, 80, 77, // 119 359
	80, 44, 77, // 120 362
	44, 43, 77, // 121 365
	43, 19, 77, // 122 368
	19, 18, 77, // 123 371
	81, 82, 84, // 124 374
	82, 83, 84, // 125 377
	83, 85, 84, // 126 380
	85, 86, 84, // 127 383
	86, 87, 84, // 128 386
	87, 88, 84, // 129 389
	88, 53, 84, // 130 392
	53, 51, 84, // 131 395
	51, 35, 84, // 132 398
	35, 34, 84, // 133 401
	34, 33, 84, // 134 404
	33, 81, 84, // 135 407
	89, 90, 92, // 136 410
	90, 91, 92, // 137 413
	91, 82, 92, // 138 416
	82, 81, 92, // 139 419
	81, 33, 92, // 140 422
	33, 31, 92, // 141 425
	31, 30, 92, // 142 428
	30, 62, 92, // 143 431
	62, 61, 92, // 144 434
	61, 89, 92, // 145 437
	39, 38, 93, // 146 440
	38, 76, 93, // 147 443
	76, 75, 93, // 148 446
	75, 94, 93, // 149 449
	94, 95, 93, // 150 452
	95, 96, 93, // 151 455
	96, 97, 93, // 152 458
	97, 98, 93, // 153 461
	98, 65, 93, // 154 464
	65, 63, 93, // 155 467
	63, 41, 93, // 156 470
	41, 39, 93, // 157 473
	99, 100, 102, // 158 476
	100, 101, 102, // 159 479
	101, 103, 102, // 160 482
	103, 104, 102, // 161 485
	104, 59, 102, // 162 488
	59, 58, 102, // 163 491
	58, 49, 102, // 164 494
	49, 48, 102, // 165 497
	48, 47, 102, // 166 500
	47, 99, 102, // 167 503
	105, 106, 108, // 168 506
	106, 107, 108, // 169 509
	107, 109, 108, // 170 512
	109, 110, 108, // 171 515
	110, 100, 108, // 172 518
	100, 99, 108, // 173 521
	99, 47, 108, // 174 524
	47, 45, 108, // 175 527
	45, 44, 108, // 176 530
	44, 80, 108, // 177 533
	80, 79, 108, // 178 536
	79, 105, 108, // 179 539
	111, 112, 114, // 180 542
	112, 113, 114, // 181 545
	113, 115, 114, // 182 548
	115, 116, 114, // 183 551
	116, 73, 114, // 184 554
	73, 72, 114, // 185 557
	72, 55, 114, // 186 560
	55, 54, 114, // 187 563
	54, 53, 114, // 188 566
	53, 88, 114, // 189 569
	88, 87, 114, // 190 572
	87, 111, 114, // 191 575
	60, 59, 117, // 192 578
	59, 104, 117, // 193 581
	104, 103, 117, // 194 584
	103, 118, 117, // 195 587
	118, 119, 117, // 196 590
	119, 120, 117, // 197 593
	120, 121, 117, // 198 596
	121, 122, 117, // 199 599
	122, 90, 117, // 200 602
	90, 89, 117, // 201 605
	89, 61, 117, // 202 608
	61, 60, 117, // 203 611
	98, 97, 124, // 204 614
	97, 123, 124, // 205 617
	123, 125, 124, // 206 620
	125, 126, 124, // 207 623
	126, 127, 124, // 208 626
	127, 128, 124, // 209 629
	128, 67, 124, // 210 632
	67, 66, 124, // 211 635
	66, 65, 124, // 212 638
	65, 98, 124, // 213 641
	128, 127, 130, // 214 644
	127, 129, 130, // 215 647
	129, 131, 130, // 216 650
	131, 132, 130, // 217 653
	132, 106, 130, // 218 656
	106, 105, 130, // 219 659
	105, 79, 130, // 220 662
	79, 78, 130, // 221 665
	78, 69, 130, // 222 668
	69, 68, 130, // 223 671
	68, 67, 130, // 224 674
	67, 128, 130, // 225 677
	74, 73, 133, // 226 680
	73, 116, 133, // 227 683
	116, 115, 133, // 228 686
	115, 134, 133, // 229 689
	134, 135, 133, // 230 692
	135, 136, 133, // 231 695
	136, 95, 133, // 232 698
	95, 94, 133, // 233 701
	94, 75, 133, // 234 704
	75, 74, 133, // 235 707
	137, 138, 140, // 236 710
	138, 139, 140, // 237 713
	139, 141, 140, // 238 716
	141, 142, 140, // 239 719
	142, 112, 140, // 240 722
	112, 111, 140, // 241 725
	111, 87, 140, // 242 728
	87, 86, 140, // 243 731
	86, 85, 140, // 244 734
	85, 137, 140, // 245 737
	91, 90, 143, // 246 740
	90, 122, 143, // 247 743
	122, 121, 143, // 248 746
	121, 144, 143, // 249 749
	144, 145, 143, // 250 752
	145, 146, 143, // 251 755
	146, 138, 143, // 252 758
	138, 137, 143, // 253 761
	137, 85, 143, // 254 764
	85, 83, 143, // 255 767
	83, 82, 143, // 256 770
	82, 91, 143, // 257 773
	96, 95, 147, // 258 776
	95, 136, 147, // 259 779
	136, 135, 147, // 260 782
	135, 148, 147, // 261 785
	148, 149, 147, // 262 788
	149, 150, 147, // 263 791
	150, 151, 147, // 264 794
	151, 152, 147, // 265 797
	152, 125, 147, // 266 800
	125, 123, 147, // 267 803
	123, 97, 147, // 268 806
	97, 96, 147, // 269 809
	101, 100, 153, // 270 812
	100, 110, 153, // 271 815
	110, 109, 153, // 272 818
	109, 154, 153, // 273 821
	154, 155, 153, // 274 824
	155, 156, 153, // 275 827
	156, 157, 153, // 276 830
	157, 158, 153, // 277 833
	158, 119, 153, // 278 836
	119, 118, 153, // 279 839
	118, 103, 153, // 280 842
	103, 101, 153, // 281 845
	159, 160, 162, // 282 848
	160, 161, 162, // 283 851
	161, 155, 162, // 284 854
	155, 154, 162, // 285 857
	154, 109, 162, // 286 860
	109, 107, 162, // 287 863
	107, 106, 162, // 288 866
	106, 132, 162, // 289 869
	132, 131, 162, // 290 872
	131, 159, 162, // 291 875
	163, 164, 166, // 292 878
	164, 165, 166, // 293 881
	165, 149, 166, // 294 884
	149, 148, 166, // 295 887
	148, 135, 166, // 296 890
	135, 134, 166, // 297 893
	134, 115, 166, // 298 896
	115, 113, 166, // 299 899
	113, 112, 166, // 300 902
	112, 142, 166, // 301 905
	142, 141, 166, // 302 908
	141, 163, 166, // 303 911
	120, 119, 167, // 304 914
	119, 158, 167, // 305 917
	158, 157, 167, // 306 920
	157, 168, 167, // 307 923
	168, 169, 167, // 308 926
	169, 170, 167, // 309 929
	170, 145, 167, // 310 932
	145, 144, 167, // 311 935
	144, 121, 167, // 312 938
	121, 120, 167, // 313 941
	171, 172, 174, // 314 944
	172, 173, 174, // 315 947
	173, 160, 174, // 316 950
	160, 159, 174, // 317 953
	159, 131, 174, // 318 956
	131, 129, 174, // 319 959
	129, 127, 174, // 320 962
	127, 126, 174, // 321 965
	126, 125, 174, // 322 968
	125, 152, 174, // 323 971
	152, 151, 174, // 324 974
	151, 171, 174, // 325 977
	139, 138, 175, // 326 980
	138, 146, 175, // 327 983
	146, 145, 175, // 328 986
	145, 170, 175, // 329 989
	170, 169, 175, // 330 992
	169, 176, 175, // 331 995
	176, 177, 175, // 332 998
	177, 178, 175, // 333 1001
	178, 164, 175, // 334 1004
	164, 163, 175, // 335 1007
	163, 141, 175, // 336 1010
	141, 139, 175, // 337 1013
	150, 149, 179, // 338 1016
	149, 165, 179, // 339 1019
	165, 164, 179, // 340 1022
	164, 178, 179, // 341 1025
	178, 177, 179, // 342 1028
	177, 180, 179, // 343 1031
	180, 172, 179, // 344 1034
	172, 171, 179, // 345 1037
	171, 151, 179, // 346 1040
	151, 150, 179, // 347 1043
	156, 155, 181, // 348 1046
	155, 161, 181, // 349 1049
	161, 160, 181, // 350 1052
	160, 173, 181, // 351 1055
	173, 172, 181, // 352 1058
	172, 180, 181, // 353 1061
	180, 177, 181, // 354 1064
	177, 176, 181, // 355 1067
	176, 169, 181, // 356 1070
	169, 168, 181, // 357 1073
	168, 157, 181, // 358 1076
	157, 156, 181, // 359 1079
DX3DINDEX_END
#endif

#else
#define index_TogeChan___mTogeChan_0	NULL
#endif




#if ((PT_TogeChan___mTogeChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_TogeChan___mTogeChan_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_TogeChan___mTogeChan_0_INDEXSTRIP 	NULL
#endif




#if ((PT_TogeChan___mTogeChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_TogeChan___mTogeChan_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_TogeChan___mTogeChan_0_VERTEXSTRIP 	NULL
#define vertexbuff_TogeChan___mTogeChan_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_TogeChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_TogeChan___mFace_1 == PT_TRILIST ) || ((PT_TogeChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_TogeChan___mFace_1 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_TogeChan___mFace_1 )
DX3DVERT( -0.0316991, -0.00461321, 0.465704 ) DX3DVNORM( 5.591e-007, 0, 1 )  //0
DX3DVERT( -0.0316355, -0.0162217, 0.465704 ) DX3DVNORM( 2.7955e-007, 0, 1 )  //1
DX3DVERT( 0.00555604, -0.0172759, 0.465704 ) DX3DVNORM( 1.43917e-007, 0, 1 )  //2
DX3DVERT( 0.00509448, -0.00699332, 0.465704 ) DX3DVNORM( 2.87835e-007, 0, 1 )  //3
DX3DVERT( 0.0449433, -0.00459155, 0.465704 ) DX3DVNORM( -0.00311647, 0.0058389, 0.999978 )  //4
DX3DVERT( 0.0437396, -0.0152077, 0.465704 ) DX3DVNORM( -0.00337114, 0.00297353, 0.99999 )  //5
DX3DVERT( 0.075986, -0.00705856, 0.465926 ) DX3DVNORM( -0.00528294, 0.00553151, 0.999971 )  //6
DX3DVERT( 0.0728688, 0.000340939, 0.465704 ) DX3DVNORM( -0.00693994, 0.0109546, 0.999916 )  //7
DX3DVERT( -0.0981597, -0.00954318, 0.465704 ) DX3DVNORM( 0, 0, 1 )  //8
DX3DVERT( -0.072545, -0.02525, 0.465704 ) DX3DVNORM( 0, 0, 1 )  //9
DX3DVERT( -0.0739667, -0.0065587, 0.465704 ) DX3DVNORM( 1.35632e-007, 0, 1 )  //10
DX3DVERT( -0.102757, 0.000927925, 0.465704 ) DX3DVNORM( 0, 0, 1 )  //11
DX3DVERT( -0.0739351, 0.00213797, 0.465704 ) DX3DVNORM( 2.71265e-007, 0, 1 )  //12
DX3DVERT( 0.103826, 0.00174615, 0.465926 ) DX3DVNORM( -0.00382361, 0.00511595, 0.99998 )  //13
DX3DVERT( 0.0978954, 0.00931305, 0.465926 ) DX3DVNORM( -0.00764707, 0.0102317, 0.999918 )  //14
DX3DVERT( -0.0873716, 0.058773, 0.457878 ) DX3DVNORM( 0, 0, 1 )  //15
DX3DVERT( -0.0805997, 0.052589, 0.457878 ) DX3DVNORM( 0, 0, 1 )  //16
DX3DVERT( -0.0726015, 0.0495923, 0.457878 ) DX3DVNORM( 4.1484e-007, 0, 1 )  //17
DX3DVERT( -0.0711913, 0.0701282, 0.457878 ) DX3DVNORM( 2.0742e-007, 0, 1 )  //18
DX3DVERT( -0.0911286, 0.0677494, 0.457878 ) DX3DVNORM( 0, 0, 1 )  //19
DX3DVERT( 0.0507654, 0.0897486, 0.457878 ) DX3DVNORM( -8.48692e-007, 0, 1 )  //20
DX3DVERT( 0.0443161, 0.0828817, 0.457878 ) DX3DVNORM( -8.48692e-007, 0, 1 )  //21
DX3DVERT( 0.0424243, 0.0749278, 0.457878 ) DX3DVNORM( 7.28422e-008, 0, 1 )  //22
DX3DVERT( 0.0617654, 0.0735912, 0.457878 ) DX3DVNORM( -1.24659e-007, 0, 1 )  //23
DX3DVERT( 0.061713, 0.0929931, 0.457878 ) DX3DVNORM( -7.46506e-007, 0, 1 )  //24
DX3DVERT( -0.0628155, 0.0949646, 0.457878 ) DX3DVNORM( 1.26426e-006, 0, 1 )  //25
DX3DVERT( -0.0660085, 0.0760645, 0.457878 ) DX3DVNORM( 1.38823e-006, 0, 1 )  //26
DX3DVERT( -0.044801, 0.0768847, 0.457878 ) DX3DVNORM( 6.54068e-007, 0, 1 )  //27
DX3DVERT( -0.0483578, 0.08625, 0.457878 ) DX3DVNORM( -1.71627e-006, 0, 1 )  //28
DX3DVERT( -0.054811, 0.0929087, 0.457878 ) DX3DVNORM( -1.71627e-006, 0, 1 )  //29
DX3DVERT( -0.0713632, 0.0761182, 0.457878 ) DX3DVNORM( 1.0612e-006, 0, 1 )  //30
DX3DVERT( -0.0912449, 0.0763996, 0.457878 ) DX3DVNORM( 0, 0, 1 )  //31
DX3DVERT( -0.0451148, 0.0681353, 0.457878 ) DX3DVNORM( 3.10479e-006, 0, 1 )  //32
DX3DVERT( -0.0660315, 0.0702036, 0.457878 ) DX3DVNORM( 1.75981e-006, 0, 1 )  //33
DX3DVERT( -0.0636401, 0.0497694, 0.457878 ) DX3DVNORM( 2.00742e-006, 0, 1 )  //34
DX3DVERT( -0.0525851, 0.0531591, 0.457878 ) DX3DVNORM( 3.18517e-006, 0, 1 )  //35
DX3DVERT( -0.0472273, 0.0609448, 0.457878 ) DX3DVNORM( 3.18517e-006, 0, 1 )  //36
DX3DVERT( 0.0677787, 0.0735912, 0.457878 ) DX3DVNORM( 2.03889e-007, 0, 1 )  //37
DX3DVERT( 0.0697757, 0.09265, 0.457878 ) DX3DVNORM( 4.07778e-007, 0, 1 )  //38
DX3DVERT( 0.062098, 0.0698197, 0.457878 ) DX3DVNORM( 4.97392e-007, 0, 1 )  //39
DX3DVERT( 0.0427905, 0.0666163, 0.457878 ) DX3DVNORM( 2.29306e-006, 0, 1 )  //40
DX3DVERT( 0.0454729, 0.0589382, 0.457878 ) DX3DVNORM( 3.59175e-006, 0, 1 )  //41
DX3DVERT( 0.0523754, 0.0528609, 0.457878 ) DX3DVNORM( 3.59175e-006, 0, 1 )  //42
DX3DVERT( 0.0614588, 0.0496144, 0.457878 ) DX3DVNORM( 4.97596e-007, 0, 1 )  //43
DX3DVERT( 0.0860158, 0.065153, 0.457878 ) DX3DVNORM( 9.4698e-007, 0, 1 )  //44
DX3DVERT( 0.0677016, 0.0698197, 0.457878 ) DX3DVNORM( -1.7565e-007, 0, 1 )  //45
DX3DVERT( 0.0689175, 0.0495864, 0.457878 ) DX3DVNORM( -3.513e-007, 0, 1 )  //46
DX3DVERT( 0.0754499, 0.0509995, 0.457878 ) DX3DVNORM( 1.89396e-006, 0, 1 )  //47
DX3DVERT( 0.0835092, 0.0571269, 0.457878 ) DX3DVNORM( 1.89396e-006, 0, 1 )  //48
DX3DVERT( -0.0339219, -0.0358292, 0.465704 ) DX3DVNORM( 0, 0, 1 )  //49
DX3DVERT( 0.00354181, -0.0397652, 0.465704 ) DX3DVNORM( 0, 0, 1 )  //50
DX3DVERT( 0.0445015, -0.034698, 0.465704 ) DX3DVNORM( -0.00362577, 0.000108185, 0.999993 )  //51
DX3DVERT( 0.074116, -0.0247063, 0.465926 ) DX3DVNORM( -0.00362577, 0.000108185, 0.999993 )  //52
DX3DVERT( -0.0981597, 0.0085099, 0.465704 ) DX3DVNORM( 0, 0, 1 )  //53
DX3DVERT( 0.0961526, -0.0109644, 0.465926 ) DX3DVNORM( 0, 0, 1 )  //54
DX3DVERT( -0.072154, 0.0946001, 0.457878 ) DX3DVNORM( 2.12239e-006, 0, 1 )  //55
DX3DVERT( -0.0811403, 0.0921288, 0.457878 ) DX3DVNORM( 0, 0, 1 )  //56
DX3DVERT( -0.0878175, 0.0863559, 0.457878 ) DX3DVNORM( 0, 0, 1 )  //57
DX3DVERT( 0.0864033, 0.0746579, 0.457878 ) DX3DVNORM( 7.29938e-007, 0, 1 )  //58
DX3DVERT( 0.0834227, 0.0833349, 0.457878 ) DX3DVNORM( 1.45988e-006, 0, 1 )  //59
DX3DVERT( 0.078331, 0.0893732, 0.457878 ) DX3DVNORM( 1.45988e-006, 0, 1 )  //60
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_TogeChan___mFace_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_TogeChan___mFace_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 61 )
DX3DVERTEX_END


#else
#define vertex_TogeChan___mFace_1	NULL
#define vertexbuff_TogeChan___mFace_1	NULL
#endif




#if ((PT_TogeChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_TogeChan___mFace_1 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_TogeChan___mFace_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 5, 7, // 2 8
	5, 6, 7, // 3 11
	8, 9, 11, // 4 14
	9, 10, 11, // 5 17
	12, 10, 0, // 6 20
	10, 1, 0, // 7 23
	3, 2, 4, // 8 26
	2, 5, 4, // 9 29
	7, 6, 14, // 10 32
	6, 13, 14, // 11 35
	15, 16, 19, // 12 38
	16, 17, 18, // 13 41
	16, 18, 19, // 14 44
	20, 21, 24, // 15 47
	21, 22, 23, // 16 50
	21, 23, 24, // 17 53
	25, 26, 29, // 18 56
	26, 27, 28, // 19 59
	26, 28, 29, // 20 62
	19, 18, 31, // 21 65
	18, 30, 31, // 22 68
	32, 33, 36, // 23 71
	33, 34, 35, // 24 74
	33, 35, 36, // 25 77
	24, 23, 38, // 26 80
	23, 37, 38, // 27 83
	39, 40, 43, // 28 86
	40, 41, 42, // 29 89
	40, 42, 43, // 30 92
	44, 45, 48, // 31 95
	45, 46, 47, // 32 98
	45, 47, 48, // 33 101
	2, 1, 50, // 34 104
	1, 49, 50, // 35 107
	6, 5, 52, // 36 110
	5, 51, 52, // 37 113
	11, 10, 53, // 38 116
	10, 12, 53, // 39 119
	1, 10, 49, // 40 122
	10, 9, 49, // 41 125
	5, 2, 51, // 42 128
	2, 50, 51, // 43 131
	13, 6, 54, // 44 134
	6, 52, 54, // 45 137
	18, 17, 33, // 46 140
	17, 34, 33, // 47 143
	55, 30, 25, // 48 146
	30, 26, 25, // 49 149
	27, 26, 32, // 50 152
	26, 33, 32, // 51 155
	31, 30, 57, // 52 158
	30, 55, 56, // 53 161
	30, 56, 57, // 54 164
	26, 30, 33, // 55 167
	30, 18, 33, // 56 170
	38, 37, 60, // 57 173
	37, 58, 59, // 58 176
	37, 59, 60, // 59 179
	46, 45, 43, // 60 182
	45, 39, 43, // 61 185
	23, 22, 39, // 62 188
	22, 40, 39, // 63 191
	37, 23, 45, // 64 194
	23, 39, 45, // 65 197
	58, 37, 44, // 66 200
	37, 45, 44, // 67 203
DX3DINDEX_END
#endif

#else
#define index_TogeChan___mFace_1	NULL
#endif




#if ((PT_TogeChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_TogeChan___mFace_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_TogeChan___mFace_1_INDEXSTRIP 	NULL
#endif




#if ((PT_TogeChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_TogeChan___mFace_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_TogeChan___mFace_1_VERTEXSTRIP 	NULL
#define vertexbuff_TogeChan___mFace_1_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_TogeChan__ )
DX3DMODEL_START( model_TogeChan___mTogeChan_0 )
DX3DMODEL_VERTEX( vertex_TogeChan___mTogeChan_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_TogeChan___mTogeChan_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 1080 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mTogeChan )
DX3DMODEL_END
DX3DMODEL_START( model_TogeChan___mFace_1 )
DX3DMODEL_VERTEX( vertex_TogeChan___mFace_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_TogeChan___mFace_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 204 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mFace )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_TogeChan__, 1516103337 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_TogeChan__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_StarChan__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mStarChan )
DX3DMATERIAL_DIFF( 1, 0.5, 0.5, 0.5 )
DX3DMATERIAL_SPEC( 1, 0, 0, 0 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_StarChan___mStarChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_StarChan___mStarChan_0 == PT_TRILIST ) || ((PT_StarChan___mStarChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_StarChan___mStarChan_0 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_StarChan___mStarChan_0 )
DX3DVERT( 0.233037, 0.308553, 0 ) DX3DVNORM( 0.588187, 0.80872, 0.00263832 )  //0
DX3DVERT( 0.149395, 0.178613, -0.238559 ) DX3DVNORM( 0.304859, 0.41425, -0.857588 )  //1
DX3DVERT( -0.00874582, 0.679185, 0 ) DX3DVNORM( 0.0104166, 0.999944, 0.00163024 )  //2
DX3DVERT( 0.00250851, 0.220039, -0.231368 ) DX3DVNORM( 0.00370323, 0.394058, -0.919078 )  //3
DX3DVERT( -0.237584, 0.314313, 0 ) DX3DVNORM( -0.595896, 0.803057, 0.00272884 )  //4
DX3DVERT( -0.136766, 0.182116, -0.238559 ) DX3DVNORM( -0.302404, 0.410052, -0.86047 )  //5
DX3DVERT( -0.643319, 0.203212, 0 ) DX3DVNORM( -0.952079, 0.305851, 9.76215e-005 )  //6
DX3DVERT( -0.223132, 0.0602843, -0.231368 ) DX3DVNORM( -0.388998, 0.105193, -0.915213 )  //7
DX3DVERT( -0.388493, -0.131494, 0 ) DX3DVNORM( -0.95033, -0.311231, -0.00278604 )  //8
DX3DVERT( -0.228526, -0.0889572, -0.230652 ) DX3DVNORM( -0.474823, -0.185128, -0.86039 )  //9
DX3DVERT( -0.398386, -0.583241, 0 ) DX3DVNORM( -0.477399, -0.87864, -0.00908577 )  //10
DX3DVERT( -0.140923, -0.20368, -0.223462 ) DX3DVNORM( -0.144471, -0.378895, -0.914093 )  //11
DX3DVERT( -0.0111385, -0.412779, -1.49012e-008 ) DX3DVNORM( 0.0168552, -0.999858, -2.40089e-007 )  //12
DX3DVERT( 0.000924563, -0.259992, -0.193757 ) DX3DVNORM( -0.00287864, -0.547713, -0.836662 )  //13
DX3DVERT( 0.425263, -0.593323, -1.49012e-008 ) DX3DVNORM( 0.481059, -0.876647, -0.00849702 )  //14
DX3DVERT( 0.135526, -0.207064, -0.223462 ) DX3DVNORM( 0.100193, -0.395864, -0.912827 )  //15
DX3DVERT( 0.372988, -0.140815, 0 ) DX3DVNORM( 0.947127, -0.320849, -0.00250511 )  //16
DX3DVERT( 0.242401, -0.097302, -0.237247 ) DX3DVNORM( 0.465501, -0.190553, -0.864291 )  //17
DX3DVERT( 0.689374, 0.186899, 0 ) DX3DVNORM( 0.959215, 0.282679, -0.000183495 )  //18
DX3DVERT( 0.224171, 0.0548089, -0.231368 ) DX3DVNORM( 0.36257, 0.119283, -0.924291 )  //19
DX3DVERT( -0.000370041, -0.0151223, -0.299404 ) DX3DVNORM( -0.00693437, -0.0469779, -0.998872 )  //20
DX3DVERT( 0.149395, 0.178613, 0.235923 ) DX3DVNORM( 0.284984, 0.391481, 0.874944 )  //21
DX3DVERT( 0.00250851, 0.220039, 0.231368 ) DX3DVNORM( 0.00295124, 0.353377, 0.935476 )  //22
DX3DVERT( -0.136766, 0.182116, 0.235923 ) DX3DVNORM( -0.283035, 0.386809, 0.87765 )  //23
DX3DVERT( -0.000370041, -0.0151223, 0.266828 ) DX3DVNORM( -0.00584375, -0.0329156, 0.999441 )  //24
DX3DVERT( -0.223132, 0.0602843, 0.231368 ) DX3DVNORM( -0.345417, 0.107913, 0.932224 )  //25
DX3DVERT( -0.228526, -0.0889572, 0.233288 ) DX3DVNORM( -0.445595, -0.165723, 0.879762 )  //26
DX3DVERT( -0.140923, -0.20368, 0.231368 ) DX3DVNORM( -0.112415, -0.349617, 0.930124 )  //27
DX3DVERT( 0.000924563, -0.259992, 0.193757 ) DX3DVNORM( -0.00210409, -0.522545, 0.852609 )  //28
DX3DVERT( 0.135526, -0.207064, 0.231368 ) DX3DVNORM( 0.0680892, -0.366444, 0.927945 )  //29
DX3DVERT( 0.242401, -0.0973019, 0.239883 ) DX3DVNORM( 0.434887, -0.169854, 0.884321 )  //30
DX3DVERT( 0.224171, 0.0548089, 0.231368 ) DX3DVNORM( 0.319002, 0.122471, 0.939808 )  //31
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_StarChan___mStarChan_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_StarChan___mStarChan_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 32 )
DX3DVERTEX_END


#else
#define vertex_StarChan___mStarChan_0	NULL
#define vertexbuff_StarChan___mStarChan_0	NULL
#endif




#if ((PT_StarChan___mStarChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_StarChan___mStarChan_0 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_StarChan___mStarChan_0 )
	0, 1, 2, // 0 2
	2, 1, 3, // 1 5
	4, 5, 6, // 2 8
	6, 5, 7, // 3 11
	8, 9, 10, // 4 14
	10, 9, 11, // 5 17
	12, 13, 14, // 6 20
	14, 13, 15, // 7 23
	16, 17, 18, // 8 26
	18, 17, 19, // 9 29
	5, 3, 20, // 10 32
	3, 1, 20, // 11 35
	9, 7, 20, // 12 38
	7, 5, 20, // 13 41
	13, 11, 20, // 14 44
	11, 9, 20, // 15 47
	17, 15, 20, // 16 50
	15, 13, 20, // 17 53
	1, 19, 20, // 18 56
	19, 17, 20, // 19 59
	21, 22, 24, // 20 62
	22, 23, 24, // 21 65
	23, 25, 24, // 22 68
	25, 26, 24, // 23 71
	26, 27, 24, // 24 74
	27, 28, 24, // 25 77
	28, 29, 24, // 26 80
	29, 30, 24, // 27 83
	30, 31, 24, // 28 86
	31, 21, 24, // 29 89
	3, 5, 2, // 30 92
	2, 5, 4, // 31 95
	4, 23, 2, // 32 98
	2, 23, 22, // 33 101
	22, 21, 2, // 34 104
	2, 21, 0, // 35 107
	7, 9, 6, // 36 110
	6, 9, 8, // 37 113
	8, 26, 6, // 38 116
	6, 26, 25, // 39 119
	25, 23, 6, // 40 122
	6, 23, 4, // 41 125
	11, 13, 10, // 42 128
	10, 13, 12, // 43 131
	12, 28, 10, // 44 134
	10, 28, 27, // 45 137
	27, 26, 10, // 46 140
	10, 26, 8, // 47 143
	15, 17, 14, // 48 146
	14, 17, 16, // 49 149
	16, 30, 14, // 50 152
	14, 30, 29, // 51 155
	29, 28, 14, // 52 158
	14, 28, 12, // 53 161
	19, 1, 18, // 54 164
	18, 1, 0, // 55 167
	0, 21, 18, // 56 170
	18, 21, 31, // 57 173
	31, 30, 18, // 58 176
	18, 30, 16, // 59 179
DX3DINDEX_END
#endif

#else
#define index_StarChan___mStarChan_0	NULL
#endif




#if ((PT_StarChan___mStarChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_StarChan___mStarChan_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_StarChan___mStarChan_0_INDEXSTRIP 	NULL
#endif




#if ((PT_StarChan___mStarChan_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_StarChan___mStarChan_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_StarChan___mStarChan_0_VERTEXSTRIP 	NULL
#define vertexbuff_StarChan___mStarChan_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_StarChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_StarChan___mFace_1 == PT_TRILIST ) || ((PT_StarChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_StarChan___mFace_1 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_StarChan___mFace_1 )
DX3DVERT( -0.0413876, -0.0142954, 0.274924 ) DX3DVNORM( -3.7308e-007, 0, 1 )  //0
DX3DVERT( -0.0413049, -0.0293931, 0.274924 ) DX3DVNORM( -9.82461e-008, 0, 1 )  //1
DX3DVERT( 0.00706533, -0.0307641, 0.274924 ) DX3DVNORM( -1.27499e-007, 0, 1 )  //2
DX3DVERT( 0.00646502, -0.0173909, 0.274924 ) DX3DVNORM( -2.54998e-007, 0, 1 )  //3
DX3DVERT( 0.0582913, -0.0142672, 0.274924 ) DX3DVNORM( -0.00311739, 0.00583931, 0.999978 )  //4
DX3DVERT( 0.0567257, -0.0280744, 0.274924 ) DX3DVNORM( -0.00337151, 0.00297374, 0.99999 )  //5
DX3DVERT( 0.0986645, -0.0174757, 0.275213 ) DX3DVNORM( -0.00528287, 0.00553193, 0.999971 )  //6
DX3DVERT( 0.0946103, -0.0078522, 0.274924 ) DX3DVNORM( -0.00693996, 0.0109555, 0.999916 )  //7
DX3DVERT( -0.127824, -0.0207072, 0.274924 ) DX3DVNORM( -3.80514e-007, 0, 1 )  //8
DX3DVERT( -0.0945106, -0.0411351, 0.274924 ) DX3DVNORM( -1.36692e-008, 0, 1 )  //9
DX3DVERT( -0.0963596, -0.0168257, 0.274924 ) DX3DVNORM( -8.702e-008, 0, 1 )  //10
DX3DVERT( -0.133803, -0.00708874, 0.274924 ) DX3DVNORM( -1.90257e-007, 0, 1 )  //11
DX3DVERT( -0.0963185, -0.00551499, 0.274924 ) DX3DVNORM( -1.60371e-007, 0, 1 )  //12
DX3DVERT( 0.134872, -0.00602466, 0.275213 ) DX3DVNORM( -0.00382276, 0.00511638, 0.99998 )  //13
DX3DVERT( 0.127159, 0.00381656, 0.275213 ) DX3DVNORM( -0.00764536, 0.0102326, 0.999918 )  //14
DX3DVERT( -0.113794, 0.0681427, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //15
DX3DVERT( -0.104986, 0.0601001, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //16
DX3DVERT( -0.094584, 0.0562026, 0.258637 ) DX3DVNORM( -4.1247e-007, 0, 1 )  //17
DX3DVERT( -0.09275, 0.082911, 0.258637 ) DX3DVNORM( 2.96422e-008, 0, 1 )  //18
DX3DVERT( -0.11868, 0.0798173, 0.258637 ) DX3DVNORM( 4.71755e-007, 0, 1 )  //19
DX3DVERT( 0.0658633, 0.108429, 0.258637 ) DX3DVNORM( 1.00349e-006, 0, 1 )  //20
DX3DVERT( 0.0574755, 0.0994978, 0.258637 ) DX3DVNORM( 1.00349e-006, 0, 1 )  //21
DX3DVERT( 0.055015, 0.0891532, 0.258637 ) DX3DVNORM( 5.01744e-007, 0, 1 )  //22
DX3DVERT( 0.0801696, 0.0874149, 0.258637 ) DX3DVNORM( 1.02044e-006, 0, 1 )  //23
DX3DVERT( 0.0801014, 0.112648, 0.258637 ) DX3DVNORM( 4.7e-007, 0, 1 )  //24
DX3DVERT( -0.0818567, 0.115212, 0.258637 ) DX3DVNORM( -2.55697e-007, 0, 1 )  //25
DX3DVERT( -0.0860095, 0.0906316, 0.258637 ) DX3DVNORM( -3.51351e-007, 0, 1 )  //26
DX3DVERT( -0.0584276, 0.0916983, 0.258637 ) DX3DVNORM( -8.90915e-007, 0, 1 )  //27
DX3DVERT( -0.0630534, 0.103879, 0.258637 ) DX3DVNORM( -8.8782e-007, 0, 1 )  //28
DX3DVERT( -0.0714463, 0.112539, 0.258637 ) DX3DVNORM( -8.8782e-007, 0, 1 )  //29
DX3DVERT( -0.0929736, 0.0907014, 0.258637 ) DX3DVNORM( 3.29984e-007, 0, 1 )  //30
DX3DVERT( -0.118831, 0.0910675, 0.258637 ) DX3DVNORM( 4.71755e-007, 0, 1 )  //31
DX3DVERT( -0.0588357, 0.0803191, 0.258637 ) DX3DVNORM( 2.37604e-008, 0, 1 )  //32
DX3DVERT( -0.0860394, 0.083009, 0.258637 ) DX3DVNORM( -1.94355e-007, 0, 1 )  //33
DX3DVERT( -0.0829291, 0.056433, 0.258637 ) DX3DVNORM( 5.8295e-008, 0, 1 )  //34
DX3DVERT( -0.0685513, 0.0608415, 0.258637 ) DX3DVNORM( 9.41531e-007, 0, 1 )  //35
DX3DVERT( -0.0615832, 0.0709674, 0.258637 ) DX3DVNORM( 9.41531e-007, 0, 1 )  //36
DX3DVERT( 0.0879903, 0.0874149, 0.258637 ) DX3DVNORM( 3.45995e-007, 0, 1 )  //37
DX3DVERT( 0.0905875, 0.112202, 0.258637 ) DX3DVNORM( -3.19435e-007, 0, 1 )  //38
DX3DVERT( 0.0806021, 0.0825098, 0.258637 ) DX3DVNORM( 4.1999e-007, 0, 1 )  //39
DX3DVERT( 0.0554914, 0.0783436, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //40
DX3DVERT( 0.0589801, 0.0683577, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //41
DX3DVERT( 0.0679572, 0.0604537, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //42
DX3DVERT( 0.0797708, 0.0562313, 0.258637 ) DX3DVNORM( -7.30891e-007, 0, 1 )  //43
DX3DVERT( 0.111709, 0.0764404, 0.258637 ) DX3DVNORM( -5.59447e-007, 0, 1 )  //44
DX3DVERT( 0.08789, 0.0825098, 0.258637 ) DX3DVNORM( 1.40267e-007, 0, 1 )  //45
DX3DVERT( 0.0894714, 0.0561949, 0.258637 ) DX3DVNORM( -7.30891e-007, 0, 1 )  //46
DX3DVERT( 0.0979672, 0.0580329, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //47
DX3DVERT( 0.108449, 0.0660019, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //48
DX3DVERT( -0.0442785, -0.0548941, 0.274924 ) DX3DVNORM( 1.76588e-007, 0, 1 )  //49
DX3DVERT( 0.00444567, -0.0600131, 0.274924 ) DX3DVNORM( 0, 0, 1 )  //50
DX3DVERT( 0.0577166, -0.0534229, 0.274924 ) DX3DVNORM( -0.00362561, 0.000108193, 0.999993 )  //51
DX3DVERT( 0.0962324, -0.0404278, 0.275213 ) DX3DVNORM( -0.0036256, 0.000108193, 0.999993 )  //52
DX3DVERT( -0.127824, 0.00277209, 0.274924 ) DX3DVNORM( 0, 0, 1 )  //53
DX3DVERT( 0.124893, -0.0225558, 0.275213 ) DX3DVNORM( 0, 0, 1 )  //54
DX3DVERT( -0.0940021, 0.114738, 0.258637 ) DX3DVNORM( 1.88213e-007, 0, 1 )  //55
DX3DVERT( -0.105689, 0.111524, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //56
DX3DVERT( -0.114374, 0.104016, 0.258637 ) DX3DVNORM( 0, 0, 1 )  //57
DX3DVERT( 0.112213, 0.0888023, 0.258637 ) DX3DVNORM( -8.47139e-007, 0, 1 )  //58
DX3DVERT( 0.108336, 0.100087, 0.258637 ) DX3DVNORM( -5.75383e-007, 0, 1 )  //59
DX3DVERT( 0.101714, 0.107941, 0.258637 ) DX3DVNORM( -5.75383e-007, 0, 1 )  //60
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_StarChan___mFace_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_StarChan___mFace_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 61 )
DX3DVERTEX_END


#else
#define vertex_StarChan___mFace_1	NULL
#define vertexbuff_StarChan___mFace_1	NULL
#endif




#if ((PT_StarChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_StarChan___mFace_1 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_StarChan___mFace_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 5, 7, // 2 8
	5, 6, 7, // 3 11
	8, 9, 11, // 4 14
	9, 10, 11, // 5 17
	12, 10, 0, // 6 20
	10, 1, 0, // 7 23
	3, 2, 4, // 8 26
	2, 5, 4, // 9 29
	7, 6, 14, // 10 32
	6, 13, 14, // 11 35
	15, 16, 19, // 12 38
	16, 17, 18, // 13 41
	16, 18, 19, // 14 44
	20, 21, 24, // 15 47
	21, 22, 23, // 16 50
	21, 23, 24, // 17 53
	25, 26, 29, // 18 56
	26, 27, 28, // 19 59
	26, 28, 29, // 20 62
	19, 18, 31, // 21 65
	18, 30, 31, // 22 68
	32, 33, 36, // 23 71
	33, 34, 35, // 24 74
	33, 35, 36, // 25 77
	24, 23, 38, // 26 80
	23, 37, 38, // 27 83
	39, 40, 43, // 28 86
	40, 41, 42, // 29 89
	40, 42, 43, // 30 92
	44, 45, 48, // 31 95
	45, 46, 47, // 32 98
	45, 47, 48, // 33 101
	2, 1, 50, // 34 104
	1, 49, 50, // 35 107
	6, 5, 52, // 36 110
	5, 51, 52, // 37 113
	11, 10, 53, // 38 116
	10, 12, 53, // 39 119
	1, 10, 49, // 40 122
	10, 9, 49, // 41 125
	5, 2, 51, // 42 128
	2, 50, 51, // 43 131
	13, 6, 54, // 44 134
	6, 52, 54, // 45 137
	18, 17, 33, // 46 140
	17, 34, 33, // 47 143
	55, 30, 25, // 48 146
	30, 26, 25, // 49 149
	27, 26, 32, // 50 152
	26, 33, 32, // 51 155
	31, 30, 57, // 52 158
	30, 55, 56, // 53 161
	30, 56, 57, // 54 164
	26, 30, 33, // 55 167
	30, 18, 33, // 56 170
	38, 37, 60, // 57 173
	37, 58, 59, // 58 176
	37, 59, 60, // 59 179
	46, 45, 43, // 60 182
	45, 39, 43, // 61 185
	23, 22, 39, // 62 188
	22, 40, 39, // 63 191
	37, 23, 45, // 64 194
	23, 39, 45, // 65 197
	58, 37, 44, // 66 200
	37, 45, 44, // 67 203
DX3DINDEX_END
#endif

#else
#define index_StarChan___mFace_1	NULL
#endif




#if ((PT_StarChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_StarChan___mFace_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_StarChan___mFace_1_INDEXSTRIP 	NULL
#endif




#if ((PT_StarChan___mFace_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_StarChan___mFace_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_StarChan___mFace_1_VERTEXSTRIP 	NULL
#define vertexbuff_StarChan___mFace_1_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_StarChan__ )
DX3DMODEL_START( model_StarChan___mStarChan_0 )
DX3DMODEL_VERTEX( vertex_StarChan___mStarChan_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_StarChan___mStarChan_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 180 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mStarChan )
DX3DMODEL_END
DX3DMODEL_START( model_StarChan___mFace_1 )
DX3DMODEL_VERTEX( vertex_StarChan___mFace_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_StarChan___mFace_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 204 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mFace )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_StarChan__, 3241762281 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_StarChan__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_SlimeChan__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_mSlimeChan )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 0.25, 0.25, 0.25 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_SlimeChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_SlimeChan___mFace_0 == PT_TRILIST ) || ((PT_SlimeChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_SlimeChan___mFace_0 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_SlimeChan___mFace_0 )
DX3DVERT( -0.0345011, -0.00741339, 0.505937 ) DX3DVNORM( -4.73245e-007, 0, 1 )  //0
DX3DVERT( -0.034432, -0.020031, 0.505937 ) DX3DVNORM( -4.85756e-007, 0, 1 )  //1
DX3DVERT( 0.00599255, -0.0211768, 0.505937 ) DX3DVNORM( -3.70951e-007, 0, 1 )  //2
DX3DVERT( 0.00549085, -0.0100004, 0.505937 ) DX3DVNORM( -2.43636e-007, 0, 1 )  //3
DX3DVERT( 0.0488037, -0.00738981, 0.505937 ) DX3DVNORM( -0.00311693, 0.00583995, 0.999978 )  //4
DX3DVERT( 0.0474953, -0.0189289, 0.505937 ) DX3DVNORM( -0.00337165, 0.00297407, 0.99999 )  //5
DX3DVERT( 0.0825449, -0.0100713, 0.506178 ) DX3DVNORM( -0.00528422, 0.00553253, 0.999971 )  //6
DX3DVERT( 0.0791567, -0.00202857, 0.505937 ) DX3DVNORM( -0.00694194, 0.0109566, 0.999916 )  //7
DX3DVERT( -0.106739, -0.0127719, 0.505937 ) DX3DVNORM( 0, 0, 1 )  //8
DX3DVERT( -0.0788977, -0.0298442, 0.505937 ) DX3DVNORM( 0, 0, 1 )  //9
DX3DVERT( -0.080443, -0.00952807, 0.505937 ) DX3DVNORM( -1.14805e-007, 0, 1 )  //10
DX3DVERT( -0.111736, -0.00139058, 0.505937 ) DX3DVNORM( 0, 0, 1 )  //11
DX3DVERT( -0.0804086, -7.53105e-005, 0.505937 ) DX3DVNORM( -2.29609e-007, 0, 1 )  //12
DX3DVERT( 0.112805, -0.000501305, 0.506178 ) DX3DVNORM( -0.00382515, 0.00511692, 0.99998 )  //13
DX3DVERT( 0.106359, 0.00772336, 0.506178 ) DX3DVNORM( -0.00765014, 0.0102336, 0.999918 )  //14
DX3DVERT( -0.0822569, 0.0614828, 0.495142 ) DX3DVNORM( 0, 0, 1 )  //15
DX3DVERT( -0.0748962, 0.0547613, 0.495142 ) DX3DVNORM( 0, 0, 1 )  //16
DX3DVERT( -0.0662027, 0.0515041, 0.495142 ) DX3DVNORM( -6.06513e-007, 0, 1 )  //17
DX3DVERT( -0.06467, 0.0738252, 0.495142 ) DX3DVNORM( -3.03256e-007, 0, 1 )  //18
DX3DVERT( -0.0863403, 0.0712396, 0.495142 ) DX3DVNORM( 0, 0, 1 )  //19
DX3DVERT( 0.0401025, 0.0951511, 0.495142 ) DX3DVNORM( 3.23266e-006, 0, 1 )  //20
DX3DVERT( 0.0330925, 0.0876873, 0.495142 ) DX3DVNORM( 3.23266e-006, 0, 1 )  //21
DX3DVERT( 0.0310362, 0.0790419, 0.495142 ) DX3DVNORM( 7.74646e-007, 0, 1 )  //22
DX3DVERT( 0.0520587, 0.0775892, 0.495142 ) DX3DVNORM( 8.87254e-007, 0, 1 )  //23
DX3DVERT( 0.0520017, 0.0986777, 0.495142 ) DX3DVNORM( 2.61619e-006, 0, 1 )  //24
DX3DVERT( -0.0555661, 0.10082, 0.495142 ) DX3DVNORM( 9.02126e-007, 0, 1 )  //25
DX3DVERT( -0.0590367, 0.0802775, 0.495142 ) DX3DVNORM( 4.51063e-007, 0, 1 )  //26
DX3DVERT( -0.0359856, 0.0811689, 0.495142 ) DX3DVNORM( 3.63181e-007, 0, 1 )  //27
DX3DVERT( -0.0398515, 0.0913484, 0.495142 ) DX3DVNORM( 7.26362e-007, 0, 1 )  //28
DX3DVERT( -0.0468658, 0.0985859, 0.495142 ) DX3DVNORM( 7.26362e-007, 0, 1 )  //29
DX3DVERT( -0.0648568, 0.0803358, 0.495142 ) DX3DVNORM( -1.02163e-007, 0, 1 )  //30
DX3DVERT( -0.0864668, 0.0806417, 0.495142 ) DX3DVNORM( -7.43271e-007, 0, 1 )  //31
DX3DVERT( -0.0363267, 0.071659, 0.495142 ) DX3DVNORM( -6.74017e-007, 0, 1 )  //32
DX3DVERT( -0.0590617, 0.073907, 0.495142 ) DX3DVNORM( -6.40265e-007, 0, 1 )  //33
DX3DVERT( -0.0564623, 0.0516966, 0.495142 ) DX3DVNORM( -1.28053e-006, 0, 1 )  //34
DX3DVERT( -0.0444463, 0.0553809, 0.495142 ) DX3DVNORM( -1.34803e-006, 0, 1 )  //35
DX3DVERT( -0.0386229, 0.0638435, 0.495142 ) DX3DVNORM( -1.34803e-006, 0, 1 )  //36
DX3DVERT( 0.0585947, 0.0775892, 0.495142 ) DX3DVNORM( 7.05882e-007, 0, 1 )  //37
DX3DVERT( 0.0607653, 0.0983048, 0.495142 ) DX3DVNORM( 1.41176e-006, 0, 1 )  //38
DX3DVERT( 0.0524202, 0.0734898, 0.495142 ) DX3DVNORM( 7.69158e-007, 0, 1 )  //39
DX3DVERT( 0.0314344, 0.070008, 0.495142 ) DX3DVNORM( 6.78421e-007, 0, 1 )  //40
DX3DVERT( 0.0343499, 0.0616624, 0.495142 ) DX3DVNORM( 3.04021e-006, 0, 1 )  //41
DX3DVERT( 0.0418524, 0.0550569, 0.495142 ) DX3DVNORM( 3.04021e-006, 0, 1 )  //42
DX3DVERT( 0.0517254, 0.0515281, 0.495142 ) DX3DVNORM( 2.38e-006, 0, 1 )  //43
DX3DVERT( 0.0784172, 0.0684174, 0.495142 ) DX3DVNORM( -8.01565e-007, 0, 1 )  //44
DX3DVERT( 0.0585109, 0.0734898, 0.495142 ) DX3DVNORM( 2.91643e-008, 0, 1 )  //45
DX3DVERT( 0.0598325, 0.0514976, 0.495142 ) DX3DVNORM( 5.83287e-008, 0, 1 )  //46
DX3DVERT( 0.0669327, 0.0530337, 0.495142 ) DX3DVNORM( -1.60313e-006, 0, 1 )  //47
DX3DVERT( 0.0756927, 0.0596936, 0.495142 ) DX3DVNORM( -1.60313e-006, 0, 1 )  //48
DX3DVERT( -0.0369171, -0.041343, 0.505937 ) DX3DVNORM( -4.98267e-007, 0, 1 )  //49
DX3DVERT( 0.00380322, -0.0456212, 0.505937 ) DX3DVNORM( -4.98267e-007, 0, 1 )  //50
DX3DVERT( 0.0483234, -0.0401135, 0.505937 ) DX3DVNORM( -0.00362632, 0.000108205, 0.999993 )  //51
DX3DVERT( 0.0805123, -0.0292531, 0.506178 ) DX3DVNORM( -0.00362632, 0.000108205, 0.999993 )  //52
DX3DVERT( -0.106739, 0.00685047, 0.505937 ) DX3DVNORM( 0, 0, 1 )  //53
DX3DVERT( 0.104465, -0.0143168, 0.506178 ) DX3DVNORM( 0, 0, 1 )  //54
DX3DVERT( -0.0657164, 0.100424, 0.495142 ) DX3DVNORM( -2.04326e-007, 0, 1 )  //55
DX3DVERT( -0.0754838, 0.0977382, 0.495142 ) DX3DVNORM( -1.48654e-006, 0, 1 )  //56
DX3DVERT( -0.0827415, 0.0914635, 0.495142 ) DX3DVNORM( -1.48654e-006, 0, 1 )  //57
DX3DVERT( 0.0788383, 0.0787486, 0.495142 ) DX3DVNORM( 4.11902e-007, 0, 1 )  //58
DX3DVERT( 0.0755986, 0.0881799, 0.495142 ) DX3DVNORM( 8.23804e-007, 0, 1 )  //59
DX3DVERT( 0.0700642, 0.0947431, 0.495142 ) DX3DVNORM( 8.23804e-007, 0, 1 )  //60
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_SlimeChan___mFace_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_SlimeChan___mFace_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 61 )
DX3DVERTEX_END


#else
#define vertex_SlimeChan___mFace_0	NULL
#define vertexbuff_SlimeChan___mFace_0	NULL
#endif




#if ((PT_SlimeChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_SlimeChan___mFace_0 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_SlimeChan___mFace_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 5, 7, // 2 8
	5, 6, 7, // 3 11
	8, 9, 11, // 4 14
	9, 10, 11, // 5 17
	12, 10, 0, // 6 20
	10, 1, 0, // 7 23
	3, 2, 4, // 8 26
	2, 5, 4, // 9 29
	7, 6, 14, // 10 32
	6, 13, 14, // 11 35
	15, 16, 19, // 12 38
	16, 17, 18, // 13 41
	16, 18, 19, // 14 44
	20, 21, 24, // 15 47
	21, 22, 23, // 16 50
	21, 23, 24, // 17 53
	25, 26, 29, // 18 56
	26, 27, 28, // 19 59
	26, 28, 29, // 20 62
	19, 18, 31, // 21 65
	18, 30, 31, // 22 68
	32, 33, 36, // 23 71
	33, 34, 35, // 24 74
	33, 35, 36, // 25 77
	24, 23, 38, // 26 80
	23, 37, 38, // 27 83
	39, 40, 43, // 28 86
	40, 41, 42, // 29 89
	40, 42, 43, // 30 92
	44, 45, 48, // 31 95
	45, 46, 47, // 32 98
	45, 47, 48, // 33 101
	2, 1, 50, // 34 104
	1, 49, 50, // 35 107
	6, 5, 52, // 36 110
	5, 51, 52, // 37 113
	11, 10, 53, // 38 116
	10, 12, 53, // 39 119
	1, 10, 49, // 40 122
	10, 9, 49, // 41 125
	5, 2, 51, // 42 128
	2, 50, 51, // 43 131
	13, 6, 54, // 44 134
	6, 52, 54, // 45 137
	18, 17, 33, // 46 140
	17, 34, 33, // 47 143
	55, 30, 25, // 48 146
	30, 26, 25, // 49 149
	27, 26, 32, // 50 152
	26, 33, 32, // 51 155
	31, 30, 57, // 52 158
	30, 55, 56, // 53 161
	30, 56, 57, // 54 164
	26, 30, 33, // 55 167
	30, 18, 33, // 56 170
	38, 37, 60, // 57 173
	37, 58, 59, // 58 176
	37, 59, 60, // 59 179
	46, 45, 43, // 60 182
	45, 39, 43, // 61 185
	23, 22, 39, // 62 188
	22, 40, 39, // 63 191
	37, 23, 45, // 64 194
	23, 39, 45, // 65 197
	58, 37, 44, // 66 200
	37, 45, 44, // 67 203
DX3DINDEX_END
#endif

#else
#define index_SlimeChan___mFace_0	NULL
#endif




#if ((PT_SlimeChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_SlimeChan___mFace_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_SlimeChan___mFace_0_INDEXSTRIP 	NULL
#endif




#if ((PT_SlimeChan___mFace_0 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_SlimeChan___mFace_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_SlimeChan___mFace_0_VERTEXSTRIP 	NULL
#define vertexbuff_SlimeChan___mFace_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_SlimeChan___mSlimeChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_SlimeChan___mSlimeChan_1 == PT_TRILIST ) || ((PT_SlimeChan___mSlimeChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP))  || (PT_SlimeChan___mSlimeChan_1 == PT_INDEXSTRIP)


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERT_START( VN, vertexbuff_SlimeChan___mSlimeChan_1 )
DX3DVERT( 0.074389, -0.373686, -0.0241705 ) DX3DVNORM( 0.113459, -0.992858, -0.0368651 )  //0
DX3DVERT( 0.0632791, -0.373686, -0.045975 ) DX3DVNORM( 0.0965143, -0.992858, -0.0701218 )  //1
DX3DVERT( 0.125, -0.359827, -0.0908179 ) DX3DVNORM( 0.193638, -0.970933, -0.140686 )  //2
DX3DVERT( 0.146946, -0.359827, -0.0477458 ) DX3DVNORM( 0.227635, -0.970933, -0.0739628 )  //3
DX3DVERT( 0.045975, -0.373686, -0.0632791 ) DX3DVNORM( 0.0701217, -0.992858, -0.0965142 )  //4
DX3DVERT( 0.0908179, -0.359827, -0.125 ) DX3DVNORM( 0.140686, -0.970933, -0.193638 )  //5
DX3DVERT( 0.0241705, -0.373686, -0.074389 ) DX3DVNORM( 0.0368652, -0.992858, -0.113459 )  //6
DX3DVERT( 0.0477458, -0.359827, -0.146946 ) DX3DVNORM( 0.0739632, -0.970933, -0.227635 )  //7
DX3DVERT( 5.52461e-010, -0.373686, -0.0782173 ) DX3DVNORM( -2.33304e-010, -0.992858, -0.119298 )  //8
DX3DVERT( 1.09132e-009, -0.359827, -0.154509 ) DX3DVNORM( -9.33826e-010, -0.970933, -0.23935 )  //9
DX3DVERT( -0.0241705, -0.373686, -0.074389 ) DX3DVNORM( -0.0368652, -0.992858, -0.113459 )  //10
DX3DVERT( -0.0477458, -0.359827, -0.146946 ) DX3DVNORM( -0.0739632, -0.970933, -0.227635 )  //11
DX3DVERT( -0.045975, -0.373686, -0.0632791 ) DX3DVNORM( -0.0701218, -0.992858, -0.0965138 )  //12
DX3DVERT( -0.0908178, -0.359827, -0.125 ) DX3DVNORM( -0.140686, -0.970933, -0.193638 )  //13
DX3DVERT( -0.0632791, -0.373686, -0.045975 ) DX3DVNORM( -0.0965143, -0.992858, -0.0701219 )  //14
DX3DVERT( -0.125, -0.359827, -0.0908178 ) DX3DVNORM( -0.193638, -0.970933, -0.140686 )  //15
DX3DVERT( -0.074389, -0.373686, -0.0241705 ) DX3DVNORM( -0.113459, -0.992858, -0.036865 )  //16
DX3DVERT( -0.146946, -0.359827, -0.0477458 ) DX3DVNORM( -0.227635, -0.970933, -0.0739633 )  //17
DX3DVERT( -0.0782173, -0.373686, -1.32875e-009 ) DX3DVNORM( -0.119298, -0.992858, -2.33304e-010 )  //18
DX3DVERT( -0.154509, -0.359827, -2.62479e-009 ) DX3DVNORM( -0.23935, -0.970933, -1.86765e-009 )  //19
DX3DVERT( -0.074389, -0.373686, 0.0241705 ) DX3DVNORM( -0.113459, -0.992858, 0.036865 )  //20
DX3DVERT( -0.146946, -0.359827, 0.0477458 ) DX3DVNORM( -0.227635, -0.970933, 0.0739632 )  //21
DX3DVERT( -0.0632791, -0.373686, 0.0459749 ) DX3DVNORM( -0.0965143, -0.992858, 0.0701224 )  //22
DX3DVERT( -0.125, -0.359827, 0.0908178 ) DX3DVNORM( -0.193638, -0.970933, 0.140686 )  //23
DX3DVERT( -0.0459749, -0.373686, 0.0632791 ) DX3DVNORM( -0.0701217, -0.992858, 0.0965143 )  //24
DX3DVERT( -0.0908178, -0.359827, 0.125 ) DX3DVNORM( -0.140686, -0.970933, 0.193638 )  //25
DX3DVERT( -0.0241705, -0.373686, 0.074389 ) DX3DVNORM( -0.0368652, -0.992858, 0.113459 )  //26
DX3DVERT( -0.0477458, -0.359827, 0.146946 ) DX3DVNORM( -0.0739632, -0.970933, 0.227635 )  //27
DX3DVERT( 7.76294e-010, -0.373686, 0.0782172 ) DX3DVNORM( 1.81977e-008, -0.992858, 0.119298 )  //28
DX3DVERT( 1.53347e-009, -0.359827, 0.154509 ) DX3DVNORM( 6.25664e-008, -0.970933, 0.23935 )  //29
DX3DVERT( 0.0241705, -0.373686, 0.074389 ) DX3DVNORM( 0.0368652, -0.992858, 0.113459 )  //30
DX3DVERT( 0.0477458, -0.359827, 0.146946 ) DX3DVNORM( 0.0739633, -0.970933, 0.227635 )  //31
DX3DVERT( 0.0459749, -0.373686, 0.0632791 ) DX3DVNORM( 0.0701218, -0.992858, 0.0965142 )  //32
DX3DVERT( 0.0908178, -0.359827, 0.125 ) DX3DVNORM( 0.140686, -0.970933, 0.193638 )  //33
DX3DVERT( 0.0632791, -0.373686, 0.0459749 ) DX3DVNORM( 0.0965143, -0.992858, 0.0701217 )  //34
DX3DVERT( 0.125, -0.359827, 0.0908178 ) DX3DVNORM( 0.193638, -0.970933, 0.140686 )  //35
DX3DVERT( 0.074389, -0.373686, 0.0241705 ) DX3DVNORM( 0.113459, -0.992858, 0.0368651 )  //36
DX3DVERT( 0.146946, -0.359827, 0.0477458 ) DX3DVNORM( 0.227635, -0.970933, 0.0739629 )  //37
DX3DVERT( 0.0782172, -0.373686, 0 ) DX3DVNORM( 0.119298, -0.992858, 1.71945e-007 )  //38
DX3DVERT( 0.154509, -0.359827, 0 ) DX3DVNORM( 0.23935, -0.970933, 7.37723e-008 )  //39
DX3DVERT( 0.183643, -0.337107, -0.133425 ) DX3DVNORM( 0.291741, -0.932716, -0.211962 )  //40
DX3DVERT( 0.215885, -0.337107, -0.0701454 ) DX3DVNORM( 0.342963, -0.932716, -0.111435 )  //41
DX3DVERT( 0.133425, -0.337107, -0.183643 ) DX3DVNORM( 0.211963, -0.932716, -0.291742 )  //42
DX3DVERT( 0.0701454, -0.337107, -0.215885 ) DX3DVNORM( 0.111435, -0.932716, -0.342963 )  //43
DX3DVERT( 1.6033e-009, -0.337107, -0.226995 ) DX3DVNORM( -5.60919e-009, -0.932716, -0.360612 )  //44
DX3DVERT( -0.0701454, -0.337107, -0.215885 ) DX3DVNORM( -0.111435, -0.932716, -0.342963 )  //45
DX3DVERT( -0.133425, -0.337107, -0.183643 ) DX3DVNORM( -0.211963, -0.932716, -0.291741 )  //46
DX3DVERT( -0.183643, -0.337107, -0.133425 ) DX3DVNORM( -0.291741, -0.932716, -0.211963 )  //47
DX3DVERT( -0.215885, -0.337107, -0.0701454 ) DX3DVNORM( -0.342963, -0.932716, -0.111435 )  //48
DX3DVERT( -0.226995, -0.337107, -3.8562e-009 ) DX3DVNORM( -0.360612, -0.932716, -1.86973e-009 )  //49
DX3DVERT( -0.215885, -0.337107, 0.0701454 ) DX3DVNORM( -0.342963, -0.932716, 0.111435 )  //50
DX3DVERT( -0.183643, -0.337107, 0.133424 ) DX3DVNORM( -0.291742, -0.932716, 0.211963 )  //51
DX3DVERT( -0.133424, -0.337107, 0.183643 ) DX3DVNORM( -0.211963, -0.932716, 0.291742 )  //52
DX3DVERT( -0.0701454, -0.337107, 0.215885 ) DX3DVNORM( -0.111435, -0.932716, 0.342963 )  //53
DX3DVERT( 2.25289e-009, -0.337107, 0.226995 ) DX3DVNORM( 5.23524e-008, -0.932716, 0.360612 )  //54
DX3DVERT( 0.0701454, -0.337107, 0.215885 ) DX3DVNORM( 0.111435, -0.932716, 0.342963 )  //55
DX3DVERT( 0.133424, -0.337107, 0.183643 ) DX3DVNORM( 0.211963, -0.932716, 0.291741 )  //56
DX3DVERT( 0.183643, -0.337107, 0.133424 ) DX3DVNORM( 0.291742, -0.932716, 0.211963 )  //57
DX3DVERT( 0.215885, -0.337107, 0.0701454 ) DX3DVNORM( 0.342963, -0.932716, 0.111435 )  //58
DX3DVERT( 0.226995, -0.337107, 0 ) DX3DVNORM( 0.360612, -0.932716, -1.12184e-008 )  //59
DX3DVERT( 0.237764, -0.306087, -0.172746 ) DX3DVNORM( 0.390642, -0.875697, -0.283818 )  //60
DX3DVERT( 0.279509, -0.306087, -0.0908179 ) DX3DVNORM( 0.459227, -0.875697, -0.149212 )  //61
DX3DVERT( 0.172746, -0.306087, -0.237764 ) DX3DVNORM( 0.283818, -0.875697, -0.390642 )  //62
DX3DVERT( 0.0908179, -0.306087, -0.279509 ) DX3DVNORM( 0.149212, -0.875697, -0.459227 )  //63
DX3DVERT( 2.07581e-009, -0.306087, -0.293893 ) DX3DVNORM( -5.61811e-009, -0.875697, -0.48286 )  //64
DX3DVERT( -0.0908178, -0.306087, -0.279509 ) DX3DVNORM( -0.149212, -0.875697, -0.459227 )  //65
DX3DVERT( -0.172746, -0.306087, -0.237764 ) DX3DVNORM( -0.283818, -0.875697, -0.390642 )  //66
DX3DVERT( -0.237764, -0.306087, -0.172746 ) DX3DVNORM( -0.390642, -0.875697, -0.283818 )  //67
DX3DVERT( -0.279509, -0.306087, -0.0908178 ) DX3DVNORM( -0.459227, -0.875697, -0.149212 )  //68
DX3DVERT( -0.293893, -0.306087, -4.99265e-009 ) DX3DVNORM( -0.48286, -0.875697, 3.7454e-009 )  //69
DX3DVERT( -0.279509, -0.306087, 0.0908178 ) DX3DVNORM( -0.459227, -0.875697, 0.149212 )  //70
DX3DVERT( -0.237764, -0.306087, 0.172746 ) DX3DVNORM( -0.390642, -0.875697, 0.283818 )  //71
DX3DVERT( -0.172746, -0.306087, 0.237764 ) DX3DVNORM( -0.283818, -0.875697, 0.390642 )  //72
DX3DVERT( -0.0908178, -0.306087, 0.279509 ) DX3DVNORM( -0.149212, -0.875697, 0.459227 )  //73
DX3DVERT( 2.91684e-009, -0.306087, 0.293893 ) DX3DVNORM( -1.8727e-009, -0.875697, 0.48286 )  //74
DX3DVERT( 0.0908178, -0.306087, 0.279509 ) DX3DVNORM( 0.149212, -0.875697, 0.459227 )  //75
DX3DVERT( 0.172746, -0.306087, 0.237764 ) DX3DVNORM( 0.283818, -0.875697, 0.390642 )  //76
DX3DVERT( 0.237764, -0.306087, 0.172746 ) DX3DVNORM( 0.390642, -0.875697, 0.283818 )  //77
DX3DVERT( 0.279509, -0.306087, 0.0908178 ) DX3DVNORM( 0.459227, -0.875697, 0.149212 )  //78
DX3DVERT( 0.293893, -0.306087, 0 ) DX3DVNORM( 0.48286, -0.875697, 2.86523e-007 )  //79
DX3DVERT( 0.286031, -0.26753, -0.207814 ) DX3DVNORM( 0.489162, -0.796501, -0.355397 )  //80
DX3DVERT( 0.336249, -0.26753, -0.109254 ) DX3DVNORM( 0.575045, -0.796501, -0.186843 )  //81
DX3DVERT( 0.207814, -0.26753, -0.286031 ) DX3DVNORM( 0.355397, -0.796501, -0.489162 )  //82
DX3DVERT( 0.109254, -0.26753, -0.336249 ) DX3DVNORM( 0.186843, -0.796501, -0.575045 )  //83
DX3DVERT( 2.49721e-009, -0.26753, -0.353554 ) DX3DVNORM( -1.16347e-007, -0.7965, -0.604638 )  //84
DX3DVERT( -0.109254, -0.26753, -0.336249 ) DX3DVNORM( -0.186843, -0.7965, -0.575045 )  //85
DX3DVERT( -0.207814, -0.26753, -0.286031 ) DX3DVNORM( -0.355397, -0.796501, -0.489162 )  //86
DX3DVERT( -0.286031, -0.26753, -0.207814 ) DX3DVNORM( -0.489162, -0.796501, -0.355397 )  //87
DX3DVERT( -0.336249, -0.26753, -0.109254 ) DX3DVNORM( -0.575045, -0.796501, -0.186843 )  //88
DX3DVERT( -0.353553, -0.26753, -6.00617e-009 ) DX3DVNORM( -0.604638, -0.796501, -7.50626e-009 )  //89
DX3DVERT( -0.336249, -0.26753, 0.109254 ) DX3DVNORM( -0.575045, -0.7965, 0.186843 )  //90
DX3DVERT( -0.286031, -0.26753, 0.207814 ) DX3DVNORM( -0.489162, -0.7965, 0.355397 )  //91
DX3DVERT( -0.207814, -0.26753, 0.286031 ) DX3DVNORM( -0.355397, -0.7965, 0.489162 )  //92
DX3DVERT( -0.109254, -0.26753, 0.336249 ) DX3DVNORM( -0.186843, -0.796501, 0.575045 )  //93
DX3DVERT( 3.50896e-009, -0.26753, 0.353553 ) DX3DVNORM( -1.87657e-009, -0.7965, 0.604638 )  //94
DX3DVERT( 0.109254, -0.26753, 0.336249 ) DX3DVNORM( 0.186843, -0.7965, 0.575045 )  //95
DX3DVERT( 0.207813, -0.26753, 0.286031 ) DX3DVNORM( 0.355397, -0.7965, 0.489162 )  //96
DX3DVERT( 0.286031, -0.26753, 0.207813 ) DX3DVNORM( 0.489163, -0.7965, 0.355397 )  //97
DX3DVERT( 0.336249, -0.26753, 0.109254 ) DX3DVNORM( 0.575045, -0.7965, 0.186843 )  //98
DX3DVERT( 0.353553, -0.26753, 0 ) DX3DVNORM( 0.604638, -0.7965, 4.18474e-007 )  //99
DX3DVERT( 0.327254, -0.222385, -0.237764 ) DX3DVNORM( 0.584542, -0.691336, -0.424695 )  //100
DX3DVERT( 0.384711, -0.222385, -0.125 ) DX3DVNORM( 0.687171, -0.691336, -0.223275 )  //101
DX3DVERT( 0.237764, -0.222385, -0.327254 ) DX3DVNORM( 0.424695, -0.691336, -0.584542 )  //102
DX3DVERT( 0.125, -0.222385, -0.384711 ) DX3DVNORM( 0.223275, -0.691336, -0.68717 )  //103
DX3DVERT( 2.85711e-009, -0.222385, -0.404509 ) DX3DVNORM( -1.22278e-007, -0.691336, -0.722534 )  //104
DX3DVERT( -0.125, -0.222385, -0.384711 ) DX3DVNORM( -0.223275, -0.691336, -0.68717 )  //105
DX3DVERT( -0.237764, -0.222385, -0.327254 ) DX3DVNORM( -0.424695, -0.691336, -0.584542 )  //106
DX3DVERT( -0.327254, -0.222385, -0.237764 ) DX3DVNORM( -0.584542, -0.691336, -0.424695 )  //107
DX3DVERT( -0.384711, -0.222385, -0.125 ) DX3DVNORM( -0.687171, -0.691336, -0.223275 )  //108
DX3DVERT( -0.404509, -0.222385, -6.87179e-009 ) DX3DVNORM( -0.722534, -0.691336, -1.12872e-008 )  //109
DX3DVERT( -0.384711, -0.222385, 0.125 ) DX3DVNORM( -0.68717, -0.691336, 0.223275 )  //110
DX3DVERT( -0.327254, -0.222385, 0.237764 ) DX3DVNORM( -0.584542, -0.691336, 0.424695 )  //111
DX3DVERT( -0.237764, -0.222385, 0.327254 ) DX3DVNORM( -0.424695, -0.691336, 0.584542 )  //112
DX3DVERT( -0.125, -0.222385, 0.38471 ) DX3DVNORM( -0.223275, -0.691336, 0.68717 )  //113
DX3DVERT( 4.01468e-009, -0.222385, 0.404509 ) DX3DVNORM( 7.52479e-009, -0.691336, 0.722534 )  //114
DX3DVERT( 0.125, -0.222385, 0.38471 ) DX3DVNORM( 0.223275, -0.691336, 0.68717 )  //115
DX3DVERT( 0.237764, -0.222385, 0.327254 ) DX3DVNORM( 0.424695, -0.691336, 0.584542 )  //116
DX3DVERT( 0.327254, -0.222385, 0.237764 ) DX3DVNORM( 0.584542, -0.691336, 0.424695 )  //117
DX3DVERT( 0.38471, -0.222385, 0.125 ) DX3DVNORM( 0.687171, -0.691336, 0.223275 )  //118
DX3DVERT( 0.404509, -0.222385, 0 ) DX3DVNORM( 0.722534, -0.691336, 4.66537e-007 )  //119
DX3DVERT( 0.36042, -0.171765, -0.26186 ) DX3DVNORM( 0.671852, -0.557087, -0.488129 )  //120
DX3DVERT( 0.423699, -0.171765, -0.137668 ) DX3DVNORM( 0.789809, -0.557087, -0.256624 )  //121
DX3DVERT( 0.26186, -0.171765, -0.36042 ) DX3DVNORM( 0.488129, -0.557087, -0.671852 )  //122
DX3DVERT( 0.137668, -0.171765, -0.423699 ) DX3DVNORM( 0.256624, -0.557087, -0.789809 )  //123
DX3DVERT( 3.14666e-009, -0.171765, -0.445503 ) DX3DVNORM( -6.03597e-008, -0.557087, -0.830454 )  //124
DX3DVERT( -0.137668, -0.171765, -0.423699 ) DX3DVNORM( -0.256625, -0.557087, -0.789809 )  //125
DX3DVERT( -0.26186, -0.171765, -0.36042 ) DX3DVNORM( -0.488129, -0.557087, -0.671851 )  //126
DX3DVERT( -0.36042, -0.171765, -0.26186 ) DX3DVNORM( -0.671852, -0.557087, -0.488129 )  //127
DX3DVERT( -0.423699, -0.171765, -0.137668 ) DX3DVNORM( -0.789809, -0.557086, -0.256624 )  //128
DX3DVERT( -0.445503, -0.171765, -7.56821e-009 ) DX3DVNORM( -0.830454, -0.557087, 7.54496e-009 )  //129
DX3DVERT( -0.423699, -0.171765, 0.137668 ) DX3DVNORM( -0.789809, -0.557087, 0.256624 )  //130
DX3DVERT( -0.36042, -0.171765, 0.26186 ) DX3DVNORM( -0.671851, -0.557087, 0.488129 )  //131
DX3DVERT( -0.26186, -0.171765, 0.36042 ) DX3DVNORM( -0.488129, -0.557087, 0.671852 )  //132
DX3DVERT( -0.137668, -0.171765, 0.423699 ) DX3DVNORM( -0.256624, -0.557087, 0.789809 )  //133
DX3DVERT( 4.42155e-009, -0.171765, 0.445503 ) DX3DVNORM( 1.05629e-007, -0.557087, 0.830454 )  //134
DX3DVERT( 0.137668, -0.171765, 0.423699 ) DX3DVNORM( 0.256625, -0.557086, 0.789809 )  //135
DX3DVERT( 0.26186, -0.171765, 0.36042 ) DX3DVNORM( 0.488129, -0.557087, 0.671852 )  //136
DX3DVERT( 0.36042, -0.171765, 0.26186 ) DX3DVNORM( 0.671852, -0.557087, 0.488129 )  //137
DX3DVERT( 0.423699, -0.171765, 0.137668 ) DX3DVNORM( 0.789809, -0.557087, 0.256624 )  //138
DX3DVERT( 0.445503, -0.171765, 0 ) DX3DVNORM( 0.830454, -0.557087, 5.77189e-007 )  //139
DX3DVERT( 0.384711, -0.116915, -0.279509 ) DX3DVNORM( 0.743849, -0.393211, -0.540438 )  //140
DX3DVERT( 0.452254, -0.116915, -0.146946 ) DX3DVNORM( 0.874447, -0.393211, -0.284125 )  //141
DX3DVERT( 0.279509, -0.116915, -0.384711 ) DX3DVNORM( 0.540438, -0.393211, -0.743849 )  //142
DX3DVERT( 0.146946, -0.116915, -0.452254 ) DX3DVNORM( 0.284125, -0.393211, -0.874447 )  //143
DX3DVERT( 3.35873e-009, -0.116915, -0.475528 ) DX3DVNORM( -1.05896e-007, -0.393211, -0.919448 )  //144
DX3DVERT( -0.146946, -0.116915, -0.452254 ) DX3DVNORM( -0.284125, -0.393211, -0.874447 )  //145
DX3DVERT( -0.279509, -0.116915, -0.384711 ) DX3DVNORM( -0.540438, -0.393211, -0.743849 )  //146
DX3DVERT( -0.384711, -0.116915, -0.279509 ) DX3DVNORM( -0.743849, -0.393211, -0.540438 )  //147
DX3DVERT( -0.452254, -0.116915, -0.146946 ) DX3DVNORM( -0.874447, -0.393211, -0.284125 )  //148
DX3DVERT( -0.475528, -0.116915, -8.07828e-009 ) DX3DVNORM( -0.919448, -0.393211, -3.78199e-009 )  //149
DX3DVERT( -0.452254, -0.116915, 0.146946 ) DX3DVNORM( -0.874447, -0.393211, 0.284125 )  //150
DX3DVERT( -0.384711, -0.116915, 0.279509 ) DX3DVNORM( -0.743849, -0.393211, 0.540438 )  //151
DX3DVERT( -0.279509, -0.116915, 0.384711 ) DX3DVNORM( -0.540438, -0.393211, 0.743849 )  //152
DX3DVERT( -0.146946, -0.116915, 0.452254 ) DX3DVNORM( -0.284125, -0.393211, 0.874447 )  //153
DX3DVERT( 4.71954e-009, -0.116915, 0.475528 ) DX3DVNORM( 1.43716e-007, -0.393211, 0.919448 )  //154
DX3DVERT( 0.146946, -0.116915, 0.452254 ) DX3DVNORM( 0.284125, -0.393211, 0.874447 )  //155
DX3DVERT( 0.279509, -0.116915, 0.38471 ) DX3DVNORM( 0.540438, -0.393211, 0.743849 )  //156
DX3DVERT( 0.38471, -0.116915, 0.279509 ) DX3DVNORM( 0.743849, -0.393211, 0.540438 )  //157
DX3DVERT( 0.452254, -0.116915, 0.146946 ) DX3DVNORM( 0.874447, -0.393211, 0.284125 )  //158
DX3DVERT( 0.475528, -0.116915, 0 ) DX3DVNORM( 0.919448, -0.393211, 6.69413e-007 )  //159
DX3DVERT( 0.399529, -0.059186, -0.290274 ) DX3DVNORM( 0.791997, -0.20404, -0.57542 )  //160
DX3DVERT( 0.469674, -0.059186, -0.152606 ) DX3DVNORM( 0.931049, -0.20404, -0.302515 )  //161
DX3DVERT( 0.290274, -0.059186, -0.399529 ) DX3DVNORM( 0.57542, -0.20404, -0.791997 )  //162
DX3DVERT( 0.152606, -0.059186, -0.469674 ) DX3DVNORM( 0.302516, -0.20404, -0.931049 )  //163
DX3DVERT( 3.4881e-009, -0.059186, -0.493844 ) DX3DVNORM( -1.0988e-007, -0.20404, -0.978963 )  //164
DX3DVERT( -0.152606, -0.059186, -0.469674 ) DX3DVNORM( -0.302516, -0.20404, -0.931049 )  //165
DX3DVERT( -0.290274, -0.059186, -0.399528 ) DX3DVNORM( -0.57542, -0.20404, -0.791997 )  //166
DX3DVERT( -0.399528, -0.059186, -0.290274 ) DX3DVNORM( -0.791997, -0.20404, -0.57542 )  //167
DX3DVERT( -0.469674, -0.059186, -0.152606 ) DX3DVNORM( -0.931049, -0.20404, -0.302516 )  //168
DX3DVERT( -0.493844, -0.059186, -8.38943e-009 ) DX3DVNORM( -0.978963, -0.204039, -1.89449e-008 )  //169
DX3DVERT( -0.469674, -0.059186, 0.152606 ) DX3DVNORM( -0.931049, -0.204039, 0.302516 )  //170
DX3DVERT( -0.399528, -0.059186, 0.290274 ) DX3DVNORM( -0.791997, -0.20404, 0.57542 )  //171
DX3DVERT( -0.290274, -0.059186, 0.399528 ) DX3DVNORM( -0.57542, -0.20404, 0.791997 )  //172
DX3DVERT( -0.152606, -0.059186, 0.469674 ) DX3DVNORM( -0.302516, -0.20404, 0.931049 )  //173
DX3DVERT( 4.90133e-009, -0.059186, 0.493844 ) DX3DVNORM( 4.54678e-008, -0.20404, 0.978963 )  //174
DX3DVERT( 0.152606, -0.059186, 0.469674 ) DX3DVNORM( 0.302516, -0.20404, 0.931049 )  //175
DX3DVERT( 0.290274, -0.059186, 0.399528 ) DX3DVNORM( 0.57542, -0.20404, 0.791997 )  //176
DX3DVERT( 0.399528, -0.059186, 0.290274 ) DX3DVNORM( 0.791997, -0.20404, 0.57542 )  //177
DX3DVERT( 0.469674, -0.059186, 0.152606 ) DX3DVNORM( 0.931049, -0.20404, 0.302516 )  //178
DX3DVERT( 0.493844, -0.059186, 0 ) DX3DVNORM( 0.978963, -0.20404, 6.63072e-007 )  //179
DX3DVERT( 0.404509, 0, -0.293893 ) DX3DVNORM( 0.809017, 0, -0.587785 )  //180
DX3DVERT( 0.475528, 0, -0.154509 ) DX3DVNORM( 0.951057, 1.89579e-009, -0.309016 )  //181
DX3DVERT( 0.293893, 0, -0.404509 ) DX3DVNORM( 0.587785, -2.6541e-008, -0.809017 )  //182
DX3DVERT( 0.154509, 0, -0.475528 ) DX3DVNORM( 0.309017, -2.46452e-008, -0.951056 )  //183
DX3DVERT( 3.53158e-009, 0, -0.5 ) DX3DVNORM( -1.13747e-007, 1.89579e-009, -1 )  //184
DX3DVERT( -0.154509, 0, -0.475528 ) DX3DVNORM( -0.309017, -2.27495e-008, -0.951056 )  //185
DX3DVERT( -0.293893, 0, -0.404509 ) DX3DVNORM( -0.587785, -2.46452e-008, -0.809017 )  //186
DX3DVERT( -0.404509, 0, -0.293893 ) DX3DVNORM( -0.809017, 0, -0.587785 )  //187
DX3DVERT( -0.475528, 0, -0.154509 ) DX3DVNORM( -0.951056, 0, -0.309017 )  //188
DX3DVERT( -0.5, 0, -8.494e-009 ) DX3DVNORM( -1, 1.89579e-009, -1.51663e-008 )  //189
DX3DVERT( -0.475528, 0, 0.154509 ) DX3DVNORM( -0.951056, 0, 0.309017 )  //190
DX3DVERT( -0.404509, 0, 0.293893 ) DX3DVNORM( -0.809017, 0, 0.587785 )  //191
DX3DVERT( -0.293893, 0, 0.404509 ) DX3DVNORM( -0.587785, -1.89579e-009, 0.809017 )  //192
DX3DVERT( -0.154509, 0, 0.475528 ) DX3DVNORM( -0.309017, 1.89579e-009, 0.951056 )  //193
DX3DVERT( 4.96242e-009, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //194
DX3DVERT( 0.154509, 0, 0.475528 ) DX3DVNORM( 0.309017, 0, 0.951056 )  //195
DX3DVERT( 0.293893, 0, 0.404509 ) DX3DVNORM( 0.587785, 0, 0.809017 )  //196
DX3DVERT( 0.404509, 0, 0.293893 ) DX3DVNORM( 0.809017, 0, 0.587785 )  //197
DX3DVERT( 0.475528, 0, 0.154509 ) DX3DVNORM( 0.951056, -1.89579e-009, 0.309017 )  //198
DX3DVERT( 0.5, 0, 0 ) DX3DVNORM( 1, 0, 6.44568e-007 )  //199
DX3DVERT( 0.399529, 0.059186, -0.290274 ) DX3DVNORM( 0.791997, 0.20404, -0.57542 )  //200
DX3DVERT( 0.469674, 0.059186, -0.152606 ) DX3DVNORM( 0.931049, 0.20404, -0.302515 )  //201
DX3DVERT( 0.290274, 0.059186, -0.399529 ) DX3DVNORM( 0.57542, 0.20404, -0.791997 )  //202
DX3DVERT( 0.152606, 0.059186, -0.469674 ) DX3DVNORM( 0.302516, 0.20404, -0.931049 )  //203
DX3DVERT( 3.4881e-009, 0.059186, -0.493844 ) DX3DVNORM( -1.0988e-007, 0.20404, -0.978963 )  //204
DX3DVERT( -0.152606, 0.059186, -0.469674 ) DX3DVNORM( -0.302516, 0.20404, -0.931049 )  //205
DX3DVERT( -0.290274, 0.059186, -0.399528 ) DX3DVNORM( -0.57542, 0.20404, -0.791997 )  //206
DX3DVERT( -0.399528, 0.059186, -0.290274 ) DX3DVNORM( -0.791997, 0.20404, -0.57542 )  //207
DX3DVERT( -0.469674, 0.059186, -0.152606 ) DX3DVNORM( -0.931049, 0.20404, -0.302516 )  //208
DX3DVERT( -0.493844, 0.059186, -8.38943e-009 ) DX3DVNORM( -0.978963, 0.204039, -3.78898e-009 )  //209
DX3DVERT( -0.469674, 0.059186, 0.152606 ) DX3DVNORM( -0.931049, 0.204039, 0.302516 )  //210
DX3DVERT( -0.399528, 0.059186, 0.290274 ) DX3DVNORM( -0.791997, 0.20404, 0.57542 )  //211
DX3DVERT( -0.290274, 0.059186, 0.399528 ) DX3DVNORM( -0.57542, 0.20404, 0.791997 )  //212
DX3DVERT( -0.152606, 0.059186, 0.469674 ) DX3DVNORM( -0.302516, 0.20404, 0.931049 )  //213
DX3DVERT( 4.90133e-009, 0.059186, 0.493844 ) DX3DVNORM( 4.54678e-008, 0.20404, 0.978963 )  //214
DX3DVERT( 0.152606, 0.059186, 0.469674 ) DX3DVNORM( 0.302516, 0.20404, 0.931049 )  //215
DX3DVERT( 0.290274, 0.059186, 0.399528 ) DX3DVNORM( 0.57542, 0.20404, 0.791997 )  //216
DX3DVERT( 0.399528, 0.059186, 0.290274 ) DX3DVNORM( 0.791997, 0.20404, 0.57542 )  //217
DX3DVERT( 0.469674, 0.059186, 0.152606 ) DX3DVNORM( 0.931049, 0.20404, 0.302516 )  //218
DX3DVERT( 0.493844, 0.059186, 0 ) DX3DVNORM( 0.978963, 0.20404, 6.47916e-007 )  //219
DX3DVERT( 0.384711, 0.116915, -0.279509 ) DX3DVNORM( 0.743849, 0.393211, -0.540438 )  //220
DX3DVERT( 0.452254, 0.116915, -0.146946 ) DX3DVNORM( 0.874447, 0.393211, -0.284124 )  //221
DX3DVERT( 0.279509, 0.116915, -0.384711 ) DX3DVNORM( 0.540438, 0.393211, -0.743849 )  //222
DX3DVERT( 0.146946, 0.116915, -0.452254 ) DX3DVNORM( 0.284125, 0.393211, -0.874447 )  //223
DX3DVERT( 3.35873e-009, 0.116915, -0.475528 ) DX3DVNORM( -1.05896e-007, 0.393211, -0.919448 )  //224
DX3DVERT( -0.146946, 0.116915, -0.452254 ) DX3DVNORM( -0.284125, 0.393211, -0.874447 )  //225
DX3DVERT( -0.279509, 0.116915, -0.384711 ) DX3DVNORM( -0.540438, 0.393211, -0.743849 )  //226
DX3DVERT( -0.384711, 0.116915, -0.279509 ) DX3DVNORM( -0.743849, 0.393211, -0.540438 )  //227
DX3DVERT( -0.452254, 0.116915, -0.146946 ) DX3DVNORM( -0.874447, 0.393211, -0.284125 )  //228
DX3DVERT( -0.475528, 0.116915, -8.07828e-009 ) DX3DVNORM( -0.919448, 0.393211, 1.5128e-008 )  //229
DX3DVERT( -0.452254, 0.116915, 0.146946 ) DX3DVNORM( -0.874447, 0.393211, 0.284125 )  //230
DX3DVERT( -0.384711, 0.116915, 0.279509 ) DX3DVNORM( -0.743849, 0.393211, 0.540438 )  //231
DX3DVERT( -0.279509, 0.116915, 0.384711 ) DX3DVNORM( -0.540438, 0.393211, 0.743849 )  //232
DX3DVERT( -0.146946, 0.116915, 0.452254 ) DX3DVNORM( -0.284125, 0.393211, 0.874447 )  //233
DX3DVERT( 4.71954e-009, 0.116915, 0.475528 ) DX3DVNORM( 1.47498e-007, 0.393211, 0.919448 )  //234
DX3DVERT( 0.146946, 0.116915, 0.452254 ) DX3DVNORM( 0.284125, 0.393211, 0.874447 )  //235
DX3DVERT( 0.279509, 0.116915, 0.38471 ) DX3DVNORM( 0.540438, 0.393211, 0.743849 )  //236
DX3DVERT( 0.38471, 0.116915, 0.279509 ) DX3DVNORM( 0.743849, 0.393211, 0.540438 )  //237
DX3DVERT( 0.452254, 0.116915, 0.146946 ) DX3DVNORM( 0.874447, 0.393211, 0.284125 )  //238
DX3DVERT( 0.475528, 0.116915, 0 ) DX3DVNORM( 0.919448, 0.393211, 6.54285e-007 )  //239
DX3DVERT( 0.36042, 0.171765, -0.26186 ) DX3DVNORM( 0.671852, 0.557087, -0.488129 )  //240
DX3DVERT( 0.423699, 0.171765, -0.137668 ) DX3DVNORM( 0.789809, 0.557087, -0.256624 )  //241
DX3DVERT( 0.26186, 0.171765, -0.36042 ) DX3DVNORM( 0.488129, 0.557087, -0.671852 )  //242
DX3DVERT( 0.137668, 0.171765, -0.423699 ) DX3DVNORM( 0.256624, 0.557087, -0.789809 )  //243
DX3DVERT( 3.14666e-009, 0.171765, -0.445503 ) DX3DVNORM( -6.03597e-008, 0.557087, -0.830454 )  //244
DX3DVERT( -0.137668, 0.171765, -0.423699 ) DX3DVNORM( -0.256625, 0.557087, -0.789809 )  //245
DX3DVERT( -0.26186, 0.171765, -0.36042 ) DX3DVNORM( -0.488129, 0.557087, -0.671851 )  //246
DX3DVERT( -0.36042, 0.171765, -0.26186 ) DX3DVNORM( -0.671852, 0.557087, -0.488129 )  //247
DX3DVERT( -0.423699, 0.171765, -0.137668 ) DX3DVNORM( -0.789809, 0.557086, -0.256624 )  //248
DX3DVERT( -0.445503, 0.171765, -7.56821e-009 ) DX3DVNORM( -0.830454, 0.557087, -2.82936e-008 )  //249
DX3DVERT( -0.423699, 0.171765, 0.137668 ) DX3DVNORM( -0.789809, 0.557087, 0.256624 )  //250
DX3DVERT( -0.36042, 0.171765, 0.26186 ) DX3DVNORM( -0.671851, 0.557087, 0.488129 )  //251
DX3DVERT( -0.26186, 0.171765, 0.36042 ) DX3DVNORM( -0.488129, 0.557087, 0.671852 )  //252
DX3DVERT( -0.137668, 0.171765, 0.423699 ) DX3DVNORM( -0.256624, 0.557087, 0.789809 )  //253
DX3DVERT( 4.42155e-009, 0.171765, 0.445503 ) DX3DVNORM( 1.09402e-007, 0.557087, 0.830454 )  //254
DX3DVERT( 0.137668, 0.171765, 0.423699 ) DX3DVNORM( 0.256625, 0.557086, 0.789809 )  //255
DX3DVERT( 0.26186, 0.171765, 0.36042 ) DX3DVNORM( 0.488129, 0.557087, 0.671852 )  //256
DX3DVERT( 0.36042, 0.171765, 0.26186 ) DX3DVNORM( 0.671852, 0.557087, 0.488129 )  //257
DX3DVERT( 0.423699, 0.171765, 0.137668 ) DX3DVNORM( 0.789809, 0.557087, 0.256624 )  //258
DX3DVERT( 0.445503, 0.171765, 0 ) DX3DVNORM( 0.830454, 0.557087, 6.168e-007 )  //259
DX3DVERT( 0.327254, 0.222385, -0.237764 ) DX3DVNORM( 0.584542, 0.691336, -0.424695 )  //260
DX3DVERT( 0.384711, 0.222385, -0.125 ) DX3DVNORM( 0.687171, 0.691336, -0.223275 )  //261
DX3DVERT( 0.237764, 0.222385, -0.327254 ) DX3DVNORM( 0.424695, 0.691336, -0.584542 )  //262
DX3DVERT( 0.125, 0.222385, -0.384711 ) DX3DVNORM( 0.223275, 0.691336, -0.68717 )  //263
DX3DVERT( 2.85711e-009, 0.222385, -0.404509 ) DX3DVNORM( -0.000541286, 0.692257, -0.721651 )  //264
DX3DVERT( -0.125, 0.222385, -0.384711 ) DX3DVNORM( -0.222814, 0.692945, -0.685697 )  //265
DX3DVERT( -0.237764, 0.222385, -0.327254 ) DX3DVNORM( -0.423757, 0.692238, -0.584154 )  //266
DX3DVERT( -0.327254, 0.222385, -0.237764 ) DX3DVNORM( -0.584542, 0.691336, -0.424695 )  //267
DX3DVERT( -0.384711, 0.222385, -0.125 ) DX3DVNORM( -0.687171, 0.691336, -0.223275 )  //268
DX3DVERT( -0.404509, 0.222385, -6.87179e-009 ) DX3DVNORM( -0.722534, 0.691336, -5.07923e-008 )  //269
DX3DVERT( -0.384711, 0.222385, 0.125 ) DX3DVNORM( -0.68717, 0.691336, 0.223275 )  //270
DX3DVERT( -0.327254, 0.222385, 0.237764 ) DX3DVNORM( -0.584542, 0.691336, 0.424695 )  //271
DX3DVERT( -0.237764, 0.222385, 0.327254 ) DX3DVNORM( -0.424695, 0.691336, 0.584542 )  //272
DX3DVERT( -0.125, 0.222385, 0.38471 ) DX3DVNORM( -0.223275, 0.691336, 0.68717 )  //273
DX3DVERT( 4.01468e-009, 0.222385, 0.404509 ) DX3DVNORM( 7.52479e-009, 0.691336, 0.722534 )  //274
DX3DVERT( 0.125, 0.222385, 0.38471 ) DX3DVNORM( 0.223275, 0.691336, 0.68717 )  //275
DX3DVERT( 0.237764, 0.222385, 0.327254 ) DX3DVNORM( 0.424695, 0.691336, 0.584542 )  //276
DX3DVERT( 0.327254, 0.222385, 0.237764 ) DX3DVNORM( 0.584542, 0.691336, 0.424695 )  //277
DX3DVERT( 0.38471, 0.222385, 0.125 ) DX3DVNORM( 0.687171, 0.691336, 0.223275 )  //278
DX3DVERT( 0.404509, 0.222385, 0 ) DX3DVNORM( 0.722534, 0.691336, 5.06042e-007 )  //279
DX3DVERT( 0.286031, 0.26753, -0.207814 ) DX3DVNORM( 0.493101, 0.792781, -0.358258 )  //280
DX3DVERT( 0.336249, 0.26753, -0.109254 ) DX3DVNORM( 0.578387, 0.794287, -0.185945 )  //281
DX3DVERT( 0.207814, 0.26753, -0.286031 ) DX3DVNORM( 0.355576, 0.794288, -0.492618 )  //282
DX3DVERT( 0.109254, 0.26753, -0.336249 ) DX3DVNORM( 0.187364, 0.796073, -0.575467 )  //283
DX3DVERT( 2.49721e-009, 0.26753, -0.353554 ) DX3DVNORM( -0.000497325, 0.795886, -0.605447 )  //284
DX3DVERT( -0.108504, 0.268977, -0.333731 ) DX3DVNORM( -0.186541, 0.794096, -0.578459 )  //285
DX3DVERT( -0.207814, 0.26753, -0.286031 ) DX3DVNORM( -0.357581, 0.793179, -0.492953 )  //286
DX3DVERT( -0.286031, 0.26753, -0.207814 ) DX3DVNORM( -0.49235, 0.79446, -0.355563 )  //287
DX3DVERT( -0.336249, 0.26753, -0.109254 ) DX3DVNORM( -0.575045, 0.796501, -0.186843 )  //288
DX3DVERT( -0.353553, 0.26753, -6.00617e-009 ) DX3DVNORM( -0.604638, 0.796501, -7.50626e-009 )  //289
DX3DVERT( -0.336249, 0.26753, 0.109254 ) DX3DVNORM( -0.575045, 0.7965, 0.186843 )  //290
DX3DVERT( -0.286031, 0.26753, 0.207814 ) DX3DVNORM( -0.489162, 0.7965, 0.355397 )  //291
DX3DVERT( -0.207814, 0.26753, 0.286031 ) DX3DVNORM( -0.355397, 0.796501, 0.489162 )  //292
DX3DVERT( -0.109254, 0.26753, 0.336249 ) DX3DVNORM( -0.186843, 0.796501, 0.575045 )  //293
DX3DVERT( 3.50896e-009, 0.26753, 0.353553 ) DX3DVNORM( 0, 0.796501, 0.604638 )  //294
DX3DVERT( 0.109254, 0.26753, 0.336249 ) DX3DVNORM( 0.186843, 0.796501, 0.575045 )  //295
DX3DVERT( 0.207813, 0.26753, 0.286031 ) DX3DVNORM( 0.355397, 0.7965, 0.489162 )  //296
DX3DVERT( 0.286031, 0.26753, 0.207813 ) DX3DVNORM( 0.489163, 0.7965, 0.355397 )  //297
DX3DVERT( 0.336249, 0.26753, 0.109254 ) DX3DVNORM( 0.575045, 0.7965, 0.186843 )  //298
DX3DVERT( 0.353553, 0.26753, 0 ) DX3DVNORM( 0.604638, 0.7965, 4.18474e-007 )  //299
DX3DVERT( 0.238597, 0.30769, -0.173349 ) DX3DVNORM( 0.45336, 0.830312, -0.324109 )  //300
DX3DVERT( 0.279509, 0.306087, -0.0908179 ) DX3DVNORM( 0.521489, 0.839508, -0.152561 )  //301
DX3DVERT( 0.172746, 0.306087, -0.237764 ) DX3DVNORM( 0.324929, 0.826929, -0.458923 )  //302
DX3DVERT( 0.0908179, 0.306087, -0.279509 ) DX3DVNORM( 0.172776, 0.828735, -0.532303 )  //303
DX3DVERT( -0.000132907, 0.309827, -0.288834 ) DX3DVNORM( -0.00414405, 0.831258, -0.555872 )  //304
DX3DVERT( -0.0902862, 0.30805, -0.277303 ) DX3DVNORM( -0.174245, 0.836749, -0.519124 )  //305
DX3DVERT( -0.172365, 0.308763, -0.236941 ) DX3DVNORM( -0.320486, 0.848565, -0.420981 )  //306
DX3DVERT( -0.237764, 0.306087, -0.172746 ) DX3DVNORM( -0.422912, 0.858533, -0.289943 )  //307
DX3DVERT( -0.279509, 0.306087, -0.0908178 ) DX3DVNORM( -0.477268, 0.865343, -0.152959 )  //308
DX3DVERT( -0.293893, 0.306087, -4.99265e-009 ) DX3DVNORM( -0.499183, 0.866496, -0.000517187 )  //309
DX3DVERT( -0.279509, 0.306087, 0.0908178 ) DX3DVNORM( -0.47466, 0.866465, 0.154711 )  //310
DX3DVERT( -0.237764, 0.306087, 0.172746 ) DX3DVNORM( -0.402096, 0.867363, 0.293257 )  //311
DX3DVERT( -0.172746, 0.306087, 0.237764 ) DX3DVNORM( -0.291896, 0.86798, 0.401756 )  //312
DX3DVERT( -0.0908178, 0.306087, 0.279509 ) DX3DVNORM( -0.15358, 0.868083, 0.472065 )  //313
DX3DVERT( 2.91684e-009, 0.306087, 0.293893 ) DX3DVNORM( -0.000196409, 0.867715, 0.497061 )  //314
DX3DVERT( 0.0908178, 0.306087, 0.279509 ) DX3DVNORM( 0.151257, 0.864511, 0.479315 )  //315
DX3DVERT( 0.172746, 0.306087, 0.237764 ) DX3DVNORM( 0.296833, 0.854985, 0.425313 )  //316
DX3DVERT( 0.237764, 0.306087, 0.172746 ) DX3DVNORM( 0.42819, 0.847269, 0.314307 )  //317
DX3DVERT( 0.279509, 0.306087, 0.0908178 ) DX3DVNORM( 0.505118, 0.848437, 0.158145 )  //318
DX3DVERT( 0.293893, 0.306087, 0 ) DX3DVNORM( 0.527769, 0.849381, 0.00345509 )  //319
DX3DVERT( 0.187106, 0.351402, -0.136162 ) DX3DVNORM( 0.406927, 0.874582, -0.26366 )  //320
DX3DVERT( 0.219443, 0.346975, -0.071275 ) DX3DVNORM( 0.467397, 0.877063, -0.110911 )  //321
DX3DVERT( 0.134092, 0.352885, -0.184496 ) DX3DVNORM( 0.310537, 0.860857, -0.403104 )  //322
DX3DVERT( 0.0681771, 0.356746, -0.210808 ) DX3DVNORM( 0.171455, 0.851502, -0.495528 )  //323
DX3DVERT( -0.0014261, 0.358823, -0.218946 ) DX3DVNORM( -0.0257366, 0.855596, -0.517005 )  //324
DX3DVERT( -0.0689775, 0.355995, -0.206482 ) DX3DVNORM( -0.196809, 0.868022, -0.455856 )  //325
DX3DVERT( -0.131033, 0.349942, -0.178971 ) DX3DVNORM( -0.317117, 0.883782, -0.344045 )  //326
DX3DVERT( -0.179137, 0.345083, -0.129389 ) DX3DVNORM( -0.389404, 0.892755, -0.226612 )  //327
DX3DVERT( -0.214161, 0.340816, -0.0693343 ) DX3DVNORM( -0.41707, 0.901097, -0.118641 )  //328
DX3DVERT( -0.228227, 0.339711, -8.61823e-006 ) DX3DVNORM( -0.425457, 0.904977, 0.00159771 )  //329
DX3DVERT( -0.217102, 0.339678, 0.0704974 ) DX3DVNORM( -0.418407, 0.899863, 0.123215 )  //330
DX3DVERT( -0.18461, 0.33933, 0.134059 ) DX3DVNORM( -0.379187, 0.888514, 0.258379 )  //331
DX3DVERT( -0.132618, 0.340376, 0.182035 ) DX3DVNORM( -0.28595, 0.878298, 0.383177 )  //332
DX3DVERT( -0.0692847, 0.341312, 0.213086 ) DX3DVNORM( -0.155525, 0.873553, 0.461213 )  //333
DX3DVERT( 0.000100562, 0.340302, 0.225636 ) DX3DVNORM( -0.00730203, 0.869407, 0.494042 )  //334
DX3DVERT( 0.0705006, 0.33944, 0.216993 ) DX3DVNORM( 0.138892, 0.864759, 0.482598 )  //335
DX3DVERT( 0.134971, 0.342029, 0.185786 ) DX3DVNORM( 0.274895, 0.862423, 0.425039 )  //336
DX3DVERT( 0.187601, 0.34626, 0.136189 ) DX3DVNORM( 0.401942, 0.867303, 0.293646 )  //337
DX3DVERT( 0.219169, 0.34398, 0.0710749 ) DX3DVNORM( 0.473598, 0.871231, 0.129081 )  //338
DX3DVERT( 0.229598, 0.342454, -7.92729e-005 ) DX3DVNORM( 0.483859, 0.875121, 0.00662926 )  //339
DX3DVERT( 0.128288, 0.382072, -0.0928192 ) DX3DVNORM( 0.437254, 0.858122, -0.269139 )  //340
DX3DVERT( 0.155762, 0.377036, -0.0508424 ) DX3DVNORM( 0.505538, 0.849501, -0.150927 )  //341
DX3DVERT( 0.0911794, 0.388022, -0.125452 ) DX3DVNORM( 0.365012, 0.847878, -0.384537 )  //342
DX3DVERT( 0.0468404, 0.395978, -0.145292 ) DX3DVNORM( 0.184899, 0.84488, -0.501986 )  //343
DX3DVERT( -0.000351789, 0.398436, -0.145887 ) DX3DVNORM( -0.080502, 0.842923, -0.531978 )  //344
DX3DVERT( -0.0459768, 0.391675, -0.137677 ) DX3DVNORM( -0.268532, 0.846636, -0.459453 )  //345
DX3DVERT( -0.0871458, 0.385587, -0.117439 ) DX3DVNORM( -0.385711, 0.852117, -0.353727 )  //346
DX3DVERT( -0.120032, 0.378683, -0.0851952 ) DX3DVNORM( -0.459252, 0.85068, -0.255795 )  //347
DX3DVERT( -0.144721, 0.374052, -0.0453465 ) DX3DVNORM( -0.50495, 0.847904, -0.161509 )  //348
DX3DVERT( -0.158334, 0.368759, 0.000393006 ) DX3DVNORM( -0.535222, 0.844356, -0.0244994 )  //349
DX3DVERT( -0.153978, 0.368332, 0.0496033 ) DX3DVNORM( -0.534937, 0.83597, 0.122462 )  //350
DX3DVERT( -0.13182, 0.375318, 0.0944294 ) DX3DVNORM( -0.475698, 0.831148, 0.287932 )  //351
DX3DVERT( -0.0953929, 0.379099, 0.1292 ) DX3DVNORM( -0.346868, 0.824814, 0.446502 )  //352
DX3DVERT( -0.0503648, 0.380029, 0.152573 ) DX3DVNORM( -0.193273, 0.82184, 0.535933 )  //353
DX3DVERT( -0.000160481, 0.381495, 0.16119 ) DX3DVNORM( -0.0172214, 0.822344, 0.568729 )  //354
DX3DVERT( 0.0501425, 0.382807, 0.154053 ) DX3DVNORM( 0.149494, 0.823306, 0.547557 )  //355
DX3DVERT( 0.0977264, 0.381673, 0.133975 ) DX3DVNORM( 0.296737, 0.829126, 0.473812 )  //356
DX3DVERT( 0.136008, 0.379681, 0.0983174 ) DX3DVNORM( 0.445444, 0.835509, 0.321721 )  //357
DX3DVERT( 0.158988, 0.37732, 0.0509903 ) DX3DVNORM( 0.540635, 0.830062, 0.136788 )  //358
DX3DVERT( 0.163685, 0.376834, 3.29682e-006 ) DX3DVNORM( 0.553577, 0.832612, -0.0176016 )  //359
DX3DVERT( 0.0767881, 0.429914, -0.0559686 ) DX3DVNORM( 0.553637, 0.746879, -0.368318 )  //360
DX3DVERT( 0.0929133, 0.429514, -0.0301698 ) DX3DVNORM( 0.615983, 0.74653, -0.251512 )  //361
DX3DVERT( 0.0547647, 0.435648, -0.0753581 ) DX3DVNORM( 0.473519, 0.750351, -0.461252 )  //362
DX3DVERT( 0.0285056, 0.440653, -0.0905643 ) DX3DVNORM( 0.203109, 0.771517, -0.602916 )  //363
DX3DVERT( -0.00194076, 0.442081, -0.0866105 ) DX3DVNORM( -0.144469, 0.749398, -0.646167 )  //364
DX3DVERT( -0.0291746, 0.434878, -0.0825519 ) DX3DVNORM( -0.369537, 0.733392, -0.570595 )  //365
DX3DVERT( -0.0501109, 0.431542, -0.0659127 ) DX3DVNORM( -0.513569, 0.719067, -0.468176 )  //366
DX3DVERT( -0.0679357, 0.429466, -0.0466352 ) DX3DVNORM( -0.586333, 0.712177, -0.386028 )  //367
DX3DVERT( -0.0855644, 0.424886, -0.0255024 ) DX3DVNORM( -0.647592, 0.707244, -0.283604 )  //368
DX3DVERT( -0.0972201, 0.424471, 0.000555677 ) DX3DVNORM( -0.695907, 0.713392, -0.0823759 )  //369
DX3DVERT( -0.0954766, 0.424053, 0.0301322 ) DX3DVNORM( -0.678613, 0.71891, 0.150509 )  //370
DX3DVERT( -0.0812784, 0.426785, 0.0581336 ) DX3DVNORM( -0.570894, 0.736846, 0.36213 )  //371
DX3DVERT( -0.0572442, 0.430076, 0.0767229 ) DX3DVNORM( -0.398904, 0.743972, 0.536079 )  //372
DX3DVERT( -0.0302537, 0.432503, 0.087875 ) DX3DVNORM( -0.228702, 0.747509, 0.62364 )  //373
DX3DVERT( -0.00117012, 0.432147, 0.0948248 ) DX3DVNORM( -0.0135553, 0.757502, 0.652692 )  //374
DX3DVERT( 0.0285721, 0.430774, 0.089999 ) DX3DVNORM( 0.169172, 0.758238, 0.629647 )  //375
DX3DVERT( 0.0567901, 0.431487, 0.0800961 ) DX3DVNORM( 0.316173, 0.763216, 0.563503 )  //376
DX3DVERT( 0.0803213, 0.434281, 0.059349 ) DX3DVNORM( 0.505829, 0.765609, 0.397467 )  //377
DX3DVERT( 0.0953111, 0.433577, 0.030651 ) DX3DVNORM( 0.630204, 0.756176, 0.176186 )  //378
DX3DVERT( 0.0997368, 0.432924, -2.64793e-005 ) DX3DVNORM( 0.658943, 0.75052, -0.0501396 )  //379
DX3DVERT( 0, -0.378344, 0 ) DX3DVNORM( 2.98564e-009, -1, 1.81518e-007 )  //380
DX3DVERT( 0.0379417, 0.478532, -0.0280748 ) DX3DVNORM( 0.614504, 0.667205, -0.420978 )  //381
DX3DVERT( 0.0459733, 0.478532, -0.0148481 ) DX3DVNORM( 0.679192, 0.677754, -0.281687 )  //382
DX3DVERT( 0.0284969, 0.478532, -0.0403552 ) DX3DVNORM( 0.531404, 0.675976, -0.510554 )  //383
DX3DVERT( 0.015228, 0.478532, -0.0513919 ) DX3DVNORM( 0.212306, 0.705038, -0.676644 )  //384
DX3DVERT( -0.00218503, 0.478532, -0.0499518 ) DX3DVNORM( -0.177917, 0.664126, -0.726142 )  //385
DX3DVERT( -0.0168374, 0.478532, -0.0438814 ) DX3DVNORM( -0.4302, 0.631512, -0.645073 )  //386
DX3DVERT( -0.0272083, 0.478532, -0.0337174 ) DX3DVNORM( -0.591847, 0.599463, -0.538852 )  //387
DX3DVERT( -0.035748, 0.478532, -0.0232036 ) DX3DVNORM( -0.653823, 0.594654, -0.46787 )  //388
DX3DVERT( -0.0428494, 0.478532, -0.0118791 ) DX3DVNORM( -0.719576, 0.605058, -0.340757 )  //389
DX3DVERT( -0.0464964, 0.478532, 0.000784018 ) DX3DVNORM( -0.770153, 0.630122, -0.0990488 )  //390
DX3DVERT( -0.0455222, 0.478532, 0.0144663 ) DX3DVNORM( -0.745119, 0.643722, 0.174413 )  //391
DX3DVERT( -0.0398867, 0.478532, 0.0280958 ) DX3DVNORM( -0.62385, 0.654272, 0.427481 )  //392
DX3DVERT( -0.0293101, 0.478532, 0.0380577 ) DX3DVNORM( -0.436376, 0.651836, 0.620231 )  //393
DX3DVERT( -0.0164242, 0.478532, 0.0445385 ) DX3DVNORM( -0.257178, 0.652138, 0.713145 )  //394
DX3DVERT( -0.00184793, 0.478532, 0.0478574 ) DX3DVNORM( -0.00785489, 0.66158, 0.749834 )  //395
DX3DVERT( 0.012801, 0.478532, 0.0448526 ) DX3DVNORM( 0.193205, 0.656996, 0.728716 )  //396
DX3DVERT( 0.026912, 0.478532, 0.0402445 ) DX3DVNORM( 0.33653, 0.672979, 0.658671 )  //397
DX3DVERT( 0.0397473, 0.478532, 0.0307635 ) DX3DVNORM( 0.548699, 0.696456, 0.462471 )  //398
DX3DVERT( 0.0470443, 0.478532, 0.0160138 ) DX3DVNORM( 0.685903, 0.698313, 0.204684 )  //399
DX3DVERT( 0.0489503, 0.478532, 0.000474349 ) DX3DVNORM( 0.720084, 0.692555, -0.0429679 )  //400
DX3DVERT( -0.00252441, 0.539639, 0.000981965 ) DX3DVNORM( -0.0727289, 0.997264, 0.0132192 )  //401
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_SlimeChan___mSlimeChan_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_SlimeChan___mSlimeChan_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM( VN, 402 )
DX3DVERTEX_END


#else
#define vertex_SlimeChan___mSlimeChan_1	NULL
#define vertexbuff_SlimeChan___mSlimeChan_1	NULL
#endif




#if ((PT_SlimeChan___mSlimeChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_TRILIST) ) || (PT_SlimeChan___mSlimeChan_1 == PT_TRILIST )


#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DINDEX_START( index_SlimeChan___mSlimeChan_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 24, 23, // 22 68
	24, 25, 23, // 23 71
	24, 26, 25, // 24 74
	26, 27, 25, // 25 77
	26, 28, 27, // 26 80
	28, 29, 27, // 27 83
	28, 30, 29, // 28 86
	30, 31, 29, // 29 89
	30, 32, 31, // 30 92
	32, 33, 31, // 31 95
	32, 34, 33, // 32 98
	34, 35, 33, // 33 101
	34, 36, 35, // 34 104
	36, 37, 35, // 35 107
	36, 38, 37, // 36 110
	38, 39, 37, // 37 113
	38, 0, 39, // 38 116
	0, 3, 39, // 39 119
	3, 2, 41, // 40 122
	2, 40, 41, // 41 125
	2, 5, 40, // 42 128
	5, 42, 40, // 43 131
	5, 7, 42, // 44 134
	7, 43, 42, // 45 137
	7, 9, 43, // 46 140
	9, 44, 43, // 47 143
	9, 11, 44, // 48 146
	11, 45, 44, // 49 149
	11, 13, 45, // 50 152
	13, 46, 45, // 51 155
	13, 15, 46, // 52 158
	15, 47, 46, // 53 161
	15, 17, 47, // 54 164
	17, 48, 47, // 55 167
	17, 19, 48, // 56 170
	19, 49, 48, // 57 173
	19, 21, 49, // 58 176
	21, 50, 49, // 59 179
	21, 23, 50, // 60 182
	23, 51, 50, // 61 185
	23, 25, 51, // 62 188
	25, 52, 51, // 63 191
	25, 27, 52, // 64 194
	27, 53, 52, // 65 197
	27, 29, 53, // 66 200
	29, 54, 53, // 67 203
	29, 31, 54, // 68 206
	31, 55, 54, // 69 209
	31, 33, 55, // 70 212
	33, 56, 55, // 71 215
	33, 35, 56, // 72 218
	35, 57, 56, // 73 221
	35, 37, 57, // 74 224
	37, 58, 57, // 75 227
	37, 39, 58, // 76 230
	39, 59, 58, // 77 233
	39, 3, 59, // 78 236
	3, 41, 59, // 79 239
	41, 40, 61, // 80 242
	40, 60, 61, // 81 245
	40, 42, 60, // 82 248
	42, 62, 60, // 83 251
	42, 43, 62, // 84 254
	43, 63, 62, // 85 257
	43, 44, 63, // 86 260
	44, 64, 63, // 87 263
	44, 45, 64, // 88 266
	45, 65, 64, // 89 269
	45, 46, 65, // 90 272
	46, 66, 65, // 91 275
	46, 47, 66, // 92 278
	47, 67, 66, // 93 281
	47, 48, 67, // 94 284
	48, 68, 67, // 95 287
	48, 49, 68, // 96 290
	49, 69, 68, // 97 293
	49, 50, 69, // 98 296
	50, 70, 69, // 99 299
	50, 51, 70, // 100 302
	51, 71, 70, // 101 305
	51, 52, 71, // 102 308
	52, 72, 71, // 103 311
	52, 53, 72, // 104 314
	53, 73, 72, // 105 317
	53, 54, 73, // 106 320
	54, 74, 73, // 107 323
	54, 55, 74, // 108 326
	55, 75, 74, // 109 329
	55, 56, 75, // 110 332
	56, 76, 75, // 111 335
	56, 57, 76, // 112 338
	57, 77, 76, // 113 341
	57, 58, 77, // 114 344
	58, 78, 77, // 115 347
	58, 59, 78, // 116 350
	59, 79, 78, // 117 353
	59, 41, 79, // 118 356
	41, 61, 79, // 119 359
	61, 60, 81, // 120 362
	60, 80, 81, // 121 365
	60, 62, 80, // 122 368
	62, 82, 80, // 123 371
	62, 63, 82, // 124 374
	63, 83, 82, // 125 377
	63, 64, 83, // 126 380
	64, 84, 83, // 127 383
	64, 65, 84, // 128 386
	65, 85, 84, // 129 389
	65, 66, 85, // 130 392
	66, 86, 85, // 131 395
	66, 67, 86, // 132 398
	67, 87, 86, // 133 401
	67, 68, 87, // 134 404
	68, 88, 87, // 135 407
	68, 69, 88, // 136 410
	69, 89, 88, // 137 413
	69, 70, 89, // 138 416
	70, 90, 89, // 139 419
	70, 71, 90, // 140 422
	71, 91, 90, // 141 425
	71, 72, 91, // 142 428
	72, 92, 91, // 143 431
	72, 73, 92, // 144 434
	73, 93, 92, // 145 437
	73, 74, 93, // 146 440
	74, 94, 93, // 147 443
	74, 75, 94, // 148 446
	75, 95, 94, // 149 449
	75, 76, 95, // 150 452
	76, 96, 95, // 151 455
	76, 77, 96, // 152 458
	77, 97, 96, // 153 461
	77, 78, 97, // 154 464
	78, 98, 97, // 155 467
	78, 79, 98, // 156 470
	79, 99, 98, // 157 473
	79, 61, 99, // 158 476
	61, 81, 99, // 159 479
	81, 80, 101, // 160 482
	80, 100, 101, // 161 485
	80, 82, 100, // 162 488
	82, 102, 100, // 163 491
	82, 83, 102, // 164 494
	83, 103, 102, // 165 497
	83, 84, 103, // 166 500
	84, 104, 103, // 167 503
	84, 85, 104, // 168 506
	85, 105, 104, // 169 509
	85, 86, 105, // 170 512
	86, 106, 105, // 171 515
	86, 87, 106, // 172 518
	87, 107, 106, // 173 521
	87, 88, 107, // 174 524
	88, 108, 107, // 175 527
	88, 89, 108, // 176 530
	89, 109, 108, // 177 533
	89, 90, 109, // 178 536
	90, 110, 109, // 179 539
	90, 91, 110, // 180 542
	91, 111, 110, // 181 545
	91, 92, 111, // 182 548
	92, 112, 111, // 183 551
	92, 93, 112, // 184 554
	93, 113, 112, // 185 557
	93, 94, 113, // 186 560
	94, 114, 113, // 187 563
	94, 95, 114, // 188 566
	95, 115, 114, // 189 569
	95, 96, 115, // 190 572
	96, 116, 115, // 191 575
	96, 97, 116, // 192 578
	97, 117, 116, // 193 581
	97, 98, 117, // 194 584
	98, 118, 117, // 195 587
	98, 99, 118, // 196 590
	99, 119, 118, // 197 593
	99, 81, 119, // 198 596
	81, 101, 119, // 199 599
	101, 100, 121, // 200 602
	100, 120, 121, // 201 605
	100, 102, 120, // 202 608
	102, 122, 120, // 203 611
	102, 103, 122, // 204 614
	103, 123, 122, // 205 617
	103, 104, 123, // 206 620
	104, 124, 123, // 207 623
	104, 105, 124, // 208 626
	105, 125, 124, // 209 629
	105, 106, 125, // 210 632
	106, 126, 125, // 211 635
	106, 107, 126, // 212 638
	107, 127, 126, // 213 641
	107, 108, 127, // 214 644
	108, 128, 127, // 215 647
	108, 109, 128, // 216 650
	109, 129, 128, // 217 653
	109, 110, 129, // 218 656
	110, 130, 129, // 219 659
	110, 111, 130, // 220 662
	111, 131, 130, // 221 665
	111, 112, 131, // 222 668
	112, 132, 131, // 223 671
	112, 113, 132, // 224 674
	113, 133, 132, // 225 677
	113, 114, 133, // 226 680
	114, 134, 133, // 227 683
	114, 115, 134, // 228 686
	115, 135, 134, // 229 689
	115, 116, 135, // 230 692
	116, 136, 135, // 231 695
	116, 117, 136, // 232 698
	117, 137, 136, // 233 701
	117, 118, 137, // 234 704
	118, 138, 137, // 235 707
	118, 119, 138, // 236 710
	119, 139, 138, // 237 713
	119, 101, 139, // 238 716
	101, 121, 139, // 239 719
	121, 120, 141, // 240 722
	120, 140, 141, // 241 725
	120, 122, 140, // 242 728
	122, 142, 140, // 243 731
	122, 123, 142, // 244 734
	123, 143, 142, // 245 737
	123, 124, 143, // 246 740
	124, 144, 143, // 247 743
	124, 125, 144, // 248 746
	125, 145, 144, // 249 749
	125, 126, 145, // 250 752
	126, 146, 145, // 251 755
	126, 127, 146, // 252 758
	127, 147, 146, // 253 761
	127, 128, 147, // 254 764
	128, 148, 147, // 255 767
	128, 129, 148, // 256 770
	129, 149, 148, // 257 773
	129, 130, 149, // 258 776
	130, 150, 149, // 259 779
	130, 131, 150, // 260 782
	131, 151, 150, // 261 785
	131, 132, 151, // 262 788
	132, 152, 151, // 263 791
	132, 133, 152, // 264 794
	133, 153, 152, // 265 797
	133, 134, 153, // 266 800
	134, 154, 153, // 267 803
	134, 135, 154, // 268 806
	135, 155, 154, // 269 809
	135, 136, 155, // 270 812
	136, 156, 155, // 271 815
	136, 137, 156, // 272 818
	137, 157, 156, // 273 821
	137, 138, 157, // 274 824
	138, 158, 157, // 275 827
	138, 139, 158, // 276 830
	139, 159, 158, // 277 833
	139, 121, 159, // 278 836
	121, 141, 159, // 279 839
	141, 140, 161, // 280 842
	140, 160, 161, // 281 845
	140, 142, 160, // 282 848
	142, 162, 160, // 283 851
	142, 143, 162, // 284 854
	143, 163, 162, // 285 857
	143, 144, 163, // 286 860
	144, 164, 163, // 287 863
	144, 145, 164, // 288 866
	145, 165, 164, // 289 869
	145, 146, 165, // 290 872
	146, 166, 165, // 291 875
	146, 147, 166, // 292 878
	147, 167, 166, // 293 881
	147, 148, 167, // 294 884
	148, 168, 167, // 295 887
	148, 149, 168, // 296 890
	149, 169, 168, // 297 893
	149, 150, 169, // 298 896
	150, 170, 169, // 299 899
	150, 151, 170, // 300 902
	151, 171, 170, // 301 905
	151, 152, 171, // 302 908
	152, 172, 171, // 303 911
	152, 153, 172, // 304 914
	153, 173, 172, // 305 917
	153, 154, 173, // 306 920
	154, 174, 173, // 307 923
	154, 155, 174, // 308 926
	155, 175, 174, // 309 929
	155, 156, 175, // 310 932
	156, 176, 175, // 311 935
	156, 157, 176, // 312 938
	157, 177, 176, // 313 941
	157, 158, 177, // 314 944
	158, 178, 177, // 315 947
	158, 159, 178, // 316 950
	159, 179, 178, // 317 953
	159, 141, 179, // 318 956
	141, 161, 179, // 319 959
	161, 160, 181, // 320 962
	160, 180, 181, // 321 965
	160, 162, 180, // 322 968
	162, 182, 180, // 323 971
	162, 163, 182, // 324 974
	163, 183, 182, // 325 977
	163, 164, 183, // 326 980
	164, 184, 183, // 327 983
	164, 165, 184, // 328 986
	165, 185, 184, // 329 989
	165, 166, 185, // 330 992
	166, 186, 185, // 331 995
	166, 167, 186, // 332 998
	167, 187, 186, // 333 1001
	167, 168, 187, // 334 1004
	168, 188, 187, // 335 1007
	168, 169, 188, // 336 1010
	169, 189, 188, // 337 1013
	169, 170, 189, // 338 1016
	170, 190, 189, // 339 1019
	170, 171, 190, // 340 1022
	171, 191, 190, // 341 1025
	171, 172, 191, // 342 1028
	172, 192, 191, // 343 1031
	172, 173, 192, // 344 1034
	173, 193, 192, // 345 1037
	173, 174, 193, // 346 1040
	174, 194, 193, // 347 1043
	174, 175, 194, // 348 1046
	175, 195, 194, // 349 1049
	175, 176, 195, // 350 1052
	176, 196, 195, // 351 1055
	176, 177, 196, // 352 1058
	177, 197, 196, // 353 1061
	177, 178, 197, // 354 1064
	178, 198, 197, // 355 1067
	178, 179, 198, // 356 1070
	179, 199, 198, // 357 1073
	179, 161, 199, // 358 1076
	161, 181, 199, // 359 1079
	181, 180, 201, // 360 1082
	180, 200, 201, // 361 1085
	180, 182, 200, // 362 1088
	182, 202, 200, // 363 1091
	182, 183, 202, // 364 1094
	183, 203, 202, // 365 1097
	183, 184, 203, // 366 1100
	184, 204, 203, // 367 1103
	184, 185, 204, // 368 1106
	185, 205, 204, // 369 1109
	185, 186, 205, // 370 1112
	186, 206, 205, // 371 1115
	186, 187, 206, // 372 1118
	187, 207, 206, // 373 1121
	187, 188, 207, // 374 1124
	188, 208, 207, // 375 1127
	188, 189, 208, // 376 1130
	189, 209, 208, // 377 1133
	189, 190, 209, // 378 1136
	190, 210, 209, // 379 1139
	190, 191, 210, // 380 1142
	191, 211, 210, // 381 1145
	191, 192, 211, // 382 1148
	192, 212, 211, // 383 1151
	192, 193, 212, // 384 1154
	193, 213, 212, // 385 1157
	193, 194, 213, // 386 1160
	194, 214, 213, // 387 1163
	194, 195, 214, // 388 1166
	195, 215, 214, // 389 1169
	195, 196, 215, // 390 1172
	196, 216, 215, // 391 1175
	196, 197, 216, // 392 1178
	197, 217, 216, // 393 1181
	197, 198, 217, // 394 1184
	198, 218, 217, // 395 1187
	198, 199, 218, // 396 1190
	199, 219, 218, // 397 1193
	199, 181, 219, // 398 1196
	181, 201, 219, // 399 1199
	201, 200, 221, // 400 1202
	200, 220, 221, // 401 1205
	200, 202, 220, // 402 1208
	202, 222, 220, // 403 1211
	202, 203, 222, // 404 1214
	203, 223, 222, // 405 1217
	203, 204, 223, // 406 1220
	204, 224, 223, // 407 1223
	204, 205, 224, // 408 1226
	205, 225, 224, // 409 1229
	205, 206, 225, // 410 1232
	206, 226, 225, // 411 1235
	206, 207, 226, // 412 1238
	207, 227, 226, // 413 1241
	207, 208, 227, // 414 1244
	208, 228, 227, // 415 1247
	208, 209, 228, // 416 1250
	209, 229, 228, // 417 1253
	209, 210, 229, // 418 1256
	210, 230, 229, // 419 1259
	210, 211, 230, // 420 1262
	211, 231, 230, // 421 1265
	211, 212, 231, // 422 1268
	212, 232, 231, // 423 1271
	212, 213, 232, // 424 1274
	213, 233, 232, // 425 1277
	213, 214, 233, // 426 1280
	214, 234, 233, // 427 1283
	214, 215, 234, // 428 1286
	215, 235, 234, // 429 1289
	215, 216, 235, // 430 1292
	216, 236, 235, // 431 1295
	216, 217, 236, // 432 1298
	217, 237, 236, // 433 1301
	217, 218, 237, // 434 1304
	218, 238, 237, // 435 1307
	218, 219, 238, // 436 1310
	219, 239, 238, // 437 1313
	219, 201, 239, // 438 1316
	201, 221, 239, // 439 1319
	221, 220, 241, // 440 1322
	220, 240, 241, // 441 1325
	220, 222, 240, // 442 1328
	222, 242, 240, // 443 1331
	222, 223, 242, // 444 1334
	223, 243, 242, // 445 1337
	223, 224, 243, // 446 1340
	224, 244, 243, // 447 1343
	224, 225, 244, // 448 1346
	225, 245, 244, // 449 1349
	225, 226, 245, // 450 1352
	226, 246, 245, // 451 1355
	226, 227, 246, // 452 1358
	227, 247, 246, // 453 1361
	227, 228, 247, // 454 1364
	228, 248, 247, // 455 1367
	228, 229, 248, // 456 1370
	229, 249, 248, // 457 1373
	229, 230, 249, // 458 1376
	230, 250, 249, // 459 1379
	230, 231, 250, // 460 1382
	231, 251, 250, // 461 1385
	231, 232, 251, // 462 1388
	232, 252, 251, // 463 1391
	232, 233, 252, // 464 1394
	233, 253, 252, // 465 1397
	233, 234, 253, // 466 1400
	234, 254, 253, // 467 1403
	234, 235, 254, // 468 1406
	235, 255, 254, // 469 1409
	235, 236, 255, // 470 1412
	236, 256, 255, // 471 1415
	236, 237, 256, // 472 1418
	237, 257, 256, // 473 1421
	237, 238, 257, // 474 1424
	238, 258, 257, // 475 1427
	238, 239, 258, // 476 1430
	239, 259, 258, // 477 1433
	239, 221, 259, // 478 1436
	221, 241, 259, // 479 1439
	241, 240, 261, // 480 1442
	240, 260, 261, // 481 1445
	240, 242, 260, // 482 1448
	242, 262, 260, // 483 1451
	242, 243, 262, // 484 1454
	243, 263, 262, // 485 1457
	243, 244, 263, // 486 1460
	244, 264, 263, // 487 1463
	244, 245, 264, // 488 1466
	245, 265, 264, // 489 1469
	245, 246, 265, // 490 1472
	246, 266, 265, // 491 1475
	246, 247, 266, // 492 1478
	247, 267, 266, // 493 1481
	247, 248, 267, // 494 1484
	248, 268, 267, // 495 1487
	248, 249, 268, // 496 1490
	249, 269, 268, // 497 1493
	249, 250, 269, // 498 1496
	250, 270, 269, // 499 1499
	250, 251, 270, // 500 1502
	251, 271, 270, // 501 1505
	251, 252, 271, // 502 1508
	252, 272, 271, // 503 1511
	252, 253, 272, // 504 1514
	253, 273, 272, // 505 1517
	253, 254, 273, // 506 1520
	254, 274, 273, // 507 1523
	254, 255, 274, // 508 1526
	255, 275, 274, // 509 1529
	255, 256, 275, // 510 1532
	256, 276, 275, // 511 1535
	256, 257, 276, // 512 1538
	257, 277, 276, // 513 1541
	257, 258, 277, // 514 1544
	258, 278, 277, // 515 1547
	258, 259, 278, // 516 1550
	259, 279, 278, // 517 1553
	259, 241, 279, // 518 1556
	241, 261, 279, // 519 1559
	261, 260, 281, // 520 1562
	260, 280, 281, // 521 1565
	260, 262, 280, // 522 1568
	262, 282, 280, // 523 1571
	262, 263, 282, // 524 1574
	263, 283, 282, // 525 1577
	263, 264, 283, // 526 1580
	264, 284, 283, // 527 1583
	264, 265, 284, // 528 1586
	265, 285, 284, // 529 1589
	265, 266, 285, // 530 1592
	266, 286, 285, // 531 1595
	266, 267, 286, // 532 1598
	267, 287, 286, // 533 1601
	267, 268, 287, // 534 1604
	268, 288, 287, // 535 1607
	268, 269, 288, // 536 1610
	269, 289, 288, // 537 1613
	269, 270, 289, // 538 1616
	270, 290, 289, // 539 1619
	270, 271, 290, // 540 1622
	271, 291, 290, // 541 1625
	271, 272, 291, // 542 1628
	272, 292, 291, // 543 1631
	272, 273, 292, // 544 1634
	273, 293, 292, // 545 1637
	273, 274, 293, // 546 1640
	274, 294, 293, // 547 1643
	274, 275, 294, // 548 1646
	275, 295, 294, // 549 1649
	275, 276, 295, // 550 1652
	276, 296, 295, // 551 1655
	276, 277, 296, // 552 1658
	277, 297, 296, // 553 1661
	277, 278, 297, // 554 1664
	278, 298, 297, // 555 1667
	278, 279, 298, // 556 1670
	279, 299, 298, // 557 1673
	279, 261, 299, // 558 1676
	261, 281, 299, // 559 1679
	281, 280, 301, // 560 1682
	280, 300, 301, // 561 1685
	280, 282, 300, // 562 1688
	282, 302, 300, // 563 1691
	282, 283, 302, // 564 1694
	283, 303, 302, // 565 1697
	283, 284, 303, // 566 1700
	284, 304, 303, // 567 1703
	284, 285, 304, // 568 1706
	285, 305, 304, // 569 1709
	285, 286, 305, // 570 1712
	286, 306, 305, // 571 1715
	286, 287, 306, // 572 1718
	287, 307, 306, // 573 1721
	287, 288, 307, // 574 1724
	288, 308, 307, // 575 1727
	288, 289, 308, // 576 1730
	289, 309, 308, // 577 1733
	289, 290, 309, // 578 1736
	290, 310, 309, // 579 1739
	290, 291, 310, // 580 1742
	291, 311, 310, // 581 1745
	291, 292, 311, // 582 1748
	292, 312, 311, // 583 1751
	292, 293, 312, // 584 1754
	293, 313, 312, // 585 1757
	293, 294, 313, // 586 1760
	294, 314, 313, // 587 1763
	294, 295, 314, // 588 1766
	295, 315, 314, // 589 1769
	295, 296, 315, // 590 1772
	296, 316, 315, // 591 1775
	296, 297, 316, // 592 1778
	297, 317, 316, // 593 1781
	297, 298, 317, // 594 1784
	298, 318, 317, // 595 1787
	298, 299, 318, // 596 1790
	299, 319, 318, // 597 1793
	299, 281, 319, // 598 1796
	281, 301, 319, // 599 1799
	301, 300, 321, // 600 1802
	300, 320, 321, // 601 1805
	300, 302, 320, // 602 1808
	302, 322, 320, // 603 1811
	302, 303, 322, // 604 1814
	303, 323, 322, // 605 1817
	303, 304, 323, // 606 1820
	304, 324, 323, // 607 1823
	304, 305, 324, // 608 1826
	305, 325, 324, // 609 1829
	305, 306, 325, // 610 1832
	306, 326, 325, // 611 1835
	306, 307, 326, // 612 1838
	307, 327, 326, // 613 1841
	307, 308, 327, // 614 1844
	308, 328, 327, // 615 1847
	308, 309, 328, // 616 1850
	309, 329, 328, // 617 1853
	309, 310, 329, // 618 1856
	310, 330, 329, // 619 1859
	310, 311, 330, // 620 1862
	311, 331, 330, // 621 1865
	311, 312, 331, // 622 1868
	312, 332, 331, // 623 1871
	312, 313, 332, // 624 1874
	313, 333, 332, // 625 1877
	313, 314, 333, // 626 1880
	314, 334, 333, // 627 1883
	314, 315, 334, // 628 1886
	315, 335, 334, // 629 1889
	315, 316, 335, // 630 1892
	316, 336, 335, // 631 1895
	316, 317, 336, // 632 1898
	317, 337, 336, // 633 1901
	317, 318, 337, // 634 1904
	318, 338, 337, // 635 1907
	318, 319, 338, // 636 1910
	319, 339, 338, // 637 1913
	319, 301, 339, // 638 1916
	301, 321, 339, // 639 1919
	321, 320, 341, // 640 1922
	320, 340, 341, // 641 1925
	320, 322, 340, // 642 1928
	322, 342, 340, // 643 1931
	322, 323, 342, // 644 1934
	323, 343, 342, // 645 1937
	323, 324, 343, // 646 1940
	324, 344, 343, // 647 1943
	324, 325, 344, // 648 1946
	325, 345, 344, // 649 1949
	325, 326, 345, // 650 1952
	326, 346, 345, // 651 1955
	326, 327, 346, // 652 1958
	327, 347, 346, // 653 1961
	327, 328, 347, // 654 1964
	328, 348, 347, // 655 1967
	328, 329, 348, // 656 1970
	329, 349, 348, // 657 1973
	329, 330, 349, // 658 1976
	330, 350, 349, // 659 1979
	330, 331, 350, // 660 1982
	331, 351, 350, // 661 1985
	331, 332, 351, // 662 1988
	332, 352, 351, // 663 1991
	332, 333, 352, // 664 1994
	333, 353, 352, // 665 1997
	333, 334, 353, // 666 2000
	334, 354, 353, // 667 2003
	334, 335, 354, // 668 2006
	335, 355, 354, // 669 2009
	335, 336, 355, // 670 2012
	336, 356, 355, // 671 2015
	336, 337, 356, // 672 2018
	337, 357, 356, // 673 2021
	337, 338, 357, // 674 2024
	338, 358, 357, // 675 2027
	338, 339, 358, // 676 2030
	339, 359, 358, // 677 2033
	339, 321, 359, // 678 2036
	321, 341, 359, // 679 2039
	341, 340, 361, // 680 2042
	340, 360, 361, // 681 2045
	340, 342, 360, // 682 2048
	342, 362, 360, // 683 2051
	342, 343, 362, // 684 2054
	343, 363, 362, // 685 2057
	343, 344, 363, // 686 2060
	344, 364, 363, // 687 2063
	344, 345, 364, // 688 2066
	345, 365, 364, // 689 2069
	345, 346, 365, // 690 2072
	346, 366, 365, // 691 2075
	346, 347, 366, // 692 2078
	347, 367, 366, // 693 2081
	347, 348, 367, // 694 2084
	348, 368, 367, // 695 2087
	348, 349, 368, // 696 2090
	349, 369, 368, // 697 2093
	349, 350, 369, // 698 2096
	350, 370, 369, // 699 2099
	350, 351, 370, // 700 2102
	351, 371, 370, // 701 2105
	351, 352, 371, // 702 2108
	352, 372, 371, // 703 2111
	352, 353, 372, // 704 2114
	353, 373, 372, // 705 2117
	353, 354, 373, // 706 2120
	354, 374, 373, // 707 2123
	354, 355, 374, // 708 2126
	355, 375, 374, // 709 2129
	355, 356, 375, // 710 2132
	356, 376, 375, // 711 2135
	356, 357, 376, // 712 2138
	357, 377, 376, // 713 2141
	357, 358, 377, // 714 2144
	358, 378, 377, // 715 2147
	358, 359, 378, // 716 2150
	359, 379, 378, // 717 2153
	359, 341, 379, // 718 2156
	341, 361, 379, // 719 2159
	1, 0, 380, // 720 2162
	4, 1, 380, // 721 2165
	6, 4, 380, // 722 2168
	8, 6, 380, // 723 2171
	10, 8, 380, // 724 2174
	12, 10, 380, // 725 2177
	14, 12, 380, // 726 2180
	16, 14, 380, // 727 2183
	18, 16, 380, // 728 2186
	20, 18, 380, // 729 2189
	22, 20, 380, // 730 2192
	24, 22, 380, // 731 2195
	26, 24, 380, // 732 2198
	28, 26, 380, // 733 2201
	30, 28, 380, // 734 2204
	32, 30, 380, // 735 2207
	34, 32, 380, // 736 2210
	36, 34, 380, // 737 2213
	38, 36, 380, // 738 2216
	0, 38, 380, // 739 2219
	361, 360, 382, // 740 2222
	360, 381, 382, // 741 2225
	360, 362, 381, // 742 2228
	362, 383, 381, // 743 2231
	362, 363, 383, // 744 2234
	363, 384, 383, // 745 2237
	363, 364, 384, // 746 2240
	364, 385, 384, // 747 2243
	364, 365, 385, // 748 2246
	365, 386, 385, // 749 2249
	365, 366, 386, // 750 2252
	366, 387, 386, // 751 2255
	366, 367, 387, // 752 2258
	367, 388, 387, // 753 2261
	367, 368, 388, // 754 2264
	368, 389, 388, // 755 2267
	368, 369, 389, // 756 2270
	369, 390, 389, // 757 2273
	369, 370, 390, // 758 2276
	370, 391, 390, // 759 2279
	370, 371, 391, // 760 2282
	371, 392, 391, // 761 2285
	371, 372, 392, // 762 2288
	372, 393, 392, // 763 2291
	372, 373, 393, // 764 2294
	373, 394, 393, // 765 2297
	373, 374, 394, // 766 2300
	374, 395, 394, // 767 2303
	374, 375, 395, // 768 2306
	375, 396, 395, // 769 2309
	375, 376, 396, // 770 2312
	376, 397, 396, // 771 2315
	376, 377, 397, // 772 2318
	377, 398, 397, // 773 2321
	377, 378, 398, // 774 2324
	378, 399, 398, // 775 2327
	378, 379, 399, // 776 2330
	379, 400, 399, // 777 2333
	379, 361, 400, // 778 2336
	361, 382, 400, // 779 2339
	382, 381, 401, // 780 2342
	381, 383, 401, // 781 2345
	383, 384, 401, // 782 2348
	384, 385, 401, // 783 2351
	385, 386, 401, // 784 2354
	386, 387, 401, // 785 2357
	387, 388, 401, // 786 2360
	388, 389, 401, // 787 2363
	389, 390, 401, // 788 2366
	390, 391, 401, // 789 2369
	391, 392, 401, // 790 2372
	392, 393, 401, // 791 2375
	393, 394, 401, // 792 2378
	394, 395, 401, // 793 2381
	395, 396, 401, // 794 2384
	396, 397, 401, // 795 2387
	397, 398, 401, // 796 2390
	398, 399, 401, // 797 2393
	399, 400, 401, // 798 2396
	400, 382, 401, // 799 2399
DX3DINDEX_END
#endif

#else
#define index_SlimeChan___mSlimeChan_1	NULL
#endif




#if ((PT_SlimeChan___mSlimeChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_INDEXSTRIP) ) || (PT_SlimeChan___mSlimeChan_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_SlimeChan___mSlimeChan_1_INDEXSTRIP 	NULL
#endif




#if ((PT_SlimeChan___mSlimeChan_1 == PT_FOLLOWALL) && (PT_ALL_Gachan3DObjectFace00_tst__ == PT_VERTEXSTRIP) ) || (PT_SlimeChan___mSlimeChan_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_SlimeChan___mSlimeChan_1_VERTEXSTRIP 	NULL
#define vertexbuff_SlimeChan___mSlimeChan_1_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_SlimeChan__ )
DX3DMODEL_START( model_SlimeChan___mFace_0 )
DX3DMODEL_VERTEX( vertex_SlimeChan___mFace_0 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_SlimeChan___mFace_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 204 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mFace )
DX3DMODEL_END
DX3DMODEL_START( model_SlimeChan___mSlimeChan_1 )
DX3DMODEL_VERTEX( vertex_SlimeChan___mSlimeChan_1 )
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DMODEL_INDEX( index_SlimeChan___mSlimeChan_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 2400 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mSlimeChan )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_SlimeChan__, 277990825 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_SlimeChan__ )
DX3DOBJECT_MATRIXBIND(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS(
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END




//////////// export info ///////////////
DX3DOBJECT_JOINTCOUNT( jointcnt_Gachan3DObjectFace00_tst___0, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Gachan3DObjectFace00_tst___1, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Gachan3DObjectFace00_tst___2, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Gachan3DObjectFace00_tst___3, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Gachan3DObjectFace00_tst___4, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Gachan3DObjectFace00_tst___5, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Gachan3DObjectFace00_tst___6, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Gachan3DObjectFace00_tst___7, 0 )




/////////////////////////////////////////////
#if ( !BINARY_Gachan3DObjectFace00_tst__ )
DX3DBINARYFILE( binaryfile_Gachan3DObjectFace00_tst__, NULL )
#else
DX3DBINARYFILE( binaryfile_Gachan3DObjectFace00_tst__, "" )
#endif


DX3DBINARYSIZE( binarysize_Gachan3DObjectFace00_tst__, 0 )


