//skipped groundPlane_transform
//skipped Manipulator1
//skipped UniversalManip
//skipped CubeCompass
/////////////////////////////////////////////
// object_ArmUpper_R___
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_initialShadingGroup )
DX3DMATERIAL_DIFF( 1, 0.8, 0, 0.0127998 )
DX3DMATERIAL_SPEC( 1, 1, 1, 1 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END


DX3DMATERIAL_START( material_mArm )
DX3DMATERIAL_DIFF( 1, 0.917, 0.917, 0.917 )
DX3DMATERIAL_SPEC( 1, 0, 0, 0 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END


DX3DMATERIAL_START( material_mArmGlay )
DX3DMATERIAL_DIFF( 1, 0.401, 0.401, 0.401 )
DX3DMATERIAL_SPEC( 1, 0, 0, 0 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_ArmUpper_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmUpper_R____initialShadingGroup_0 == PT_TRILIST ) || ((PT_ArmUpper_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP))  || (PT_ArmUpper_R____initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERT_START( VN, vertexbuff_ArmUpper_R____initialShadingGroup_0 )
DX3DVERT( -1.4284, 0, 0.240344 ) DX3DVNORM( 1, 0, -0 )  //0
DX3DVERT( -1.4284, 0.169949, 0.169949 ) DX3DVNORM( 1, -3.64812e-007, 4.95994e-007 )  //1
DX3DVERT( -1.4284, 0, 1.50293e-009 ) DX3DVNORM( 1, -9.12028e-008, -0 )  //2
DX3DVERT( -1.4284, -0.169949, 0.169949 ) DX3DVNORM( 1, 0, 2.47997e-007 )  //3
DX3DVERT( -1.4284, -0.240344, 1.50293e-009 ) DX3DVNORM( 1, 0, -0 )  //4
DX3DVERT( -1.4284, -0.169949, -0.169949 ) DX3DVNORM( 1, 7.29624e-007, -2.47997e-007 )  //5
DX3DVERT( -1.4284, 0, -0.240344 ) DX3DVNORM( 1, 7.29624e-007, -0 )  //6
DX3DVERT( -1.4284, 0.169949, -0.169949 ) DX3DVNORM( 1, -7.29623e-007, -4.95994e-007 )  //7
DX3DVERT( -1.4284, 0.240344, 1.50293e-009 ) DX3DVNORM( 1, -1.09443e-006, -0 )  //8
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_ArmUpper_R____initialShadingGroup_0 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_ArmUpper_R____initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 9 )
DX3DVERTEX_END


#else
#define vertex_ArmUpper_R____initialShadingGroup_0	NULL
#define vertexbuff_ArmUpper_R____initialShadingGroup_0	NULL
#endif




#if ((PT_ArmUpper_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmUpper_R____initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DINDEX_START( index_ArmUpper_R____initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 0, 2, // 1 5
	4, 3, 2, // 2 8
	5, 4, 2, // 3 11
	6, 5, 2, // 4 14
	7, 6, 2, // 5 17
	8, 7, 2, // 6 20
	1, 8, 2, // 7 23
DX3DINDEX_END
#endif

#else
#define index_ArmUpper_R____initialShadingGroup_0	NULL
#endif




#if ((PT_ArmUpper_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP) ) || (PT_ArmUpper_R____initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_ArmUpper_R____initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_ArmUpper_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_VERTEXSTRIP) ) || (PT_ArmUpper_R____initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_ArmUpper_R____initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_ArmUpper_R____initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_ArmUpper_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmUpper_R____mArm_1 == PT_TRILIST ) || ((PT_ArmUpper_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP))  || (PT_ArmUpper_R____mArm_1 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERT_START( VN, vertexbuff_ArmUpper_R____mArm_1 )
DX3DVERT( -1.80558, -0.230586, -0.280442 ) DX3DVNORM( -0.603544, 0, -0.797329 )  //0
DX3DVERT( -1.629, -0.340488, -0.414107 ) DX3DVNORM( -0.579152, 0, -0.81522 )  //1
DX3DVERT( -1.629, -0.207053, -0.414107 ) DX3DVNORM( -0.579152, 0, -0.81522 )  //2
DX3DVERT( -1.80558, -0.115293, -0.280442 ) DX3DVNORM( -0.603544, 0, -0.797329 )  //3
DX3DVERT( -1.5, -0.411111, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //4
DX3DVERT( -1.5, -0.25, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //5
DX3DVERT( -1.5, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( -1, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( -1, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( -1.5, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( -0.338507, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( -0.338507, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( -1.629, 0, -0.414107 ) DX3DVNORM( -0.579152, 0, -0.81522 )  //12
DX3DVERT( -1.80558, 0, -0.280442 ) DX3DVNORM( -0.603544, 0, -0.797329 )  //13
DX3DVERT( -1.5, 0, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //14
DX3DVERT( -1, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( -1.5, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( -0.338507, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( -1.629, 0.207053, -0.414107 ) DX3DVNORM( -0.579152, 0, -0.81522 )  //18
DX3DVERT( -1.80558, 0.115293, -0.280442 ) DX3DVNORM( -0.603544, 0, -0.797329 )  //19
DX3DVERT( -1.5, 0.25, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //20
DX3DVERT( -1, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( -1.5, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( -0.338507, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( -1.629, 0.340488, -0.414107 ) DX3DVNORM( -0.579152, 0, -0.81522 )  //24
DX3DVERT( -1.80558, 0.230586, -0.280442 ) DX3DVNORM( -0.603544, 0, -0.797329 )  //25
DX3DVERT( -1.5, 0.411111, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //26
DX3DVERT( -1, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( -1.5, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( -0.338507, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( -1.80558, 0.230586, -0.280442 ) DX3DVNORM( -0.698892, 0.494775, -0.516476 )  //30
DX3DVERT( -1.629, 0.340488, -0.414107 ) DX3DVNORM( -0.675712, 0.509952, -0.532318 )  //31
DX3DVERT( -1.629, 0.414107, -0.343581 ) DX3DVNORM( -0.675712, 0.509952, -0.532318 )  //32
DX3DVERT( -1.80558, 0.280442, -0.232681 ) DX3DVNORM( -0.698892, 0.494775, -0.516476 )  //33
DX3DVERT( -1.5, 0.411111, -0.5 ) DX3DVNORM( -0.651843, 0.524609, -0.547619 )  //34
DX3DVERT( -1.5, 0.5, -0.414846 ) DX3DVNORM( -0.651843, 0.524609, -0.547619 )  //35
DX3DVERT( -1.5, 0.411111, -0.5 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //36
DX3DVERT( -1, 0.411111, -0.5 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //37
DX3DVERT( -1, 0.5, -0.414846 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //38
DX3DVERT( -1.5, 0.5, -0.414846 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //39
DX3DVERT( -0.338507, 0.411111, -0.5 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //40
DX3DVERT( -0.338507, 0.5, -0.414846 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //41
DX3DVERT( -1.80558, 0.280442, -0.232681 ) DX3DVNORM( -0.603544, 0.79733, -0 )  //42
DX3DVERT( -1.629, 0.414107, -0.343581 ) DX3DVNORM( -0.579152, 0.81522, -0 )  //43
DX3DVERT( -1.629, 0.414107, -0 ) DX3DVNORM( -0.579152, 0.81522, -0 )  //44
DX3DVERT( -1.80558, 0.280442, -0 ) DX3DVNORM( -0.603544, 0.79733, -0 )  //45
DX3DVERT( -1.5, 0.5, -0.414846 ) DX3DVNORM( -0.55423, 0.832364, -0 )  //46
DX3DVERT( -1.5, 0.5, -0 ) DX3DVNORM( -0.55423, 0.832364, -0 )  //47
DX3DVERT( -1.5, 0.5, -0.414846 ) DX3DVNORM( 0, 1, -0 )  //48
DX3DVERT( -1, 0.5, -0.414846 ) DX3DVNORM( 0, 1, -0 )  //49
DX3DVERT( -1, 0.5, -0 ) DX3DVNORM( 0, 1, -0 )  //50
DX3DVERT( -1.5, 0.5, -0 ) DX3DVNORM( 0, 1, -0 )  //51
DX3DVERT( -0.338507, 0.5, -0.414846 ) DX3DVNORM( 0, 1, -0 )  //52
DX3DVERT( -0.338507, 0.5, -0 ) DX3DVNORM( 0, 1, -0 )  //53
DX3DVERT( -1.629, 0.414107, 0.343581 ) DX3DVNORM( -0.579152, 0.81522, -0 )  //54
DX3DVERT( -1.80558, 0.280442, 0.232681 ) DX3DVNORM( -0.603544, 0.79733, -0 )  //55
DX3DVERT( -1.5, 0.5, 0.414846 ) DX3DVNORM( -0.55423, 0.832364, -0 )  //56
DX3DVERT( -1, 0.5, 0.414846 ) DX3DVNORM( 0, 1, -0 )  //57
DX3DVERT( -1.5, 0.5, 0.414846 ) DX3DVNORM( 0, 1, -0 )  //58
DX3DVERT( -0.338507, 0.5, 0.414846 ) DX3DVNORM( 0, 1, -0 )  //59
DX3DVERT( -1.80558, 0.280442, 0.232681 ) DX3DVNORM( -0.698892, 0.494776, 0.516476 )  //60
DX3DVERT( -1.629, 0.414107, 0.343581 ) DX3DVNORM( -0.675711, 0.509952, 0.532318 )  //61
DX3DVERT( -1.629, 0.340488, 0.414107 ) DX3DVNORM( -0.675711, 0.509952, 0.532318 )  //62
DX3DVERT( -1.80558, 0.230586, 0.280442 ) DX3DVNORM( -0.698892, 0.494776, 0.516476 )  //63
DX3DVERT( -1.5, 0.5, 0.414846 ) DX3DVNORM( -0.651842, 0.52461, 0.547618 )  //64
DX3DVERT( -1.5, 0.411111, 0.5 ) DX3DVNORM( -0.651842, 0.52461, 0.547618 )  //65
DX3DVERT( -1.5, 0.5, 0.414846 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //66
DX3DVERT( -1, 0.5, 0.414846 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //67
DX3DVERT( -1, 0.411111, 0.5 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //68
DX3DVERT( -1.5, 0.411111, 0.5 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //69
DX3DVERT( -0.338507, 0.5, 0.414846 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //70
DX3DVERT( -0.338507, 0.411111, 0.5 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //71
DX3DVERT( -1.80558, 0.230586, 0.280442 ) DX3DVNORM( -0.603544, 0, 0.797329 )  //72
DX3DVERT( -1.629, 0.340488, 0.414107 ) DX3DVNORM( -0.579152, 0, 0.81522 )  //73
DX3DVERT( -1.629, 0.207053, 0.414107 ) DX3DVNORM( -0.579152, 0, 0.81522 )  //74
DX3DVERT( -1.80558, 0.115293, 0.280442 ) DX3DVNORM( -0.603544, 0, 0.797329 )  //75
DX3DVERT( -1.5, 0.411111, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //76
DX3DVERT( -1.5, 0.25, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //77
DX3DVERT( -1.5, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //78
DX3DVERT( -1, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //79
DX3DVERT( -1, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //80
DX3DVERT( -1.5, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //81
DX3DVERT( -0.338507, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //82
DX3DVERT( -0.338507, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //83
DX3DVERT( -1.629, 0, 0.414107 ) DX3DVNORM( -0.579152, 0, 0.81522 )  //84
DX3DVERT( -1.80558, 0, 0.280442 ) DX3DVNORM( -0.603544, 0, 0.797329 )  //85
DX3DVERT( -1.5, 0, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //86
DX3DVERT( -1, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //87
DX3DVERT( -1.5, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //88
DX3DVERT( -0.338507, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //89
DX3DVERT( -1.629, -0.207053, 0.414107 ) DX3DVNORM( -0.579152, 0, 0.81522 )  //90
DX3DVERT( -1.80558, -0.115293, 0.280442 ) DX3DVNORM( -0.603544, 0, 0.797329 )  //91
DX3DVERT( -1.5, -0.25, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //92
DX3DVERT( -1, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //93
DX3DVERT( -1.5, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //94
DX3DVERT( -0.338507, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //95
DX3DVERT( -1.629, -0.340488, 0.414107 ) DX3DVNORM( -0.579152, 0, 0.81522 )  //96
DX3DVERT( -1.80558, -0.230586, 0.280442 ) DX3DVNORM( -0.603544, 0, 0.797329 )  //97
DX3DVERT( -1.5, -0.411111, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //98
DX3DVERT( -1, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //99
DX3DVERT( -1.5, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //100
DX3DVERT( -0.338507, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //101
DX3DVERT( -1.80558, -0.230586, 0.280442 ) DX3DVNORM( -0.698892, -0.494775, 0.516476 )  //102
DX3DVERT( -1.629, -0.340488, 0.414107 ) DX3DVNORM( -0.675712, -0.509952, 0.532318 )  //103
DX3DVERT( -1.629, -0.414107, 0.343581 ) DX3DVNORM( -0.675712, -0.509952, 0.532318 )  //104
DX3DVERT( -1.80558, -0.280442, 0.232681 ) DX3DVNORM( -0.698892, -0.494775, 0.516476 )  //105
DX3DVERT( -1.5, -0.411111, 0.5 ) DX3DVNORM( -0.651843, -0.524609, 0.547619 )  //106
DX3DVERT( -1.5, -0.5, 0.414846 ) DX3DVNORM( -0.651843, -0.524609, 0.547619 )  //107
DX3DVERT( -1.5, -0.411111, 0.5 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //108
DX3DVERT( -1, -0.411111, 0.5 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //109
DX3DVERT( -1, -0.5, 0.414846 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //110
DX3DVERT( -1.5, -0.5, 0.414846 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //111
DX3DVERT( -0.338507, -0.411111, 0.5 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //112
DX3DVERT( -0.338507, -0.5, 0.414846 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //113
DX3DVERT( -1.80558, -0.280442, 0.232681 ) DX3DVNORM( -0.603544, -0.79733, -0 )  //114
DX3DVERT( -1.629, -0.414107, 0.343581 ) DX3DVNORM( -0.579152, -0.81522, -0 )  //115
DX3DVERT( -1.629, -0.414107, -0 ) DX3DVNORM( -0.579152, -0.81522, -0 )  //116
DX3DVERT( -1.80558, -0.280442, -0 ) DX3DVNORM( -0.603544, -0.79733, -0 )  //117
DX3DVERT( -1.5, -0.5, 0.414846 ) DX3DVNORM( -0.55423, -0.832364, -0 )  //118
DX3DVERT( -1.5, -0.5, -0 ) DX3DVNORM( -0.55423, -0.832364, -0 )  //119
DX3DVERT( -1.5, -0.5, 0.414846 ) DX3DVNORM( 0, -1, -0 )  //120
DX3DVERT( -1, -0.5, 0.414846 ) DX3DVNORM( 0, -1, -0 )  //121
DX3DVERT( -1, -0.5, -0 ) DX3DVNORM( 0, -1, -0 )  //122
DX3DVERT( -1.5, -0.5, -0 ) DX3DVNORM( 0, -1, -0 )  //123
DX3DVERT( -0.338507, -0.5, 0.414846 ) DX3DVNORM( 0, -1, -0 )  //124
DX3DVERT( -0.338507, -0.5, -0 ) DX3DVNORM( 0, -1, -0 )  //125
DX3DVERT( -1.629, -0.414107, -0.343581 ) DX3DVNORM( -0.579152, -0.81522, -0 )  //126
DX3DVERT( -1.80558, -0.280442, -0.232681 ) DX3DVNORM( -0.603544, -0.79733, -0 )  //127
DX3DVERT( -1.5, -0.5, -0.414846 ) DX3DVNORM( -0.55423, -0.832364, -0 )  //128
DX3DVERT( -1, -0.5, -0.414846 ) DX3DVNORM( 0, -1, -0 )  //129
DX3DVERT( -1.5, -0.5, -0.414846 ) DX3DVNORM( 0, -1, -0 )  //130
DX3DVERT( -0.338507, -0.5, -0.414846 ) DX3DVNORM( 0, -1, -0 )  //131
DX3DVERT( -1.80558, -0.280442, -0.232681 ) DX3DVNORM( -0.698892, -0.494776, -0.516476 )  //132
DX3DVERT( -1.629, -0.414107, -0.343581 ) DX3DVNORM( -0.675711, -0.509952, -0.532318 )  //133
DX3DVERT( -1.629, -0.340488, -0.414107 ) DX3DVNORM( -0.675711, -0.509952, -0.532318 )  //134
DX3DVERT( -1.80558, -0.230586, -0.280442 ) DX3DVNORM( -0.698892, -0.494776, -0.516476 )  //135
DX3DVERT( -1.5, -0.5, -0.414846 ) DX3DVNORM( -0.651842, -0.52461, -0.547618 )  //136
DX3DVERT( -1.5, -0.411111, -0.5 ) DX3DVNORM( -0.651842, -0.52461, -0.547618 )  //137
DX3DVERT( -1.5, -0.5, -0.414846 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //138
DX3DVERT( -1, -0.5, -0.414846 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //139
DX3DVERT( -1, -0.411111, -0.5 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //140
DX3DVERT( -1.5, -0.411111, -0.5 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //141
DX3DVERT( -0.338507, -0.5, -0.414846 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //142
DX3DVERT( -0.338507, -0.411111, -0.5 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //143
DX3DVERT( -1.80558, -0.230586, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //144
DX3DVERT( -1.80558, -0.280442, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //145
DX3DVERT( -1.80558, -0.140221, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //146
DX3DVERT( -1.80558, -0.115293, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //147
DX3DVERT( -1.80558, -0.280442, -0 ) DX3DVNORM( -1, 0, -0 )  //148
DX3DVERT( -1.80558, -0.140221, -0 ) DX3DVNORM( -1, 0, -0 )  //149
DX3DVERT( -1.80558, -0.280442, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //150
DX3DVERT( -1.80558, -0.140221, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //151
DX3DVERT( -1.80558, -0.230586, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //152
DX3DVERT( -1.80558, -0.115293, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //153
DX3DVERT( -1.80558, 0, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //154
DX3DVERT( -1.80558, 0, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //155
DX3DVERT( -1.80558, 0, -0 ) DX3DVNORM( -1, 0, -0 )  //156
DX3DVERT( -1.80558, 0, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //157
DX3DVERT( -1.80558, 0, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //158
DX3DVERT( -1.80558, 0.140221, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //159
DX3DVERT( -1.80558, 0.115293, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //160
DX3DVERT( -1.80558, 0.140221, -0 ) DX3DVNORM( -1, 0, -0 )  //161
DX3DVERT( -1.80558, 0.140221, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //162
DX3DVERT( -1.80558, 0.115293, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //163
DX3DVERT( -1.80558, 0.280442, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //164
DX3DVERT( -1.80558, 0.230586, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //165
DX3DVERT( -1.80558, 0.280442, -0 ) DX3DVNORM( -1, 0, -0 )  //166
DX3DVERT( -1.80558, 0.280442, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //167
DX3DVERT( -1.80558, 0.230586, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //168
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_ArmUpper_R____mArm_1 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_ArmUpper_R____mArm_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 169 )
DX3DVERTEX_END


#else
#define vertex_ArmUpper_R____mArm_1	NULL
#define vertexbuff_ArmUpper_R____mArm_1	NULL
#endif




#if ((PT_ArmUpper_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmUpper_R____mArm_1 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DINDEX_START( index_ArmUpper_R____mArm_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	6, 7, 9, // 4 14
	7, 8, 9, // 5 17
	7, 10, 8, // 6 20
	10, 11, 8, // 7 23
	3, 2, 13, // 8 26
	2, 12, 13, // 9 29
	2, 5, 12, // 10 32
	5, 14, 12, // 11 35
	9, 8, 16, // 12 38
	8, 15, 16, // 13 41
	8, 11, 15, // 14 44
	11, 17, 15, // 15 47
	13, 12, 19, // 16 50
	12, 18, 19, // 17 53
	12, 14, 18, // 18 56
	14, 20, 18, // 19 59
	16, 15, 22, // 20 62
	15, 21, 22, // 21 65
	15, 17, 21, // 22 68
	17, 23, 21, // 23 71
	19, 18, 25, // 24 74
	18, 24, 25, // 25 77
	18, 20, 24, // 26 80
	20, 26, 24, // 27 83
	22, 21, 28, // 28 86
	21, 27, 28, // 29 89
	21, 23, 27, // 30 92
	23, 29, 27, // 31 95
	30, 31, 33, // 32 98
	31, 32, 33, // 33 101
	31, 34, 32, // 34 104
	34, 35, 32, // 35 107
	36, 37, 39, // 36 110
	37, 38, 39, // 37 113
	37, 40, 38, // 38 116
	40, 41, 38, // 39 119
	42, 43, 45, // 40 122
	43, 44, 45, // 41 125
	43, 46, 44, // 42 128
	46, 47, 44, // 43 131
	48, 49, 51, // 44 134
	49, 50, 51, // 45 137
	49, 52, 50, // 46 140
	52, 53, 50, // 47 143
	45, 44, 55, // 48 146
	44, 54, 55, // 49 149
	44, 47, 54, // 50 152
	47, 56, 54, // 51 155
	51, 50, 58, // 52 158
	50, 57, 58, // 53 161
	50, 53, 57, // 54 164
	53, 59, 57, // 55 167
	60, 61, 63, // 56 170
	61, 62, 63, // 57 173
	61, 64, 62, // 58 176
	64, 65, 62, // 59 179
	66, 67, 69, // 60 182
	67, 68, 69, // 61 185
	67, 70, 68, // 62 188
	70, 71, 68, // 63 191
	72, 73, 75, // 64 194
	73, 74, 75, // 65 197
	73, 76, 74, // 66 200
	76, 77, 74, // 67 203
	78, 79, 81, // 68 206
	79, 80, 81, // 69 209
	79, 82, 80, // 70 212
	82, 83, 80, // 71 215
	75, 74, 85, // 72 218
	74, 84, 85, // 73 221
	74, 77, 84, // 74 224
	77, 86, 84, // 75 227
	81, 80, 88, // 76 230
	80, 87, 88, // 77 233
	80, 83, 87, // 78 236
	83, 89, 87, // 79 239
	85, 84, 91, // 80 242
	84, 90, 91, // 81 245
	84, 86, 90, // 82 248
	86, 92, 90, // 83 251
	88, 87, 94, // 84 254
	87, 93, 94, // 85 257
	87, 89, 93, // 86 260
	89, 95, 93, // 87 263
	91, 90, 97, // 88 266
	90, 96, 97, // 89 269
	90, 92, 96, // 90 272
	92, 98, 96, // 91 275
	94, 93, 100, // 92 278
	93, 99, 100, // 93 281
	93, 95, 99, // 94 284
	95, 101, 99, // 95 287
	102, 103, 105, // 96 290
	103, 104, 105, // 97 293
	103, 106, 104, // 98 296
	106, 107, 104, // 99 299
	108, 109, 111, // 100 302
	109, 110, 111, // 101 305
	109, 112, 110, // 102 308
	112, 113, 110, // 103 311
	114, 115, 117, // 104 314
	115, 116, 117, // 105 317
	115, 118, 116, // 106 320
	118, 119, 116, // 107 323
	120, 121, 123, // 108 326
	121, 122, 123, // 109 329
	121, 124, 122, // 110 332
	124, 125, 122, // 111 335
	117, 116, 127, // 112 338
	116, 126, 127, // 113 341
	116, 119, 126, // 114 344
	119, 128, 126, // 115 347
	123, 122, 130, // 116 350
	122, 129, 130, // 117 353
	122, 125, 129, // 118 356
	125, 131, 129, // 119 359
	132, 133, 135, // 120 362
	133, 134, 135, // 121 365
	133, 136, 134, // 122 368
	136, 137, 134, // 123 371
	138, 139, 141, // 124 374
	139, 140, 141, // 125 377
	139, 142, 140, // 126 380
	142, 143, 140, // 127 383
	144, 145, 147, // 128 386
	145, 146, 147, // 129 389
	145, 148, 146, // 130 392
	148, 149, 146, // 131 395
	148, 150, 149, // 132 398
	150, 151, 149, // 133 401
	150, 152, 151, // 134 404
	152, 153, 151, // 135 407
	147, 146, 155, // 136 410
	146, 154, 155, // 137 413
	146, 149, 154, // 138 416
	149, 156, 154, // 139 419
	149, 151, 156, // 140 422
	151, 157, 156, // 141 425
	151, 153, 157, // 142 428
	153, 158, 157, // 143 431
	155, 154, 160, // 144 434
	154, 159, 160, // 145 437
	154, 156, 159, // 146 440
	156, 161, 159, // 147 443
	156, 157, 161, // 148 446
	157, 162, 161, // 149 449
	157, 158, 162, // 150 452
	158, 163, 162, // 151 455
	160, 159, 165, // 152 458
	159, 164, 165, // 153 461
	159, 161, 164, // 154 464
	161, 166, 164, // 155 467
	161, 162, 166, // 156 470
	162, 167, 166, // 157 473
	162, 163, 167, // 158 476
	163, 168, 167, // 159 479
DX3DINDEX_END
#endif

#else
#define index_ArmUpper_R____mArm_1	NULL
#endif




#if ((PT_ArmUpper_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP) ) || (PT_ArmUpper_R____mArm_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_ArmUpper_R____mArm_1_INDEXSTRIP 	NULL
#endif




#if ((PT_ArmUpper_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_VERTEXSTRIP) ) || (PT_ArmUpper_R____mArm_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_ArmUpper_R____mArm_1_VERTEXSTRIP 	NULL
#define vertexbuff_ArmUpper_R____mArm_1_VERTEXSTRIP 	NULL
#endif






#if ((PT_ArmUpper_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmUpper_R____mArmGlay_2 == PT_TRILIST ) || ((PT_ArmUpper_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP))  || (PT_ArmUpper_R____mArmGlay_2 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERT_START( VN, vertexbuff_ArmUpper_R____mArmGlay_2 )
DX3DVERT( -1.4284, 0.169949, 0.169949 ) DX3DVNORM( -2.75149e-009, 0.707107, 0.707107 )  //0
DX3DVERT( -1.4284, 0, 0.240344 ) DX3DVNORM( -2.75149e-009, 0, 1 )  //1
DX3DVERT( -2.86076, 0, 0.240344 ) DX3DVNORM( -2.75149e-009, 0, 1 )  //2
DX3DVERT( -2.86076, 0.169949, 0.169949 ) DX3DVNORM( -2.75149e-009, 0.707107, 0.707107 )  //3
DX3DVERT( -1.4284, -0.169949, 0.169949 ) DX3DVNORM( 1.1791e-010, -0.707107, 0.707107 )  //4
DX3DVERT( -2.86076, -0.169949, 0.169949 ) DX3DVNORM( 1.1791e-010, -0.707107, 0.707107 )  //5
DX3DVERT( -1.4284, -0.240344, 1.50293e-009 ) DX3DVNORM( 1.54214e-008, -1, -3.22578e-008 )  //6
DX3DVERT( -2.86076, -0.240344, 1.50293e-009 ) DX3DVNORM( 1.54214e-008, -1, -3.22578e-008 )  //7
DX3DVERT( -1.4284, -0.169949, -0.169949 ) DX3DVNORM( 2.75149e-009, -0.707107, -0.707107 )  //8
DX3DVERT( -2.86076, -0.169949, -0.169949 ) DX3DVNORM( 2.75149e-009, -0.707107, -0.707107 )  //9
DX3DVERT( -1.4284, 0, -0.240344 ) DX3DVNORM( -4.90025e-009, -1.12902e-007, -1 )  //10
DX3DVERT( -2.86076, 0, -0.240344 ) DX3DVNORM( -4.90025e-009, -1.12902e-007, -1 )  //11
DX3DVERT( -1.4284, 0.169949, -0.169949 ) DX3DVNORM( -5.43743e-009, 0.707107, -0.707107 )  //12
DX3DVERT( -2.86076, 0.169949, -0.169949 ) DX3DVNORM( -5.43743e-009, 0.707107, -0.707107 )  //13
DX3DVERT( -1.4284, 0.240344, 1.50293e-009 ) DX3DVNORM( -1.30892e-008, 1, 9.67734e-008 )  //14
DX3DVERT( -2.86076, 0.240344, 1.50293e-009 ) DX3DVNORM( -1.30892e-008, 1, 9.67734e-008 )  //15
DX3DVERT( -2.86076, 0.169949, 0.169949 ) DX3DVNORM( -1, 7.29624e-007, -4.95995e-007 )  //16
DX3DVERT( -2.86076, 0, 0.240344 ) DX3DVNORM( -1, -7.29624e-007, -0 )  //17
DX3DVERT( -2.86076, 0, 1.50293e-009 ) DX3DVNORM( -1, -4.26326e-014, 1.42109e-014 )  //18
DX3DVERT( -2.86076, -0.169949, 0.169949 ) DX3DVNORM( -1, -1.45925e-006, 7.01442e-007 )  //19
DX3DVERT( -2.86076, -0.240344, 1.50293e-009 ) DX3DVNORM( -1, 0, 5.68434e-014 )  //20
DX3DVERT( -2.86076, -0.169949, -0.169949 ) DX3DVNORM( -1, 7.29624e-007, -7.01442e-007 )  //21
DX3DVERT( -2.86076, 0, -0.240344 ) DX3DVNORM( -1, 7.29624e-007, -0 )  //22
DX3DVERT( -2.86076, 0.169949, -0.169949 ) DX3DVNORM( -1, 0, 4.95995e-007 )  //23
DX3DVERT( -2.86076, 0.240344, 1.50293e-009 ) DX3DVNORM( -1, 0, -0 )  //24
DX3DVERT( -0.338507, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 0, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 0, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( -0.338507, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 0.279783, -0.356296, -0.5 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 0.431367, -0.205556, -0.5 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 0, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( -0.338507, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 0.431367, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 0, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( -0.338507, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 0.431367, 0.205556, -0.5 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 0, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( -0.338507, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 0.279783, 0.356296, -0.5 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( -0.338507, 0.411111, -0.5 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //40
DX3DVERT( 0, 0.411111, -0.5 ) DX3DVNORM( 0.0770671, 0.701955, -0.708039 )  //41
DX3DVERT( 0, 0.5, -0.414846 ) DX3DVNORM( 0.0770671, 0.701955, -0.708039 )  //42
DX3DVERT( -0.338507, 0.5, -0.414846 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //43
DX3DVERT( 0.279783, 0.356296, -0.5 ) DX3DVNORM( 0.153653, 0.707756, -0.689545 )  //44
DX3DVERT( 0.279783, 0.433333, -0.414846 ) DX3DVNORM( 0.153653, 0.707756, -0.689545 )  //45
DX3DVERT( -0.338507, 0.5, -0.414846 ) DX3DVNORM( 0, 1, -0 )  //46
DX3DVERT( 0, 0.5, -0.414846 ) DX3DVNORM( 0.116692, 0.993168, -0 )  //47
DX3DVERT( 0, 0.5, -0 ) DX3DVNORM( 0.116692, 0.993168, -0 )  //48
DX3DVERT( -0.338507, 0.5, -0 ) DX3DVNORM( 0, 1, -0 )  //49
DX3DVERT( 0.279783, 0.433333, -0.414846 ) DX3DVNORM( 0.52857, 0.84889, -0 )  //50
DX3DVERT( 0.279783, 0.433333, -0 ) DX3DVNORM( 0.52857, 0.84889, -0 )  //51
DX3DVERT( 0, 0.5, 0.414846 ) DX3DVNORM( 0.116692, 0.993168, -0 )  //52
DX3DVERT( -0.338507, 0.5, 0.414846 ) DX3DVNORM( 0, 1, -0 )  //53
DX3DVERT( 0.279783, 0.433333, 0.414846 ) DX3DVNORM( 0.52857, 0.84889, -0 )  //54
DX3DVERT( -0.338507, 0.5, 0.414846 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //55
DX3DVERT( 0, 0.5, 0.414846 ) DX3DVNORM( 0.0770671, 0.701955, 0.708039 )  //56
DX3DVERT( 0, 0.411111, 0.5 ) DX3DVNORM( 0.0770671, 0.701955, 0.708039 )  //57
DX3DVERT( -0.338507, 0.411111, 0.5 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //58
DX3DVERT( 0.279783, 0.433333, 0.414846 ) DX3DVNORM( 0.153653, 0.707756, 0.689545 )  //59
DX3DVERT( 0.279783, 0.356296, 0.5 ) DX3DVNORM( 0.153653, 0.707756, 0.689545 )  //60
DX3DVERT( -0.338507, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //61
DX3DVERT( 0, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //62
DX3DVERT( 0, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //63
DX3DVERT( -0.338507, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //64
DX3DVERT( 0.279783, 0.356296, 0.5 ) DX3DVNORM( 0, 0, 1 )  //65
DX3DVERT( 0.431367, 0.205556, 0.5 ) DX3DVNORM( 0, 0, 1 )  //66
DX3DVERT( 0, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //67
DX3DVERT( -0.338507, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //68
DX3DVERT( 0.431367, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //69
DX3DVERT( 0, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //70
DX3DVERT( -0.338507, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //71
DX3DVERT( 0.431367, -0.205556, 0.5 ) DX3DVNORM( 0, 0, 1 )  //72
DX3DVERT( 0, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //73
DX3DVERT( -0.338507, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //74
DX3DVERT( 0.279783, -0.356296, 0.5 ) DX3DVNORM( 0, 0, 1 )  //75
DX3DVERT( -0.338507, -0.411111, 0.5 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //76
DX3DVERT( 0, -0.411111, 0.5 ) DX3DVNORM( 0.0770671, -0.701955, 0.708039 )  //77
DX3DVERT( 0, -0.5, 0.414846 ) DX3DVNORM( 0.0770671, -0.701955, 0.708039 )  //78
DX3DVERT( -0.338507, -0.5, 0.414846 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //79
DX3DVERT( 0.279783, -0.356296, 0.5 ) DX3DVNORM( 0.153653, -0.707756, 0.689545 )  //80
DX3DVERT( 0.279783, -0.433333, 0.414846 ) DX3DVNORM( 0.153653, -0.707756, 0.689545 )  //81
DX3DVERT( -0.338507, -0.5, 0.414846 ) DX3DVNORM( 0, -1, -0 )  //82
DX3DVERT( 0, -0.5, 0.414846 ) DX3DVNORM( 0.116692, -0.993168, -0 )  //83
DX3DVERT( 0, -0.5, -0 ) DX3DVNORM( 0.116692, -0.993168, -0 )  //84
DX3DVERT( -0.338507, -0.5, -0 ) DX3DVNORM( 0, -1, -0 )  //85
DX3DVERT( 0.279783, -0.433333, 0.414846 ) DX3DVNORM( 0.52857, -0.84889, -0 )  //86
DX3DVERT( 0.279783, -0.433333, -0 ) DX3DVNORM( 0.52857, -0.84889, -0 )  //87
DX3DVERT( 0, -0.5, -0.414846 ) DX3DVNORM( 0.116692, -0.993168, -0 )  //88
DX3DVERT( -0.338507, -0.5, -0.414846 ) DX3DVNORM( 0, -1, -0 )  //89
DX3DVERT( 0.279783, -0.433333, -0.414846 ) DX3DVNORM( 0.52857, -0.84889, -0 )  //90
DX3DVERT( -0.338507, -0.5, -0.414846 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //91
DX3DVERT( 0, -0.5, -0.414846 ) DX3DVNORM( 0.0770671, -0.701955, -0.708039 )  //92
DX3DVERT( 0, -0.411111, -0.5 ) DX3DVNORM( 0.0770671, -0.701955, -0.708039 )  //93
DX3DVERT( -0.338507, -0.411111, -0.5 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //94
DX3DVERT( 0.279783, -0.433333, -0.414846 ) DX3DVNORM( 0.153653, -0.707756, -0.689545 )  //95
DX3DVERT( 0.279783, -0.356296, -0.5 ) DX3DVNORM( 0.153653, -0.707756, -0.689545 )  //96
DX3DVERT( 0.279783, -0.433333, 0.414846 ) DX3DVNORM( 0.667773, -0.605996, 0.43226 )  //97
DX3DVERT( 0.279783, -0.356296, 0.5 ) DX3DVNORM( 0.667773, -0.605996, 0.43226 )  //98
DX3DVERT( 0.431367, -0.205556, 0.5 ) DX3DVNORM( 0.913174, -0.331807, 0.23668 )  //99
DX3DVERT( 0.431367, -0.25, 0.414846 ) DX3DVNORM( 0.913174, -0.331807, 0.23668 )  //100
DX3DVERT( 0.431367, -0.25, 0.414846 ) DX3DVNORM( 0.940926, -0.338612, -0 )  //101
DX3DVERT( 0.431367, -0.25, -0 ) DX3DVNORM( 0.940926, -0.338612, -0 )  //102
DX3DVERT( 0.431367, -0.25, -0.414846 ) DX3DVNORM( 0.940926, -0.338612, -0 )  //103
DX3DVERT( 0.279783, -0.356296, -0.5 ) DX3DVNORM( 0.667773, -0.605996, -0.43226 )  //104
DX3DVERT( 0.279783, -0.433333, -0.414846 ) DX3DVNORM( 0.667773, -0.605996, -0.43226 )  //105
DX3DVERT( 0.431367, -0.25, -0.414846 ) DX3DVNORM( 0.913174, -0.331807, -0.23668 )  //106
DX3DVERT( 0.431367, -0.205556, -0.5 ) DX3DVNORM( 0.913174, -0.331807, -0.23668 )  //107
DX3DVERT( 0.431367, 0, 0.5 ) DX3DVNORM( 1, 0, -0 )  //108
DX3DVERT( 0.431367, 0, 0.414846 ) DX3DVNORM( 1, 0, -0 )  //109
DX3DVERT( 0.431367, 0, -0 ) DX3DVNORM( 1, 0, -0 )  //110
DX3DVERT( 0.431367, 0, -0.414846 ) DX3DVNORM( 1, 0, -0 )  //111
DX3DVERT( 0.431367, 0, -0.5 ) DX3DVNORM( 1, 0, -0 )  //112
DX3DVERT( 0.431367, 0.205556, 0.5 ) DX3DVNORM( 0.913174, 0.331807, 0.23668 )  //113
DX3DVERT( 0.431367, 0.25, 0.414846 ) DX3DVNORM( 0.913174, 0.331807, 0.23668 )  //114
DX3DVERT( 0.431367, 0.25, 0.414846 ) DX3DVNORM( 0.940926, 0.338612, -0 )  //115
DX3DVERT( 0.431367, 0.25, -0 ) DX3DVNORM( 0.940926, 0.338612, -0 )  //116
DX3DVERT( 0.431367, 0.25, -0.414846 ) DX3DVNORM( 0.940926, 0.338612, -0 )  //117
DX3DVERT( 0.431367, 0.25, -0.414846 ) DX3DVNORM( 0.913174, 0.331807, -0.23668 )  //118
DX3DVERT( 0.431367, 0.205556, -0.5 ) DX3DVNORM( 0.913174, 0.331807, -0.23668 )  //119
DX3DVERT( 0.279783, 0.356296, 0.5 ) DX3DVNORM( 0.667773, 0.605996, 0.43226 )  //120
DX3DVERT( 0.279783, 0.433333, 0.414846 ) DX3DVNORM( 0.667773, 0.605996, 0.43226 )  //121
DX3DVERT( 0.279783, 0.433333, -0.414846 ) DX3DVNORM( 0.667773, 0.605996, -0.43226 )  //122
DX3DVERT( 0.279783, 0.356296, -0.5 ) DX3DVNORM( 0.667773, 0.605996, -0.43226 )  //123
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_ArmUpper_R____mArmGlay_2 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_ArmUpper_R____mArmGlay_2 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 124 )
DX3DVERTEX_END


#else
#define vertex_ArmUpper_R____mArmGlay_2	NULL
#define vertexbuff_ArmUpper_R____mArmGlay_2	NULL
#endif




#if ((PT_ArmUpper_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmUpper_R____mArmGlay_2 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DINDEX_START( index_ArmUpper_R____mArmGlay_2 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 0, 15, // 14 44
	0, 3, 15, // 15 47
	16, 17, 18, // 16 50
	17, 19, 18, // 17 53
	19, 20, 18, // 18 56
	20, 21, 18, // 19 59
	21, 22, 18, // 20 62
	22, 23, 18, // 21 65
	23, 24, 18, // 22 68
	24, 16, 18, // 23 71
	25, 26, 28, // 24 74
	26, 27, 28, // 25 77
	26, 29, 27, // 26 80
	29, 30, 27, // 27 83
	28, 27, 32, // 28 86
	27, 31, 32, // 29 89
	27, 30, 31, // 30 92
	30, 33, 31, // 31 95
	32, 31, 35, // 32 98
	31, 34, 35, // 33 101
	31, 33, 34, // 34 104
	33, 36, 34, // 35 107
	35, 34, 38, // 36 110
	34, 37, 38, // 37 113
	34, 36, 37, // 38 116
	36, 39, 37, // 39 119
	40, 41, 43, // 40 122
	41, 42, 43, // 41 125
	41, 44, 42, // 42 128
	44, 45, 42, // 43 131
	46, 47, 49, // 44 134
	47, 48, 49, // 45 137
	47, 50, 48, // 46 140
	50, 51, 48, // 47 143
	49, 48, 53, // 48 146
	48, 52, 53, // 49 149
	48, 51, 52, // 50 152
	51, 54, 52, // 51 155
	55, 56, 58, // 52 158
	56, 57, 58, // 53 161
	56, 59, 57, // 54 164
	59, 60, 57, // 55 167
	61, 62, 64, // 56 170
	62, 63, 64, // 57 173
	62, 65, 63, // 58 176
	65, 66, 63, // 59 179
	64, 63, 68, // 60 182
	63, 67, 68, // 61 185
	63, 66, 67, // 62 188
	66, 69, 67, // 63 191
	68, 67, 71, // 64 194
	67, 70, 71, // 65 197
	67, 69, 70, // 66 200
	69, 72, 70, // 67 203
	71, 70, 74, // 68 206
	70, 73, 74, // 69 209
	70, 72, 73, // 70 212
	72, 75, 73, // 71 215
	76, 77, 79, // 72 218
	77, 78, 79, // 73 221
	77, 80, 78, // 74 224
	80, 81, 78, // 75 227
	82, 83, 85, // 76 230
	83, 84, 85, // 77 233
	83, 86, 84, // 78 236
	86, 87, 84, // 79 239
	85, 84, 89, // 80 242
	84, 88, 89, // 81 245
	84, 87, 88, // 82 248
	87, 90, 88, // 83 251
	91, 92, 94, // 84 254
	92, 93, 94, // 85 257
	92, 95, 93, // 86 260
	95, 96, 93, // 87 263
	97, 98, 100, // 88 266
	98, 99, 100, // 89 269
	87, 86, 102, // 90 272
	86, 101, 102, // 91 275
	90, 87, 103, // 92 278
	87, 102, 103, // 93 281
	104, 105, 107, // 94 284
	105, 106, 107, // 95 287
	100, 99, 109, // 96 290
	99, 108, 109, // 97 293
	102, 101, 110, // 98 296
	101, 109, 110, // 99 299
	103, 102, 111, // 100 302
	102, 110, 111, // 101 305
	107, 106, 112, // 102 308
	106, 111, 112, // 103 311
	109, 108, 114, // 104 314
	108, 113, 114, // 105 317
	110, 109, 116, // 106 320
	109, 115, 116, // 107 323
	111, 110, 117, // 108 326
	110, 116, 117, // 109 329
	112, 111, 119, // 110 332
	111, 118, 119, // 111 335
	114, 113, 121, // 112 338
	113, 120, 121, // 113 341
	116, 115, 51, // 114 344
	115, 54, 51, // 115 347
	117, 116, 50, // 116 350
	116, 51, 50, // 117 353
	119, 118, 123, // 118 356
	118, 122, 123, // 119 359
DX3DINDEX_END
#endif

#else
#define index_ArmUpper_R____mArmGlay_2	NULL
#endif




#if ((PT_ArmUpper_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP) ) || (PT_ArmUpper_R____mArmGlay_2 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_ArmUpper_R____mArmGlay_2_INDEXSTRIP 	NULL
#endif




#if ((PT_ArmUpper_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_VERTEXSTRIP) ) || (PT_ArmUpper_R____mArmGlay_2 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_ArmUpper_R____mArmGlay_2_VERTEXSTRIP 	NULL
#define vertexbuff_ArmUpper_R____mArmGlay_2_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_ArmUpper_R___ )
DX3DMODEL_START( model_ArmUpper_R____initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_ArmUpper_R____initialShadingGroup_0 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DMODEL_INDEX( index_ArmUpper_R____initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 24 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODEL_START( model_ArmUpper_R____mArm_1 )
DX3DMODEL_VERTEX( vertex_ArmUpper_R____mArm_1 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DMODEL_INDEX( index_ArmUpper_R____mArm_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 480 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mArm )
DX3DMODEL_END
DX3DMODEL_START( model_ArmUpper_R____mArmGlay_2 )
DX3DMODEL_VERTEX( vertex_ArmUpper_R____mArmGlay_2 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DMODEL_INDEX( index_ArmUpper_R____mArmGlay_2 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 360 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mArmGlay )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_ArmUpper_R___, 2299000693 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_ArmUpper_R___ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, -0, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, -0, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_ArmLower_R___
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_ArmLower_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmLower_R____initialShadingGroup_0 == PT_TRILIST ) || ((PT_ArmLower_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP))  || (PT_ArmLower_R____initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERT_START( VN, vertexbuff_ArmLower_R____initialShadingGroup_0 )
DX3DVERT( -1.4284, 0, 0.240344 ) DX3DVNORM( 1, 0, -0 )  //0
DX3DVERT( -1.4284, 0.169949, 0.169949 ) DX3DVNORM( 1, -3.64812e-007, 4.95994e-007 )  //1
DX3DVERT( -1.4284, 0, 1.50293e-009 ) DX3DVNORM( 1, -9.12028e-008, -0 )  //2
DX3DVERT( -1.4284, -0.169949, 0.169949 ) DX3DVNORM( 1, 0, 2.47997e-007 )  //3
DX3DVERT( -1.4284, -0.240344, 1.50293e-009 ) DX3DVNORM( 1, 0, -0 )  //4
DX3DVERT( -1.4284, -0.169949, -0.169949 ) DX3DVNORM( 1, 7.29624e-007, -2.47997e-007 )  //5
DX3DVERT( -1.4284, 0, -0.240344 ) DX3DVNORM( 1, 7.29624e-007, -0 )  //6
DX3DVERT( -1.4284, 0.169949, -0.169949 ) DX3DVNORM( 1, -7.29623e-007, -4.95994e-007 )  //7
DX3DVERT( -1.4284, 0.240344, 1.50293e-009 ) DX3DVNORM( 1, -1.09443e-006, -0 )  //8
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_ArmLower_R____initialShadingGroup_0 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_ArmLower_R____initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 9 )
DX3DVERTEX_END


#else
#define vertex_ArmLower_R____initialShadingGroup_0	NULL
#define vertexbuff_ArmLower_R____initialShadingGroup_0	NULL
#endif




#if ((PT_ArmLower_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmLower_R____initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DINDEX_START( index_ArmLower_R____initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 0, 2, // 1 5
	4, 3, 2, // 2 8
	5, 4, 2, // 3 11
	6, 5, 2, // 4 14
	7, 6, 2, // 5 17
	8, 7, 2, // 6 20
	1, 8, 2, // 7 23
DX3DINDEX_END
#endif

#else
#define index_ArmLower_R____initialShadingGroup_0	NULL
#endif




#if ((PT_ArmLower_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP) ) || (PT_ArmLower_R____initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_ArmLower_R____initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_ArmLower_R____initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_VERTEXSTRIP) ) || (PT_ArmLower_R____initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_ArmLower_R____initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_ArmLower_R____initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_ArmLower_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmLower_R____mArm_1 == PT_TRILIST ) || ((PT_ArmLower_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP))  || (PT_ArmLower_R____mArm_1 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERT_START( VN, vertexbuff_ArmLower_R____mArm_1 )
DX3DVERT( -1.86353, -0.340488, -0.414107 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //0
DX3DVERT( -1.73453, -0.411111, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //1
DX3DVERT( -1.73453, -0.25, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //2
DX3DVERT( -1.86353, -0.207053, -0.414107 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //3
DX3DVERT( -1.73453, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( -1, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( -1, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( -1.73453, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( -0.338507, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( -0.338507, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 0, -0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 0, -0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( 0.216174, -0.356296, -0.5 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( 0.349813, -0.205556, -0.5 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( -1.73453, 0, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //14
DX3DVERT( -1.86353, 0, -0.414107 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //15
DX3DVERT( -1, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( -1.73453, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( -0.338507, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 0, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 0.349813, 0, -0.5 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( -1.73453, 0.25, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //21
DX3DVERT( -1.86353, 0.207053, -0.414107 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //22
DX3DVERT( -1, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( -1.73453, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( -0.338507, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 0, 0.25, -0.5 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 0.349813, 0.205556, -0.5 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( -1.73453, 0.411111, -0.5 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //28
DX3DVERT( -1.86353, 0.340488, -0.414107 ) DX3DVNORM( -0.554229, 0, -0.832364 )  //29
DX3DVERT( -1, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( -1.73453, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( -0.338507, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 0, 0.411111, -0.5 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 0.216174, 0.356296, -0.5 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( -1.86353, 0.340488, -0.414107 ) DX3DVNORM( -0.651842, 0.52461, -0.547618 )  //35
DX3DVERT( -1.73453, 0.411111, -0.5 ) DX3DVNORM( -0.651842, 0.52461, -0.547618 )  //36
DX3DVERT( -1.73453, 0.5, -0.414846 ) DX3DVNORM( -0.651842, 0.52461, -0.547618 )  //37
DX3DVERT( -1.86353, 0.414107, -0.343581 ) DX3DVNORM( -0.651842, 0.52461, -0.547618 )  //38
DX3DVERT( -1.73453, 0.411111, -0.5 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //39
DX3DVERT( -1, 0.411111, -0.5 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //40
DX3DVERT( -1, 0.5, -0.414846 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //41
DX3DVERT( -1.73453, 0.5, -0.414846 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //42
DX3DVERT( -0.338507, 0.411111, -0.5 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //43
DX3DVERT( -0.338507, 0.5, -0.414846 ) DX3DVNORM( 0, 0.691773, -0.722115 )  //44
DX3DVERT( 0, 0.411111, -0.5 ) DX3DVNORM( 0.0829356, 0.685678, -0.723165 )  //45
DX3DVERT( 0, 0.5, -0.414846 ) DX3DVNORM( 0.0829356, 0.685678, -0.723165 )  //46
DX3DVERT( 0.216174, 0.356296, -0.5 ) DX3DVNORM( 0.165298, 0.674839, -0.719214 )  //47
DX3DVERT( 0.279783, 0.433333, -0.414846 ) DX3DVNORM( 0.165298, 0.674839, -0.719214 )  //48
DX3DVERT( -1.86353, 0.414107, -0.343581 ) DX3DVNORM( -0.554229, 0.832364, -0 )  //49
DX3DVERT( -1.73453, 0.5, -0.414846 ) DX3DVNORM( -0.554229, 0.832364, -0 )  //50
DX3DVERT( -1.73453, 0.5, -0 ) DX3DVNORM( -0.554229, 0.832364, -0 )  //51
DX3DVERT( -1.86353, 0.414107, -0 ) DX3DVNORM( -0.554229, 0.832364, -0 )  //52
DX3DVERT( -1.73453, 0.5, -0.414846 ) DX3DVNORM( 0, 1, -0 )  //53
DX3DVERT( -1, 0.5, -0.414846 ) DX3DVNORM( 0, 1, -0 )  //54
DX3DVERT( -1, 0.5, -0 ) DX3DVNORM( 0, 1, -0 )  //55
DX3DVERT( -1.73453, 0.5, -0 ) DX3DVNORM( 0, 1, -0 )  //56
DX3DVERT( -0.338507, 0.5, -0.414846 ) DX3DVNORM( 0, 1, -0 )  //57
DX3DVERT( -0.338507, 0.5, -0 ) DX3DVNORM( 0, 1, -0 )  //58
DX3DVERT( 0, 0.5, -0.414846 ) DX3DVNORM( 0, 1, -0 )  //59
DX3DVERT( 0, 0.5, -0 ) DX3DVNORM( 0, 1, -0 )  //60
DX3DVERT( -1.73453, 0.5, 0.414846 ) DX3DVNORM( -0.554229, 0.832364, -0 )  //61
DX3DVERT( -1.86353, 0.414107, 0.343581 ) DX3DVNORM( -0.554229, 0.832364, -0 )  //62
DX3DVERT( -1, 0.5, 0.414846 ) DX3DVNORM( 0, 1, -0 )  //63
DX3DVERT( -1.73453, 0.5, 0.414846 ) DX3DVNORM( 0, 1, -0 )  //64
DX3DVERT( -0.338507, 0.5, 0.414846 ) DX3DVNORM( 0, 1, -0 )  //65
DX3DVERT( 0, 0.5, 0.414846 ) DX3DVNORM( 0, 1, -0 )  //66
DX3DVERT( -1.86353, 0.414107, 0.343581 ) DX3DVNORM( -0.651842, 0.52461, 0.547618 )  //67
DX3DVERT( -1.73453, 0.5, 0.414846 ) DX3DVNORM( -0.651842, 0.52461, 0.547618 )  //68
DX3DVERT( -1.73453, 0.411111, 0.5 ) DX3DVNORM( -0.651842, 0.52461, 0.547618 )  //69
DX3DVERT( -1.86353, 0.340488, 0.414107 ) DX3DVNORM( -0.651842, 0.52461, 0.547618 )  //70
DX3DVERT( -1.73453, 0.5, 0.414846 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //71
DX3DVERT( -1, 0.5, 0.414846 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //72
DX3DVERT( -1, 0.411111, 0.5 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //73
DX3DVERT( -1.73453, 0.411111, 0.5 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //74
DX3DVERT( -0.338507, 0.5, 0.414846 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //75
DX3DVERT( -0.338507, 0.411111, 0.5 ) DX3DVNORM( 0, 0.691773, 0.722115 )  //76
DX3DVERT( 0, 0.5, 0.414846 ) DX3DVNORM( 0.0829356, 0.685678, 0.723165 )  //77
DX3DVERT( 0, 0.411111, 0.5 ) DX3DVNORM( 0.0829356, 0.685678, 0.723165 )  //78
DX3DVERT( 0.279783, 0.433333, 0.414846 ) DX3DVNORM( 0.165297, 0.674839, 0.719214 )  //79
DX3DVERT( 0.216174, 0.356296, 0.5 ) DX3DVNORM( 0.165297, 0.674839, 0.719214 )  //80
DX3DVERT( -1.86353, 0.340488, 0.414107 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //81
DX3DVERT( -1.73453, 0.411111, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //82
DX3DVERT( -1.73453, 0.25, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //83
DX3DVERT( -1.86353, 0.207053, 0.414107 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //84
DX3DVERT( -1.73453, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //85
DX3DVERT( -1, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //86
DX3DVERT( -1, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //87
DX3DVERT( -1.73453, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //88
DX3DVERT( -0.338507, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //89
DX3DVERT( -0.338507, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //90
DX3DVERT( 0, 0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //91
DX3DVERT( 0, 0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //92
DX3DVERT( 0.216174, 0.356296, 0.5 ) DX3DVNORM( 0, 0, 1 )  //93
DX3DVERT( 0.349813, 0.205556, 0.5 ) DX3DVNORM( 0, 0, 1 )  //94
DX3DVERT( -1.73453, 0, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //95
DX3DVERT( -1.86353, 0, 0.414107 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //96
DX3DVERT( -1, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //97
DX3DVERT( -1.73453, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //98
DX3DVERT( -0.338507, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //99
DX3DVERT( 0, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //100
DX3DVERT( 0.349813, 0, 0.5 ) DX3DVNORM( 0, 0, 1 )  //101
DX3DVERT( -1.73453, -0.25, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //102
DX3DVERT( -1.86353, -0.207053, 0.414107 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //103
DX3DVERT( -1, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //104
DX3DVERT( -1.73453, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //105
DX3DVERT( -0.338507, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //106
DX3DVERT( 0, -0.25, 0.5 ) DX3DVNORM( 0, 0, 1 )  //107
DX3DVERT( 0.349813, -0.205556, 0.5 ) DX3DVNORM( 0, 0, 1 )  //108
DX3DVERT( -1.73453, -0.411111, 0.5 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //109
DX3DVERT( -1.86353, -0.340488, 0.414107 ) DX3DVNORM( -0.554229, 0, 0.832364 )  //110
DX3DVERT( -1, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //111
DX3DVERT( -1.73453, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //112
DX3DVERT( -0.338507, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //113
DX3DVERT( 0, -0.411111, 0.5 ) DX3DVNORM( 0, 0, 1 )  //114
DX3DVERT( 0.216174, -0.356296, 0.5 ) DX3DVNORM( 0, 0, 1 )  //115
DX3DVERT( -1.86353, -0.340488, 0.414107 ) DX3DVNORM( -0.651842, -0.52461, 0.547618 )  //116
DX3DVERT( -1.73453, -0.411111, 0.5 ) DX3DVNORM( -0.651842, -0.52461, 0.547618 )  //117
DX3DVERT( -1.73453, -0.5, 0.414846 ) DX3DVNORM( -0.651842, -0.52461, 0.547618 )  //118
DX3DVERT( -1.86353, -0.414107, 0.343581 ) DX3DVNORM( -0.651842, -0.52461, 0.547618 )  //119
DX3DVERT( -1.73453, -0.411111, 0.5 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //120
DX3DVERT( -1, -0.411111, 0.5 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //121
DX3DVERT( -1, -0.5, 0.414846 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //122
DX3DVERT( -1.73453, -0.5, 0.414846 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //123
DX3DVERT( -0.338507, -0.411111, 0.5 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //124
DX3DVERT( -0.338507, -0.5, 0.414846 ) DX3DVNORM( 0, -0.691773, 0.722115 )  //125
DX3DVERT( 0, -0.411111, 0.5 ) DX3DVNORM( 0.0829356, -0.685678, 0.723165 )  //126
DX3DVERT( 0, -0.5, 0.414846 ) DX3DVNORM( 0.0829356, -0.685678, 0.723165 )  //127
DX3DVERT( 0.216174, -0.356296, 0.5 ) DX3DVNORM( 0.165298, -0.674839, 0.719214 )  //128
DX3DVERT( 0.279783, -0.433333, 0.414846 ) DX3DVNORM( 0.165298, -0.674839, 0.719214 )  //129
DX3DVERT( -1.86353, -0.414107, 0.343581 ) DX3DVNORM( -0.554229, -0.832364, -0 )  //130
DX3DVERT( -1.73453, -0.5, 0.414846 ) DX3DVNORM( -0.554229, -0.832364, -0 )  //131
DX3DVERT( -1.73453, -0.5, -0 ) DX3DVNORM( -0.554229, -0.832364, -0 )  //132
DX3DVERT( -1.86353, -0.414107, -0 ) DX3DVNORM( -0.554229, -0.832364, -0 )  //133
DX3DVERT( -1.73453, -0.5, 0.414846 ) DX3DVNORM( 0, -1, -0 )  //134
DX3DVERT( -1, -0.5, 0.414846 ) DX3DVNORM( 0, -1, -0 )  //135
DX3DVERT( -1, -0.5, -0 ) DX3DVNORM( 0, -1, -0 )  //136
DX3DVERT( -1.73453, -0.5, -0 ) DX3DVNORM( 0, -1, -0 )  //137
DX3DVERT( -0.338507, -0.5, 0.414846 ) DX3DVNORM( 0, -1, -0 )  //138
DX3DVERT( -0.338507, -0.5, -0 ) DX3DVNORM( 0, -1, -0 )  //139
DX3DVERT( 0, -0.5, 0.414846 ) DX3DVNORM( 0, -1, -0 )  //140
DX3DVERT( 0, -0.5, -0 ) DX3DVNORM( 0, -1, -0 )  //141
DX3DVERT( -1.73453, -0.5, -0.414846 ) DX3DVNORM( -0.554229, -0.832364, -0 )  //142
DX3DVERT( -1.86353, -0.414107, -0.343581 ) DX3DVNORM( -0.554229, -0.832364, -0 )  //143
DX3DVERT( -1, -0.5, -0.414846 ) DX3DVNORM( 0, -1, -0 )  //144
DX3DVERT( -1.73453, -0.5, -0.414846 ) DX3DVNORM( 0, -1, -0 )  //145
DX3DVERT( -0.338507, -0.5, -0.414846 ) DX3DVNORM( 0, -1, -0 )  //146
DX3DVERT( 0, -0.5, -0.414846 ) DX3DVNORM( 0, -1, -0 )  //147
DX3DVERT( -1.86353, -0.414107, -0.343581 ) DX3DVNORM( -0.651842, -0.52461, -0.547618 )  //148
DX3DVERT( -1.73453, -0.5, -0.414846 ) DX3DVNORM( -0.651842, -0.52461, -0.547618 )  //149
DX3DVERT( -1.73453, -0.411111, -0.5 ) DX3DVNORM( -0.651842, -0.52461, -0.547618 )  //150
DX3DVERT( -1.86353, -0.340488, -0.414107 ) DX3DVNORM( -0.651842, -0.52461, -0.547618 )  //151
DX3DVERT( -1.73453, -0.5, -0.414846 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //152
DX3DVERT( -1, -0.5, -0.414846 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //153
DX3DVERT( -1, -0.411111, -0.5 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //154
DX3DVERT( -1.73453, -0.411111, -0.5 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //155
DX3DVERT( -0.338507, -0.5, -0.414846 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //156
DX3DVERT( -0.338507, -0.411111, -0.5 ) DX3DVNORM( 0, -0.691773, -0.722115 )  //157
DX3DVERT( 0, -0.5, -0.414846 ) DX3DVNORM( 0.0829356, -0.685678, -0.723165 )  //158
DX3DVERT( 0, -0.411111, -0.5 ) DX3DVNORM( 0.0829356, -0.685678, -0.723165 )  //159
DX3DVERT( 0.279783, -0.433333, -0.414846 ) DX3DVNORM( 0.165297, -0.674839, -0.719214 )  //160
DX3DVERT( 0.216174, -0.356296, -0.5 ) DX3DVNORM( 0.165297, -0.674839, -0.719214 )  //161
DX3DVERT( 0.279783, -0.433333, 0.414846 ) DX3DVNORM( 0.50869, -0.434305, 0.74338 )  //162
DX3DVERT( 0.216174, -0.356296, 0.5 ) DX3DVNORM( 0.50869, -0.434305, 0.74338 )  //163
DX3DVERT( 0.349813, -0.205556, 0.5 ) DX3DVNORM( 0.634523, -0.223883, 0.739768 )  //164
DX3DVERT( 0.431367, -0.25, 0.414846 ) DX3DVNORM( 0.634523, -0.223883, 0.739768 )  //165
DX3DVERT( 0.216174, -0.356296, -0.5 ) DX3DVNORM( 0.50869, -0.434305, -0.74338 )  //166
DX3DVERT( 0.279783, -0.433333, -0.414846 ) DX3DVNORM( 0.50869, -0.434305, -0.74338 )  //167
DX3DVERT( 0.431367, -0.25, -0.414846 ) DX3DVNORM( 0.634523, -0.223883, -0.739768 )  //168
DX3DVERT( 0.349813, -0.205556, -0.5 ) DX3DVNORM( 0.634523, -0.223883, -0.739768 )  //169
DX3DVERT( 0.349813, 0, 0.5 ) DX3DVNORM( 0.722206, 0, 0.691678 )  //170
DX3DVERT( 0.431367, 0, 0.414846 ) DX3DVNORM( 0.722206, 0, 0.691678 )  //171
DX3DVERT( 0.431367, 0, -0.414846 ) DX3DVNORM( 0.722206, 0, -0.691678 )  //172
DX3DVERT( 0.349813, 0, -0.5 ) DX3DVNORM( 0.722206, 0, -0.691678 )  //173
DX3DVERT( 0.349813, 0.205556, 0.5 ) DX3DVNORM( 0.634523, 0.223883, 0.739768 )  //174
DX3DVERT( 0.431367, 0.25, 0.414846 ) DX3DVNORM( 0.634523, 0.223883, 0.739768 )  //175
DX3DVERT( 0.431367, 0.25, -0.414846 ) DX3DVNORM( 0.634523, 0.223883, -0.739768 )  //176
DX3DVERT( 0.349813, 0.205556, -0.5 ) DX3DVNORM( 0.634523, 0.223883, -0.739768 )  //177
DX3DVERT( 0.216174, 0.356296, 0.5 ) DX3DVNORM( 0.50869, 0.434305, 0.74338 )  //178
DX3DVERT( 0.279783, 0.433333, 0.414846 ) DX3DVNORM( 0.50869, 0.434305, 0.74338 )  //179
DX3DVERT( 0.279783, 0.433333, -0.414846 ) DX3DVNORM( 0.50869, 0.434305, -0.74338 )  //180
DX3DVERT( 0.216174, 0.356296, -0.5 ) DX3DVNORM( 0.50869, 0.434305, -0.74338 )  //181
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_ArmLower_R____mArm_1 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_ArmLower_R____mArm_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 182 )
DX3DVERTEX_END


#else
#define vertex_ArmLower_R____mArm_1	NULL
#define vertexbuff_ArmLower_R____mArm_1	NULL
#endif




#if ((PT_ArmLower_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmLower_R____mArm_1 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DINDEX_START( index_ArmLower_R____mArm_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 5, 7, // 2 8
	5, 6, 7, // 3 11
	5, 8, 6, // 4 14
	8, 9, 6, // 5 17
	8, 10, 9, // 6 20
	10, 11, 9, // 7 23
	10, 12, 11, // 8 26
	12, 13, 11, // 9 29
	3, 2, 15, // 10 32
	2, 14, 15, // 11 35
	7, 6, 17, // 12 38
	6, 16, 17, // 13 41
	6, 9, 16, // 14 44
	9, 18, 16, // 15 47
	9, 11, 18, // 16 50
	11, 19, 18, // 17 53
	11, 13, 19, // 18 56
	13, 20, 19, // 19 59
	15, 14, 22, // 20 62
	14, 21, 22, // 21 65
	17, 16, 24, // 22 68
	16, 23, 24, // 23 71
	16, 18, 23, // 24 74
	18, 25, 23, // 25 77
	18, 19, 25, // 26 80
	19, 26, 25, // 27 83
	19, 20, 26, // 28 86
	20, 27, 26, // 29 89
	22, 21, 29, // 30 92
	21, 28, 29, // 31 95
	24, 23, 31, // 32 98
	23, 30, 31, // 33 101
	23, 25, 30, // 34 104
	25, 32, 30, // 35 107
	25, 26, 32, // 36 110
	26, 33, 32, // 37 113
	26, 27, 33, // 38 116
	27, 34, 33, // 39 119
	35, 36, 38, // 40 122
	36, 37, 38, // 41 125
	39, 40, 42, // 42 128
	40, 41, 42, // 43 131
	40, 43, 41, // 44 134
	43, 44, 41, // 45 137
	43, 45, 44, // 46 140
	45, 46, 44, // 47 143
	45, 47, 46, // 48 146
	47, 48, 46, // 49 149
	49, 50, 52, // 50 152
	50, 51, 52, // 51 155
	53, 54, 56, // 52 158
	54, 55, 56, // 53 161
	54, 57, 55, // 54 164
	57, 58, 55, // 55 167
	57, 59, 58, // 56 170
	59, 60, 58, // 57 173
	52, 51, 62, // 58 176
	51, 61, 62, // 59 179
	56, 55, 64, // 60 182
	55, 63, 64, // 61 185
	55, 58, 63, // 62 188
	58, 65, 63, // 63 191
	58, 60, 65, // 64 194
	60, 66, 65, // 65 197
	67, 68, 70, // 66 200
	68, 69, 70, // 67 203
	71, 72, 74, // 68 206
	72, 73, 74, // 69 209
	72, 75, 73, // 70 212
	75, 76, 73, // 71 215
	75, 77, 76, // 72 218
	77, 78, 76, // 73 221
	77, 79, 78, // 74 224
	79, 80, 78, // 75 227
	81, 82, 84, // 76 230
	82, 83, 84, // 77 233
	85, 86, 88, // 78 236
	86, 87, 88, // 79 239
	86, 89, 87, // 80 242
	89, 90, 87, // 81 245
	89, 91, 90, // 82 248
	91, 92, 90, // 83 251
	91, 93, 92, // 84 254
	93, 94, 92, // 85 257
	84, 83, 96, // 86 260
	83, 95, 96, // 87 263
	88, 87, 98, // 88 266
	87, 97, 98, // 89 269
	87, 90, 97, // 90 272
	90, 99, 97, // 91 275
	90, 92, 99, // 92 278
	92, 100, 99, // 93 281
	92, 94, 100, // 94 284
	94, 101, 100, // 95 287
	96, 95, 103, // 96 290
	95, 102, 103, // 97 293
	98, 97, 105, // 98 296
	97, 104, 105, // 99 299
	97, 99, 104, // 100 302
	99, 106, 104, // 101 305
	99, 100, 106, // 102 308
	100, 107, 106, // 103 311
	100, 101, 107, // 104 314
	101, 108, 107, // 105 317
	103, 102, 110, // 106 320
	102, 109, 110, // 107 323
	105, 104, 112, // 108 326
	104, 111, 112, // 109 329
	104, 106, 111, // 110 332
	106, 113, 111, // 111 335
	106, 107, 113, // 112 338
	107, 114, 113, // 113 341
	107, 108, 114, // 114 344
	108, 115, 114, // 115 347
	116, 117, 119, // 116 350
	117, 118, 119, // 117 353
	120, 121, 123, // 118 356
	121, 122, 123, // 119 359
	121, 124, 122, // 120 362
	124, 125, 122, // 121 365
	124, 126, 125, // 122 368
	126, 127, 125, // 123 371
	126, 128, 127, // 124 374
	128, 129, 127, // 125 377
	130, 131, 133, // 126 380
	131, 132, 133, // 127 383
	134, 135, 137, // 128 386
	135, 136, 137, // 129 389
	135, 138, 136, // 130 392
	138, 139, 136, // 131 395
	138, 140, 139, // 132 398
	140, 141, 139, // 133 401
	133, 132, 143, // 134 404
	132, 142, 143, // 135 407
	137, 136, 145, // 136 410
	136, 144, 145, // 137 413
	136, 139, 144, // 138 416
	139, 146, 144, // 139 419
	139, 141, 146, // 140 422
	141, 147, 146, // 141 425
	148, 149, 151, // 142 428
	149, 150, 151, // 143 431
	152, 153, 155, // 144 434
	153, 154, 155, // 145 437
	153, 156, 154, // 146 440
	156, 157, 154, // 147 443
	156, 158, 157, // 148 446
	158, 159, 157, // 149 449
	158, 160, 159, // 150 452
	160, 161, 159, // 151 455
	162, 163, 165, // 152 458
	163, 164, 165, // 153 461
	166, 167, 169, // 154 464
	167, 168, 169, // 155 467
	165, 164, 171, // 156 470
	164, 170, 171, // 157 473
	169, 168, 173, // 158 476
	168, 172, 173, // 159 479
	171, 170, 175, // 160 482
	170, 174, 175, // 161 485
	173, 172, 177, // 162 488
	172, 176, 177, // 163 491
	175, 174, 179, // 164 494
	174, 178, 179, // 165 497
	177, 176, 181, // 166 500
	176, 180, 181, // 167 503
DX3DINDEX_END
#endif

#else
#define index_ArmLower_R____mArm_1	NULL
#endif




#if ((PT_ArmLower_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP) ) || (PT_ArmLower_R____mArm_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_ArmLower_R____mArm_1_INDEXSTRIP 	NULL
#endif




#if ((PT_ArmLower_R____mArm_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_VERTEXSTRIP) ) || (PT_ArmLower_R____mArm_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_ArmLower_R____mArm_1_VERTEXSTRIP 	NULL
#define vertexbuff_ArmLower_R____mArm_1_VERTEXSTRIP 	NULL
#endif






#if ((PT_ArmLower_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmLower_R____mArmGlay_2 == PT_TRILIST ) || ((PT_ArmLower_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP))  || (PT_ArmLower_R____mArmGlay_2 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERT_START( VN, vertexbuff_ArmLower_R____mArmGlay_2 )
DX3DVERT( -1.4284, 0.169949, 0.169949 ) DX3DVNORM( -0.128081, 0.701283, 0.701283 )  //0
DX3DVERT( -1.4284, 0, 0.240344 ) DX3DVNORM( -0.128081, 3.2219e-008, 0.991764 )  //1
DX3DVERT( -2.01849, -7.08716e-009, 0.164137 ) DX3DVNORM( -0.128081, 3.2219e-008, 0.991764 )  //2
DX3DVERT( -2.01849, 0.116062, 0.116062 ) DX3DVNORM( -0.128081, 0.701283, 0.701283 )  //3
DX3DVERT( -1.4284, -0.169949, 0.169949 ) DX3DVNORM( -0.128081, -0.701283, 0.701283 )  //4
DX3DVERT( -2.01849, -0.116062, 0.116062 ) DX3DVNORM( -0.128081, -0.701283, 0.701283 )  //5
DX3DVERT( -1.4284, -0.240344, 1.50293e-009 ) DX3DVNORM( -0.128081, -0.991764, 4.83286e-008 )  //6
DX3DVERT( -2.01849, -0.164137, -1.336e-009 ) DX3DVNORM( -0.128081, -0.991764, 4.83286e-008 )  //7
DX3DVERT( -1.4284, -0.169949, -0.169949 ) DX3DVNORM( -0.128081, -0.701283, -0.701283 )  //8
DX3DVERT( -2.01849, -0.116062, -0.116062 ) DX3DVNORM( -0.128081, -0.701283, -0.701283 )  //9
DX3DVERT( -1.4284, 0, -0.240344 ) DX3DVNORM( -0.128081, -8.05476e-008, -0.991764 )  //10
DX3DVERT( -2.01849, -7.08716e-009, -0.164137 ) DX3DVNORM( -0.128081, -8.05476e-008, -0.991764 )  //11
DX3DVERT( -1.4284, 0.169949, -0.169949 ) DX3DVNORM( -0.128081, 0.701283, -0.701283 )  //12
DX3DVERT( -2.01849, 0.116062, -0.116062 ) DX3DVNORM( -0.128081, 0.701283, -0.701283 )  //13
DX3DVERT( -1.4284, 0.240344, 1.50293e-009 ) DX3DVNORM( -0.128082, 0.991764, 8.05476e-008 )  //14
DX3DVERT( -2.01849, 0.164137, -1.336e-009 ) DX3DVNORM( -0.128082, 0.991764, 8.05476e-008 )  //15
DX3DVERT( -2.01849, 0.116062, 0.116062 ) DX3DVNORM( -1, 2.34662e-006, -7.26279e-007 )  //16
DX3DVERT( -2.01849, -7.08716e-009, 0.164137 ) DX3DVNORM( -1, -7.82207e-007, -0 )  //17
DX3DVERT( -2.01849, -7.08716e-009, -1.336e-009 ) DX3DVNORM( -1, -2.55795e-013, 1.42109e-014 )  //18
DX3DVERT( -2.01849, -0.116062, 0.116062 ) DX3DVNORM( -1, -1.56441e-006, 1.02711e-006 )  //19
DX3DVERT( -2.01849, -0.164137, -1.336e-009 ) DX3DVNORM( -1, 0, 2.27374e-013 )  //20
DX3DVERT( -2.01849, -0.116062, -0.116062 ) DX3DVNORM( -1, -2.34662e-006, -1.02711e-006 )  //21
DX3DVERT( -2.01849, -7.08716e-009, -0.164137 ) DX3DVNORM( -1, -2.34662e-006, -0 )  //22
DX3DVERT( -2.01849, 0.116062, -0.116062 ) DX3DVNORM( -1, 1.56441e-006, 7.26278e-007 )  //23
DX3DVERT( -2.01849, 0.164137, -1.336e-009 ) DX3DVNORM( -1, 3.12883e-006, -1.7053e-013 )  //24
DX3DVERT( -1.76019, -0.230586, -0.280442 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //25
DX3DVERT( -1.86353, -0.340488, -0.414107 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //26
DX3DVERT( -1.86353, -0.207053, -0.414107 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //27
DX3DVERT( -1.76019, -0.115293, -0.280442 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //28
DX3DVERT( -1.86353, 0, -0.414107 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //29
DX3DVERT( -1.76019, 0, -0.280442 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //30
DX3DVERT( -1.86353, 0.207053, -0.414107 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //31
DX3DVERT( -1.76019, 0.115293, -0.280442 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //32
DX3DVERT( -1.86353, 0.340488, -0.414107 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //33
DX3DVERT( -1.76019, 0.230586, -0.280442 ) DX3DVNORM( -0.791124, 0, 0.611656 )  //34
DX3DVERT( -1.76019, 0.230586, -0.280442 ) DX3DVNORM( -0.857902, -0.355443, 0.371032 )  //35
DX3DVERT( -1.86353, 0.340488, -0.414107 ) DX3DVNORM( -0.857902, -0.355443, 0.371032 )  //36
DX3DVERT( -1.86353, 0.414107, -0.343581 ) DX3DVNORM( -0.857902, -0.355443, 0.371032 )  //37
DX3DVERT( -1.76019, 0.280442, -0.232681 ) DX3DVNORM( -0.857902, -0.355443, 0.371032 )  //38
DX3DVERT( -1.76019, 0.280442, -0.232681 ) DX3DVNORM( -0.791124, -0.611656, -0 )  //39
DX3DVERT( -1.86353, 0.414107, -0.343581 ) DX3DVNORM( -0.791124, -0.611656, -0 )  //40
DX3DVERT( -1.86353, 0.414107, -0 ) DX3DVNORM( -0.791124, -0.611656, -0 )  //41
DX3DVERT( -1.76019, 0.280442, -0 ) DX3DVNORM( -0.791124, -0.611656, -0 )  //42
DX3DVERT( -0.0131107, 0.302889, -0.262346 ) DX3DVNORM( 0.211527, 0.977184, 0.0191643 )  //43
DX3DVERT( 0.208664, 0.260028, -0.262346 ) DX3DVNORM( 0.573409, 0.818317, 0.0394868 )  //44
DX3DVERT( 0.204785, 0.250577, 1.11979e-017 ) DX3DVNORM( 0.572753, 0.819727, -0.00113162 )  //45
DX3DVERT( -0.0131107, 0.302889, -0 ) DX3DVNORM( 0.211566, 0.977364, -0.000230975 )  //46
DX3DVERT( -1.86353, 0.414107, 0.343581 ) DX3DVNORM( -0.791124, -0.611656, -0 )  //47
DX3DVERT( -1.76019, 0.280442, 0.232681 ) DX3DVNORM( -0.791124, -0.611656, -0 )  //48
DX3DVERT( 0.208664, 0.260028, 0.25617 ) DX3DVNORM( 0.571153, 0.819784, -0.0417038 )  //49
DX3DVERT( -0.0131107, 0.302889, 0.25617 ) DX3DVNORM( 0.211525, 0.977175, -0.0196261 )  //50
DX3DVERT( -1.76019, 0.280442, 0.232681 ) DX3DVNORM( -0.857902, -0.355442, -0.371032 )  //51
DX3DVERT( -1.86353, 0.414107, 0.343581 ) DX3DVNORM( -0.857902, -0.355442, -0.371032 )  //52
DX3DVERT( -1.86353, 0.340488, 0.414107 ) DX3DVNORM( -0.857902, -0.355442, -0.371032 )  //53
DX3DVERT( -1.76019, 0.230586, 0.280442 ) DX3DVNORM( -0.857902, -0.355442, -0.371032 )  //54
DX3DVERT( -1.76019, 0.230586, 0.280442 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //55
DX3DVERT( -1.86353, 0.340488, 0.414107 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //56
DX3DVERT( -1.86353, 0.207053, 0.414107 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //57
DX3DVERT( -1.76019, 0.115293, 0.280442 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //58
DX3DVERT( -1.86353, 0, 0.414107 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //59
DX3DVERT( -1.76019, 0, 0.280442 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //60
DX3DVERT( -1.86353, -0.207053, 0.414107 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //61
DX3DVERT( -1.76019, -0.115293, 0.280442 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //62
DX3DVERT( -1.86353, -0.340488, 0.414107 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //63
DX3DVERT( -1.76019, -0.230586, 0.280442 ) DX3DVNORM( -0.791124, 0, -0.611656 )  //64
DX3DVERT( -1.76019, -0.230586, 0.280442 ) DX3DVNORM( -0.857902, 0.355443, -0.371032 )  //65
DX3DVERT( -1.86353, -0.340488, 0.414107 ) DX3DVNORM( -0.857902, 0.355443, -0.371032 )  //66
DX3DVERT( -1.86353, -0.414107, 0.343581 ) DX3DVNORM( -0.857902, 0.355443, -0.371032 )  //67
DX3DVERT( -1.76019, -0.280442, 0.232681 ) DX3DVNORM( -0.857902, 0.355443, -0.371032 )  //68
DX3DVERT( -1.76019, -0.280442, 0.232681 ) DX3DVNORM( -0.791124, 0.611656, -0 )  //69
DX3DVERT( -1.86353, -0.414107, 0.343581 ) DX3DVNORM( -0.791124, 0.611656, -0 )  //70
DX3DVERT( -1.86353, -0.414107, -0 ) DX3DVNORM( -0.791124, 0.611656, -0 )  //71
DX3DVERT( -1.76019, -0.280442, -0 ) DX3DVNORM( -0.791124, 0.611656, -0 )  //72
DX3DVERT( -0.0131107, -0.302889, 0.25617 ) DX3DVNORM( 0.211525, -0.977175, -0.0196261 )  //73
DX3DVERT( 0.208664, -0.260028, 0.25617 ) DX3DVNORM( 0.571153, -0.819784, -0.0417038 )  //74
DX3DVERT( 0.204785, -0.250577, -1.11979e-017 ) DX3DVNORM( 0.572753, -0.819727, -0.00113162 )  //75
DX3DVERT( -0.0131107, -0.302889, -0 ) DX3DVNORM( 0.211566, -0.977364, -0.000230975 )  //76
DX3DVERT( -1.86353, -0.414107, -0.343581 ) DX3DVNORM( -0.791124, 0.611656, -0 )  //77
DX3DVERT( -1.76019, -0.280442, -0.232681 ) DX3DVNORM( -0.791124, 0.611656, -0 )  //78
DX3DVERT( 0.208664, -0.260028, -0.262346 ) DX3DVNORM( 0.573409, -0.818317, 0.0394868 )  //79
DX3DVERT( -0.0131107, -0.302889, -0.262346 ) DX3DVNORM( 0.211527, -0.977184, 0.0191643 )  //80
DX3DVERT( -1.76019, -0.280442, -0.232681 ) DX3DVNORM( -0.857902, 0.355442, 0.371032 )  //81
DX3DVERT( -1.86353, -0.414107, -0.343581 ) DX3DVNORM( -0.857902, 0.355442, 0.371032 )  //82
DX3DVERT( -1.86353, -0.340488, -0.414107 ) DX3DVNORM( -0.857902, 0.355442, 0.371032 )  //83
DX3DVERT( -1.76019, -0.230586, -0.280442 ) DX3DVNORM( -0.857902, 0.355442, 0.371032 )  //84
DX3DVERT( 0.269412, -0.17525, 0.245879 ) DX3DVNORM( 0.915424, -0.400014, -0.0445783 )  //85
DX3DVERT( 0.259244, -0.153055, -1.11979e-017 ) DX3DVNORM( 0.916782, -0.399385, -0.00137335 )  //86
DX3DVERT( 0.269412, -0.17525, -0.272637 ) DX3DVNORM( 0.916427, -0.39801, 0.0418135 )  //87
DX3DVERT( 0.307679, 0, 0.25395 ) DX3DVNORM( 0.999494, 0, -0.0318076 )  //88
DX3DVERT( 0.307679, -1.11979e-017, -0.00355265 ) DX3DVNORM( 1, 0, -0.000887301 )  //89
DX3DVERT( 0.307679, 0, -0.264566 ) DX3DVNORM( 0.999548, 0, 0.0300404 )  //90
DX3DVERT( 0.269412, 0.17525, 0.245879 ) DX3DVNORM( 0.915424, 0.400014, -0.0445783 )  //91
DX3DVERT( 0.259244, 0.153055, 1.11979e-017 ) DX3DVNORM( 0.916782, 0.399385, -0.00137335 )  //92
DX3DVERT( 0.269412, 0.17525, -0.272637 ) DX3DVNORM( 0.916427, 0.39801, 0.0418135 )  //93
DX3DVERT( -1.76019, -0.230586, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //94
DX3DVERT( -1.76019, -0.280442, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //95
DX3DVERT( -1.76019, -0.140221, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //96
DX3DVERT( -1.76019, -0.115293, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //97
DX3DVERT( -1.76019, -0.280442, -0 ) DX3DVNORM( -1, 0, -0 )  //98
DX3DVERT( -1.76019, -0.140221, -0 ) DX3DVNORM( -1, 0, -0 )  //99
DX3DVERT( -1.76019, -0.280442, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //100
DX3DVERT( -1.76019, -0.140221, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //101
DX3DVERT( -1.76019, -0.230586, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //102
DX3DVERT( -1.76019, -0.115293, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //103
DX3DVERT( -1.76019, 0, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //104
DX3DVERT( -1.76019, 0, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //105
DX3DVERT( -1.76019, 0, -0 ) DX3DVNORM( -1, 0, -0 )  //106
DX3DVERT( -1.76019, 0, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //107
DX3DVERT( -1.76019, 0, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //108
DX3DVERT( -1.76019, 0.140221, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //109
DX3DVERT( -1.76019, 0.115293, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //110
DX3DVERT( -1.76019, 0.140221, -0 ) DX3DVNORM( -1, 0, -0 )  //111
DX3DVERT( -1.76019, 0.140221, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //112
DX3DVERT( -1.76019, 0.115293, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //113
DX3DVERT( -1.76019, 0.280442, 0.232681 ) DX3DVNORM( -1, 0, -0 )  //114
DX3DVERT( -1.76019, 0.230586, 0.280442 ) DX3DVNORM( -1, 0, -0 )  //115
DX3DVERT( -1.76019, 0.280442, -0 ) DX3DVNORM( -1, 0, -0 )  //116
DX3DVERT( -1.76019, 0.280442, -0.232681 ) DX3DVNORM( -1, 0, -0 )  //117
DX3DVERT( -1.76019, 0.230586, -0.280442 ) DX3DVNORM( -1, 0, -0 )  //118
DX3DVERT( 0, 0.5, -0.414846 ) DX3DVNORM( 0.133575, 0.611672, 0.779753 )  //119
DX3DVERT( 0.279783, 0.433333, -0.414846 ) DX3DVNORM( 0.341602, 0.515509, 0.785849 )  //120
DX3DVERT( 0.208664, 0.260028, -0.262346 ) DX3DVNORM( 0.341602, 0.515509, 0.785849 )  //121
DX3DVERT( -0.0131107, 0.302889, -0.262346 ) DX3DVNORM( 0.133575, 0.611672, 0.779753 )  //122
DX3DVERT( 0, 0.5, -0 ) DX3DVNORM( 0.997795, -0.0663677, -0 )  //123
DX3DVERT( 0, 0.5, -0.414846 ) DX3DVNORM( 0.997795, -0.0663677, -0 )  //124
DX3DVERT( -0.0131107, 0.302889, -0.262346 ) DX3DVNORM( 0.997795, -0.0663677, -0 )  //125
DX3DVERT( -0.0131107, 0.302889, -0 ) DX3DVNORM( 0.997795, -0.0663677, -0 )  //126
DX3DVERT( 0.279783, 0.433333, 0.414846 ) DX3DVNORM( 0.342566, 0.550828, -0.761076 )  //127
DX3DVERT( 0, 0.5, 0.414846 ) DX3DVNORM( 0.136786, 0.62638, -0.767423 )  //128
DX3DVERT( -0.0131107, 0.302889, 0.25617 ) DX3DVNORM( 0.136786, 0.62638, -0.767423 )  //129
DX3DVERT( 0.208664, 0.260028, 0.25617 ) DX3DVNORM( 0.342566, 0.550828, -0.761076 )  //130
DX3DVERT( 0, 0.5, 0.414846 ) DX3DVNORM( 0.997795, -0.0663677, -0 )  //131
DX3DVERT( -0.0131107, 0.302889, 0.25617 ) DX3DVNORM( 0.997795, -0.0663677, -0 )  //132
DX3DVERT( 0, -0.5, 0.414846 ) DX3DVNORM( 0.136786, -0.62638, -0.767423 )  //133
DX3DVERT( 0.279783, -0.433333, 0.414846 ) DX3DVNORM( 0.342566, -0.550828, -0.761076 )  //134
DX3DVERT( 0.208664, -0.260028, 0.25617 ) DX3DVNORM( 0.342566, -0.550828, -0.761076 )  //135
DX3DVERT( -0.0131107, -0.302889, 0.25617 ) DX3DVNORM( 0.136786, -0.62638, -0.767423 )  //136
DX3DVERT( 0, -0.5, -0 ) DX3DVNORM( 0.997795, 0.0663677, -0 )  //137
DX3DVERT( 0, -0.5, 0.414846 ) DX3DVNORM( 0.997795, 0.0663677, -0 )  //138
DX3DVERT( -0.0131107, -0.302889, 0.25617 ) DX3DVNORM( 0.997795, 0.0663677, -0 )  //139
DX3DVERT( -0.0131107, -0.302889, -0 ) DX3DVNORM( 0.997795, 0.0663677, -0 )  //140
DX3DVERT( 0.279783, -0.433333, -0.414846 ) DX3DVNORM( 0.341602, -0.515509, 0.785849 )  //141
DX3DVERT( 0, -0.5, -0.414846 ) DX3DVNORM( 0.133575, -0.611672, 0.779754 )  //142
DX3DVERT( -0.0131107, -0.302889, -0.262346 ) DX3DVNORM( 0.133575, -0.611672, 0.779754 )  //143
DX3DVERT( 0.208664, -0.260028, -0.262346 ) DX3DVNORM( 0.341602, -0.515509, 0.785849 )  //144
DX3DVERT( 0, -0.5, -0.414846 ) DX3DVNORM( 0.997795, 0.0663677, -0 )  //145
DX3DVERT( -0.0131107, -0.302889, -0.262346 ) DX3DVNORM( 0.997795, 0.0663677, -0 )  //146
DX3DVERT( 0.431367, -0.25, 0.414846 ) DX3DVNORM( 0.657363, -0.258534, -0.707838 )  //147
DX3DVERT( 0.269412, -0.17525, 0.245879 ) DX3DVNORM( 0.657363, -0.258534, -0.707838 )  //148
DX3DVERT( 0.431367, -0.25, -0.414846 ) DX3DVNORM( 0.627931, -0.238418, 0.740851 )  //149
DX3DVERT( 0.269412, -0.17525, -0.272637 ) DX3DVNORM( 0.627931, -0.238418, 0.740851 )  //150
DX3DVERT( 0.431367, 0, 0.414846 ) DX3DVNORM( 0.749768, -1.86545e-009, -0.661701 )  //151
DX3DVERT( 0.307679, 0, 0.25395 ) DX3DVNORM( 0.749768, -1.86545e-009, -0.661701 )  //152
DX3DVERT( 0.431367, 0, -0.414846 ) DX3DVNORM( 0.705528, 3.7363e-009, 0.708682 )  //153
DX3DVERT( 0.307679, 0, -0.264566 ) DX3DVNORM( 0.705528, 3.7363e-009, 0.708682 )  //154
DX3DVERT( 0.431367, 0.25, 0.414846 ) DX3DVNORM( 0.657363, 0.258534, -0.707838 )  //155
DX3DVERT( 0.269412, 0.17525, 0.245879 ) DX3DVNORM( 0.657363, 0.258534, -0.707838 )  //156
DX3DVERT( 0.431367, 0.25, -0.414846 ) DX3DVNORM( 0.627931, 0.238418, 0.74085 )  //157
DX3DVERT( 0.269412, 0.17525, -0.272637 ) DX3DVNORM( 0.627931, 0.238418, 0.74085 )  //158
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_ArmLower_R____mArmGlay_2 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_ArmLower_R____mArmGlay_2 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 159 )
DX3DVERTEX_END


#else
#define vertex_ArmLower_R____mArmGlay_2	NULL
#define vertexbuff_ArmLower_R____mArmGlay_2	NULL
#endif




#if ((PT_ArmLower_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmLower_R____mArmGlay_2 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DINDEX_START( index_ArmLower_R____mArmGlay_2 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 0, 15, // 14 44
	0, 3, 15, // 15 47
	16, 17, 18, // 16 50
	17, 19, 18, // 17 53
	19, 20, 18, // 18 56
	20, 21, 18, // 19 59
	21, 22, 18, // 20 62
	22, 23, 18, // 21 65
	23, 24, 18, // 22 68
	24, 16, 18, // 23 71
	25, 26, 28, // 24 74
	26, 27, 28, // 25 77
	28, 27, 30, // 26 80
	27, 29, 30, // 27 83
	30, 29, 32, // 28 86
	29, 31, 32, // 29 89
	32, 31, 34, // 30 92
	31, 33, 34, // 31 95
	35, 36, 38, // 32 98
	36, 37, 38, // 33 101
	39, 40, 42, // 34 104
	40, 41, 42, // 35 107
	43, 44, 46, // 36 110
	44, 45, 46, // 37 113
	42, 41, 48, // 38 116
	41, 47, 48, // 39 119
	46, 45, 50, // 40 122
	45, 49, 50, // 41 125
	51, 52, 54, // 42 128
	52, 53, 54, // 43 131
	55, 56, 58, // 44 134
	56, 57, 58, // 45 137
	58, 57, 60, // 46 140
	57, 59, 60, // 47 143
	60, 59, 62, // 48 146
	59, 61, 62, // 49 149
	62, 61, 64, // 50 152
	61, 63, 64, // 51 155
	65, 66, 68, // 52 158
	66, 67, 68, // 53 161
	69, 70, 72, // 54 164
	70, 71, 72, // 55 167
	73, 74, 76, // 56 170
	74, 75, 76, // 57 173
	72, 71, 78, // 58 176
	71, 77, 78, // 59 179
	76, 75, 80, // 60 182
	75, 79, 80, // 61 185
	81, 82, 84, // 62 188
	82, 83, 84, // 63 191
	75, 74, 86, // 64 194
	74, 85, 86, // 65 197
	79, 75, 87, // 66 200
	75, 86, 87, // 67 203
	86, 85, 89, // 68 206
	85, 88, 89, // 69 209
	87, 86, 90, // 70 212
	86, 89, 90, // 71 215
	89, 88, 92, // 72 218
	88, 91, 92, // 73 221
	90, 89, 93, // 74 224
	89, 92, 93, // 75 227
	92, 91, 45, // 76 230
	91, 49, 45, // 77 233
	93, 92, 44, // 78 236
	92, 45, 44, // 79 239
	94, 95, 97, // 80 242
	95, 96, 97, // 81 245
	95, 98, 96, // 82 248
	98, 99, 96, // 83 251
	98, 100, 99, // 84 254
	100, 101, 99, // 85 257
	100, 102, 101, // 86 260
	102, 103, 101, // 87 263
	97, 96, 105, // 88 266
	96, 104, 105, // 89 269
	96, 99, 104, // 90 272
	99, 106, 104, // 91 275
	99, 101, 106, // 92 278
	101, 107, 106, // 93 281
	101, 103, 107, // 94 284
	103, 108, 107, // 95 287
	105, 104, 110, // 96 290
	104, 109, 110, // 97 293
	104, 106, 109, // 98 296
	106, 111, 109, // 99 299
	106, 107, 111, // 100 302
	107, 112, 111, // 101 305
	107, 108, 112, // 102 308
	108, 113, 112, // 103 311
	110, 109, 115, // 104 314
	109, 114, 115, // 105 317
	109, 111, 114, // 106 320
	111, 116, 114, // 107 323
	111, 112, 116, // 108 326
	112, 117, 116, // 109 329
	112, 113, 117, // 110 332
	113, 118, 117, // 111 335
	119, 120, 122, // 112 338
	120, 121, 122, // 113 341
	123, 124, 126, // 114 344
	124, 125, 126, // 115 347
	127, 128, 130, // 116 350
	128, 129, 130, // 117 353
	131, 123, 132, // 118 356
	123, 126, 132, // 119 359
	133, 134, 136, // 120 362
	134, 135, 136, // 121 365
	137, 138, 140, // 122 368
	138, 139, 140, // 123 371
	141, 142, 144, // 124 374
	142, 143, 144, // 125 377
	145, 137, 146, // 126 380
	137, 140, 146, // 127 383
	134, 147, 135, // 128 386
	147, 148, 135, // 129 389
	149, 141, 150, // 130 392
	141, 144, 150, // 131 395
	147, 151, 148, // 132 398
	151, 152, 148, // 133 401
	153, 149, 154, // 134 404
	149, 150, 154, // 135 407
	151, 155, 152, // 136 410
	155, 156, 152, // 137 413
	157, 153, 158, // 138 416
	153, 154, 158, // 139 419
	155, 127, 156, // 140 422
	127, 130, 156, // 141 425
	120, 157, 121, // 142 428
	157, 158, 121, // 143 431
DX3DINDEX_END
#endif

#else
#define index_ArmLower_R____mArmGlay_2	NULL
#endif




#if ((PT_ArmLower_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP) ) || (PT_ArmLower_R____mArmGlay_2 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_ArmLower_R____mArmGlay_2_INDEXSTRIP 	NULL
#endif




#if ((PT_ArmLower_R____mArmGlay_2 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_VERTEXSTRIP) ) || (PT_ArmLower_R____mArmGlay_2 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_ArmLower_R____mArmGlay_2_VERTEXSTRIP 	NULL
#define vertexbuff_ArmLower_R____mArmGlay_2_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_ArmLower_R___ )
DX3DMODEL_START( model_ArmLower_R____initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_ArmLower_R____initialShadingGroup_0 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DMODEL_INDEX( index_ArmLower_R____initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 24 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODEL_START( model_ArmLower_R____mArm_1 )
DX3DMODEL_VERTEX( vertex_ArmLower_R____mArm_1 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DMODEL_INDEX( index_ArmLower_R____mArm_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 504 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mArm )
DX3DMODEL_END
DX3DMODEL_START( model_ArmLower_R____mArmGlay_2 )
DX3DMODEL_VERTEX( vertex_ArmLower_R____mArmGlay_2 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DMODEL_INDEX( index_ArmLower_R____mArmGlay_2 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 432 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mArmGlay )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_ArmLower_R___, 1595240181 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_ArmLower_R___ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, -0, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, -0, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_ArmHand_R___
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_ArmHand_R____mArm_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmHand_R____mArm_0 == PT_TRILIST ) || ((PT_ArmHand_R____mArm_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP))  || (PT_ArmHand_R____mArm_0 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERT_START( VN, vertexbuff_ArmHand_R____mArm_0 )
DX3DVERT( -0.58539, -0.100211, -0.476331 ) DX3DVNORM( 0.198137, -0.117809, -0.973069 )  //0
DX3DVERT( -0.423817, -0.0416667, -0.424209 ) DX3DVNORM( 0.232194, -0.105448, -0.966937 )  //1
DX3DVERT( -0.423817, 0.102103, -0.424209 ) DX3DVNORM( 0.224451, 0.0788668, -0.971289 )  //2
DX3DVERT( -0.65508, 0.0534658, -0.476331 ) DX3DVNORM( 0.182415, 0.0443587, -0.98222 )  //3
DX3DVERT( -0.336784, -0.0416667, -0.40419 ) DX3DVNORM( 0.2505, -0.00652279, -0.968095 )  //4
DX3DVERT( -0.336784, 0.0597294, -0.40419 ) DX3DVNORM( 0.262291, 0.0281303, -0.964579 )  //5
DX3DVERT( -0.170117, -0.0416667, -0.354005 ) DX3DVNORM( 0.288324, 0, -0.957533 )  //6
DX3DVERT( -0.170117, 0.0384872, -0.354005 ) DX3DVNORM( 0.284771, 0.0224182, -0.958333 )  //7
DX3DVERT( -0.629575, 0.0991074, -0.469279 ) DX3DVNORM( 0.211558, 0.0986158, -0.972377 )  //8
DX3DVERT( -0.521412, 0.157658, -0.435823 ) DX3DVNORM( 0.205007, 0.158219, -0.965887 )  //9
DX3DVERT( -0.336784, 0.158829, -0.397244 ) DX3DVNORM( 0.246107, 0.0880351, -0.965236 )  //10
DX3DVERT( -0.170117, 0.0879333, -0.354005 ) DX3DVNORM( 0.281072, 0.0448247, -0.958639 )  //11
DX3DVERT( -0.644798, 0.10039, -0.290447 ) DX3DVNORM( -0.760385, 0.645758, -0.0693615 )  //12
DX3DVERT( -0.629575, 0.0991074, -0.469279 ) DX3DVNORM( -0.585672, 0.784699, -0.203066 )  //13
DX3DVERT( -0.560681, 0.201307, -0.273053 ) DX3DVNORM( -0.294416, 0.944593, -0.145135 )  //14
DX3DVERT( -0.521412, 0.157658, -0.435823 ) DX3DVNORM( -0.178728, 0.932952, -0.312502 )  //15
DX3DVERT( -0.336784, 0.158829, -0.397244 ) DX3DVNORM( 0.224817, 0.920078, -0.320801 )  //16
DX3DVERT( -0.336784, 0.201307, -0.27781 ) DX3DVNORM( 0.221896, 0.961407, -0.162662 )  //17
DX3DVERT( -0.170117, 0.0879333, -0.354005 ) DX3DVNORM( 0.418585, 0.842775, -0.338403 )  //18
DX3DVERT( -0.170117, 0.125, -0.275337 ) DX3DVNORM( 0.423784, 0.889326, -0.171774 )  //19
DX3DVERT( -0.644798, 0.10039, -0.290447 ) DX3DVNORM( -0.188266, 0.317138, -0.929505 )  //20
DX3DVERT( -0.560681, 0.201307, -0.273053 ) DX3DVNORM( -0.188266, 0.317138, -0.929505 )  //21
DX3DVERT( -0.830623, 0.125, -0.244413 ) DX3DVNORM( -0.188266, 0.317138, -0.929505 )  //22
DX3DVERT( -0.830623, 0.125, -0.244413 ) DX3DVNORM( -0.272021, 0.962291, -0 )  //23
DX3DVERT( -0.560681, 0.201307, -0.222222 ) DX3DVNORM( -0.137311, 0.990528, -0 )  //24
DX3DVERT( -0.336784, 0.201307, -0.206347 ) DX3DVNORM( 0.213034, 0.977045, -0 )  //25
DX3DVERT( -0.170117, 0.125, -0.196669 ) DX3DVNORM( 0.416287, 0.909233, -0 )  //26
DX3DVERT( -0.560681, 0.201307, -0.133333 ) DX3DVNORM( -0.137311, 0.990528, -0 )  //27
DX3DVERT( -0.830623, 0.125, -0.133333 ) DX3DVNORM( -0.272021, 0.962291, -0 )  //28
DX3DVERT( -0.336784, 0.201307, -0.133333 ) DX3DVNORM( 0.213034, 0.977045, -0 )  //29
DX3DVERT( -0.170117, 0.125, -0.118002 ) DX3DVNORM( 0.416287, 0.909233, -0 )  //30
DX3DVERT( -0.560681, 0.201307, -0.0444445 ) DX3DVNORM( -0.137311, 0.990528, -0 )  //31
DX3DVERT( -0.830623, 0.125, -0.0444445 ) DX3DVNORM( -0.272021, 0.962291, -0 )  //32
DX3DVERT( -0.336784, 0.201307, -0.0444445 ) DX3DVNORM( 0.213034, 0.977045, -0 )  //33
DX3DVERT( -0.170117, 0.125, -0.0393339 ) DX3DVNORM( 0.416287, 0.909233, -0 )  //34
DX3DVERT( -0.560681, 0.201307, 0.0444444 ) DX3DVNORM( -0.137311, 0.990528, -0 )  //35
DX3DVERT( -0.830623, 0.125, 0.0444444 ) DX3DVNORM( -0.272021, 0.962291, -0 )  //36
DX3DVERT( -0.336784, 0.201307, 0.0444444 ) DX3DVNORM( 0.213034, 0.977045, -0 )  //37
DX3DVERT( -0.170117, 0.125, 0.0393338 ) DX3DVNORM( 0.416287, 0.909233, -0 )  //38
DX3DVERT( -0.560681, 0.201307, 0.133333 ) DX3DVNORM( -0.137311, 0.990528, -0 )  //39
DX3DVERT( -0.830623, 0.125, 0.133333 ) DX3DVNORM( -0.272021, 0.962291, -0 )  //40
DX3DVERT( -0.336784, 0.201307, 0.133333 ) DX3DVNORM( 0.213034, 0.977045, -0 )  //41
DX3DVERT( -0.170117, 0.125, 0.118002 ) DX3DVNORM( 0.416287, 0.909233, -0 )  //42
DX3DVERT( -0.560681, 0.201307, 0.222222 ) DX3DVNORM( -0.137311, 0.990528, -0 )  //43
DX3DVERT( -0.830623, 0.125, 0.222222 ) DX3DVNORM( -0.272021, 0.962291, -0 )  //44
DX3DVERT( -0.336784, 0.201307, 0.222222 ) DX3DVNORM( 0.213034, 0.977045, -0 )  //45
DX3DVERT( -0.170117, 0.125, 0.196669 ) DX3DVNORM( 0.416287, 0.909233, -0 )  //46
DX3DVERT( -0.560681, 0.201307, 0.311111 ) DX3DVNORM( -0.137311, 0.990528, -0 )  //47
DX3DVERT( -0.830623, 0.125, 0.311111 ) DX3DVNORM( -0.272021, 0.962291, -0 )  //48
DX3DVERT( -0.336784, 0.201307, 0.311111 ) DX3DVNORM( 0.213034, 0.977045, -0 )  //49
DX3DVERT( -0.170117, 0.125, 0.275337 ) DX3DVNORM( 0.416287, 0.909233, -0 )  //50
DX3DVERT( -0.560681, 0.201307, 0.4 ) DX3DVNORM( -0.137311, 0.990528, -0 )  //51
DX3DVERT( -0.830623, 0.125, 0.4 ) DX3DVNORM( -0.272021, 0.962291, -0 )  //52
DX3DVERT( -0.336784, 0.201307, 0.4 ) DX3DVNORM( 0.213034, 0.977045, -0 )  //53
DX3DVERT( -0.170117, 0.125, 0.354005 ) DX3DVNORM( 0.416287, 0.909233, -0 )  //54
DX3DVERT( -0.830623, 0.125, 0.4 ) DX3DVNORM( 0.0139931, 0.116527, 0.993089 )  //55
DX3DVERT( -0.560681, 0.201307, 0.4 ) DX3DVNORM( 0.0070086, 0.0583643, 0.998271 )  //56
DX3DVERT( -0.503451, 0.0857118, 0.4 ) DX3DVNORM( 0.0158728, 0.0291749, 0.999448 )  //57
DX3DVERT( -0.830623, 0.0958006, 0.416184 ) DX3DVNORM( 0.0211692, 0.0389096, 0.999018 )  //58
DX3DVERT( -0.336784, 0.201307, 0.4 ) DX3DVNORM( 0.134228, 0, 0.99095 )  //59
DX3DVERT( -0.336784, 0.0857118, 0.4 ) DX3DVNORM( 0.134228, 0, 0.99095 )  //60
DX3DVERT( -0.170117, 0.125, 0.354005 ) DX3DVNORM( 0.266028, 0, 0.963965 )  //61
DX3DVERT( -0.170117, 0.0384872, 0.354005 ) DX3DVNORM( 0.266027, 0, 0.963965 )  //62
DX3DVERT( -0.503451, -0.0416667, 0.4 ) DX3DVNORM( 0.0182468, -0.0307844, 0.999359 )  //63
DX3DVERT( -0.830623, -0.0568387, 0.416184 ) DX3DVNORM( 0.0243355, -0.0410565, 0.99886 )  //64
DX3DVERT( -0.336784, -0.0416667, 0.4 ) DX3DVNORM( 0.134228, 0, 0.99095 )  //65
DX3DVERT( -0.170117, -0.0416667, 0.354005 ) DX3DVNORM( 0.266027, 0, 0.963965 )  //66
DX3DVERT( -0.170117, -0.0416667, 0.275337 ) DX3DVNORM( 1, 0, -0 )  //67
DX3DVERT( -0.170117, -0.0416667, 0.354005 ) DX3DVNORM( 1, 0, -0 )  //68
DX3DVERT( -0.170117, 0.0384872, 0.354005 ) DX3DVNORM( 1, -3.03628e-008, -0 )  //69
DX3DVERT( -0.170117, 0.0384872, 0.275337 ) DX3DVNORM( 1, -3.03628e-008, -0 )  //70
DX3DVERT( -0.170117, -0.0416667, 0.196669 ) DX3DVNORM( 1, 0, -0 )  //71
DX3DVERT( -0.170117, 0.0384872, 0.196669 ) DX3DVNORM( 1, -4.27108e-008, -0 )  //72
DX3DVERT( -0.170117, -0.0416667, 0.118002 ) DX3DVNORM( 1, 0, -0 )  //73
DX3DVERT( -0.170117, 0.0384872, 0.118002 ) DX3DVNORM( 1, -7.69216e-008, -0 )  //74
DX3DVERT( -0.170117, -0.0416667, 0.0393339 ) DX3DVNORM( 1, 0, -0 )  //75
DX3DVERT( -0.170117, 0.0384872, 0.0393339 ) DX3DVNORM( 1, -6.45736e-008, -0 )  //76
DX3DVERT( -0.170117, -0.0416667, -0.0393338 ) DX3DVNORM( 1, 0, -0 )  //77
DX3DVERT( -0.170117, 0.0384872, -0.0393338 ) DX3DVNORM( 1, 2.57108e-008, -0 )  //78
DX3DVERT( -0.170117, -0.0416667, -0.118002 ) DX3DVNORM( 1, 0, -0 )  //79
DX3DVERT( -0.170117, 0.0384872, -0.118002 ) DX3DVNORM( 1, 5.99216e-008, -0 )  //80
DX3DVERT( -0.170117, -0.0416667, -0.196669 ) DX3DVNORM( 1, 0, -0 )  //81
DX3DVERT( -0.170117, 0.0384872, -0.196669 ) DX3DVNORM( 1, 3.84804e-009, -0 )  //82
DX3DVERT( -0.170117, -0.0416667, -0.275337 ) DX3DVNORM( 1, 0, -0 )  //83
DX3DVERT( -0.170117, 0.0384872, -0.275337 ) DX3DVNORM( 1, -1.51814e-008, -0 )  //84
DX3DVERT( -0.170117, -0.0416667, -0.354005 ) DX3DVNORM( 1, 0, -0 )  //85
DX3DVERT( -0.170117, 0.0384872, -0.354005 ) DX3DVNORM( 1, 0, -0 )  //86
DX3DVERT( -0.170117, 0.125, 0.354005 ) DX3DVNORM( 1, -6.07256e-008, -0 )  //87
DX3DVERT( -0.170117, 0.125, 0.275337 ) DX3DVNORM( 1, -6.07255e-008, -0 )  //88
DX3DVERT( -0.170117, 0.125, 0.196669 ) DX3DVNORM( 1, -8.54216e-008, -0 )  //89
DX3DVERT( -0.170117, 0.125, 0.118002 ) DX3DVNORM( 1, -1.53843e-007, -0 )  //90
DX3DVERT( -0.170117, 0.125, 0.0393338 ) DX3DVNORM( 1, -1.29147e-007, -0 )  //91
DX3DVERT( -0.170117, 0.125, -0.0393339 ) DX3DVNORM( 1, 5.14216e-008, -0 )  //92
DX3DVERT( -0.170117, 0.125, -0.118002 ) DX3DVNORM( 1, 1.19843e-007, -0 )  //93
DX3DVERT( -0.170117, 0.125, -0.196669 ) DX3DVNORM( 1, 7.69607e-009, -0 )  //94
DX3DVERT( -0.170117, 0.125, -0.275337 ) DX3DVNORM( 1, -6.07255e-008, -0 )  //95
DX3DVERT( -0.170117, 0.0879333, -0.354005 ) DX3DVNORM( 1, 0, -0 )  //96
DX3DVERT( -0.830623, -0.0713913, -0.253929 ) DX3DVNORM( -0.163958, 0, -0.986467 )  //97
DX3DVERT( -0.652669, -0.12391, -0.283506 ) DX3DVNORM( -0.163958, 0, -0.986467 )  //98
DX3DVERT( -0.652669, 0.0542786, -0.283506 ) DX3DVNORM( -0.176594, 0.033013, -0.98373 )  //99
DX3DVERT( -0.830623, 0.110353, -0.253929 ) DX3DVNORM( -0.176594, 0.033013, -0.98373 )  //100
DX3DVERT( -0.830623, 0.0958006, 0.416184 ) DX3DVNORM( -1, 6.07111e-007, -0 )  //101
DX3DVERT( -0.830623, 0.0958007, 0.294928 ) DX3DVNORM( -1, 7.39147e-007, -0 )  //102
DX3DVERT( -0.830623, 0.125, 0.311111 ) DX3DVNORM( -1, 1.10872e-006, -0 )  //103
DX3DVERT( -0.830623, 0.125, 0.4 ) DX3DVNORM( -1, 6.07111e-007, -0 )  //104
DX3DVERT( -0.830623, 0.103271, 0.246375 ) DX3DVNORM( -1, 7.89555e-007, -0 )  //105
DX3DVERT( -0.830623, 0.125, 0.222222 ) DX3DVNORM( -1, 1.18433e-006, -0 )  //106
DX3DVERT( -0.830623, 0.103271, 0.109181 ) DX3DVNORM( -1, 2.52778e-007, -0 )  //107
DX3DVERT( -0.830623, 0.125, 0.133333 ) DX3DVNORM( -1, 3.79168e-007, -0 )  //108
DX3DVERT( -0.830623, 0.105001, 0.0704417 ) DX3DVNORM( -1, 1.62138e-006, -0 )  //109
DX3DVERT( -0.830623, 0.125, 0.0444444 ) DX3DVNORM( -1, 2.43207e-006, -0 )  //110
DX3DVERT( -0.830623, 0.105001, -0.0704416 ) DX3DVNORM( -1, 2.22279e-006, -0 )  //111
DX3DVERT( -0.830623, 0.125, -0.0444445 ) DX3DVNORM( -1, 3.33419e-006, -0 )  //112
DX3DVERT( -0.830623, 0.110353, -0.101627 ) DX3DVNORM( -1, 9.23306e-007, -0 )  //113
DX3DVERT( -0.830623, 0.125, -0.133333 ) DX3DVNORM( -1, 1.38496e-006, -0 )  //114
DX3DVERT( -0.830623, 0.110353, -0.253929 ) DX3DVNORM( -1, 9.65684e-007, -0 )  //115
DX3DVERT( -0.830623, 0.125, -0.244413 ) DX3DVNORM( -1, 9.65684e-007, -0 )  //116
DX3DVERT( -0.644798, 0.10039, -0.290447 ) DX3DVNORM( -0.189007, 0.0659845, -0.979756 )  //117
DX3DVERT( -0.830623, 0.125, -0.244413 ) DX3DVNORM( -0.189007, 0.0659845, -0.979756 )  //118
DX3DVERT( -0.652669, 0.0542786, -0.283506 ) DX3DVNORM( -0.939193, 0.341673, -0.0343016 )  //119
DX3DVERT( -0.65508, 0.0534658, -0.476331 ) DX3DVNORM( -0.939193, 0.341673, -0.0343016 )  //120
DX3DVERT( -0.629575, 0.0991074, -0.469279 ) DX3DVNORM( -0.939193, 0.341673, -0.0343016 )  //121
DX3DVERT( -0.644798, 0.10039, -0.290447 ) DX3DVNORM( -0.939193, 0.341673, -0.0343016 )  //122
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_ArmHand_R____mArm_0 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_ArmHand_R____mArm_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 123 )
DX3DVERTEX_END


#else
#define vertex_ArmHand_R____mArm_0	NULL
#define vertexbuff_ArmHand_R____mArm_0	NULL
#endif




#if ((PT_ArmHand_R____mArm_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmHand_R____mArm_0 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DINDEX_START( index_ArmHand_R____mArm_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	3, 2, 8, // 6 20
	8, 2, 9, // 7 23
	5, 10, 2, // 8 26
	2, 10, 9, // 9 29
	5, 7, 10, // 10 32
	7, 11, 10, // 11 35
	12, 13, 14, // 12 38
	14, 13, 15, // 13 41
	15, 16, 14, // 14 44
	16, 17, 14, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	20, 21, 22, // 18 56
	23, 14, 24, // 19 59
	14, 17, 24, // 20 62
	17, 25, 24, // 21 65
	17, 19, 25, // 22 68
	19, 26, 25, // 23 71
	23, 24, 28, // 24 74
	24, 27, 28, // 25 77
	24, 25, 27, // 26 80
	25, 29, 27, // 27 83
	25, 26, 29, // 28 86
	26, 30, 29, // 29 89
	28, 27, 32, // 30 92
	27, 31, 32, // 31 95
	27, 29, 31, // 32 98
	29, 33, 31, // 33 101
	29, 30, 33, // 34 104
	30, 34, 33, // 35 107
	32, 31, 36, // 36 110
	31, 35, 36, // 37 113
	31, 33, 35, // 38 116
	33, 37, 35, // 39 119
	33, 34, 37, // 40 122
	34, 38, 37, // 41 125
	36, 35, 40, // 42 128
	35, 39, 40, // 43 131
	35, 37, 39, // 44 134
	37, 41, 39, // 45 137
	37, 38, 41, // 46 140
	38, 42, 41, // 47 143
	40, 39, 44, // 48 146
	39, 43, 44, // 49 149
	39, 41, 43, // 50 152
	41, 45, 43, // 51 155
	41, 42, 45, // 52 158
	42, 46, 45, // 53 161
	44, 43, 48, // 54 164
	43, 47, 48, // 55 167
	43, 45, 47, // 56 170
	45, 49, 47, // 57 173
	45, 46, 49, // 58 176
	46, 50, 49, // 59 179
	48, 47, 52, // 60 182
	47, 51, 52, // 61 185
	47, 49, 51, // 62 188
	49, 53, 51, // 63 191
	49, 50, 53, // 64 194
	50, 54, 53, // 65 197
	55, 56, 58, // 66 200
	56, 57, 58, // 67 203
	56, 59, 57, // 68 206
	59, 60, 57, // 69 209
	59, 61, 60, // 70 212
	61, 62, 60, // 71 215
	58, 57, 64, // 72 218
	57, 63, 64, // 73 221
	57, 60, 63, // 74 224
	60, 65, 63, // 75 227
	60, 62, 65, // 76 230
	62, 66, 65, // 77 233
	67, 68, 70, // 78 236
	68, 69, 70, // 79 239
	71, 67, 72, // 80 242
	67, 70, 72, // 81 245
	73, 71, 74, // 82 248
	71, 72, 74, // 83 251
	75, 73, 76, // 84 254
	73, 74, 76, // 85 257
	77, 75, 78, // 86 260
	75, 76, 78, // 87 263
	79, 77, 80, // 88 266
	77, 78, 80, // 89 269
	81, 79, 82, // 90 272
	79, 80, 82, // 91 275
	83, 81, 84, // 92 278
	81, 82, 84, // 93 281
	85, 83, 86, // 94 284
	83, 84, 86, // 95 287
	70, 69, 88, // 96 290
	69, 87, 88, // 97 293
	72, 70, 89, // 98 296
	70, 88, 89, // 99 299
	74, 72, 90, // 100 302
	72, 89, 90, // 101 305
	76, 74, 91, // 102 308
	74, 90, 91, // 103 311
	78, 76, 92, // 104 314
	76, 91, 92, // 105 317
	80, 78, 93, // 106 320
	78, 92, 93, // 107 323
	82, 80, 94, // 108 326
	80, 93, 94, // 109 329
	84, 82, 95, // 110 332
	82, 94, 95, // 111 335
	86, 84, 96, // 112 338
	84, 95, 96, // 113 341
	97, 98, 100, // 114 344
	98, 99, 100, // 115 347
	101, 102, 104, // 116 350
	102, 103, 104, // 117 353
	102, 105, 103, // 118 356
	105, 106, 103, // 119 359
	105, 107, 106, // 120 362
	107, 108, 106, // 121 365
	107, 109, 108, // 122 368
	109, 110, 108, // 123 371
	109, 111, 110, // 124 374
	111, 112, 110, // 125 377
	111, 113, 112, // 126 380
	113, 114, 112, // 127 383
	113, 115, 114, // 128 386
	115, 116, 114, // 129 389
	100, 99, 118, // 130 392
	99, 117, 118, // 131 395
	119, 120, 122, // 132 398
	120, 121, 122, // 133 401
DX3DINDEX_END
#endif

#else
#define index_ArmHand_R____mArm_0	NULL
#endif




#if ((PT_ArmHand_R____mArm_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP) ) || (PT_ArmHand_R____mArm_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_ArmHand_R____mArm_0_INDEXSTRIP 	NULL
#endif




#if ((PT_ArmHand_R____mArm_0 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_VERTEXSTRIP) ) || (PT_ArmHand_R____mArm_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_ArmHand_R____mArm_0_VERTEXSTRIP 	NULL
#define vertexbuff_ArmHand_R____mArm_0_VERTEXSTRIP 	NULL
#endif






#if ((PT_ArmHand_R____mArmGlay_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmHand_R____mArmGlay_1 == PT_TRILIST ) || ((PT_ArmHand_R____mArmGlay_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP))  || (PT_ArmHand_R____mArmGlay_1 == PT_INDEXSTRIP)


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERT_START( VN, vertexbuff_ArmHand_R____mArmGlay_1 )
DX3DVERT( 0.163553, 0.0944276, 0.249859 ) DX3DVNORM( 0.866025, 0.5, 6.16773e-009 )  //0
DX3DVERT( 0.0944276, 0.163553, 0.249859 ) DX3DVNORM( 0.5, 0.866025, 4.93418e-008 )  //1
DX3DVERT( 0.0944276, 0.163553, -0.24986 ) DX3DVNORM( 0.5, 0.866025, 4.93418e-008 )  //2
DX3DVERT( 0.163553, 0.0944276, -0.24986 ) DX3DVNORM( 0.866025, 0.5, 6.16773e-009 )  //3
DX3DVERT( 1.36412e-008, 0.188855, 0.249859 ) DX3DVNORM( 4.62805e-008, 1, 9.86837e-008 )  //4
DX3DVERT( 1.36412e-008, 0.188855, -0.249859 ) DX3DVNORM( 4.62805e-008, 1, 9.86837e-008 )  //5
DX3DVERT( -0.0944276, 0.163553, 0.249859 ) DX3DVNORM( -0.5, 0.866025, 5.92102e-008 )  //6
DX3DVERT( -0.0944276, 0.163553, -0.249859 ) DX3DVNORM( -0.5, 0.866025, 5.92102e-008 )  //7
DX3DVERT( -0.163553, 0.0944276, 0.249859 ) DX3DVNORM( -0.866025, 0.5, -6.16773e-009 )  //8
DX3DVERT( -0.163553, 0.0944276, -0.24986 ) DX3DVNORM( -0.866025, 0.5, -6.16773e-009 )  //9
DX3DVERT( -0.188855, 1.49012e-008, 0.249859 ) DX3DVNORM( -1, 7.71341e-008, -2.46709e-009 )  //10
DX3DVERT( -0.188855, 1.49012e-008, -0.249859 ) DX3DVNORM( -1, 7.71341e-008, -2.46709e-009 )  //11
DX3DVERT( -0.163553, -0.0944276, 0.249859 ) DX3DVNORM( -0.866025, -0.5, -6.16773e-009 )  //12
DX3DVERT( -0.163553, -0.0944276, -0.249859 ) DX3DVNORM( -0.866025, -0.5, -6.16773e-009 )  //13
DX3DVERT( -0.0944276, -0.163553, 0.249859 ) DX3DVNORM( -0.5, -0.866025, -4.93418e-008 )  //14
DX3DVERT( -0.0944276, -0.163553, -0.249859 ) DX3DVNORM( -0.5, -0.866025, -4.93418e-008 )  //15
DX3DVERT( -5.10185e-009, -0.188855, 0.249859 ) DX3DVNORM( 0, -1, -7.89469e-008 )  //16
DX3DVERT( -5.10185e-009, -0.188855, -0.249859 ) DX3DVNORM( 0, -1, -7.89469e-008 )  //17
DX3DVERT( 0.0944276, -0.163553, 0.249859 ) DX3DVNORM( 0.5, -0.866026, -3.94735e-008 )  //18
DX3DVERT( 0.0944276, -0.163553, -0.249859 ) DX3DVNORM( 0.5, -0.866026, -3.94735e-008 )  //19
DX3DVERT( 0.163553, -0.0944276, 0.24986 ) DX3DVNORM( 0.866025, -0.5, 6.16773e-009 )  //20
DX3DVERT( 0.163553, -0.0944276, -0.249859 ) DX3DVNORM( 0.866025, -0.5, 6.16773e-009 )  //21
DX3DVERT( 0.188855, 0, 0.249859 ) DX3DVNORM( 1, 1.54268e-008, 2.46709e-009 )  //22
DX3DVERT( 0.188855, 0, -0.249859 ) DX3DVNORM( 1, 1.54268e-008, 2.46709e-009 )  //23
DX3DVERT( 0.0944276, 0.163553, 0.249859 ) DX3DVNORM( 1.42109e-014, -6.83317e-008, 1 )  //24
DX3DVERT( 0.163553, 0.0944276, 0.249859 ) DX3DVNORM( 2.08897e-007, -1.07783e-007, 1 )  //25
DX3DVERT( -2.27575e-010, 0, 0.249859 ) DX3DVNORM( 1.73885e-008, 5.56533e-008, 1 )  //26
DX3DVERT( 1.36412e-008, 0.188855, 0.249859 ) DX3DVNORM( 0, -7.89026e-008, 1 )  //27
DX3DVERT( -0.0944276, 0.163553, 0.249859 ) DX3DVNORM( 1.04449e-007, -6.83317e-008, 1 )  //28
DX3DVERT( -0.163553, 0.0944276, 0.249859 ) DX3DVNORM( -1.04566e-007, -1.07783e-007, 1 )  //29
DX3DVERT( -0.188855, 1.49012e-008, 0.249859 ) DX3DVNORM( -1.17428e-010, 7.89026e-008, 1 )  //30
DX3DVERT( -0.163553, -0.0944276, 0.249859 ) DX3DVNORM( 0, 2.15566e-007, 1 )  //31
DX3DVERT( -0.0944276, -0.163553, 0.249859 ) DX3DVNORM( 2.08897e-007, 1.36663e-007, 1 )  //32
DX3DVERT( -5.10185e-009, -0.188855, 0.249859 ) DX3DVNORM( 1.42109e-014, 1.57805e-007, 1 )  //33
DX3DVERT( 0.0944276, -0.163553, 0.249859 ) DX3DVNORM( -2.08897e-007, 9.7212e-008, 1 )  //34
DX3DVERT( 0.163553, -0.0944276, 0.24986 ) DX3DVNORM( 0, 2.55017e-007, 1 )  //35
DX3DVERT( 0.188855, 0, 0.249859 ) DX3DVNORM( 0, 1.57805e-007, 1 )  //36
DX3DVERT( 0.163553, 0.0944276, -0.24986 ) DX3DVNORM( 0, -3.23349e-007, -1 )  //37
DX3DVERT( 0.0944276, 0.163553, -0.24986 ) DX3DVNORM( -2.08897e-007, -1.65544e-007, -1 )  //38
DX3DVERT( -2.27575e-010, 0, -0.249859 ) DX3DVNORM( 1.74277e-008, -8.67675e-008, -1 )  //39
DX3DVERT( 1.36412e-008, 0.188855, -0.249859 ) DX3DVNORM( -1.42109e-014, -1.57805e-007, -1 )  //40
DX3DVERT( -0.0944276, 0.163553, -0.249859 ) DX3DVNORM( 2.08897e-007, -9.7212e-008, -1 )  //41
DX3DVERT( -0.163553, 0.0944276, -0.24986 ) DX3DVNORM( 0, -2.55017e-007, -1 )  //42
DX3DVERT( -0.188855, 1.49012e-008, -0.249859 ) DX3DVNORM( 1.17428e-010, -2.36708e-007, -1 )  //43
DX3DVERT( -0.163553, -0.0944276, -0.249859 ) DX3DVNORM( -1.04331e-007, 6.83317e-008, -1 )  //44
DX3DVERT( -0.0944276, -0.163553, -0.249859 ) DX3DVNORM( 1.04449e-007, 1.07783e-007, -1 )  //45
DX3DVERT( -5.10185e-009, -0.188855, -0.249859 ) DX3DVNORM( 7.10543e-014, 7.89026e-008, -1 )  //46
DX3DVERT( 0.0944276, -0.163553, -0.249859 ) DX3DVNORM( 1.27898e-013, 1.07783e-007, -1 )  //47
DX3DVERT( 0.163553, -0.0944276, -0.249859 ) DX3DVNORM( 2.08897e-007, 6.83317e-008, -1 )  //48
DX3DVERT( 0.188855, 0, -0.249859 ) DX3DVNORM( 0, -2.36708e-007, -1 )  //49
DX3DVERT( -0.555959, -0.125, -0.418592 ) DX3DVNORM( 0.242922, -0.443359, -0.862799 )  //50
DX3DVERT( -0.445506, -0.125, -0.424209 ) DX3DVNORM( 0.227063, -0.24048, -0.943722 )  //51
DX3DVERT( -0.423817, -0.0416667, -0.424209 ) DX3DVNORM( 0.232194, -0.105448, -0.966937 )  //52
DX3DVERT( -0.58539, -0.100211, -0.476331 ) DX3DVNORM( 0.198137, -0.117809, -0.973069 )  //53
DX3DVERT( -0.336784, -0.125, -0.40419 ) DX3DVNORM( 0.244592, -0.0130487, -0.969538 )  //54
DX3DVERT( -0.336784, -0.0416667, -0.40419 ) DX3DVNORM( 0.2505, -0.00652279, -0.968095 )  //55
DX3DVERT( -0.170117, -0.125, -0.354005 ) DX3DVNORM( 0.288324, 0, -0.957533 )  //56
DX3DVERT( -0.170117, -0.0416667, -0.354005 ) DX3DVNORM( 0.288324, 0, -0.957533 )  //57
DX3DVERT( -0.830623, -0.0568387, 0.416184 ) DX3DVNORM( 0.0243355, -0.0410565, 0.99886 )  //58
DX3DVERT( -0.503451, -0.0416667, 0.4 ) DX3DVNORM( 0.0182468, -0.0307844, 0.999359 )  //59
DX3DVERT( -0.503451, -0.125, 0.4 ) DX3DVNORM( 0.0117551, -0.0615895, 0.998032 )  //60
DX3DVERT( -0.830623, -0.104111, 0.4 ) DX3DVNORM( 0.023464, -0.122937, 0.992137 )  //61
DX3DVERT( -0.336784, -0.0416667, 0.4 ) DX3DVNORM( 0.134228, 0, 0.99095 )  //62
DX3DVERT( -0.336784, -0.125, 0.4 ) DX3DVNORM( 0.134228, 0, 0.99095 )  //63
DX3DVERT( -0.170117, -0.0416667, 0.354005 ) DX3DVNORM( 0.266027, 0, 0.963965 )  //64
DX3DVERT( -0.170117, -0.125, 0.354005 ) DX3DVNORM( 0.266027, 0, 0.963965 )  //65
DX3DVERT( -0.830623, -0.104111, 0.4 ) DX3DVNORM( -0.0637168, -0.997968, -0 )  //66
DX3DVERT( -0.503451, -0.125, 0.4 ) DX3DVNORM( -0.0318746, -0.999492, -0 )  //67
DX3DVERT( -0.503451, -0.125, 0.311111 ) DX3DVNORM( -0.0318746, -0.999492, -0 )  //68
DX3DVERT( -0.830623, -0.104111, 0.311111 ) DX3DVNORM( -0.0637168, -0.997968, -0 )  //69
DX3DVERT( -0.336784, -0.125, 0.4 ) DX3DVNORM( 0, -1, -0 )  //70
DX3DVERT( -0.336784, -0.125, 0.311111 ) DX3DVNORM( 0, -1, -0 )  //71
DX3DVERT( -0.170117, -0.125, 0.354005 ) DX3DVNORM( 0, -1, -0 )  //72
DX3DVERT( -0.170117, -0.125, 0.275337 ) DX3DVNORM( 0, -1, -0 )  //73
DX3DVERT( -0.503451, -0.125, 0.222222 ) DX3DVNORM( -0.0318746, -0.999492, -0 )  //74
DX3DVERT( -0.830623, -0.104111, 0.222222 ) DX3DVNORM( -0.0637168, -0.997968, -0 )  //75
DX3DVERT( -0.336784, -0.125, 0.222222 ) DX3DVNORM( 0, -1, -0 )  //76
DX3DVERT( -0.170117, -0.125, 0.196669 ) DX3DVNORM( 0, -1, -0 )  //77
DX3DVERT( -0.503451, -0.125, 0.133333 ) DX3DVNORM( -0.0318746, -0.999492, -0 )  //78
DX3DVERT( -0.830623, -0.104111, 0.133333 ) DX3DVNORM( -0.0637168, -0.997968, -0 )  //79
DX3DVERT( -0.336784, -0.125, 0.133333 ) DX3DVNORM( 0, -1, -0 )  //80
DX3DVERT( -0.170117, -0.125, 0.118002 ) DX3DVNORM( 0, -1, -0 )  //81
DX3DVERT( -0.503451, -0.125, 0.0444445 ) DX3DVNORM( -0.0318746, -0.999492, -0 )  //82
DX3DVERT( -0.830623, -0.104111, 0.0444445 ) DX3DVNORM( -0.0637168, -0.997968, -0 )  //83
DX3DVERT( -0.336784, -0.125, 0.0444445 ) DX3DVNORM( 0, -1, -0 )  //84
DX3DVERT( -0.170117, -0.125, 0.0393339 ) DX3DVNORM( 0, -1, -0 )  //85
DX3DVERT( -0.503451, -0.125, -0.0444444 ) DX3DVNORM( -0.0318746, -0.999492, -0 )  //86
DX3DVERT( -0.830623, -0.104111, -0.0444444 ) DX3DVNORM( -0.0637167, -0.997968, -0 )  //87
DX3DVERT( -0.336784, -0.125, -0.0444444 ) DX3DVNORM( 0, -1, -0 )  //88
DX3DVERT( -0.170117, -0.125, -0.0393338 ) DX3DVNORM( 0, -1, -0 )  //89
DX3DVERT( -0.503451, -0.125, -0.133333 ) DX3DVNORM( -0.0318746, -0.999492, -0 )  //90
DX3DVERT( -0.830623, -0.104111, -0.133333 ) DX3DVNORM( -0.0637168, -0.997968, -0 )  //91
DX3DVERT( -0.336784, -0.125, -0.133333 ) DX3DVNORM( 0, -1, -0 )  //92
DX3DVERT( -0.170117, -0.125, -0.118002 ) DX3DVNORM( 0, -1, -0 )  //93
DX3DVERT( -0.503451, -0.125, -0.222222 ) DX3DVNORM( -0.023626, -0.999266, 0.0301654 )  //94
DX3DVERT( -0.830623, -0.104111, -0.222222 ) DX3DVNORM( -0.0472635, -0.997058, 0.0603455 )  //95
DX3DVERT( -0.336784, -0.125, -0.222222 ) DX3DVNORM( 0, -1, -0 )  //96
DX3DVERT( -0.170117, -0.125, -0.196669 ) DX3DVNORM( 0, -1, -0 )  //97
DX3DVERT( -0.503451, -0.125, -0.311111 ) DX3DVNORM( -0.00766748, -0.999516, 0.0301576 )  //98
DX3DVERT( -0.646975, -0.125, -0.258713 ) DX3DVNORM( -0.0153424, -0.99806, 0.0603445 )  //99
DX3DVERT( -0.336784, -0.125, -0.311111 ) DX3DVNORM( 0, -1, -0 )  //100
DX3DVERT( -0.170117, -0.125, -0.275337 ) DX3DVNORM( 0, -1, -0 )  //101
DX3DVERT( -0.445506, -0.125, -0.424209 ) DX3DVNORM( 0, -1, -0 )  //102
DX3DVERT( -0.555959, -0.125, -0.418592 ) DX3DVNORM( 0, -1, -0 )  //103
DX3DVERT( -0.336784, -0.125, -0.40419 ) DX3DVNORM( 0, -1, -0 )  //104
DX3DVERT( -0.170117, -0.125, -0.354005 ) DX3DVNORM( 0, -1, -0 )  //105
DX3DVERT( -0.170117, -0.125, 0.275337 ) DX3DVNORM( 1, 0, -0 )  //106
DX3DVERT( -0.170117, -0.125, 0.354005 ) DX3DVNORM( 1, 0, -0 )  //107
DX3DVERT( -0.170117, -0.0416667, 0.354005 ) DX3DVNORM( 1, 0, -0 )  //108
DX3DVERT( -0.170117, -0.0416667, 0.275337 ) DX3DVNORM( 1, 0, -0 )  //109
DX3DVERT( -0.170117, -0.125, 0.196669 ) DX3DVNORM( 1, 0, -0 )  //110
DX3DVERT( -0.170117, -0.0416667, 0.196669 ) DX3DVNORM( 1, 0, -0 )  //111
DX3DVERT( -0.170117, -0.125, 0.118002 ) DX3DVNORM( 1, 0, -0 )  //112
DX3DVERT( -0.170117, -0.0416667, 0.118002 ) DX3DVNORM( 1, 0, -0 )  //113
DX3DVERT( -0.170117, -0.125, 0.0393339 ) DX3DVNORM( 1, 0, -0 )  //114
DX3DVERT( -0.170117, -0.0416667, 0.0393339 ) DX3DVNORM( 1, 0, -0 )  //115
DX3DVERT( -0.170117, -0.125, -0.0393338 ) DX3DVNORM( 1, 0, -0 )  //116
DX3DVERT( -0.170117, -0.0416667, -0.0393338 ) DX3DVNORM( 1, 0, -0 )  //117
DX3DVERT( -0.170117, -0.125, -0.118002 ) DX3DVNORM( 1, 0, -0 )  //118
DX3DVERT( -0.170117, -0.0416667, -0.118002 ) DX3DVNORM( 1, 0, -0 )  //119
DX3DVERT( -0.170117, -0.125, -0.196669 ) DX3DVNORM( 1, 0, -0 )  //120
DX3DVERT( -0.170117, -0.0416667, -0.196669 ) DX3DVNORM( 1, 0, -0 )  //121
DX3DVERT( -0.170117, -0.125, -0.275337 ) DX3DVNORM( 1, 0, -0 )  //122
DX3DVERT( -0.170117, -0.0416667, -0.275337 ) DX3DVNORM( 1, 0, -0 )  //123
DX3DVERT( -0.170117, -0.125, -0.354005 ) DX3DVNORM( 1, 0, -0 )  //124
DX3DVERT( -0.170117, -0.0416667, -0.354005 ) DX3DVNORM( 1, 0, -0 )  //125
DX3DVERT( -0.830623, -0.104111, 0.4 ) DX3DVNORM( -1, -3.75001e-007, -0 )  //126
DX3DVERT( -0.830623, -0.104111, 0.311111 ) DX3DVNORM( -1, 1.25335e-007, -0 )  //127
DX3DVERT( -0.830623, -0.0568387, 0.294928 ) DX3DVNORM( -1, 8.35567e-008, -0 )  //128
DX3DVERT( -0.830623, -0.0568387, 0.416184 ) DX3DVNORM( -1, -3.75001e-007, -0 )  //129
DX3DVERT( -0.830623, -0.104111, 0.222222 ) DX3DVNORM( -1, -3.08151e-007, -0 )  //130
DX3DVERT( -0.830623, -0.0643094, 0.246375 ) DX3DVNORM( -1, -2.05434e-007, -0 )  //131
DX3DVERT( -0.830623, -0.104111, 0.133333 ) DX3DVNORM( -1, -2.46048e-007, -0 )  //132
DX3DVERT( -0.830623, -0.0643094, 0.109181 ) DX3DVNORM( -1, -1.64032e-007, -0 )  //133
DX3DVERT( -0.830623, -0.104111, 0.0444445 ) DX3DVNORM( -1, -1.11553e-006, -0 )  //134
DX3DVERT( -0.830623, -0.0660391, 0.0704417 ) DX3DVNORM( -1, -7.43687e-007, -0 )  //135
DX3DVERT( -0.830623, -0.104111, -0.0444444 ) DX3DVNORM( -1, -1.49047e-006, -0 )  //136
DX3DVERT( -0.830623, -0.0660391, -0.0704416 ) DX3DVNORM( -1, -9.93646e-007, -0 )  //137
DX3DVERT( -0.830623, -0.104111, -0.133333 ) DX3DVNORM( -1, 4.72051e-007, -0 )  //138
DX3DVERT( -0.830623, -0.0713914, -0.101627 ) DX3DVNORM( -1, 3.147e-007, -0 )  //139
DX3DVERT( -0.830623, -0.104111, -0.222222 ) DX3DVNORM( -0.793009, -0.529836, -0.300683 )  //140
DX3DVERT( -0.830623, -0.0713913, -0.253929 ) DX3DVNORM( -0.793009, -0.529836, -0.300683 )  //141
DX3DVERT( -0.646975, -0.125, -0.258713 ) DX3DVNORM( -0.161753, -0.951163, -0.262915 )  //142
DX3DVERT( -0.652669, -0.12391, -0.283506 ) DX3DVNORM( -0.218951, -0.942767, -0.251496 )  //143
DX3DVERT( -0.555959, -0.125, -0.418592 ) DX3DVNORM( -0.194028, -0.972201, -0.131065 )  //144
DX3DVERT( -0.58539, -0.100211, -0.476331 ) DX3DVNORM( -0.32734, -0.917248, -0.226947 )  //145
DX3DVERT( -1.42696, -0.192347, 0.404415 ) DX3DVNORM( -0.872033, -0.489447, -0 )  //146
DX3DVERT( -1.42696, -0.192347, 0.306696 ) DX3DVNORM( -0.872033, -0.489447, -0 )  //147
DX3DVERT( -1.4718, -0.112459, 0.306696 ) DX3DVNORM( -0.872033, -0.489447, -0 )  //148
DX3DVERT( -1.4718, -0.112459, 0.404415 ) DX3DVNORM( -0.872033, -0.489447, -0 )  //149
DX3DVERT( -0.830623, 0.103271, 0.246375 ) DX3DVNORM( -1, 7.89555e-007, -0 )  //150
DX3DVERT( -0.830623, 0.0958007, 0.294928 ) DX3DVNORM( -1, 7.39147e-007, -0 )  //151
DX3DVERT( -1.46895, -0.219586, 0.230052 ) DX3DVNORM( -0.872034, -0.489446, -0 )  //152
DX3DVERT( -1.46895, -0.219586, 0.125503 ) DX3DVNORM( -0.872034, -0.489446, -0 )  //153
DX3DVERT( -1.51693, -0.134114, 0.125503 ) DX3DVNORM( -0.872034, -0.489446, -0 )  //154
DX3DVERT( -1.51693, -0.134114, 0.230052 ) DX3DVNORM( -0.872034, -0.489446, -0 )  //155
DX3DVERT( -0.830623, 0.105001, 0.0704417 ) DX3DVNORM( -1, 1.62138e-006, -0 )  //156
DX3DVERT( -0.830623, 0.103271, 0.109181 ) DX3DVNORM( -1, 2.52778e-007, -0 )  //157
DX3DVERT( -1.5021, -0.235091, 0.0493928 ) DX3DVNORM( -0.872034, -0.489445, -0 )  //158
DX3DVERT( -1.5021, -0.235091, -0.0493928 ) DX3DVNORM( -0.872034, -0.489445, -0 )  //159
DX3DVERT( -1.54743, -0.154331, -0.0493928 ) DX3DVNORM( -0.872034, -0.489445, -0 )  //160
DX3DVERT( -1.54743, -0.154331, 0.0493928 ) DX3DVNORM( -0.872034, -0.489445, -0 )  //161
DX3DVERT( -0.830623, 0.110353, -0.101627 ) DX3DVNORM( -1, 9.23306e-007, -0 )  //162
DX3DVERT( -0.830623, 0.105001, -0.0704416 ) DX3DVNORM( -1, 2.22279e-006, -0 )  //163
DX3DVERT( -1.40031, -0.365069, -0.121479 ) DX3DVNORM( -0.648012, -0.76163, -0 )  //164
DX3DVERT( -1.40031, -0.365069, -0.234076 ) DX3DVNORM( -0.648012, -0.76163, -0 )  //165
DX3DVERT( -1.4807, -0.296665, -0.234076 ) DX3DVNORM( -0.648012, -0.76163, -0 )  //166
DX3DVERT( -1.4807, -0.296665, -0.121479 ) DX3DVNORM( -0.648012, -0.76163, -0 )  //167
DX3DVERT( -1.07682, -0.313027, -0.356289 ) DX3DVNORM( -0.94186, -0.318285, -0.107679 )  //168
DX3DVERT( -1.0647, -0.302013, -0.49488 ) DX3DVNORM( -0.94186, -0.318285, -0.107679 )  //169
DX3DVERT( -1.10603, -0.182626, -0.486298 ) DX3DVNORM( -0.94186, -0.318285, -0.107679 )  //170
DX3DVERT( -1.11815, -0.19364, -0.347706 ) DX3DVNORM( -0.94186, -0.318285, -0.107679 )  //171
DX3DVERT( -0.652669, -0.12391, -0.283506 ) DX3DVNORM( 0.383121, -0.923415, -0.022857 )  //172
DX3DVERT( -0.58539, -0.100211, -0.476331 ) DX3DVNORM( 0.383121, -0.923415, -0.022857 )  //173
DX3DVERT( -0.751715, -0.159776, -0.494719 ) DX3DVNORM( 0.383121, -0.923415, -0.022857 )  //174
DX3DVERT( -0.766805, -0.179209, -0.325659 ) DX3DVNORM( 0.383121, -0.923415, -0.022857 )  //175
DX3DVERT( -0.65508, 0.0534658, -0.476331 ) DX3DVNORM( 0.182415, 0.0443587, -0.98222 )  //176
DX3DVERT( -0.819313, -0.0331881, -0.494719 ) DX3DVNORM( 0.0909684, 0.0445612, -0.994856 )  //177
DX3DVERT( -0.751715, -0.159776, -0.494719 ) DX3DVNORM( 0.0909684, 0.0445612, -0.994856 )  //178
DX3DVERT( -0.65508, 0.0534658, -0.476331 ) DX3DVNORM( -0.491723, 0.870315, 0.0275532 )  //179
DX3DVERT( -0.652669, 0.0542786, -0.283506 ) DX3DVNORM( -0.491723, 0.870315, 0.0275532 )  //180
DX3DVERT( -0.834404, -0.0526211, -0.325659 ) DX3DVNORM( -0.491723, 0.870315, 0.0275532 )  //181
DX3DVERT( -0.819313, -0.0331881, -0.494719 ) DX3DVNORM( -0.491723, 0.870315, 0.0275532 )  //182
DX3DVERT( -0.652669, 0.0542786, -0.283506 ) DX3DVNORM( -0.245864, -0.0545322, 0.967769 )  //183
DX3DVERT( -0.652669, -0.12391, -0.283506 ) DX3DVNORM( -0.245864, -0.0545322, 0.967769 )  //184
DX3DVERT( -0.766805, -0.179209, -0.325659 ) DX3DVNORM( -0.245864, -0.0545322, 0.967769 )  //185
DX3DVERT( -0.834404, -0.0526211, -0.325659 ) DX3DVNORM( -0.245864, -0.0545322, 0.967769 )  //186
DX3DVERT( -0.766805, -0.179209, -0.325659 ) DX3DVNORM( 0.38662, -0.920579, -0.0553117 )  //187
DX3DVERT( -0.751715, -0.159776, -0.494719 ) DX3DVNORM( 0.38662, -0.920579, -0.0553117 )  //188
DX3DVERT( -0.918084, -0.231824, -0.507376 ) DX3DVNORM( 0.38662, -0.920579, -0.0553117 )  //189
DX3DVERT( -0.932181, -0.244796, -0.34113 ) DX3DVNORM( 0.38662, -0.920579, -0.0553117 )  //190
DX3DVERT( -0.751715, -0.159776, -0.494719 ) DX3DVNORM( 0.0229584, 0.0522013, -0.998373 )  //191
DX3DVERT( -0.819313, -0.0331881, -0.494719 ) DX3DVNORM( 0.0229584, 0.0522013, -0.998373 )  //192
DX3DVERT( -0.958924, -0.108362, -0.496795 ) DX3DVNORM( 0.0229584, 0.0522013, -0.998373 )  //193
DX3DVERT( -0.918084, -0.231824, -0.507376 ) DX3DVNORM( 0.0229584, 0.0522013, -0.998373 )  //194
DX3DVERT( -0.819313, -0.0331881, -0.494719 ) DX3DVNORM( -0.461291, 0.886, 0.0470565 )  //195
DX3DVERT( -0.834404, -0.0526211, -0.325659 ) DX3DVNORM( -0.461291, 0.886, 0.0470565 )  //196
DX3DVERT( -0.973021, -0.121334, -0.341853 ) DX3DVNORM( -0.461291, 0.886, 0.0470565 )  //197
DX3DVERT( -0.958924, -0.108362, -0.496795 ) DX3DVNORM( -0.461291, 0.886, 0.0470565 )  //198
DX3DVERT( -0.834404, -0.0526211, -0.325659 ) DX3DVNORM( -0.0880893, -0.0353232, 0.995486 )  //199
DX3DVERT( -0.766805, -0.179209, -0.325659 ) DX3DVNORM( -0.0880893, -0.0353232, 0.995486 )  //200
DX3DVERT( -0.932181, -0.244796, -0.34113 ) DX3DVNORM( -0.0880893, -0.0353232, 0.995486 )  //201
DX3DVERT( -0.973021, -0.121334, -0.341853 ) DX3DVNORM( -0.0880893, -0.0353232, 0.995486 )  //202
DX3DVERT( -0.932181, -0.244796, -0.34113 ) DX3DVNORM( 0.429247, -0.902543, -0.0340947 )  //203
DX3DVERT( -0.918084, -0.231824, -0.507376 ) DX3DVNORM( 0.429247, -0.902543, -0.0340947 )  //204
DX3DVERT( -1.0647, -0.302013, -0.49488 ) DX3DVNORM( 0.429247, -0.902543, -0.0340947 )  //205
DX3DVERT( -1.07682, -0.313027, -0.356289 ) DX3DVNORM( 0.429247, -0.902543, -0.0340947 )  //206
DX3DVERT( -0.918084, -0.231824, -0.507376 ) DX3DVNORM( -0.0997866, 0.0446757, -0.994005 )  //207
DX3DVERT( -0.958924, -0.108362, -0.496795 ) DX3DVNORM( -0.0997866, 0.0446757, -0.994005 )  //208
DX3DVERT( -1.10603, -0.182626, -0.486298 ) DX3DVNORM( -0.0997866, 0.0446757, -0.994005 )  //209
DX3DVERT( -1.0647, -0.302013, -0.49488 ) DX3DVNORM( -0.0997866, 0.0446757, -0.994005 )  //210
DX3DVERT( -0.958924, -0.108362, -0.496795 ) DX3DVNORM( -0.447661, 0.893593, 0.0330319 )  //211
DX3DVERT( -0.973021, -0.121334, -0.341853 ) DX3DVNORM( -0.447661, 0.893593, 0.0330319 )  //212
DX3DVERT( -1.11815, -0.19364, -0.347706 ) DX3DVNORM( -0.447661, 0.893593, 0.0330319 )  //213
DX3DVERT( -1.10603, -0.182626, -0.486298 ) DX3DVNORM( -0.447661, 0.893593, 0.0330319 )  //214
DX3DVERT( -0.973021, -0.121334, -0.341853 ) DX3DVNORM( -0.0486882, -0.0487616, 0.997623 )  //215
DX3DVERT( -0.932181, -0.244796, -0.34113 ) DX3DVNORM( -0.0486882, -0.0487616, 0.997623 )  //216
DX3DVERT( -1.07682, -0.313027, -0.356289 ) DX3DVNORM( -0.0486882, -0.0487616, 0.997623 )  //217
DX3DVERT( -1.11815, -0.19364, -0.347706 ) DX3DVNORM( -0.0486882, -0.0487616, 0.997623 )  //218
DX3DVERT( -0.830623, -0.0713914, -0.101627 ) DX3DVNORM( 0.128307, -0.991735, -1.00246e-007 )  //219
DX3DVERT( -0.830623, -0.0713913, -0.253929 ) DX3DVNORM( 0.128307, -0.991735, -1.00246e-007 )  //220
DX3DVERT( -1.07261, -0.102698, -0.253929 ) DX3DVNORM( 0.128307, -0.991735, -1.00246e-007 )  //221
DX3DVERT( -1.07261, -0.102698, -0.101627 ) DX3DVNORM( 0.128307, -0.991735, -1.00246e-007 )  //222
DX3DVERT( -0.830623, -0.0713913, -0.253929 ) DX3DVNORM( 0, 0, -1 )  //223
DX3DVERT( -0.830623, 0.110353, -0.253929 ) DX3DVNORM( 0, 0, -1 )  //224
DX3DVERT( -1.10172, 0.037084, -0.253929 ) DX3DVNORM( 0, 0, -1 )  //225
DX3DVERT( -1.07261, -0.102698, -0.253929 ) DX3DVNORM( 0, 0, -1 )  //226
DX3DVERT( -0.830623, 0.110353, -0.253929 ) DX3DVNORM( -0.260906, 0.965364, -0 )  //227
DX3DVERT( -0.830623, 0.110353, -0.101627 ) DX3DVNORM( -0.260906, 0.965364, -0 )  //228
DX3DVERT( -1.10172, 0.037084, -0.101627 ) DX3DVNORM( -0.260906, 0.965364, -0 )  //229
DX3DVERT( -1.10172, 0.037084, -0.253929 ) DX3DVNORM( -0.260906, 0.965364, -0 )  //230
DX3DVERT( -0.830623, 0.110353, -0.101627 ) DX3DVNORM( 4.43448e-008, 0, 1 )  //231
DX3DVERT( -0.830623, -0.0713914, -0.101627 ) DX3DVNORM( 4.43448e-008, 0, 1 )  //232
DX3DVERT( -1.07261, -0.102698, -0.101627 ) DX3DVNORM( 4.43448e-008, 0, 1 )  //233
DX3DVERT( -1.10172, 0.037084, -0.101627 ) DX3DVNORM( 4.43448e-008, 0, 1 )  //234
DX3DVERT( -1.07261, -0.102698, -0.101627 ) DX3DVNORM( 0.483688, -0.87524, -1.41719e-007 )  //235
DX3DVERT( -1.07261, -0.102698, -0.253929 ) DX3DVNORM( 0.483688, -0.87524, -1.41719e-007 )  //236
DX3DVERT( -1.22367, -0.186181, -0.253929 ) DX3DVNORM( 0.483688, -0.87524, -1.41719e-007 )  //237
DX3DVERT( -1.22367, -0.186181, -0.101627 ) DX3DVNORM( 0.483688, -0.87524, -1.41719e-007 )  //238
DX3DVERT( -1.33242, -0.0936556, -0.253929 ) DX3DVNORM( 0, 0, -1 )  //239
DX3DVERT( -1.22367, -0.186181, -0.253929 ) DX3DVNORM( 0, 0, -1 )  //240
DX3DVERT( -1.10172, 0.037084, -0.253929 ) DX3DVNORM( -0.493053, 0.869999, -0 )  //241
DX3DVERT( -1.10172, 0.037084, -0.101627 ) DX3DVNORM( -0.493053, 0.869999, -0 )  //242
DX3DVERT( -1.33242, -0.0936556, -0.101627 ) DX3DVNORM( -0.493053, 0.869999, -0 )  //243
DX3DVERT( -1.33242, -0.0936556, -0.253929 ) DX3DVNORM( -0.493053, 0.869999, -0 )  //244
DX3DVERT( -1.22367, -0.186181, -0.101627 ) DX3DVNORM( -6.3024e-008, 0, 1 )  //245
DX3DVERT( -1.33242, -0.0936556, -0.101627 ) DX3DVNORM( -6.3024e-008, 0, 1 )  //246
DX3DVERT( -1.22367, -0.186181, -0.101627 ) DX3DVNORM( 0.711567, -0.702618, -0 )  //247
DX3DVERT( -1.22367, -0.186181, -0.253929 ) DX3DVNORM( 0.711567, -0.702618, -0 )  //248
DX3DVERT( -1.40031, -0.365069, -0.234076 ) DX3DVNORM( 0.711567, -0.702618, -0 )  //249
DX3DVERT( -1.40031, -0.365069, -0.121479 ) DX3DVNORM( 0.711567, -0.702618, -0 )  //250
DX3DVERT( -1.22367, -0.186181, -0.253929 ) DX3DVNORM( -0.0511519, -0.0601205, -0.99688 )  //251
DX3DVERT( -1.33242, -0.0936556, -0.253929 ) DX3DVNORM( -0.0511519, -0.0601205, -0.99688 )  //252
DX3DVERT( -1.4807, -0.296665, -0.234076 ) DX3DVNORM( -0.0511519, -0.0601205, -0.99688 )  //253
DX3DVERT( -1.40031, -0.365069, -0.234076 ) DX3DVNORM( -0.0511519, -0.0601205, -0.99688 )  //254
DX3DVERT( -1.33242, -0.0936556, -0.253929 ) DX3DVNORM( -0.807513, 0.58985, -0 )  //255
DX3DVERT( -1.33242, -0.0936556, -0.101627 ) DX3DVNORM( -0.807513, 0.58985, -0 )  //256
DX3DVERT( -1.4807, -0.296665, -0.121479 ) DX3DVNORM( -0.807513, 0.58985, -0 )  //257
DX3DVERT( -1.4807, -0.296665, -0.234076 ) DX3DVNORM( -0.807513, 0.58985, -0 )  //258
DX3DVERT( -1.33242, -0.0936556, -0.101627 ) DX3DVNORM( -0.0511518, -0.0601205, 0.99688 )  //259
DX3DVERT( -1.22367, -0.186181, -0.101627 ) DX3DVNORM( -0.0511518, -0.0601205, 0.99688 )  //260
DX3DVERT( -1.40031, -0.365069, -0.121479 ) DX3DVNORM( -0.0511518, -0.0601205, 0.99688 )  //261
DX3DVERT( -1.4807, -0.296665, -0.121479 ) DX3DVNORM( -0.0511518, -0.0601205, 0.99688 )  //262
DX3DVERT( -0.830623, -0.0660391, 0.0704417 ) DX3DVNORM( 0, -1, 5.02928e-008 )  //263
DX3DVERT( -0.830623, -0.0660391, -0.0704416 ) DX3DVNORM( 0, -1, 5.02928e-008 )  //264
DX3DVERT( -1.09351, -0.0660391, -0.0704416 ) DX3DVNORM( 0, -1, 5.02928e-008 )  //265
DX3DVERT( -1.09351, -0.0660391, 0.0704417 ) DX3DVNORM( 0, -1, 5.02928e-008 )  //266
DX3DVERT( -0.830623, -0.0660391, -0.0704416 ) DX3DVNORM( 0, 0, -1 )  //267
DX3DVERT( -0.830623, 0.105001, -0.0704416 ) DX3DVNORM( 0, 0, -1 )  //268
DX3DVERT( -1.09351, 0.0660391, -0.0704416 ) DX3DVNORM( 0, 0, -1 )  //269
DX3DVERT( -1.09351, -0.0660391, -0.0704416 ) DX3DVNORM( 0, 0, -1 )  //270
DX3DVERT( -0.830623, 0.105001, -0.0704416 ) DX3DVNORM( -0.146608, 0.989195, -0 )  //271
DX3DVERT( -0.830623, 0.105001, 0.0704417 ) DX3DVNORM( -0.146608, 0.989195, -0 )  //272
DX3DVERT( -1.09351, 0.0660391, 0.0704417 ) DX3DVNORM( -0.146608, 0.989195, -0 )  //273
DX3DVERT( -1.09351, 0.0660391, -0.0704416 ) DX3DVNORM( -0.146608, 0.989195, -0 )  //274
DX3DVERT( -0.830623, 0.105001, 0.0704417 ) DX3DVNORM( -5.84377e-009, 0, 1 )  //275
DX3DVERT( -0.830623, -0.0660391, 0.0704417 ) DX3DVNORM( -5.84377e-009, 0, 1 )  //276
DX3DVERT( -1.09351, -0.0660391, 0.0704417 ) DX3DVNORM( -5.84377e-009, 0, 1 )  //277
DX3DVERT( -1.09351, 0.0660391, 0.0704417 ) DX3DVNORM( -5.84377e-009, 0, 1 )  //278
DX3DVERT( -1.09351, -0.0660391, 0.0704417 ) DX3DVNORM( 0.347789, -0.937573, -0 )  //279
DX3DVERT( -1.09351, -0.0660391, -0.0704416 ) DX3DVNORM( 0.347789, -0.937573, -0 )  //280
DX3DVERT( -1.29132, -0.139416, -0.0704416 ) DX3DVNORM( 0.347789, -0.937573, -0 )  //281
DX3DVERT( -1.29132, -0.139416, 0.0704417 ) DX3DVNORM( 0.347789, -0.937573, -0 )  //282
DX3DVERT( -1.35596, -0.0242398, -0.0704416 ) DX3DVNORM( -1.49751e-008, 0, -1 )  //283
DX3DVERT( -1.29132, -0.139416, -0.0704416 ) DX3DVNORM( -1.49751e-008, 0, -1 )  //284
DX3DVERT( -1.09351, 0.0660391, -0.0704416 ) DX3DVNORM( -0.325272, 0.945621, -0 )  //285
DX3DVERT( -1.09351, 0.0660391, 0.0704417 ) DX3DVNORM( -0.325272, 0.945621, -0 )  //286
DX3DVERT( -1.35596, -0.0242398, 0.0704417 ) DX3DVNORM( -0.325272, 0.945621, -0 )  //287
DX3DVERT( -1.35596, -0.0242398, -0.0704416 ) DX3DVNORM( -0.325272, 0.945621, -0 )  //288
DX3DVERT( -1.29132, -0.139416, 0.0704417 ) DX3DVNORM( 2.99502e-008, 0, 1 )  //289
DX3DVERT( -1.35596, -0.0242398, 0.0704417 ) DX3DVNORM( 2.99502e-008, 0, 1 )  //290
DX3DVERT( -1.29132, -0.139416, 0.0704417 ) DX3DVNORM( 0.413324, -0.910584, -0 )  //291
DX3DVERT( -1.29132, -0.139416, -0.0704416 ) DX3DVNORM( 0.413324, -0.910584, -0 )  //292
DX3DVERT( -1.5021, -0.235091, -0.0493928 ) DX3DVNORM( 0.413324, -0.910584, -0 )  //293
DX3DVERT( -1.5021, -0.235091, 0.0493928 ) DX3DVNORM( 0.413324, -0.910584, -0 )  //294
DX3DVERT( -1.29132, -0.139416, -0.0704416 ) DX3DVNORM( -0.0792571, -0.0444846, -0.995861 )  //295
DX3DVERT( -1.35596, -0.0242398, -0.0704416 ) DX3DVNORM( -0.0792571, -0.0444846, -0.995861 )  //296
DX3DVERT( -1.54743, -0.154331, -0.0493928 ) DX3DVNORM( -0.0792571, -0.0444846, -0.995861 )  //297
DX3DVERT( -1.5021, -0.235091, -0.0493928 ) DX3DVNORM( -0.0792571, -0.0444846, -0.995861 )  //298
DX3DVERT( -1.35596, -0.0242398, -0.0704416 ) DX3DVNORM( -0.562005, 0.827133, -0 )  //299
DX3DVERT( -1.35596, -0.0242398, 0.0704417 ) DX3DVNORM( -0.562005, 0.827133, -0 )  //300
DX3DVERT( -1.54743, -0.154331, 0.0493928 ) DX3DVNORM( -0.562005, 0.827133, -0 )  //301
DX3DVERT( -1.54743, -0.154331, -0.0493928 ) DX3DVNORM( -0.562005, 0.827133, -0 )  //302
DX3DVERT( -1.35596, -0.0242398, 0.0704417 ) DX3DVNORM( -0.0792571, -0.0444846, 0.995861 )  //303
DX3DVERT( -1.29132, -0.139416, 0.0704417 ) DX3DVNORM( -0.0792571, -0.0444846, 0.995861 )  //304
DX3DVERT( -1.5021, -0.235091, 0.0493928 ) DX3DVNORM( -0.0792571, -0.0444846, 0.995861 )  //305
DX3DVERT( -1.54743, -0.154331, 0.0493928 ) DX3DVNORM( -0.0792571, -0.0444846, 0.995861 )  //306
DX3DVERT( -0.830623, -0.0643094, 0.246375 ) DX3DVNORM( 0, -1, -0 )  //307
DX3DVERT( -0.830623, -0.0643094, 0.109181 ) DX3DVNORM( 0, -1, -0 )  //308
DX3DVERT( -1.07579, -0.0643094, 0.109181 ) DX3DVNORM( 0, -1, -0 )  //309
DX3DVERT( -1.07579, -0.0643094, 0.246375 ) DX3DVNORM( 0, -1, -0 )  //310
DX3DVERT( -0.830623, -0.0643094, 0.109181 ) DX3DVNORM( -2.56502e-008, 0, -1 )  //311
DX3DVERT( -0.830623, 0.103271, 0.109181 ) DX3DVNORM( -2.56502e-008, 0, -1 )  //312
DX3DVERT( -1.07579, 0.0643094, 0.109181 ) DX3DVNORM( -2.56502e-008, 0, -1 )  //313
DX3DVERT( -1.07579, -0.0643094, 0.109181 ) DX3DVNORM( -2.56502e-008, 0, -1 )  //314
DX3DVERT( -0.830623, 0.103271, 0.109181 ) DX3DVNORM( -0.156953, 0.987606, 1.09385e-007 )  //315
DX3DVERT( -0.830623, 0.103271, 0.246375 ) DX3DVNORM( -0.156953, 0.987606, 1.09385e-007 )  //316
DX3DVERT( -1.07579, 0.0643094, 0.246375 ) DX3DVNORM( -0.156953, 0.987606, 1.09385e-007 )  //317
DX3DVERT( -1.07579, 0.0643094, 0.109181 ) DX3DVNORM( -0.156953, 0.987606, 1.09385e-007 )  //318
DX3DVERT( -0.830623, 0.103271, 0.246375 ) DX3DVNORM( 7.69507e-008, 0, 1 )  //319
DX3DVERT( -0.830623, -0.0643094, 0.246375 ) DX3DVNORM( 7.69507e-008, 0, 1 )  //320
DX3DVERT( -1.07579, -0.0643094, 0.246375 ) DX3DVNORM( 7.69507e-008, 0, 1 )  //321
DX3DVERT( -1.07579, 0.0643094, 0.246375 ) DX3DVNORM( 7.69507e-008, 0, 1 )  //322
DX3DVERT( -1.07579, -0.0643094, 0.246375 ) DX3DVNORM( 0.316334, -0.948648, -0 )  //323
DX3DVERT( -1.07579, -0.0643094, 0.109181 ) DX3DVNORM( 0.316334, -0.948648, -0 )  //324
DX3DVERT( -1.28582, -0.134347, 0.109181 ) DX3DVNORM( 0.316334, -0.948648, -0 )  //325
DX3DVERT( -1.28582, -0.134347, 0.246375 ) DX3DVNORM( 0.316334, -0.948648, -0 )  //326
DX3DVERT( -1.34877, -0.0221871, 0.109181 ) DX3DVNORM( 2.95294e-008, 0, -1 )  //327
DX3DVERT( -1.28582, -0.134347, 0.109181 ) DX3DVNORM( 2.95294e-008, 0, -1 )  //328
DX3DVERT( -1.07579, 0.0643094, 0.109181 ) DX3DVNORM( -0.302053, 0.953291, 5.9264e-008 )  //329
DX3DVERT( -1.07579, 0.0643094, 0.246375 ) DX3DVNORM( -0.302053, 0.953291, 5.9264e-008 )  //330
DX3DVERT( -1.34877, -0.0221871, 0.246375 ) DX3DVNORM( -0.302053, 0.953291, 5.9264e-008 )  //331
DX3DVERT( -1.34877, -0.0221871, 0.109181 ) DX3DVNORM( -0.302053, 0.953291, 5.9264e-008 )  //332
DX3DVERT( -1.28582, -0.134347, 0.246375 ) DX3DVNORM( -1.18117e-007, 0, 1 )  //333
DX3DVERT( -1.34877, -0.0221871, 0.246375 ) DX3DVNORM( -1.18117e-007, 0, 1 )  //334
DX3DVERT( -1.28582, -0.134347, 0.246375 ) DX3DVNORM( 0.42198, -0.906605, -0 )  //335
DX3DVERT( -1.28582, -0.134347, 0.109181 ) DX3DVNORM( 0.42198, -0.906605, -0 )  //336
DX3DVERT( -1.46895, -0.219586, 0.125503 ) DX3DVNORM( 0.42198, -0.906605, -0 )  //337
DX3DVERT( -1.46895, -0.219586, 0.230052 ) DX3DVNORM( 0.42198, -0.906605, -0 )  //338
DX3DVERT( -1.28582, -0.134347, 0.109181 ) DX3DVNORM( -0.0704365, -0.0395339, -0.996732 )  //339
DX3DVERT( -1.34877, -0.0221871, 0.109181 ) DX3DVNORM( -0.0704365, -0.0395339, -0.996732 )  //340
DX3DVERT( -1.51693, -0.134114, 0.125503 ) DX3DVNORM( -0.0704365, -0.0395339, -0.996732 )  //341
DX3DVERT( -1.46895, -0.219586, 0.125503 ) DX3DVNORM( -0.0704365, -0.0395339, -0.996732 )  //342
DX3DVERT( -1.34877, -0.0221871, 0.109181 ) DX3DVNORM( -0.5541, 0.83245, 7.62889e-008 )  //343
DX3DVERT( -1.34877, -0.0221871, 0.246375 ) DX3DVNORM( -0.5541, 0.83245, 7.62889e-008 )  //344
DX3DVERT( -1.51693, -0.134114, 0.230052 ) DX3DVNORM( -0.5541, 0.83245, 7.62889e-008 )  //345
DX3DVERT( -1.51693, -0.134114, 0.125503 ) DX3DVNORM( -0.5541, 0.83245, 7.62889e-008 )  //346
DX3DVERT( -1.34877, -0.0221871, 0.246375 ) DX3DVNORM( -0.0704365, -0.0395339, 0.996732 )  //347
DX3DVERT( -1.28582, -0.134347, 0.246375 ) DX3DVNORM( -0.0704365, -0.0395339, 0.996732 )  //348
DX3DVERT( -1.46895, -0.219586, 0.230052 ) DX3DVNORM( -0.0704365, -0.0395339, 0.996732 )  //349
DX3DVERT( -1.51693, -0.134114, 0.230052 ) DX3DVNORM( -0.0704365, -0.0395339, 0.996732 )  //350
DX3DVERT( -0.830623, -0.0568387, 0.416184 ) DX3DVNORM( 0, -1, -9.73203e-008 )  //351
DX3DVERT( -0.830623, -0.0568387, 0.294928 ) DX3DVNORM( 0, -1, -9.73203e-008 )  //352
DX3DVERT( -1.06739, -0.0568387, 0.294928 ) DX3DVNORM( 0, -1, -9.73203e-008 )  //353
DX3DVERT( -1.06739, -0.0568387, 0.416184 ) DX3DVNORM( 0, -1, -9.73203e-008 )  //354
DX3DVERT( -0.830623, -0.0568387, 0.294928 ) DX3DVNORM( 0, 0, -1 )  //355
DX3DVERT( -0.830623, 0.0958007, 0.294928 ) DX3DVNORM( 0, 0, -1 )  //356
DX3DVERT( -1.06739, 0.0568387, 0.294928 ) DX3DVNORM( 0, 0, -1 )  //357
DX3DVERT( -1.06739, -0.0568387, 0.294928 ) DX3DVNORM( 0, 0, -1 )  //358
DX3DVERT( -0.830623, 0.0958007, 0.294928 ) DX3DVNORM( -0.162377, 0.986729, 1.28038e-007 )  //359
DX3DVERT( -0.830623, 0.0958006, 0.416184 ) DX3DVNORM( -0.162377, 0.986729, 1.28038e-007 )  //360
DX3DVERT( -1.06739, 0.0568387, 0.416184 ) DX3DVNORM( -0.162377, 0.986729, 1.28038e-007 )  //361
DX3DVERT( -1.06739, 0.0568387, 0.294928 ) DX3DVNORM( -0.162377, 0.986729, 1.28038e-007 )  //362
DX3DVERT( -0.830623, 0.0958006, 0.416184 ) DX3DVNORM( 0.0211692, 0.0389096, 0.999018 )  //363
DX3DVERT( -1.06739, -0.0568387, 0.416184 ) DX3DVNORM( 1.77242e-007, 0, 1 )  //364
DX3DVERT( -1.06739, 0.0568387, 0.416184 ) DX3DVNORM( 1.77242e-007, 0, 1 )  //365
DX3DVERT( -1.06739, -0.0568387, 0.416184 ) DX3DVNORM( 0.253447, -0.967349, -1.24314e-007 )  //366
DX3DVERT( -1.06739, -0.0568387, 0.294928 ) DX3DVNORM( 0.253447, -0.967349, -1.24314e-007 )  //367
DX3DVERT( -1.24669, -0.103816, 0.294928 ) DX3DVNORM( 0.253447, -0.967349, -1.24314e-007 )  //368
DX3DVERT( -1.24669, -0.103816, 0.416184 ) DX3DVNORM( 0.253447, -0.967349, -1.24314e-007 )  //369
DX3DVERT( -1.30233, -0.00468523, 0.294928 ) DX3DVNORM( -1.18652e-007, 0, -1 )  //370
DX3DVERT( -1.24669, -0.103816, 0.294928 ) DX3DVNORM( -1.18652e-007, 0, -1 )  //371
DX3DVERT( -1.06739, 0.0568387, 0.294928 ) DX3DVNORM( -0.253329, 0.96738, 6.32512e-008 )  //372
DX3DVERT( -1.06739, 0.0568387, 0.416184 ) DX3DVNORM( -0.253329, 0.96738, 6.32512e-008 )  //373
DX3DVERT( -1.30233, -0.00468524, 0.416184 ) DX3DVNORM( -0.253329, 0.96738, 6.32512e-008 )  //374
DX3DVERT( -1.30233, -0.00468523, 0.294928 ) DX3DVNORM( -0.253329, 0.96738, 6.32512e-008 )  //375
DX3DVERT( -1.24669, -0.103816, 0.416184 ) DX3DVNORM( 0, 0, 1 )  //376
DX3DVERT( -1.30233, -0.00468524, 0.416184 ) DX3DVNORM( 0, 0, 1 )  //377
DX3DVERT( -1.24669, -0.103816, 0.416184 ) DX3DVNORM( 0.440803, -0.897604, -0 )  //378
DX3DVERT( -1.24669, -0.103816, 0.294928 ) DX3DVNORM( 0.440803, -0.897604, -0 )  //379
DX3DVERT( -1.42696, -0.192347, 0.306696 ) DX3DVNORM( 0.440803, -0.897604, -0 )  //380
DX3DVERT( -1.42696, -0.192347, 0.404415 ) DX3DVNORM( 0.440803, -0.897604, -0 )  //381
DX3DVERT( -1.24669, -0.103816, 0.294928 ) DX3DVNORM( -0.0510873, -0.0286739, -0.998282 )  //382
DX3DVERT( -1.30233, -0.00468523, 0.294928 ) DX3DVNORM( -0.0510873, -0.0286739, -0.998282 )  //383
DX3DVERT( -1.4718, -0.112459, 0.306696 ) DX3DVNORM( -0.0510873, -0.0286739, -0.998282 )  //384
DX3DVERT( -1.42696, -0.192347, 0.306696 ) DX3DVNORM( -0.0510873, -0.0286739, -0.998282 )  //385
DX3DVERT( -1.30233, -0.00468523, 0.294928 ) DX3DVNORM( -0.536611, 0.843829, 8.47058e-008 )  //386
DX3DVERT( -1.30233, -0.00468524, 0.416184 ) DX3DVNORM( -0.536611, 0.843829, 8.47058e-008 )  //387
DX3DVERT( -1.4718, -0.112459, 0.404415 ) DX3DVNORM( -0.536611, 0.843829, 8.47058e-008 )  //388
DX3DVERT( -1.4718, -0.112459, 0.306696 ) DX3DVNORM( -0.536611, 0.843829, 8.47058e-008 )  //389
DX3DVERT( -1.30233, -0.00468524, 0.416184 ) DX3DVNORM( -0.0510877, -0.0286739, 0.998282 )  //390
DX3DVERT( -1.24669, -0.103816, 0.416184 ) DX3DVNORM( -0.0510877, -0.0286739, 0.998282 )  //391
DX3DVERT( -1.42696, -0.192347, 0.404415 ) DX3DVNORM( -0.0510877, -0.0286739, 0.998282 )  //392
DX3DVERT( -1.4718, -0.112459, 0.404415 ) DX3DVNORM( -0.0510877, -0.0286739, 0.998282 )  //393
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_ArmHand_R____mArmGlay_1 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_ArmHand_R____mArmGlay_1 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 394 )
DX3DVERTEX_END


#else
#define vertex_ArmHand_R____mArmGlay_1	NULL
#define vertexbuff_ArmHand_R____mArmGlay_1	NULL
#endif




#if ((PT_ArmHand_R____mArmGlay_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_TRILIST) ) || (PT_ArmHand_R____mArmGlay_1 == PT_TRILIST )


#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DINDEX_START( index_ArmHand_R____mArmGlay_1 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 0, 23, // 22 68
	0, 3, 23, // 23 71
	24, 25, 26, // 24 74
	27, 24, 26, // 25 77
	28, 27, 26, // 26 80
	29, 28, 26, // 27 83
	30, 29, 26, // 28 86
	31, 30, 26, // 29 89
	32, 31, 26, // 30 92
	33, 32, 26, // 31 95
	34, 33, 26, // 32 98
	35, 34, 26, // 33 101
	36, 35, 26, // 34 104
	25, 36, 26, // 35 107
	37, 38, 39, // 36 110
	38, 40, 39, // 37 113
	40, 41, 39, // 38 116
	41, 42, 39, // 39 119
	42, 43, 39, // 40 122
	43, 44, 39, // 41 125
	44, 45, 39, // 42 128
	45, 46, 39, // 43 131
	46, 47, 39, // 44 134
	47, 48, 39, // 45 137
	48, 49, 39, // 46 140
	49, 37, 39, // 47 143
	50, 51, 53, // 48 146
	51, 52, 53, // 49 149
	51, 54, 52, // 50 152
	54, 55, 52, // 51 155
	54, 56, 55, // 52 158
	56, 57, 55, // 53 161
	58, 59, 61, // 54 164
	59, 60, 61, // 55 167
	59, 62, 60, // 56 170
	62, 63, 60, // 57 173
	62, 64, 63, // 58 176
	64, 65, 63, // 59 179
	66, 67, 69, // 60 182
	67, 68, 69, // 61 185
	67, 70, 68, // 62 188
	70, 71, 68, // 63 191
	70, 72, 71, // 64 194
	72, 73, 71, // 65 197
	69, 68, 75, // 66 200
	68, 74, 75, // 67 203
	68, 71, 74, // 68 206
	71, 76, 74, // 69 209
	71, 73, 76, // 70 212
	73, 77, 76, // 71 215
	75, 74, 79, // 72 218
	74, 78, 79, // 73 221
	74, 76, 78, // 74 224
	76, 80, 78, // 75 227
	76, 77, 80, // 76 230
	77, 81, 80, // 77 233
	79, 78, 83, // 78 236
	78, 82, 83, // 79 239
	78, 80, 82, // 80 242
	80, 84, 82, // 81 245
	80, 81, 84, // 82 248
	81, 85, 84, // 83 251
	83, 82, 87, // 84 254
	82, 86, 87, // 85 257
	82, 84, 86, // 86 260
	84, 88, 86, // 87 263
	84, 85, 88, // 88 266
	85, 89, 88, // 89 269
	87, 86, 91, // 90 272
	86, 90, 91, // 91 275
	86, 88, 90, // 92 278
	88, 92, 90, // 93 281
	88, 89, 92, // 94 284
	89, 93, 92, // 95 287
	91, 90, 95, // 96 290
	90, 94, 95, // 97 293
	90, 92, 94, // 98 296
	92, 96, 94, // 99 299
	92, 93, 96, // 100 302
	93, 97, 96, // 101 305
	95, 94, 99, // 102 308
	94, 98, 99, // 103 311
	94, 96, 98, // 104 314
	96, 100, 98, // 105 317
	96, 97, 100, // 106 320
	97, 101, 100, // 107 323
	99, 98, 103, // 108 326
	98, 102, 103, // 109 329
	98, 100, 102, // 110 332
	100, 104, 102, // 111 335
	100, 101, 104, // 112 338
	101, 105, 104, // 113 341
	106, 107, 109, // 114 344
	107, 108, 109, // 115 347
	110, 106, 111, // 116 350
	106, 109, 111, // 117 353
	112, 110, 113, // 118 356
	110, 111, 113, // 119 359
	114, 112, 115, // 120 362
	112, 113, 115, // 121 365
	116, 114, 117, // 122 368
	114, 115, 117, // 123 371
	118, 116, 119, // 124 374
	116, 117, 119, // 125 377
	120, 118, 121, // 126 380
	118, 119, 121, // 127 383
	122, 120, 123, // 128 386
	120, 121, 123, // 129 389
	124, 122, 125, // 130 392
	122, 123, 125, // 131 395
	126, 127, 129, // 132 398
	127, 128, 129, // 133 401
	127, 130, 128, // 134 404
	130, 131, 128, // 135 407
	130, 132, 131, // 136 410
	132, 133, 131, // 137 413
	132, 134, 133, // 138 416
	134, 135, 133, // 139 419
	134, 136, 135, // 140 422
	136, 137, 135, // 141 425
	136, 138, 137, // 142 428
	138, 139, 137, // 143 431
	138, 140, 139, // 144 434
	140, 141, 139, // 145 437
	140, 142, 141, // 146 440
	142, 143, 141, // 147 443
	142, 144, 143, // 148 446
	143, 144, 145, // 149 449
	146, 147, 149, // 150 452
	147, 148, 149, // 151 455
	128, 131, 151, // 152 458
	131, 150, 151, // 153 461
	152, 153, 155, // 154 464
	153, 154, 155, // 155 467
	133, 135, 157, // 156 470
	135, 156, 157, // 157 473
	158, 159, 161, // 158 476
	159, 160, 161, // 159 479
	137, 139, 163, // 160 482
	139, 162, 163, // 161 485
	164, 165, 167, // 162 488
	165, 166, 167, // 163 491
	168, 169, 171, // 164 494
	169, 170, 171, // 165 497
	172, 173, 175, // 166 500
	173, 174, 175, // 167 503
	53, 176, 178, // 168 506
	176, 177, 178, // 169 509
	179, 180, 182, // 170 512
	180, 181, 182, // 171 515
	183, 184, 186, // 172 518
	184, 185, 186, // 173 521
	187, 188, 190, // 174 524
	188, 189, 190, // 175 527
	191, 192, 194, // 176 530
	192, 193, 194, // 177 533
	195, 196, 198, // 178 536
	196, 197, 198, // 179 539
	199, 200, 202, // 180 542
	200, 201, 202, // 181 545
	203, 204, 206, // 182 548
	204, 205, 206, // 183 551
	207, 208, 210, // 184 554
	208, 209, 210, // 185 557
	211, 212, 214, // 186 560
	212, 213, 214, // 187 563
	215, 216, 218, // 188 566
	216, 217, 218, // 189 569
	219, 220, 222, // 190 572
	220, 221, 222, // 191 575
	223, 224, 226, // 192 578
	224, 225, 226, // 193 581
	227, 228, 230, // 194 584
	228, 229, 230, // 195 587
	231, 232, 234, // 196 590
	232, 233, 234, // 197 593
	235, 236, 238, // 198 596
	236, 237, 238, // 199 599
	226, 225, 240, // 200 602
	225, 239, 240, // 201 605
	241, 242, 244, // 202 608
	242, 243, 244, // 203 611
	234, 233, 246, // 204 614
	233, 245, 246, // 205 617
	247, 248, 250, // 206 620
	248, 249, 250, // 207 623
	251, 252, 254, // 208 626
	252, 253, 254, // 209 629
	255, 256, 258, // 210 632
	256, 257, 258, // 211 635
	259, 260, 262, // 212 638
	260, 261, 262, // 213 641
	263, 264, 266, // 214 644
	264, 265, 266, // 215 647
	267, 268, 270, // 216 650
	268, 269, 270, // 217 653
	271, 272, 274, // 218 656
	272, 273, 274, // 219 659
	275, 276, 278, // 220 662
	276, 277, 278, // 221 665
	279, 280, 282, // 222 668
	280, 281, 282, // 223 671
	270, 269, 284, // 224 674
	269, 283, 284, // 225 677
	285, 286, 288, // 226 680
	286, 287, 288, // 227 683
	278, 277, 290, // 228 686
	277, 289, 290, // 229 689
	291, 292, 294, // 230 692
	292, 293, 294, // 231 695
	295, 296, 298, // 232 698
	296, 297, 298, // 233 701
	299, 300, 302, // 234 704
	300, 301, 302, // 235 707
	303, 304, 306, // 236 710
	304, 305, 306, // 237 713
	307, 308, 310, // 238 716
	308, 309, 310, // 239 719
	311, 312, 314, // 240 722
	312, 313, 314, // 241 725
	315, 316, 318, // 242 728
	316, 317, 318, // 243 731
	319, 320, 322, // 244 734
	320, 321, 322, // 245 737
	323, 324, 326, // 246 740
	324, 325, 326, // 247 743
	314, 313, 328, // 248 746
	313, 327, 328, // 249 749
	329, 330, 332, // 250 752
	330, 331, 332, // 251 755
	322, 321, 334, // 252 758
	321, 333, 334, // 253 761
	335, 336, 338, // 254 764
	336, 337, 338, // 255 767
	339, 340, 342, // 256 770
	340, 341, 342, // 257 773
	343, 344, 346, // 258 776
	344, 345, 346, // 259 779
	347, 348, 350, // 260 782
	348, 349, 350, // 261 785
	351, 352, 354, // 262 788
	352, 353, 354, // 263 791
	355, 356, 358, // 264 794
	356, 357, 358, // 265 797
	359, 360, 362, // 266 800
	360, 361, 362, // 267 803
	363, 58, 365, // 268 806
	58, 364, 365, // 269 809
	366, 367, 369, // 270 812
	367, 368, 369, // 271 815
	358, 357, 371, // 272 818
	357, 370, 371, // 273 821
	372, 373, 375, // 274 824
	373, 374, 375, // 275 827
	365, 364, 377, // 276 830
	364, 376, 377, // 277 833
	378, 379, 381, // 278 836
	379, 380, 381, // 279 839
	382, 383, 385, // 280 842
	383, 384, 385, // 281 845
	386, 387, 389, // 282 848
	387, 388, 389, // 283 851
	390, 391, 393, // 284 854
	391, 392, 393, // 285 857
DX3DINDEX_END
#endif

#else
#define index_ArmHand_R____mArmGlay_1	NULL
#endif




#if ((PT_ArmHand_R____mArmGlay_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_INDEXSTRIP) ) || (PT_ArmHand_R____mArmGlay_1 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_ArmHand_R____mArmGlay_1_INDEXSTRIP 	NULL
#endif




#if ((PT_ArmHand_R____mArmGlay_1 == PT_FOLLOWALL) && (PT_ALL_GachanGameObjectArm_tst__ == PT_VERTEXSTRIP) ) || (PT_ArmHand_R____mArmGlay_1 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_ArmHand_R____mArmGlay_1_VERTEXSTRIP 	NULL
#define vertexbuff_ArmHand_R____mArmGlay_1_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_ArmHand_R___ )
DX3DMODEL_START( model_ArmHand_R____mArm_0 )
DX3DMODEL_VERTEX( vertex_ArmHand_R____mArm_0 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DMODEL_INDEX( index_ArmHand_R____mArm_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 402 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mArm )
DX3DMODEL_END
DX3DMODEL_START( model_ArmHand_R____mArmGlay_1 )
DX3DMODEL_VERTEX( vertex_ArmHand_R____mArmGlay_1 )
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DMODEL_INDEX( index_ArmHand_R____mArmGlay_1 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 858 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_mArmGlay )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_ArmHand_R___, 3490728949 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_ArmHand_R___ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, -0, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, -0, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END




//////////// export info ///////////////
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectArm_tst___0, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectArm_tst___1, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectArm_tst___2, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectArm_tst___3, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectArm_tst___4, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectArm_tst___5, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectArm_tst___6, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_GachanGameObjectArm_tst___7, 0 )




/////////////////////////////////////////////
#if ( !BINARY_GachanGameObjectArm_tst__ )
DX3DBINARYFILE( binaryfile_GachanGameObjectArm_tst__, NULL )
#else
DX3DBINARYFILE( binaryfile_GachanGameObjectArm_tst__, "Z:/toshi2gachan/_GachanWorkspace/object/" )
#endif


DX3DBINARYSIZE( binarysize_GachanGameObjectArm_tst__, 0 )


