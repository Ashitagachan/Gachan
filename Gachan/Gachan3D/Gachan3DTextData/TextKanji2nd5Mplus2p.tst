//skipped groundPlane_transform
//skipped Manipulator1
//skipped UniversalManip
//skipped CubeCompass
/////////////////////////////////////////////
// object_Trim_Char_x_1_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif

DX3DMATERIAL_START( material_initialShadingGroup )
DX3DMATERIAL_DIFF( 1, 0.4, 0.4, 0.4 )
DX3DMATERIAL_SPEC( 1, 1, 1, 1 )
DX3DMATERIAL_TEX( NULL )
DX3DMATERIAL_SHADER( DEFAULT )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_1_1___initialShadingGroup_0 )
DX3DVERT( 3.0875, 3.54219, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 3.0875, 2.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 2.79531, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 2.79531, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 2.79531, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 3.0875, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( -0.1875, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( -0.1875, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( 0.104688, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( 0.4675, 0.348437, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 0.4675, 0.585937, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 1.1225, 0.585937, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( -0.1875, 0.176562, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( -0.1875, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( 0.104688, 0.585937, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( 0.104688, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( 1.1225, 0.348437, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( 1.7775, 0.585937, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( 3.0875, 0.176562, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 2.79531, 0.176562, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 2.79531, 0.348437, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( 1.7775, 0.348437, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( 2.4325, 0.585937, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 2.79531, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 3.0875, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 0.4675, 3.54219, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 1.1225, 3.54219, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 0.4675, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( -0.1875, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 0.104688, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 0.104688, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( -0.1875, 2.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( 0.104688, 2.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 1.7775, 3.54219, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 1.1225, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 2.79531, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 3.0875, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 2.4325, 3.54219, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 1.7775, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 2.79531, 2.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 2.4325, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 0.104688, 0.348437, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 0.104688, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 0.104688, 0.176562, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 2.4325, 0.348437, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 2.79531, 0.585937, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 3.0875, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( -0.1875, 3.54219, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 1.7775, 3.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 2.34688, 3.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 1.7775, 2.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 0.553126, 2.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 0.553126, 3.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 1.1225, 3.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 1.1225, 2.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( 1.1225, 2.95625, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( 0.826563, 2.95625, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 1.1225, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 1.1225, 2.73906, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 1.7775, 2.73906, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( 1.7775, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( 2.07344, 2.73906, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 2.07344, 2.95625, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 0.826563, 2.73906, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 0.826563, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 0.553126, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( 1.7775, 2.95625, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 2.34688, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 2.34688, 2.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( 2.4325, 2.43437, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 2.46719, 2.43437, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 2.4325, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 2.4325, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 2.4325, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 2.46719, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 0.7125, 1.70937, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 1.1225, 1.70937, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 0.7125, 1.54062, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 0.668391, 0.737499, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 0.4675, 0.68326, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 0.4675, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 0.33125, 0.651562, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 0.298246, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 0.432813, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 0.432813, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 0.4675, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 0.432813, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 0.4675, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( 0.4675, 0.920172, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 1.1225, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 1.1225, 1.34687, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 1.7775, 1.34687, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 1.18438, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 1.7775, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 2.60041, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 2.55, 0.635936, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 2.4325, 0.691111, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 2.32634, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 2.4325, 0.7375, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 1.7775, 1.54062, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 1.7775, 1.70937, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( 2.1875, 1.70937, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( 2.4325, 0.943818, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 2.4325, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 2.46719, 1.29844, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 0.4675, 2.43437, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 1.1225, 2.43437, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 0.4675, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( 0.7125, 2.06719, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( 1.1225, 2.06719, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( 0.7125, 1.90469, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( 0.432813, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( 0.432813, 2.43437, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( 1.7775, 2.43437, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( 1.1225, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 1.1225, 1.90469, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 1.7775, 2.06719, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 2.46719, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 1.7775, 1.90469, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 2.1875, 2.06719, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT( 1.7775, 2.42031, 0 ) DX3DVNORM( 0, 0, -1 )  //120
DX3DVERT( 1.1225, 1.54062, 0 ) DX3DVNORM( 0, 0, -1 )  //121
DX3DVERT( 2.65469, 0.846874, 0 ) DX3DVNORM( 0, 0, -1 )  //122
DX3DVERT( 1.1225, 2.2625, 0 ) DX3DVNORM( 0, 0, -1 )  //123
DX3DVERT( 0.7125, 1.34687, 0 ) DX3DVNORM( 0, 0, -1 )  //124
DX3DVERT( 0.7125, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //125
DX3DVERT( 0.7125, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //126
DX3DVERT( 0.4675, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //127
DX3DVERT( 1.10313, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //128
DX3DVERT( 1.1225, 0.910604, 0 ) DX3DVNORM( 0, 0, -1 )  //129
DX3DVERT( 1.27031, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //130
DX3DVERT( 1.7775, 0.936276, 0 ) DX3DVNORM( 0, 0, -1 )  //131
DX3DVERT( 1.63281, 0.979687, 0 ) DX3DVNORM( 0, 0, -1 )  //132
DX3DVERT( 1.70313, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //133
DX3DVERT( 1.825, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //134
DX3DVERT( 2.1875, 1.34687, 0 ) DX3DVNORM( 0, 0, -1 )  //135
DX3DVERT( 2.1875, 1.85937, 0 ) DX3DVNORM( 0, 0, -1 )  //136
DX3DVERT( 2.1875, 1.54062, 0 ) DX3DVNORM( 0, 0, -1 )  //137
DX3DVERT( 2.46719, 1.15469, 0 ) DX3DVNORM( 0, 0, -1 )  //138
DX3DVERT( 0.7125, 2.2625, 0 ) DX3DVNORM( 0, 0, -1 )  //139
DX3DVERT( 2.1875, 2.2625, 0 ) DX3DVNORM( 0, 0, -1 )  //140
DX3DVERT( 1.7775, 2.2625, 0 ) DX3DVNORM( 0, 0, -1 )  //141
DX3DVERT( 2.1875, 1.90469, 0 ) DX3DVNORM( 0, 0, -1 )  //142
DX3DVERT( 0.248438, 0.867187, 0 ) DX3DVNORM( 0, 0, -1 )  //143
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_1_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_1_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 144 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_1_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_1_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_1_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 5, // 1 5
	6, 7, 8, // 2 8
	9, 10, 11, // 3 11
	12, 13, 14, // 4 14
	13, 6, 15, // 5 17
	16, 11, 17, // 6 20
	18, 19, 20, // 7 23
	21, 17, 22, // 8 26
	23, 3, 24, // 9 29
	25, 26, 27, // 10 32
	7, 28, 29, // 11 35
	25, 27, 30, // 12 38
	28, 31, 32, // 13 41
	26, 33, 34, // 14 44
	4, 35, 36, // 15 47
	33, 37, 38, // 16 50
	35, 39, 1, // 17 53
	1, 39, 2, // 18 56
	2, 40, 37, // 19 59
	37, 0, 2, // 20 62
	5, 24, 3, // 21 65
	8, 15, 6, // 22 68
	11, 16, 9, // 23 71
	14, 10, 41, // 24 74
	13, 42, 14, // 25 77
	41, 43, 12, // 26 80
	12, 14, 41, // 27 83
	10, 9, 41, // 28 86
	15, 42, 13, // 29 89
	17, 21, 16, // 30 92
	44, 22, 45, // 31 95
	45, 23, 46, // 32 98
	45, 46, 18, // 33 101
	20, 45, 18, // 34 104
	45, 20, 44, // 35 107
	22, 44, 21, // 36 110
	24, 46, 23, // 37 113
	26, 34, 27, // 38 116
	29, 8, 7, // 39 119
	30, 32, 31, // 40 122
	30, 31, 47, // 41 125
	30, 47, 25, // 42 128
	32, 29, 28, // 43 131
	33, 38, 34, // 44 134
	36, 5, 4, // 45 137
	37, 40, 38, // 46 140
	1, 36, 35, // 47 143
	48, 49, 50, // 48 146
	51, 52, 53, // 49 149
	54, 55, 56, // 50 152
	53, 48, 54, // 51 155
	57, 58, 59, // 52 158
	60, 59, 61, // 53 161
	55, 54, 50, // 54 164
	49, 62, 50, // 55 167
	53, 56, 51, // 56 170
	63, 58, 64, // 57 173
	56, 65, 51, // 58 176
	56, 53, 54, // 59 179
	65, 56, 63, // 60 182
	64, 65, 63, // 61 185
	58, 57, 64, // 62 188
	48, 50, 54, // 63 191
	59, 60, 57, // 64 194
	62, 66, 50, // 65 197
	61, 62, 67, // 66 200
	61, 67, 60, // 67 203
	68, 67, 62, // 68 206
	62, 49, 68, // 69 209
	50, 66, 55, // 70 212
	69, 70, 71, // 71 215
	72, 73, 74, // 72 218
	75, 76, 77, // 73 221
	78, 79, 80, // 74 224
	79, 81, 82, // 75 227
	83, 84, 85, // 76 230
	86, 83, 87, // 77 233
	78, 80, 88, // 78 236
	89, 90, 91, // 79 239
	92, 89, 93, // 80 242
	94, 95, 96, // 81 245
	96, 97, 98, // 82 248
	99, 100, 101, // 83 251
	102, 98, 97, // 84 254
	103, 72, 104, // 85 257
	105, 106, 107, // 86 260
	108, 109, 110, // 87 263
	84, 111, 107, // 88 266
	111, 112, 105, // 89 269
	106, 113, 114, // 90 272
	115, 109, 116, // 91 275
	73, 71, 117, // 92 278
	118, 116, 119, // 93 281
	113, 69, 120, // 94 284
	88, 80, 82, // 95 287
	121, 76, 100, // 96 290
	102, 122, 94, // 97 293
	123, 114, 120, // 98 296
	70, 117, 71, // 99 299
	74, 104, 72, // 100 302
	124, 90, 89, // 101 305
	85, 125, 75, // 102 308
	77, 85, 75, // 103 311
	76, 121, 77, // 104 314
	87, 85, 77, // 105 317
	87, 77, 124, // 106 320
	124, 126, 87, // 107 323
	82, 80, 79, // 108 326
	85, 87, 83, // 109 329
	87, 127, 86, // 110 332
	126, 127, 87, // 111 335
	128, 92, 129, // 112 338
	128, 129, 78, // 113 341
	88, 128, 78, // 114 344
	89, 128, 126, // 115 347
	126, 124, 89, // 116 350
	91, 93, 89, // 117 353
	92, 130, 129, // 118 356
	131, 132, 133, // 119 359
	133, 134, 131, // 120 362
	133, 92, 93, // 121 365
	92, 128, 89, // 122 368
	96, 98, 94, // 123 371
	93, 91, 135, // 124 374
	101, 136, 73, // 125 377
	101, 73, 137, // 126 380
	101, 137, 99, // 127 383
	137, 73, 72, // 128 386
	135, 137, 72, // 129 389
	135, 134, 93, // 130 392
	72, 103, 135, // 131 395
	134, 133, 93, // 132 398
	131, 134, 102, // 133 401
	97, 131, 102, // 134 404
	134, 135, 103, // 135 407
	104, 138, 103, // 136 410
	106, 114, 107, // 137 413
	114, 123, 139, // 138 416
	110, 125, 85, // 139 419
	109, 115, 110, // 140 422
	85, 108, 110, // 141 425
	108, 85, 107, // 142 428
	139, 108, 107, // 143 431
	139, 107, 114, // 144 434
	107, 85, 84, // 145 437
	105, 107, 111, // 146 440
	113, 120, 114, // 147 443
	116, 118, 115, // 148 446
	117, 74, 73, // 149 449
	140, 141, 120, // 150 452
	73, 136, 142, // 151 455
	119, 142, 118, // 152 458
	142, 119, 73, // 153 461
	71, 73, 119, // 154 464
	71, 119, 140, // 155 467
	120, 71, 140, // 156 470
	69, 71, 120, // 157 473
	82, 143, 88, // 158 476
	100, 99, 121, // 159 479
	94, 98, 102, // 160 482
	120, 141, 123, // 161 485
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_1_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_1_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_1_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_1_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_1_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_1_1__ )
DX3DMODEL_START( model_Trim_Char_x_1_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_1_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_1_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 486 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_1_1__, 670326197 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_1_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_2_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_2_1___initialShadingGroup_0 )
DX3DVERT( 0.275782, 2.96031, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 0.275782, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 0.385939, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 0.385939, 1.49375, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 0.386574, 0.886563, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 0.275782, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( -0.296875, 1.27969, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( -0.324999, 1.54531, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( -0.193126, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( 0.0926737, 0.752789, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 0.0927372, 0.886563, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( -0.289062, 0.489062, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( -0.0246046, 0.469205, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( -0.0246082, 0.454531, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( 0.125587, 0.497735, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( 0.125587, 0.540937, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( 0.275782, 0.540937, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( 0.0880383, 0.540937, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( 0.0880383, 0.497735, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 0.0462015, 0.223825, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( -0.0246066, 0.225006, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( -0.0246082, 0.368125, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( 0.00883867, 0.468678, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 0.0505052, 0.473814, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 0.0504894, 0.454531, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 0.0504894, 0.368125, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 0.0692638, 0.454531, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 0.0791004, 0.497949, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( 0.0880383, 0.476133, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 0.0563393, 0.475939, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 0.0694001, 0.484198, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 0.0692638, 0.476133, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( 0.125587, 0.454531, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 0.0880383, 0.454531, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 0.125587, 0.368125, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 0.275782, 0.368125, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 0.275782, 0.281719, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 0.386789, 0.785384, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 0.381626, 0.540937, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 0.35088, 0.368125, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 0.358029, 0.368162, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 0.350769, 0.343216, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 0.311635, 0.281759, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 0.275772, 0.259117, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 0.0921889, 2.96031, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 0.0921889, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 0.0921889, 1.66562, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( 0.0921889, 1.38906, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 0.0921889, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 0.0921889, 2.91875, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 0.592142, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 0.275782, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 0.385939, 1.77187, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 0.385939, 2.91875, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 0.385939, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( 0.385939, 2.96031, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( -0.278125, 0.242187, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 0.12557, 0.226602, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 0.0921889, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 0.275782, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( -0.312499, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( -0.312499, 2.91875, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 0.385939, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 0.696876, 1.90469, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 0.709375, 1.63125, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 0.704688, 2.91875, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( 0.704688, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 2.67891, 3.08125, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 2.67891, 3.33125, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( 3.23281, 3.33125, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 0.876564, 3.08125, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 0.876564, 3.33125, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 1.47734, 3.33125, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 1.47713, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 1.07451, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 1.47734, 1.26548, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 0.767189, 1.49062, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 0.767189, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 0.876564, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 0.876564, 0.400252, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 0.725, 0.301561, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 0.603125, 0.557812, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 0.876564, 0.737878, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 0.876564, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 1.04844, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 1.04844, 1.725, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 0.767189, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 0.646876, 3.08125, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( 0.646876, 3.33125, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 0.767189, 2.75781, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 0.876564, 2.75781, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 1.47734, 2.75781, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 1.47734, 2.52031, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 1.04844, 2.52031, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 2.67891, 1.49062, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 2.67891, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 3.11094, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 1.79375, 1.25312, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 1.65625, 1.49062, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 1.93027, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 1.79375, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( 1.79375, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( 1.93027, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 2.08594, 1.25312, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 2.08594, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 2.67891, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 2.67891, 0.642331, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 2.40435, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( 3.27969, 0.557812, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( 3.15781, 0.301561, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( 1.79375, 3.33125, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( 1.79375, 3.65156, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( 1.93027, 3.65156, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( 1.47734, 1.57781, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( 1.79688, 1.725, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 1.93027, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 1.79688, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 1.79688, 2.52031, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 2.83125, 1.725, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 2.08125, 1.725, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT( 2.08594, 3.65156, 0 ) DX3DVNORM( 0, 0, -1 )  //120
DX3DVERT( 2.08594, 3.33125, 0 ) DX3DVNORM( 0, 0, -1 )  //121
DX3DVERT( 2.08125, 2.52031, 0 ) DX3DVNORM( 0, 0, -1 )  //122
DX3DVERT( 2.08125, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //123
DX3DVERT( 3.11094, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //124
DX3DVERT( 2.83125, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //125
DX3DVERT( 2.83125, 2.52031, 0 ) DX3DVNORM( 0, 0, -1 )  //126
DX3DVERT( 0.876564, 1.49062, 0 ) DX3DVNORM( 0, 0, -1 )  //127
DX3DVERT( 2.67891, 0.993364, 0 ) DX3DVNORM( 0, 0, -1 )  //128
DX3DVERT( 2.80723, 0.886562, 0 ) DX3DVNORM( 0, 0, -1 )  //129
DX3DVERT( 1.93027, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //130
DX3DVERT( 3.23281, 3.08125, 0 ) DX3DVNORM( 0, 0, -1 )  //131
DX3DVERT( 1.47734, 3.08125, 0 ) DX3DVNORM( 0, 0, -1 )  //132
DX3DVERT( 1.47734, 1.725, 0 ) DX3DVNORM( 0, 0, -1 )  //133
DX3DVERT( 3.11094, 1.49062, 0 ) DX3DVNORM( 0, 0, -1 )  //134
DX3DVERT( 1.47734, 1.49062, 0 ) DX3DVNORM( 0, 0, -1 )  //135
DX3DVERT( 2.22188, 1.49062, 0 ) DX3DVNORM( 0, 0, -1 )  //136
DX3DVERT( 1.93027, 2.96031, 0 ) DX3DVNORM( 0, 0, -1 )  //137
DX3DVERT( 1.79375, 2.96031, 0 ) DX3DVNORM( 0, 0, -1 )  //138
DX3DVERT( 1.79375, 3.08125, 0 ) DX3DVNORM( 0, 0, -1 )  //139
DX3DVERT( 1.79375, 2.75781, 0 ) DX3DVNORM( 0, 0, -1 )  //140
DX3DVERT( 2.67891, 1.725, 0 ) DX3DVNORM( 0, 0, -1 )  //141
DX3DVERT( 2.08594, 3.08125, 0 ) DX3DVNORM( 0, 0, -1 )  //142
DX3DVERT( 2.08594, 2.96031, 0 ) DX3DVNORM( 0, 0, -1 )  //143
DX3DVERT( 2.08594, 2.75781, 0 ) DX3DVNORM( 0, 0, -1 )  //144
DX3DVERT( 2.67891, 2.75781, 0 ) DX3DVNORM( 0, 0, -1 )  //145
DX3DVERT( 2.67891, 2.52031, 0 ) DX3DVNORM( 0, 0, -1 )  //146
DX3DVERT( 3.11094, 2.75781, 0 ) DX3DVNORM( 0, 0, -1 )  //147
DX3DVERT( 2.08594, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //148
DX3DVERT( 1.47734, 2.34958, 0 ) DX3DVNORM( 0, 0, -1 )  //149
DX3DVERT( 1.51318, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //150
DX3DVERT( 1.47734, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //151
DX3DVERT( 1.23333, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //152
DX3DVERT( 1.47734, 1.76308, 0 ) DX3DVNORM( 0, 0, -1 )  //153
DX3DVERT( 1.43906, 1.74844, 0 ) DX3DVNORM( 0, 0, -1 )  //154
DX3DVERT( 1.67188, 1.8375, 0 ) DX3DVNORM( 0, 0, -1 )  //155
DX3DVERT( 1.16875, 2.4, 0 ) DX3DVNORM( 0, 0, -1 )  //156
DX3DVERT( 1.40313, 2.50469, 0 ) DX3DVNORM( 0, 0, -1 )  //157
DX3DVERT( 2.67891, 2.42243, 0 ) DX3DVNORM( 0, 0, -1 )  //158
DX3DVERT( 2.69844, 2.41562, 0 ) DX3DVNORM( 0, 0, -1 )  //159
DX3DVERT( 2.67891, 2.33784, 0 ) DX3DVNORM( 0, 0, -1 )  //160
DX3DVERT( 2.425, 1.74375, 0 ) DX3DVNORM( 0, 0, -1 )  //161
DX3DVERT( 2.19844, 1.85312, 0 ) DX3DVNORM( 0, 0, -1 )  //162
DX3DVERT( 2.38802, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //163
DX3DVERT( 2.65935, 2.26906, 0 ) DX3DVNORM( 0, 0, -1 )  //164
DX3DVERT( 2.45625, 2.5, 0 ) DX3DVNORM( 0, 0, -1 )  //165
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_2_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_2_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 166 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_2_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_2_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_2_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 5, // 1 5
	6, 7, 8, // 2 8
	9, 10, 5, // 3 11
	11, 12, 13, // 4 14
	14, 15, 16, // 5 17
	17, 15, 18, // 6 20
	19, 20, 21, // 7 23
	22, 23, 24, // 8 26
	21, 13, 24, // 9 29
	25, 24, 26, // 10 32
	17, 17, 18, // 11 35
	27, 18, 28, // 12 38
	29, 30, 31, // 13 41
	29, 31, 26, // 14 44
	26, 31, 28, // 15 47
	32, 33, 28, // 16 50
	34, 35, 36, // 17 53
	37, 38, 16, // 18 56
	39, 35, 16, // 19 59
	40, 41, 39, // 20 62
	42, 36, 35, // 21 65
	42, 43, 36, // 22 68
	44, 45, 1, // 23 71
	46, 47, 8, // 24 74
	48, 49, 0, // 25 77
	50, 51, 52, // 26 80
	0, 53, 54, // 27 83
	2, 55, 0, // 28 86
	51, 50, 3, // 29 89
	3, 47, 51, // 30 92
	5, 10, 47, // 31 95
	47, 46, 51, // 32 98
	8, 47, 6, // 33 101
	47, 3, 5, // 34 104
	17, 17, 9, // 35 107
	5, 16, 9, // 36 110
	9, 16, 15, // 37 113
	15, 17, 9, // 38 116
	21, 20, 56, // 39 119
	13, 56, 11, // 40 122
	56, 13, 21, // 41 125
	35, 34, 32, // 42 128
	16, 35, 14, // 43 131
	32, 14, 35, // 44 134
	15, 14, 18, // 45 137
	25, 34, 57, // 46 140
	21, 57, 19, // 47 143
	57, 21, 25, // 48 146
	13, 12, 22, // 49 149
	22, 24, 13, // 50 152
	24, 25, 21, // 51 155
	33, 32, 34, // 52 158
	26, 34, 25, // 53 161
	34, 26, 33, // 54 164
	18, 27, 17, // 55 167
	28, 31, 30, // 56 170
	30, 27, 28, // 57 173
	26, 24, 23, // 58 176
	23, 29, 26, // 59 179
	28, 33, 26, // 60 182
	18, 14, 32, // 61 185
	28, 18, 32, // 62 188
	36, 43, 57, // 63 191
	57, 34, 36, // 64 194
	5, 4, 37, // 65 197
	37, 16, 5, // 66 200
	38, 40, 39, // 67 203
	39, 16, 38, // 68 206
	35, 39, 41, // 69 209
	41, 42, 35, // 70 212
	1, 0, 44, // 71 215
	46, 58, 59, // 72 218
	46, 52, 51, // 73 221
	60, 61, 49, // 74 224
	49, 44, 0, // 75 227
	59, 58, 48, // 76 230
	48, 54, 59, // 77 233
	49, 48, 60, // 78 236
	59, 62, 52, // 79 239
	52, 63, 64, // 80 242
	64, 50, 52, // 81 245
	52, 46, 59, // 82 248
	53, 65, 54, // 83 251
	0, 55, 53, // 84 254
	54, 62, 59, // 85 257
	54, 48, 0, // 86 260
	65, 66, 54, // 87 263
	67, 68, 69, // 88 266
	70, 71, 72, // 89 269
	73, 74, 75, // 90 272
	76, 77, 78, // 91 275
	79, 80, 81, // 92 278
	79, 82, 74, // 93 281
	83, 84, 85, // 94 284
	77, 86, 83, // 95 287
	87, 88, 71, // 96 290
	86, 89, 90, // 97 293
	91, 92, 93, // 98 296
	94, 95, 96, // 99 299
	97, 98, 99, // 100 302
	100, 101, 102, // 101 305
	103, 104, 102, // 102 308
	105, 106, 107, // 103 311
	108, 109, 106, // 104 314
	110, 111, 112, // 105 317
	99, 113, 114, // 106 320
	115, 116, 117, // 107 323
	96, 95, 118, // 108 326
	119, 114, 115, // 109 329
	112, 120, 121, // 110 332
	122, 123, 115, // 111 335
	124, 125, 126, // 112 338
	127, 78, 113, // 113 341
	128, 129, 105, // 114 344
	130, 102, 104, // 115 347
	69, 131, 67, // 116 350
	72, 132, 70, // 117 353
	75, 73, 73, // 118 356
	78, 127, 76, // 119 359
	81, 82, 79, // 120 362
	74, 73, 79, // 121 365
	85, 133, 113, // 122 368
	85, 113, 78, // 123 371
	85, 78, 83, // 124 374
	83, 78, 77, // 125 377
	71, 70, 87, // 126 380
	90, 83, 86, // 127 383
	93, 84, 83, // 128 386
	93, 83, 90, // 129 389
	93, 90, 91, // 130 392
	96, 134, 94, // 131 395
	98, 113, 99, // 132 398
	102, 101, 97, // 133 401
	97, 103, 102, // 134 404
	98, 135, 113, // 135 407
	73, 75, 97, // 136 410
	98, 97, 75, // 137 413
	102, 130, 100, // 138 416
	128, 105, 107, // 139 419
	95, 94, 136, // 140 422
	99, 136, 103, // 141 425
	103, 97, 99, // 142 428
	136, 119, 95, // 143 431
	103, 136, 128, // 144 434
	107, 103, 128, // 145 437
	106, 105, 129, // 146 440
	129, 108, 106, // 147 443
	132, 72, 110, // 148 446
	137, 138, 139, // 149 449
	137, 139, 110, // 150 452
	110, 121, 137, // 151 455
	110, 139, 132, // 152 458
	113, 133, 114, // 153 461
	114, 116, 115, // 154 464
	114, 119, 99, // 155 467
	92, 91, 140, // 156 470
	140, 138, 137, // 157 473
	117, 140, 137, // 158 476
	117, 122, 115, // 159 479
	140, 117, 92, // 160 482
	95, 141, 118, // 161 485
	118, 125, 124, // 162 488
	124, 96, 118, // 163 491
	115, 123, 119, // 164 494
	119, 141, 95, // 165 497
	119, 136, 99, // 166 500
	121, 68, 142, // 167 503
	142, 143, 137, // 168 506
	121, 142, 137, // 169 509
	121, 110, 112, // 170 512
	68, 67, 142, // 171 515
	144, 145, 146, // 172 518
	137, 143, 144, // 173 521
	137, 144, 122, // 174 524
	122, 117, 137, // 175 527
	146, 122, 144, // 176 530
	126, 146, 145, // 177 533
	126, 145, 147, // 178 536
	126, 147, 124, // 179 539
	113, 135, 127, // 180 542
	104, 148, 130, // 181 545
	149, 150, 151, // 182 548
	149, 151, 152, // 183 551
	153, 154, 152, // 184 554
	150, 155, 153, // 185 557
	152, 156, 157, // 186 560
	152, 157, 149, // 187 563
	152, 151, 153, // 188 566
	153, 151, 150, // 189 569
	158, 159, 160, // 190 572
	161, 162, 163, // 191 575
	160, 164, 163, // 192 578
	163, 164, 161, // 193 581
	163, 165, 158, // 194 584
	163, 158, 160, // 195 587
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_2_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_2_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_2_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_2_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_2_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_2_1__ )
DX3DMODEL_START( model_Trim_Char_x_2_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_2_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_2_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 588 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_2_1__, 672411333 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_2_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_1_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_3_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_3_1___initialShadingGroup_0 )
DX3DVERT( 2.94688, 3.09453, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 2.65469, 3.09453, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 2.65469, 3.26875, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 1.42109, 3.52187, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 1.42109, 3.26875, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 1.18125, 3.26875, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( 1.42109, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( 0.814584, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( 0.889064, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( 0.592189, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 0.592189, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 0.814584, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( 0.814584, 0.248105, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( 0.696876, 0.203123, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( 0.579689, 0.449999, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( 1.42109, 0.567118, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( 0.814584, 0.548738, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( 1.18125, 2.15, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( 1.18125, 2.36406, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 1.42109, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 1.18125, 2.92187, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( 1.42109, 2.92187, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( 1.18125, 2.70781, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 2.94688, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 3.24063, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 3.24063, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 1.52344, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 1.42109, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( 1.70399, 0.86375, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 1.73906, 0.820312, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 2.20313, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 2.0276, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( 2.0276, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 2.63412, 0.487177, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 2.07813, 0.784374, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 2.12623, 0.86375, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 3.225, 0.410936, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 3.07969, 0.176562, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 2.0276, 3.52187, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 1.42109, 1.80625, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 2.0276, 1.80625, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 1.42109, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 1.42109, 2.36406, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 2.0276, 2.36406, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 2.63412, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 2.63412, 1.80625, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 2.65469, 1.80625, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( 2.0276, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 2.63412, 3.52187, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 2.0276, 3.26875, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 2.0276, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 2.63412, 2.36406, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 2.94688, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 2.63412, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 2.65469, 2.36406, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( 1.42109, 0.907315, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( 1.42109, 0.86375, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 1.36284, 0.86375, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 1.42109, 2.15, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 1.42109, 2.70781, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( 2.0276, 2.92187, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( 2.0276, 2.15, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 2.0276, 2.70781, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 2.63412, 2.92187, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 2.63412, 3.26875, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 2.94688, 3.52187, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( 1.18125, 3.09453, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 0.889064, 3.09453, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 0.889064, 3.52187, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( 0.889064, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 1.18125, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 1.18125, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 1.18125, 1.80625, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 1.18125, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 0.889064, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 2.65469, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 2.65469, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 2.94688, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 2.63412, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 2.63412, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 1.60156, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 2.28438, 0.990624, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 2.53264, 0.86375, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 2.63412, 0.807636, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 2.65469, 2.15, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 2.65469, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 2.63412, 2.15, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 2.63412, 2.70781, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( 2.65469, 2.92187, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 2.65469, 2.70781, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 0.208073, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 0.417188, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 0.208073, 2.92531, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 0.208073, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 0.417188, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 0.208073, 0.86375, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 0.13125, 0.86375, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 0.13125, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 0.13125, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 0.208073, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 0.417188, 0.86375, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( 0.13125, 2.92531, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( 0.13125, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 0.13125, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 0.208073, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 0.417188, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 0.417188, 2.92531, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 0.417188, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( -0.207811, 2.85625, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( 0.029688, 2.83281, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( -0.0346917, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( -0.160937, 1.52187, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( -0.324548, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( -0.154609, 1.55094, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( -0.276553, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( -0.398437, 1.56406, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 0.814584, 2.27775, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 0.82374, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 0.814584, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 0.814584, 2.02947, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT( 0.642188, 1.98125, 0 ) DX3DVNORM( 0, 0, -1 )  //120
DX3DVERT( 0.589732, 2.23812, 0 ) DX3DVNORM( 0, 0, -1 )  //121
DX3DVERT( 0.432813, 2.82812, 0 ) DX3DVNORM( 0, 0, -1 )  //122
DX3DVERT( 0.646876, 2.89531, 0 ) DX3DVNORM( 0, 0, -1 )  //123
DX3DVERT( 0.865626, 2.04375, 0 ) DX3DVNORM( 0, 0, -1 )  //124
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_3_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_3_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 125 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_3_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_3_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_3_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 5, // 1 5
	6, 7, 8, // 2 8
	9, 10, 11, // 3 11
	12, 13, 14, // 4 14
	15, 12, 16, // 5 17
	17, 18, 19, // 6 20
	20, 21, 22, // 7 23
	23, 24, 25, // 8 26
	26, 6, 27, // 9 29
	28, 29, 15, // 10 32
	30, 31, 32, // 11 35
	33, 34, 35, // 12 38
	36, 37, 33, // 13 41
	3, 38, 4, // 14 44
	39, 40, 41, // 15 47
	19, 42, 43, // 16 50
	44, 45, 46, // 17 53
	40, 45, 47, // 18 56
	38, 48, 49, // 19 59
	50, 43, 51, // 20 62
	52, 53, 54, // 21 65
	55, 56, 57, // 22 68
	58, 19, 50, // 23 71
	59, 21, 60, // 24 74
	61, 50, 53, // 25 77
	62, 60, 63, // 26 80
	2, 64, 48, // 27 83
	2, 65, 0, // 28 86
	48, 65, 2, // 29 89
	5, 66, 67, // 30 92
	5, 68, 3, // 31 95
	67, 68, 5, // 32 98
	8, 69, 70, // 33 101
	7, 11, 8, // 34 104
	71, 27, 6, // 35 107
	6, 8, 71, // 36 110
	70, 71, 8, // 37 113
	11, 7, 9, // 38 116
	14, 16, 12, // 39 119
	57, 56, 15, // 40 122
	15, 16, 57, // 41 125
	72, 39, 73, // 42 128
	19, 58, 17, // 43 131
	72, 69, 74, // 44 134
	74, 17, 72, // 45 137
	73, 70, 69, // 46 140
	39, 41, 73, // 47 143
	69, 72, 73, // 48 146
	18, 17, 74, // 49 149
	67, 66, 20, // 50 152
	21, 59, 22, // 51 155
	20, 22, 67, // 52 158
	18, 42, 19, // 53 161
	74, 67, 22, // 54 164
	22, 18, 74, // 55 167
	75, 76, 77, // 56 170
	78, 79, 75, // 57 173
	78, 75, 23, // 58 176
	23, 25, 78, // 59 179
	77, 23, 75, // 60 182
	28, 56, 55, // 61 185
	32, 31, 80, // 62 188
	27, 80, 26, // 63 191
	80, 27, 32, // 64 194
	26, 80, 28, // 65 197
	55, 26, 28, // 66 200
	15, 56, 28, // 67 203
	81, 82, 35, // 68 206
	79, 78, 81, // 69 209
	32, 79, 30, // 70 212
	81, 30, 79, // 71 215
	35, 30, 81, // 72 218
	82, 83, 33, // 73 221
	33, 35, 82, // 74 224
	33, 83, 36, // 75 227
	38, 49, 4, // 76 230
	40, 47, 41, // 77 233
	43, 50, 19, // 78 236
	84, 53, 52, // 79 239
	77, 76, 85, // 80 242
	46, 85, 44, // 81 245
	85, 46, 77, // 82 248
	84, 86, 53, // 83 251
	52, 77, 46, // 84 254
	52, 46, 84, // 85 257
	45, 44, 47, // 86 260
	48, 64, 49, // 87 263
	51, 53, 50, // 88 266
	87, 63, 88, // 89 269
	53, 51, 54, // 90 272
	89, 0, 52, // 91 275
	54, 89, 52, // 92 278
	88, 1, 0, // 93 281
	88, 89, 87, // 94 284
	0, 89, 88, // 95 287
	50, 61, 58, // 96 290
	60, 62, 59, // 97 293
	53, 86, 61, // 98 296
	63, 87, 62, // 99 299
	90, 91, 92, // 100 302
	93, 94, 95, // 101 305
	96, 97, 93, // 102 308
	98, 96, 95, // 103 311
	99, 95, 100, // 104 314
	101, 102, 90, // 105 317
	97, 103, 104, // 106 320
	103, 101, 92, // 107 323
	93, 104, 105, // 108 326
	104, 92, 106, // 109 329
	91, 106, 92, // 110 332
	94, 100, 95, // 111 335
	93, 95, 96, // 112 338
	95, 99, 98, // 113 341
	100, 107, 99, // 114 344
	90, 92, 101, // 115 347
	104, 93, 97, // 116 350
	92, 104, 103, // 117 353
	105, 94, 93, // 118 356
	106, 105, 104, // 119 359
	108, 109, 110, // 120 362
	111, 112, 113, // 121 365
	114, 110, 113, // 122 368
	110, 114, 108, // 123 371
	112, 115, 114, // 124 374
	114, 113, 112, // 125 377
	116, 117, 118, // 126 380
	119, 118, 117, // 127 383
	119, 120, 121, // 128 386
	121, 122, 123, // 129 389
	117, 124, 119, // 130 392
	121, 118, 119, // 131 395
	116, 118, 121, // 132 398
	121, 123, 116, // 133 401
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_3_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_3_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_3_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_3_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_3_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_3_1__ )
DX3DMODEL_START( model_Trim_Char_x_3_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_3_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_3_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 402 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_3_1__, 674496469 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_3_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_2_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_4_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_4_1___initialShadingGroup_0 )
DX3DVERT( 2.63281, 3.45156, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 3.15781, 3.45156, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 2.63281, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 1.01367, 3.45156, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 1.45781, 3.45156, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 1.01367, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( 1.41094, 1.8375, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( 1.49688, 1.88125, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( 1.45781, 1.75625, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( -0.160937, 1.49063, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( -0.29375, 1.71719, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 0.148718, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( 0.154688, 0.226562, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( 0.154688, 0.809634, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( 0.282814, 0.809634, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( 0.154688, 1.39271, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( 0.282814, 1.39271, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( 1.01367, 0.395313, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( 1.01367, 0.609374, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 1.45781, 0.609374, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 0.456251, 0.809634, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( 0.456251, 0.609374, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( 0.282814, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 0.542556, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 0.282814, 1.75491, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 0.456251, 1.39271, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 0.456251, 1.11562, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 1.01367, 0.906249, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( 1.01367, 1.11562, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 1.45781, 1.11562, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( -0.113813, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 0.282814, 3.68191, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( 0.282814, 3.16028, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 0.282814, 2.08495, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( -0.0156237, 2.85156, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 0.0687511, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 0.264063, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 1.3875, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 1.3875, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 1.1375, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 0.632477, 2.55885, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 0.910326, 2.55885, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 0.857813, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 0.853126, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 0.689064, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 1.01367, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 1.32188, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( 1.01367, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 3.09782, 1.68419, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 2.92656, 1.68424, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 2.92656, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 1.6875, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 2.04531, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 2.04531, 1.90286, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 1.45781, 0.395313, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( 2.04531, 0.609374, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( 1.45781, 0.906249, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 2.04531, 1.11562, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 2.63281, 0.226562, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 2.63281, 0.809634, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( 2.74531, 0.809634, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( 2.44375, 0.609374, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 2.44375, 0.809634, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 2.63281, 1.84755, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 2.63281, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 2.59609, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( 2.44375, 0.906249, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 2.44375, 1.11562, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 2.14298, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( 2.04531, 1.4125, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 2.04531, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 2.33906, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 2.33906, 1.4125, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 2.41719, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 2.33906, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 2.48594, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 2.48594, 1.9029, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 2.33906, 1.68424, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 2.33906, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 2.48594, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 2.48594, 1.68424, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 2.55938, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 2.5577, 1.9283, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 2.55844, 1.90288, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 2.55896, 1.89671, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 2.56842, 1.86612, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 2.55938, 1.86645, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 2.59615, 1.8516, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( 2.63281, 1.39271, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 2.74531, 1.39271, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 2.90855, 1.97575, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 2.92656, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 2.92656, 1.9029, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 2.74531, 1.62344, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 2.72684, 1.84478, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 2.77967, 1.8472, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 2.77969, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 2.63281, 1.68424, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 2.77969, 1.68424, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 2.85313, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 2.85293, 1.86164, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( 2.92656, 1.86645, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( 2.88984, 1.86645, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 2.86363, 1.86668, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 2.889, 1.89916, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 2.88984, 1.83001, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 2.92656, 1.62696, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 1.48125, 3.45156, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( 1.45781, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( 1.45781, 2.08578, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( 1.46875, 2.09062, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( 1.48418, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( 2.04531, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( 2.04531, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( 1.96406, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 2.63281, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 3.15781, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 2.63281, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 2.55781, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 2.55753, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT( 2.41719, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //120
DX3DVERT( 2.25781, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //121
DX3DVERT( 2.14526, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //122
DX3DVERT( 2.45683, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //123
DX3DVERT( 3.02188, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //124
DX3DVERT( 3.02188, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //125
DX3DVERT( 2.6625, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //126
DX3DVERT( 1.45781, 3.16956, 0 ) DX3DVNORM( 0, 0, -1 )  //127
DX3DVERT( 1.45781, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //128
DX3DVERT( 1.42318, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //129
DX3DVERT( 1.01367, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //130
DX3DVERT( 1.45781, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //131
DX3DVERT( 1.01367, 1.4125, 0 ) DX3DVNORM( 0, 0, -1 )  //132
DX3DVERT( 0.154688, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //133
DX3DVERT( 0.282814, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //134
DX3DVERT( 0.728125, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //135
DX3DVERT( -0.257812, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //136
DX3DVERT( -0.257812, 2.45, 0 ) DX3DVNORM( 0, 0, -1 )  //137
DX3DVERT( -0.0156237, 2.45, 0 ) DX3DVNORM( 0, 0, -1 )  //138
DX3DVERT( 1.45781, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //139
DX3DVERT( 1.17085, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //140
DX3DVERT( 1.45781, 2.88567, 0 ) DX3DVNORM( 0, 0, -1 )  //141
DX3DVERT( 1.275, 3.03437, 0 ) DX3DVNORM( 0, 0, -1 )  //142
DX3DVERT( 2.31538, 1.68424, 0 ) DX3DVNORM( 0, 0, -1 )  //143
DX3DVERT( 2.33906, 1.66247, 0 ) DX3DVNORM( 0, 0, -1 )  //144
DX3DVERT( 1.90313, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //145
DX3DVERT( 1.94063, 3.725, 0 ) DX3DVNORM( 0, 0, -1 )  //146
DX3DVERT( 1.5125, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //147
DX3DVERT( 1.5125, 2.45, 0 ) DX3DVNORM( 0, 0, -1 )  //148
DX3DVERT( 1.68438, 2.45, 0 ) DX3DVNORM( 0, 0, -1 )  //149
DX3DVERT( 1.83185, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //150
DX3DVERT( 1.48438, 2.86406, 0 ) DX3DVNORM( 0, 0, -1 )  //151
DX3DVERT( 2.92813, 2.11094, 0 ) DX3DVNORM( 0, 0, -1 )  //152
DX3DVERT( 3.15781, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //153
DX3DVERT( 1.01367, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //154
DX3DVERT( 1.1375, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //155
DX3DVERT( 1.1375, 1.96562, 0 ) DX3DVNORM( 0, 0, -1 )  //156
DX3DVERT( 1.01367, 1.70597, 0 ) DX3DVNORM( 0, 0, -1 )  //157
DX3DVERT( 0.282814, 0.226562, 0 ) DX3DVNORM( 0, 0, -1 )  //158
DX3DVERT( 0.456251, 0.395313, 0 ) DX3DVNORM( 0, 0, -1 )  //159
DX3DVERT( 0.456251, 0.226562, 0 ) DX3DVNORM( 0, 0, -1 )  //160
DX3DVERT( 0.456251, 0.906249, 0 ) DX3DVNORM( 0, 0, -1 )  //161
DX3DVERT( 0.268137, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //162
DX3DVERT( 0.282814, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //163
DX3DVERT( 0.282814, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //164
DX3DVERT( 0.264063, 2.55885, 0 ) DX3DVNORM( 0, 0, -1 )  //165
DX3DVERT( -0.0156237, 2.55885, 0 ) DX3DVNORM( 0, 0, -1 )  //166
DX3DVERT( -0.0984375, 2.78594, 0 ) DX3DVNORM( 0, 0, -1 )  //167
DX3DVERT( -0.304686, 2.97188, 0 ) DX3DVNORM( 0, 0, -1 )  //168
DX3DVERT( 0.865626, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //169
DX3DVERT( 1.01367, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //170
DX3DVERT( 0.865626, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //171
DX3DVERT( 0.740626, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //172
DX3DVERT( 0.564063, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //173
DX3DVERT( 0.4125, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //174
DX3DVERT( 0.282814, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //175
DX3DVERT( 0.282814, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //176
DX3DVERT( 0.323438, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //177
DX3DVERT( 0.892715, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //178
DX3DVERT( 0.583241, 3.14193, 0 ) DX3DVNORM( 0, 0, -1 )  //179
DX3DVERT( 0.540626, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //180
DX3DVERT( 0.478126, 3.45156, 0 ) DX3DVNORM( 0, 0, -1 )  //181
DX3DVERT( 0.303125, 3.725, 0 ) DX3DVNORM( 0, 0, -1 )  //182
DX3DVERT( 0.587501, 3.675, 0 ) DX3DVNORM( 0, 0, -1 )  //183
DX3DVERT( 0.696876, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //184
DX3DVERT( 0.959376, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //185
DX3DVERT( 1.00469, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //186
DX3DVERT( 1.32188, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //187
DX3DVERT( 3.20751, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //188
DX3DVERT( 1.45781, 1.4125, 0 ) DX3DVNORM( 0, 0, -1 )  //189
DX3DVERT( 1.52813, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //190
DX3DVERT( 1.57031, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //191
DX3DVERT( 2.04531, 0.395313, 0 ) DX3DVNORM( 0, 0, -1 )  //192
DX3DVERT( 2.04531, 0.906249, 0 ) DX3DVNORM( 0, 0, -1 )  //193
DX3DVERT( 2.74531, 0.226562, 0 ) DX3DVNORM( 0, 0, -1 )  //194
DX3DVERT( 2.44375, 0.226562, 0 ) DX3DVNORM( 0, 0, -1 )  //195
DX3DVERT( 2.44375, 0.395313, 0 ) DX3DVNORM( 0, 0, -1 )  //196
DX3DVERT( 2.44375, 1.39271, 0 ) DX3DVNORM( 0, 0, -1 )  //197
DX3DVERT( 2.44375, 1.4125, 0 ) DX3DVNORM( 0, 0, -1 )  //198
DX3DVERT( 2.89056, 1.90321, 0 ) DX3DVNORM( 0, 0, -1 )  //199
DX3DVERT( 2.75996, 1.62344, 0 ) DX3DVNORM( 0, 0, -1 )  //200
DX3DVERT( 1.48125, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //201
DX3DVERT( 1.96406, 2.55885, 0 ) DX3DVNORM( 0, 0, -1 )  //202
DX3DVERT( 1.68438, 2.55885, 0 ) DX3DVNORM( 0, 0, -1 )  //203
DX3DVERT( 1.68438, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //204
DX3DVERT( 3.15781, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //205
DX3DVERT( 2.23438, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //206
DX3DVERT( 2.5375, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //207
DX3DVERT( 2.28438, 2.09844, 0 ) DX3DVNORM( 0, 0, -1 )  //208
DX3DVERT( 2.28423, 1.97578, 0 ) DX3DVNORM( 0, 0, -1 )  //209
DX3DVERT( 2.31565, 2.55885, 0 ) DX3DVNORM( 0, 0, -1 )  //210
DX3DVERT( 2.60353, 2.55885, 0 ) DX3DVNORM( 0, 0, -1 )  //211
DX3DVERT( 2.03906, 2.21562, 0 ) DX3DVNORM( 0, 0, -1 )  //212
DX3DVERT( 2.04531, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //213
DX3DVERT( 2.04531, 3.70669, 0 ) DX3DVNORM( 0, 0, -1 )  //214
DX3DVERT( 2.22656, 3.675, 0 ) DX3DVNORM( 0, 0, -1 )  //215
DX3DVERT( 2.09375, 3.45156, 0 ) DX3DVNORM( 0, 0, -1 )  //216
DX3DVERT( 2.10469, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //217
DX3DVERT( 2.04531, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //218
DX3DVERT( 2.63281, 2.62987, 0 ) DX3DVNORM( 0, 0, -1 )  //219
DX3DVERT( 2.38594, 2.71875, 0 ) DX3DVNORM( 0, 0, -1 )  //220
DX3DVERT( 2.56563, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //221
DX3DVERT( 2.63281, 2.92969, 0 ) DX3DVNORM( 0, 0, -1 )  //222
DX3DVERT( 0.865626, 1.88906, 0 ) DX3DVNORM( 0, 0, -1 )  //223
DX3DVERT( 0.456251, 1.4125, 0 ) DX3DVNORM( 0, 0, -1 )  //224
DX3DVERT( 0.545313, 1.63437, 0 ) DX3DVNORM( 0, 0, -1 )  //225
DX3DVERT( 0.529688, 1.81406, 0 ) DX3DVNORM( 0, 0, -1 )  //226
DX3DVERT( 0.264063, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //227
DX3DVERT( 2.28419, 1.92109, 0 ) DX3DVNORM( 0, 0, -1 )  //228
DX3DVERT( 1.96406, 2.42656, 0 ) DX3DVNORM( 0, 0, -1 )  //229
DX3DVERT( 3.22031, 2.06719, 0 ) DX3DVNORM( 0, 0, -1 )  //230
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_4_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_4_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 231 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_4_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_4_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_4_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 5, // 1 5
	6, 7, 8, // 2 8
	9, 10, 11, // 3 11
	12, 13, 14, // 4 14
	13, 15, 16, // 5 17
	17, 18, 19, // 6 20
	14, 20, 21, // 7 23
	22, 23, 24, // 8 26
	16, 25, 26, // 9 29
	27, 28, 29, // 10 32
	30, 31, 32, // 11 35
	11, 33, 22, // 12 38
	34, 35, 36, // 13 41
	37, 38, 39, // 14 44
	40, 41, 42, // 15 47
	3, 5, 43, // 16 50
	41, 40, 44, // 17 53
	45, 46, 47, // 18 56
	48, 49, 50, // 19 59
	51, 52, 53, // 20 62
	54, 19, 55, // 21 65
	56, 29, 57, // 22 68
	58, 59, 60, // 23 71
	61, 62, 59, // 24 74
	63, 64, 65, // 25 77
	59, 66, 67, // 26 80
	52, 68, 53, // 27 83
	69, 70, 71, // 28 86
	72, 71, 73, // 29 89
	74, 75, 76, // 30 92
	77, 78, 79, // 31 95
	80, 79, 81, // 32 98
	82, 83, 76, // 33 101
	79, 76, 83, // 34 104
	84, 85, 86, // 35 107
	87, 65, 81, // 36 110
	59, 88, 89, // 37 113
	90, 91, 92, // 38 116
	93, 89, 88, // 39 119
	94, 95, 96, // 40 122
	97, 64, 96, // 41 125
	98, 96, 99, // 42 128
	95, 100, 99, // 43 131
	92, 101, 102, // 44 134
	103, 104, 102, // 45 137
	103, 102, 105, // 46 140
	105, 102, 101, // 47 143
	48, 106, 49, // 48 146
	4, 107, 108, // 49 149
	109, 110, 111, // 50 152
	112, 113, 114, // 51 155
	115, 116, 117, // 52 158
	118, 119, 75, // 53 161
	0, 2, 120, // 54 164
	121, 122, 123, // 55 167
	124, 125, 126, // 56 170
	127, 128, 129, // 57 173
	130, 131, 132, // 58 176
	15, 133, 134, // 59 179
	135, 130, 132, // 60 182
	136, 137, 138, // 61 185
	139, 140, 109, // 62 188
	141, 142, 129, // 63 191
	78, 77, 143, // 64 194
	77, 144, 143, // 65 197
	145, 127, 146, // 66 200
	147, 148, 149, // 67 203
	150, 151, 141, // 68 206
	91, 90, 152, // 69 209
	1, 153, 2, // 70 212
	4, 108, 5, // 71 215
	154, 155, 156, // 72 218
	6, 156, 140, // 73 221
	140, 139, 6, // 74 224
	156, 6, 157, // 75 227
	156, 157, 154, // 76 230
	11, 22, 24, // 77 233
	24, 9, 11, // 78 236
	14, 158, 12, // 79 239
	16, 14, 13, // 80 242
	19, 54, 17, // 81 245
	21, 18, 159, // 82 248
	159, 160, 158, // 83 251
	21, 159, 158, // 84 254
	158, 14, 21, // 85 257
	18, 17, 159, // 86 260
	26, 28, 161, // 87 263
	161, 20, 14, // 88 266
	26, 161, 14, // 89 269
	14, 16, 26, // 90 272
	28, 27, 161, // 91 275
	29, 56, 27, // 92 278
	32, 162, 30, // 93 281
	30, 162, 35, // 94 284
	163, 164, 36, // 95 287
	36, 165, 166, // 96 290
	36, 166, 34, // 97 293
	36, 35, 163, // 98 296
	35, 34, 30, // 99 299
	167, 168, 30, // 100 302
	30, 34, 167, // 101 305
	39, 155, 154, // 102 308
	39, 169, 170, // 103 311
	39, 170, 37, // 104 314
	23, 22, 33, // 105 317
	154, 171, 169, // 106 320
	42, 169, 172, // 107 323
	42, 172, 173, // 108 326
	173, 40, 42, // 109 329
	169, 42, 170, // 110 332
	169, 39, 154, // 111 335
	174, 175, 176, // 112 338
	174, 172, 23, // 113 341
	33, 174, 23, // 114 344
	173, 172, 174, // 115 347
	176, 173, 174, // 116 350
	177, 32, 31, // 117 353
	43, 178, 179, // 118 356
	180, 177, 181, // 119 359
	180, 181, 3, // 120 362
	43, 180, 3, // 121 365
	179, 180, 43, // 122 368
	31, 182, 183, // 123 371
	31, 183, 181, // 124 374
	181, 177, 31, // 125 377
	184, 179, 178, // 126 380
	44, 164, 163, // 127 383
	185, 186, 47, // 128 386
	44, 185, 41, // 129 389
	185, 44, 184, // 130 392
	163, 184, 44, // 131 395
	186, 45, 47, // 132 398
	186, 185, 184, // 133 401
	184, 178, 186, // 134 404
	46, 187, 47, // 135 407
	92, 91, 188, // 136 410
	50, 188, 48, // 137 413
	188, 50, 101, // 138 416
	101, 92, 188, // 139 419
	189, 131, 190, // 140 422
	139, 111, 7, // 141 425
	191, 8, 7, // 142 428
	191, 7, 51, // 143 431
	53, 191, 51, // 144 434
	7, 6, 139, // 145 437
	191, 70, 69, // 146 440
	189, 191, 69, // 147 443
	190, 8, 191, // 148 446
	191, 189, 190, // 149 449
	55, 192, 54, // 150 452
	57, 193, 56, // 151 455
	60, 194, 58, // 152 458
	192, 55, 61, // 153 461
	58, 195, 196, // 154 464
	58, 196, 61, // 155 467
	61, 59, 58, // 156 470
	61, 196, 192, // 157 473
	65, 87, 63, // 158 476
	193, 57, 67, // 159 479
	59, 62, 66, // 160 482
	67, 197, 88, // 161 485
	67, 88, 59, // 162 488
	67, 66, 193, // 163 491
	71, 72, 69, // 164 494
	80, 97, 88, // 165 497
	88, 197, 198, // 166 500
	73, 198, 72, // 167 503
	198, 73, 88, // 168 506
	73, 144, 77, // 169 509
	73, 77, 80, // 170 512
	88, 73, 80, // 171 515
	79, 78, 74, // 172 518
	76, 79, 74, // 173 521
	79, 80, 77, // 174 524
	65, 64, 97, // 175 527
	81, 65, 80, // 176 530
	97, 80, 65, // 177 533
	76, 75, 119, // 178 536
	76, 119, 82, // 179 539
	83, 84, 79, // 180 542
	86, 81, 79, // 181 545
	79, 84, 86, // 182 548
	81, 86, 85, // 183 551
	85, 87, 81, // 184 554
	89, 60, 59, // 185 557
	92, 199, 90, // 186 560
	98, 49, 106, // 187 563
	98, 200, 93, // 188 566
	97, 98, 93, // 189 569
	88, 97, 93, // 190 572
	106, 200, 98, // 191 575
	64, 63, 94, // 192 578
	96, 64, 94, // 193 581
	96, 98, 97, // 194 584
	105, 50, 49, // 195 587
	99, 105, 98, // 196 590
	49, 98, 105, // 197 593
	99, 96, 95, // 198 596
	104, 199, 92, // 199 599
	92, 102, 104, // 200 602
	105, 99, 100, // 201 605
	100, 103, 105, // 202 608
	101, 50, 105, // 203 611
	107, 201, 108, // 204 614
	111, 139, 109, // 205 617
	114, 202, 203, // 206 620
	114, 204, 112, // 207 623
	203, 204, 114, // 208 626
	116, 205, 117, // 209 629
	206, 207, 208, // 210 632
	115, 117, 118, // 211 635
	74, 209, 208, // 212 638
	74, 208, 118, // 213 641
	75, 74, 118, // 214 644
	118, 208, 207, // 215 647
	118, 207, 115, // 216 650
	210, 211, 207, // 217 653
	208, 68, 52, // 218 656
	206, 212, 213, // 219 659
	206, 208, 212, // 220 662
	207, 206, 210, // 221 665
	214, 215, 216, // 222 668
	120, 123, 122, // 223 671
	120, 217, 216, // 224 674
	120, 216, 0, // 225 677
	122, 217, 120, // 226 680
	216, 217, 218, // 227 683
	216, 145, 214, // 228 686
	219, 211, 220, // 229 689
	113, 112, 121, // 230 692
	221, 220, 121, // 231 695
	121, 123, 221, // 232 698
	121, 220, 113, // 233 701
	211, 210, 220, // 234 704
	221, 222, 219, // 235 707
	219, 220, 221, // 236 710
	126, 219, 222, // 237 713
	126, 222, 124, // 238 716
	131, 189, 132, // 239 719
	134, 16, 15, // 240 722
	223, 157, 135, // 241 725
	224, 25, 16, // 242 728
	224, 225, 135, // 243 731
	135, 132, 224, // 244 734
	134, 225, 224, // 245 737
	16, 134, 224, // 246 740
	223, 171, 154, // 247 743
	135, 225, 226, // 248 746
	226, 223, 135, // 249 749
	154, 157, 223, // 250 752
	138, 166, 165, // 251 755
	227, 176, 175, // 252 758
	227, 175, 136, // 253 761
	138, 227, 136, // 254 764
	165, 227, 138, // 255 767
	129, 128, 141, // 256 770
	228, 209, 74, // 257 773
	228, 74, 78, // 258 776
	143, 228, 78, // 259 779
	150, 128, 127, // 260 782
	145, 216, 218, // 261 785
	145, 146, 214, // 262 788
	127, 145, 150, // 263 791
	52, 51, 212, // 264 794
	149, 203, 202, // 265 797
	229, 212, 147, // 266 800
	149, 229, 147, // 267 803
	202, 229, 149, // 268 806
	212, 229, 213, // 269 809
	212, 208, 52, // 270 812
	141, 128, 150, // 271 815
	152, 230, 188, // 272 818
	188, 91, 152, // 273 821
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_4_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_4_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_4_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_4_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_4_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_4_1__ )
DX3DMODEL_START( model_Trim_Char_x_4_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_4_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_4_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 822 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_4_1__, 676581605 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_4_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_3_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_5_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_5_1___initialShadingGroup_0 )
DX3DVERT( 1.6513, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 1.62969, 1.06094, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 1.84375, 1.10469, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 1.72656, 0.317186, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 1.87496, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 1.94531, 0.356249, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( 2.63724, 1.17503, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( 2.72016, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( 2.63724, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( 2.42813, 1.13906, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 2.62813, 1.20156, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 2.50018, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( 2.63724, 0.649078, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( 2.7875, 0.695313, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( 2.58438, 0.632811, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( 3.0875, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( 2.79531, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( 2.79531, 3.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( 1.41094, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 1.41094, 3.38281, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 1.43047, 3.38281, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( 1.41094, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( 1.41094, 1.62875, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 1.43047, 1.62875, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 1.41094, 2.33531, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 1.43047, 2.33531, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 1.43047, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 2.93893, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( 2.89793, 0.922184, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 2.90938, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 1.7, 1.62875, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 1.7, 1.47812, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( 2.07235, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 2.03438, 1.09219, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 2.24219, 1.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 2.29688, 0.265625, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 2.28906, 0.476563, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 2.37813, 0.510937, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 3.16536, 0.922199, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 3.12094, 0.568916, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 3.08978, 0.568905, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 2.93893, 0.568905, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 2.83936, 0.569054, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 2.93893, 0.392263, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 2.72501, 0.488701, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 2.7881, 0.504179, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 2.78809, 0.392263, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( 2.63724, 0.239683, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 2.63724, 0.392263, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 2.83124, 0.234737, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 2.78809, 0.234665, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 3.08994, 0.450712, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 3.06714, 0.392267, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 2.93909, 0.255213, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 1.8834, 3.38281, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( 1.8834, 3.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( 1.7, 3.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 1.7, 2.16562, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 1.7, 2.37969, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 1.8834, 2.33531, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( 1.7, 2.87187, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( 1.8834, 2.87187, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 1.7, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 2.63724, 2.16562, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 2.79531, 2.37969, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 3.0875, 2.33531, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( 1.8834, 2.16562, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 2.63724, 2.33531, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 2.24219, 3.38281, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( 2.63724, 3.38281, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 2.63724, 3.14375, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 1.8834, 2.37969, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 2.63724, 2.37969, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 1.8834, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 1.8834, 1.47812, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 2.63724, 1.47812, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 2.63724, 1.94687, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 3.24063, 1.94687, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 2.63724, 1.7125, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 1.8834, 1.94687, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 1.8834, 1.7125, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 1.8834, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 2.63724, 2.87187, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 3.0875, 3.38281, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 1.43047, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 2.63724, 1.24844, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 3.18125, 1.47812, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 2.29483, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( 2.16406, 0.449999, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 2.63724, 0.491873, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 1.7, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 1.7, 1.94687, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 1.7, 1.7125, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 3.0875, 2.16562, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 2.01563, 3.74844, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 2.31563, 3.72187, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 1.93438, 3.38281, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 2.63724, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 2.79531, 2.87187, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 2.79531, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 3.24063, 1.7125, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( 1.43047, 1.09967, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( 1.54688, 1.07344, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 1.51539, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 0.827084, 3.51513, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 1.19688, 3.59688, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 1.23594, 3.35156, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 1.17656, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( 0.928125, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( 0.928125, 1.20156, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( 0.373177, 1.80312, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( 0.373177, 1.57187, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( 0.0843763, 1.57187, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( -0.164062, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( 0.0843763, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 0.0843763, 0.604687, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 0.389064, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 0.389064, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 0.626563, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 0.373177, 0.382813, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT( 0.389064, 0.604687, 0 ) DX3DVNORM( 0, 0, -1 )  //120
DX3DVERT( 0.626563, 0.604687, 0 ) DX3DVNORM( 0, 0, -1 )  //121
DX3DVERT( 1.28104, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //122
DX3DVERT( 1.43047, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //123
DX3DVERT( 1.43047, 0.569452, 0 ) DX3DVNORM( 0, 0, -1 )  //124
DX3DVERT( 0.0531258, 3.13281, 0 ) DX3DVNORM( 0, 0, -1 )  //125
DX3DVERT( 0.0843369, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //126
DX3DVERT( -0.171067, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //127
DX3DVERT( 0.0459439, 1.80375, 0 ) DX3DVNORM( 0, 0, -1 )  //128
DX3DVERT( -0.346513, 1.80375, 0 ) DX3DVNORM( 0, 0, -1 )  //129
DX3DVERT( 0.20626, 2.33531, 0 ) DX3DVNORM( 0, 0, -1 )  //130
DX3DVERT( -0.332811, 2.35625, 0 ) DX3DVNORM( 0, 0, -1 )  //131
DX3DVERT( -0.332811, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //132
DX3DVERT( -0.0359365, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //133
DX3DVERT( 1.32377, 1.80375, 0 ) DX3DVNORM( 0, 0, -1 )  //134
DX3DVERT( 0.980601, 1.80375, 0 ) DX3DVNORM( 0, 0, -1 )  //135
DX3DVERT( 0.827084, 1.96321, 0 ) DX3DVNORM( 0, 0, -1 )  //136
DX3DVERT( 0.827084, 2.31473, 0 ) DX3DVNORM( 0, 0, -1 )  //137
DX3DVERT( 0.631251, 2.2125, 0 ) DX3DVNORM( 0, 0, -1 )  //138
DX3DVERT( 0.827084, 3.25838, 0 ) DX3DVNORM( 0, 0, -1 )  //139
DX3DVERT( 0.634376, 3.22969, 0 ) DX3DVNORM( 0, 0, -1 )  //140
DX3DVERT( 0.827084, 2.74175, 0 ) DX3DVNORM( 0, 0, -1 )  //141
DX3DVERT( 0.827084, 2.35625, 0 ) DX3DVNORM( 0, 0, -1 )  //142
DX3DVERT( 0.795314, 2.35625, 0 ) DX3DVNORM( 0, 0, -1 )  //143
DX3DVERT( 1.03594, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //144
DX3DVERT( 1.32969, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //145
DX3DVERT( 1.32969, 2.35625, 0 ) DX3DVNORM( 0, 0, -1 )  //146
DX3DVERT( 1.16136, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //147
DX3DVERT( 0.911773, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //148
DX3DVERT( 0.951563, 3.21406, 0 ) DX3DVNORM( 0, 0, -1 )  //149
DX3DVERT( 1.325, 1.12344, 0 ) DX3DVNORM( 0, 0, -1 )  //150
DX3DVERT( 0.373177, 3.45256, 0 ) DX3DVNORM( 0, 0, -1 )  //151
DX3DVERT( 0.373177, 3.2027, 0 ) DX3DVNORM( 0, 0, -1 )  //152
DX3DVERT( -0.2, 3.17969, 0 ) DX3DVNORM( 0, 0, -1 )  //153
DX3DVERT( 0.827084, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //154
DX3DVERT( 0.827084, 1.20156, 0 ) DX3DVNORM( 0, 0, -1 )  //155
DX3DVERT( 0.928125, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //156
DX3DVERT( 0.928125, 1.57187, 0 ) DX3DVNORM( 0, 0, -1 )  //157
DX3DVERT( 1.17656, 1.62656, 0 ) DX3DVNORM( 0, 0, -1 )  //158
DX3DVERT( 0.827084, 1.57187, 0 ) DX3DVNORM( 0, 0, -1 )  //159
DX3DVERT( 0.827084, 1.80312, 0 ) DX3DVNORM( 0, 0, -1 )  //160
DX3DVERT( 0.0843763, 1.20156, 0 ) DX3DVNORM( 0, 0, -1 )  //161
DX3DVERT( 0.0843763, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //162
DX3DVERT( -0.164062, 1.60781, 0 ) DX3DVNORM( 0, 0, -1 )  //163
DX3DVERT( -0.270312, 1.525, 0 ) DX3DVNORM( 0, 0, -1 )  //164
DX3DVERT( -0.379687, 1.77969, 0 ) DX3DVNORM( 0, 0, -1 )  //165
DX3DVERT( 0.373177, 1.20156, 0 ) DX3DVNORM( 0, 0, -1 )  //166
DX3DVERT( 0.373177, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //167
DX3DVERT( 0.373177, 0.604687, 0 ) DX3DVNORM( 0, 0, -1 )  //168
DX3DVERT( 0.1125, 0.382813, 0 ) DX3DVNORM( 0, 0, -1 )  //169
DX3DVERT( 0.1125, 0.215624, 0 ) DX3DVNORM( 0, 0, -1 )  //170
DX3DVERT( -0.164062, 0.215624, 0 ) DX3DVNORM( 0, 0, -1 )  //171
DX3DVERT( 0.389064, 1.57187, 0 ) DX3DVNORM( 0, 0, -1 )  //172
DX3DVERT( 0.631251, 1.80312, 0 ) DX3DVNORM( 0, 0, -1 )  //173
DX3DVERT( 0.626563, 1.57187, 0 ) DX3DVNORM( 0, 0, -1 )  //174
DX3DVERT( 0.389064, 1.20156, 0 ) DX3DVNORM( 0, 0, -1 )  //175
DX3DVERT( 0.626563, 1.20156, 0 ) DX3DVNORM( 0, 0, -1 )  //176
DX3DVERT( 0.626563, 0.922186, 0 ) DX3DVNORM( 0, 0, -1 )  //177
DX3DVERT( 0.381251, 1.80312, 0 ) DX3DVNORM( 0, 0, -1 )  //178
DX3DVERT( 0.827084, 0.604687, 0 ) DX3DVNORM( 0, 0, -1 )  //179
DX3DVERT( 0.827084, 0.382813, 0 ) DX3DVNORM( 0, 0, -1 )  //180
DX3DVERT( 0.928125, 0.604687, 0 ) DX3DVNORM( 0, 0, -1 )  //181
DX3DVERT( 1.17656, 0.278124, 0 ) DX3DVNORM( 0, 0, -1 )  //182
DX3DVERT( 1.17656, 0.215624, 0 ) DX3DVNORM( 0, 0, -1 )  //183
DX3DVERT( 0.907813, 0.215624, 0 ) DX3DVNORM( 0, 0, -1 )  //184
DX3DVERT( 1.32969, 0.218748, 0 ) DX3DVNORM( 0, 0, -1 )  //185
DX3DVERT( 1.17656, 0.518749, 0 ) DX3DVNORM( 0, 0, -1 )  //186
DX3DVERT( 0.907813, 0.382813, 0 ) DX3DVNORM( 0, 0, -1 )  //187
DX3DVERT( -0.179687, 3.06562, 0 ) DX3DVNORM( 0, 0, -1 )  //188
DX3DVERT( 0.373177, 2.33531, 0 ) DX3DVNORM( 0, 0, -1 )  //189
DX3DVERT( 0.373177, 2.19623, 0 ) DX3DVNORM( 0, 0, -1 )  //190
DX3DVERT( 0.221875, 2.35625, 0 ) DX3DVNORM( 0, 0, -1 )  //191
DX3DVERT( 0.221875, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //192
DX3DVERT( 0.373177, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //193
DX3DVERT( 1.34531, 1.82969, 0 ) DX3DVNORM( 0, 0, -1 )  //194
DX3DVERT( 0.381251, 2.20781, 0 ) DX3DVNORM( 0, 0, -1 )  //195
DX3DVERT( 0.811119, 2.33531, 0 ) DX3DVNORM( 0, 0, -1 )  //196
DX3DVERT( 0.634376, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //197
DX3DVERT( 0.378126, 3.04187, 0 ) DX3DVNORM( 0, 0, -1 )  //198
DX3DVERT( 0.378126, 3.20312, 0 ) DX3DVNORM( 0, 0, -1 )  //199
DX3DVERT( 0.378126, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //200
DX3DVERT( 0.782814, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //201
DX3DVERT( 0.634376, 2.60625, 0 ) DX3DVNORM( 0, 0, -1 )  //202
DX3DVERT( 1.18906, 3.16406, 0 ) DX3DVNORM( 0, 0, -1 )  //203
DX3DVERT( -0.218749, 3.425, 0 ) DX3DVNORM( 0, 0, -1 )  //204
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_5_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_5_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 205 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_5_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_5_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_5_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 0, 4, // 1 5
	2, 4, 0, // 2 8
	4, 5, 3, // 3 11
	6, 7, 8, // 4 14
	9, 10, 6, // 5 17
	11, 8, 12, // 6 20
	7, 13, 12, // 7 23
	6, 8, 11, // 8 26
	6, 11, 9, // 9 29
	12, 14, 11, // 10 32
	12, 8, 7, // 11 35
	15, 16, 17, // 12 38
	18, 19, 20, // 13 41
	21, 22, 23, // 14 44
	22, 24, 25, // 15 47
	24, 18, 26, // 16 50
	27, 28, 29, // 17 53
	23, 30, 31, // 18 56
	32, 33, 34, // 19 59
	35, 36, 37, // 20 62
	38, 39, 40, // 21 65
	28, 27, 41, // 22 68
	42, 41, 43, // 23 71
	44, 45, 46, // 24 74
	47, 48, 46, // 25 77
	49, 50, 46, // 26 80
	39, 51, 40, // 27 83
	52, 43, 41, // 28 86
	52, 53, 43, // 29 89
	54, 55, 56, // 30 92
	57, 58, 59, // 31 95
	60, 61, 62, // 32 98
	63, 64, 65, // 33 101
	66, 59, 67, // 34 104
	68, 69, 70, // 35 107
	59, 71, 72, // 36 110
	64, 63, 67, // 37 113
	73, 74, 75, // 38 116
	76, 77, 78, // 39 119
	79, 76, 80, // 40 122
	81, 61, 82, // 41 125
	17, 70, 69, // 42 128
	17, 83, 15, // 43 131
	69, 83, 17, // 44 134
	20, 26, 18, // 45 137
	23, 84, 21, // 46 140
	25, 23, 22, // 47 143
	26, 25, 24, // 48 146
	29, 85, 75, // 49 149
	29, 86, 38, // 50 152
	29, 38, 27, // 51 155
	75, 86, 29, // 52 158
	31, 74, 73, // 53 161
	31, 84, 23, // 54 164
	73, 84, 31, // 55 167
	34, 87, 32, // 56 170
	88, 32, 87, // 57 173
	48, 47, 35, // 58 176
	37, 89, 35, // 59 179
	35, 89, 48, // 60 182
	87, 37, 36, // 61 185
	36, 88, 87, // 62 188
	41, 27, 38, // 63 191
	40, 41, 38, // 64 194
	41, 42, 28, // 65 197
	43, 46, 45, // 66 200
	43, 45, 42, // 67 203
	46, 48, 89, // 68 206
	46, 89, 44, // 69 209
	46, 50, 47, // 70 212
	46, 43, 53, // 71 215
	46, 53, 49, // 72 218
	41, 40, 51, // 73 221
	41, 51, 52, // 74 224
	56, 90, 26, // 75 227
	56, 20, 54, // 76 230
	26, 20, 56, // 77 233
	91, 79, 92, // 78 236
	59, 66, 57, // 79 239
	91, 23, 25, // 80 242
	25, 57, 91, // 81 245
	92, 30, 23, // 82 248
	79, 80, 92, // 83 251
	23, 91, 92, // 84 254
	58, 57, 25, // 85 257
	26, 90, 60, // 86 260
	61, 81, 62, // 87 263
	60, 62, 26, // 88 266
	58, 71, 59, // 89 269
	25, 26, 62, // 90 272
	62, 58, 25, // 91 275
	65, 93, 63, // 92 278
	67, 63, 66, // 93 281
	94, 95, 68, // 94 284
	55, 54, 96, // 95 287
	55, 96, 68, // 96 290
	68, 70, 55, // 97 293
	68, 96, 94, // 98 296
	72, 67, 59, // 99 299
	97, 82, 98, // 100 302
	67, 72, 64, // 101 305
	99, 15, 65, // 102 308
	65, 64, 99, // 103 311
	98, 16, 15, // 104 314
	98, 99, 97, // 105 317
	15, 99, 98, // 106 320
	75, 85, 73, // 107 323
	77, 100, 78, // 108 326
	76, 78, 80, // 109 329
	82, 97, 81, // 110 332
	101, 102, 103, // 111 335
	104, 105, 106, // 112 338
	107, 108, 109, // 113 341
	110, 111, 112, // 114 344
	113, 114, 115, // 115 347
	116, 117, 118, // 116 350
	119, 120, 121, // 117 353
	122, 123, 124, // 118 356
	125, 126, 127, // 119 359
	128, 129, 130, // 120 362
	131, 132, 133, // 121 365
	134, 135, 136, // 122 368
	137, 136, 138, // 123 371
	104, 139, 140, // 124 374
	141, 142, 143, // 125 377
	144, 145, 146, // 126 380
	103, 124, 123, // 127 383
	147, 148, 149, // 128 386
	122, 150, 101, // 129 389
	151, 152, 153, // 130 392
	103, 123, 101, // 131 395
	106, 139, 104, // 132 398
	135, 135, 134, // 133 401
	154, 155, 109, // 134 404
	107, 156, 108, // 135 407
	109, 157, 158, // 136 410
	109, 158, 107, // 137 413
	109, 108, 154, // 138 416
	157, 159, 160, // 139 419
	158, 157, 135, // 140 422
	134, 158, 135, // 141 425
	160, 135, 157, // 142 428
	161, 162, 113, // 143 431
	129, 128, 128, // 144 434
	112, 163, 128, // 145 437
	112, 128, 110, // 146 440
	163, 164, 165, // 147 443
	163, 165, 129, // 148 446
	128, 163, 129, // 149 449
	161, 166, 162, // 150 452
	162, 114, 113, // 151 455
	163, 112, 161, // 152 458
	113, 163, 161, // 153 461
	166, 167, 162, // 154 464
	168, 119, 169, // 155 467
	169, 170, 171, // 156 470
	115, 169, 171, // 157 473
	171, 113, 115, // 158 476
	169, 115, 168, // 159 479
	172, 173, 174, // 160 482
	175, 172, 174, // 161 485
	176, 155, 118, // 162 488
	117, 175, 176, // 163 491
	118, 177, 116, // 164 494
	176, 118, 117, // 165 497
	155, 154, 118, // 166 500
	167, 166, 175, // 167 503
	175, 117, 167, // 168 506
	174, 176, 175, // 169 509
	173, 160, 159, // 170 512
	111, 110, 178, // 171 515
	178, 178, 173, // 172 518
	173, 172, 178, // 173 521
	178, 172, 111, // 174 524
	173, 172, 173, // 175 527
	159, 174, 173, // 176 530
	120, 116, 177, // 177 533
	119, 168, 120, // 178 536
	121, 179, 180, // 179 539
	180, 119, 121, // 180 542
	177, 121, 120, // 181 545
	181, 156, 107, // 182 548
	182, 183, 184, // 183 551
	185, 182, 186, // 184 554
	124, 185, 186, // 185 557
	124, 186, 122, // 186 560
	187, 186, 182, // 187 563
	184, 187, 182, // 188 566
	187, 180, 179, // 189 569
	186, 187, 181, // 190 572
	107, 186, 181, // 191 575
	179, 181, 187, // 192 578
	127, 188, 125, // 193 581
	130, 189, 190, // 194 584
	190, 128, 130, // 195 587
	189, 130, 191, // 196 590
	133, 127, 126, // 197 593
	133, 192, 191, // 198 596
	191, 131, 133, // 199 599
	126, 192, 133, // 200 602
	191, 192, 193, // 201 605
	193, 189, 191, // 202 608
	137, 194, 134, // 203 611
	134, 136, 137, // 204 614
	173, 178, 195, // 205 617
	138, 143, 196, // 206 620
	138, 196, 137, // 207 623
	195, 190, 189, // 208 626
	195, 189, 138, // 209 629
	195, 138, 173, // 210 632
	197, 198, 199, // 211 635
	199, 152, 151, // 212 638
	140, 199, 151, // 213 641
	140, 151, 104, // 214 644
	199, 140, 197, // 215 647
	189, 193, 200, // 216 650
	143, 138, 189, // 217 653
	143, 201, 141, // 218 656
	143, 202, 201, // 219 659
	200, 198, 197, // 220 662
	202, 143, 189, // 221 665
	200, 202, 189, // 222 668
	197, 202, 200, // 223 671
	141, 148, 147, // 224 674
	142, 141, 144, // 225 677
	146, 142, 144, // 226 680
	147, 144, 141, // 227 683
	149, 203, 147, // 228 686
	101, 123, 122, // 229 689
	153, 204, 151, // 230 692
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_5_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_5_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_5_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_5_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_5_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_5_1__ )
DX3DMODEL_START( model_Trim_Char_x_5_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_5_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_5_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 693 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_5_1__, 678666741 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_5_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_4_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_6_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_6_1___initialShadingGroup_0 )
DX3DVERT( 2.90432, 2.28005, 0 ) DX3DVNORM( 0, 0, 1 )  //0
DX3DVERT( 2.94584, 2.32516, 0 ) DX3DVNORM( 0, 0, 1 )  //1
DX3DVERT( 2.90443, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //2
DX3DVERT( 0.230198, 1.49112, 0 ) DX3DVNORM( 0, 0, 1 )  //3
DX3DVERT( 0.242533, 1.63094, 0 ) DX3DVNORM( 0, 0, 1 )  //4
DX3DVERT( 0.230209, 1.63094, 0 ) DX3DVNORM( 0, 0, 1 )  //5
DX3DVERT( 1.34447, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //6
DX3DVERT( 1.41875, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //7
DX3DVERT( 1.34447, 2.41211, 0 ) DX3DVNORM( 0, 0, 1 )  //8
DX3DVERT( -0.0357455, 3.01969, 0 ) DX3DVNORM( 0, 0, 1 )  //9
DX3DVERT( -0.0364499, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //10
DX3DVERT( 0.230209, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //11
DX3DVERT( -0.0359365, 3.15156, 0 ) DX3DVNORM( 0, 0, 1 )  //12
DX3DVERT( 0.230209, 3.01969, 0 ) DX3DVNORM( 0, 0, 1 )  //13
DX3DVERT( 0.260962, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //14
DX3DVERT( 0.260938, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //15
DX3DVERT( 0.230209, 3.15156, 0 ) DX3DVNORM( 0, 0, 1 )  //16
DX3DVERT( 0.82448, 3.01969, 0 ) DX3DVNORM( 0, 0, 1 )  //17
DX3DVERT( 1.23906, 3.15156, 0 ) DX3DVNORM( 0, 0, 1 )  //18
DX3DVERT( 1.12161, 3.01969, 0 ) DX3DVNORM( 0, 0, 1 )  //19
DX3DVERT( 1.41875, 3.01969, 0 ) DX3DVNORM( 0, 0, 1 )  //20
DX3DVERT( 0.82448, 2.6725, 0 ) DX3DVNORM( 0, 0, 1 )  //21
DX3DVERT( 0.82448, 2.49052, 0 ) DX3DVNORM( 0, 0, 1 )  //22
DX3DVERT( 1.025, 2.50781, 0 ) DX3DVNORM( 0, 0, 1 )  //23
DX3DVERT( 1.025, 2.71094, 0 ) DX3DVNORM( 0, 0, 1 )  //24
DX3DVERT( 1.12161, 2.6725, 0 ) DX3DVNORM( 0, 0, 1 )  //25
DX3DVERT( 1.31719, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //26
DX3DVERT( 1.12161, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //27
DX3DVERT( 1.27018, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //28
DX3DVERT( 1.27018, 2.41211, 0 ) DX3DVNORM( 0, 0, 1 )  //29
DX3DVERT( 1.12161, 2.49891, 0 ) DX3DVNORM( 0, 0, 1 )  //30
DX3DVERT( 1.27018, 2.49891, 0 ) DX3DVNORM( 0, 0, 1 )  //31
DX3DVERT( 1.31719, 2.53125, 0 ) DX3DVNORM( 0, 0, 1 )  //32
DX3DVERT( 1.41875, 2.54003, 0 ) DX3DVNORM( 0, 0, 1 )  //33
DX3DVERT( 1.41875, 2.6725, 0 ) DX3DVNORM( 0, 0, 1 )  //34
DX3DVERT( 1.30732, 2.41211, 0 ) DX3DVNORM( 0, 0, 1 )  //35
DX3DVERT( 1.32809, 2.45551, 0 ) DX3DVNORM( 0, 0, 1 )  //36
DX3DVERT( 1.30732, 2.45551, 0 ) DX3DVNORM( 0, 0, 1 )  //37
DX3DVERT( 1.27018, 2.45551, 0 ) DX3DVNORM( 0, 0, 1 )  //38
DX3DVERT( 1.31671, 2.49891, 0 ) DX3DVNORM( 0, 0, 1 )  //39
DX3DVERT( 1.30732, 2.49891, 0 ) DX3DVNORM( 0, 0, 1 )  //40
DX3DVERT( 1.41875, 2.41639, 0 ) DX3DVNORM( 0, 0, 1 )  //41
DX3DVERT( 1.34448, 2.43759, 0 ) DX3DVNORM( 0, 0, 1 )  //42
DX3DVERT( -0.364062, 0.496874, 0 ) DX3DVNORM( 0, 0, 1 )  //43
DX3DVERT( -0.137499, 0.254686, 0 ) DX3DVNORM( 0, 0, 1 )  //44
DX3DVERT( 0.133773, 0.936569, 0 ) DX3DVNORM( 0, 0, 1 )  //45
DX3DVERT( -0.0620025, 1.63093, 0 ) DX3DVNORM( 0, 0, 1 )  //46
DX3DVERT( -0.187026, 0.936565, 0 ) DX3DVNORM( 0, 0, 1 )  //47
DX3DVERT( 1.12161, 2.25222, 0 ) DX3DVNORM( 0, 0, 1 )  //48
DX3DVERT( 1.05043, 2.32501, 0 ) DX3DVNORM( 0, 0, 1 )  //49
DX3DVERT( 3.1, 3.01969, 0 ) DX3DVNORM( 0, 0, 1 )  //50
DX3DVERT( 2.60729, 3.01969, 0 ) DX3DVNORM( 0, 0, 1 )  //51
DX3DVERT( 2.77656, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //52
DX3DVERT( 1.41875, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //53
DX3DVERT( 2.01302, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //54
DX3DVERT( 1.53906, 3.31562, 0 ) DX3DVNORM( 0, 0, 1 )  //55
DX3DVERT( 2.01302, 3.31562, 0 ) DX3DVNORM( 0, 0, 1 )  //56
DX3DVERT( 1.53906, 3.53437, 0 ) DX3DVNORM( 0, 0, 1 )  //57
DX3DVERT( 2.01302, 3.01969, 0 ) DX3DVNORM( 0, 0, 1 )  //58
DX3DVERT( 2.60729, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //59
DX3DVERT( 2.01302, 3.15156, 0 ) DX3DVNORM( 0, 0, 1 )  //60
DX3DVERT( 2.60729, 3.15156, 0 ) DX3DVNORM( 0, 0, 1 )  //61
DX3DVERT( 1.93846, 2.20731, 0 ) DX3DVNORM( 0, 0, 1 )  //62
DX3DVERT( 2.01302, 2.20742, 0 ) DX3DVNORM( 0, 0, 1 )  //63
DX3DVERT( 2.01302, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //64
DX3DVERT( 2.60733, 2.22514, 0 ) DX3DVNORM( 0, 0, 1 )  //65
DX3DVERT( 2.60729, 2.32531, 0 ) DX3DVNORM( 0, 0, 1 )  //66
DX3DVERT( 0.82448, 2.69404, 0 ) DX3DVNORM( 0, 0, 1 )  //67
DX3DVERT( 0.339063, 2.65312, 0 ) DX3DVNORM( 0, 0, 1 )  //68
DX3DVERT( 1.92168, 2.4078, 0 ) DX3DVNORM( 0, 0, 1 )  //69
DX3DVERT( 1.41875, 2.41211, 0 ) DX3DVNORM( 0, 0, 1 )  //70
DX3DVERT( 2.60729, 2.51087, 0 ) DX3DVNORM( 0, 0, 1 )  //71
DX3DVERT( 2.60729, 2.74324, 0 ) DX3DVNORM( 0, 0, 1 )  //72
DX3DVERT( 2.46719, 2.62187, 0 ) DX3DVNORM( 0, 0, 1 )  //73
DX3DVERT( 2.60729, 3.31562, 0 ) DX3DVNORM( 0, 0, 1 )  //74
DX3DVERT( 2.01302, 3.53437, 0 ) DX3DVNORM( 0, 0, 1 )  //75
DX3DVERT( 2.84688, 3.31562, 0 ) DX3DVNORM( 0, 0, 1 )  //76
DX3DVERT( 2.60729, 3.53437, 0 ) DX3DVNORM( 0, 0, 1 )  //77
DX3DVERT( 2.01302, 2.59141, 0 ) DX3DVNORM( 0, 0, 1 )  //78
DX3DVERT( 2.01302, 2.79338, 0 ) DX3DVNORM( 0, 0, 1 )  //79
DX3DVERT( 2.60717, 2.43532, 0 ) DX3DVNORM( 0, 0, 1 )  //80
DX3DVERT( 2.01302, 2.40791, 0 ) DX3DVNORM( 0, 0, 1 )  //81
DX3DVERT( 2.40156, 2.625, 0 ) DX3DVNORM( 0, 0, 1 )  //82
DX3DVERT( 2.38594, 2.825, 0 ) DX3DVNORM( 0, 0, 1 )  //83
DX3DVERT( 0.82448, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //84
DX3DVERT( 0.82448, 3.15156, 0 ) DX3DVNORM( 0, 0, 1 )  //85
DX3DVERT( 1.41875, 3.71406, 0 ) DX3DVNORM( 0, 0, 1 )  //86
DX3DVERT( 1.23906, 3.71406, 0 ) DX3DVNORM( 0, 0, 1 )  //87
DX3DVERT( 1.02501, 2.48768, 0 ) DX3DVNORM( 0, 0, 1 )  //88
DX3DVERT( 1.025, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //89
DX3DVERT( 1.41875, 2.74298, 0 ) DX3DVNORM( 0, 0, 1 )  //90
DX3DVERT( 1.31719, 2.73437, 0 ) DX3DVNORM( 0, 0, 1 )  //91
DX3DVERT( 1.27018, 2.6725, 0 ) DX3DVNORM( 0, 0, 1 )  //92
DX3DVERT( 1.31665, 2.50383, 0 ) DX3DVNORM( 0, 0, 1 )  //93
DX3DVERT( 1.41875, 2.21547, 0 ) DX3DVNORM( 0, 0, 1 )  //94
DX3DVERT( 3.02969, 2.6375, 0 ) DX3DVNORM( 0, 0, 1 )  //95
DX3DVERT( 2.88125, 2.64844, 0 ) DX3DVNORM( 0, 0, 1 )  //96
DX3DVERT( 2.67031, 2.46094, 0 ) DX3DVNORM( 0, 0, 1 )  //97
DX3DVERT( 3.1, 2.92187, 0 ) DX3DVNORM( 0, 0, 1 )  //98
DX3DVERT( 1.53906, 3.15156, 0 ) DX3DVNORM( 0, 0, 1 )  //99
DX3DVERT( 1.53906, 3.71406, 0 ) DX3DVNORM( 0, 0, 1 )  //100
DX3DVERT( 3.1, 3.15156, 0 ) DX3DVNORM( 0, 0, 1 )  //101
DX3DVERT( 0.354688, 2.45, 0 ) DX3DVNORM( 0, 0, 1 )  //102
DX3DVERT( 2.84688, 3.53437, 0 ) DX3DVNORM( 0, 0, 1 )  //103
DX3DVERT( 2.74844, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //104
DX3DVERT( 2.60729, 1.08906, 0 ) DX3DVNORM( 0, 0, 1 )  //105
DX3DVERT( 2.60729, 0.936562, 0 ) DX3DVNORM( 0, 0, 1 )  //106
DX3DVERT( 1.41875, 0.936562, 0 ) DX3DVNORM( 0, 0, 1 )  //107
DX3DVERT( 0.82448, 0.936562, 0 ) DX3DVNORM( 0, 0, 1 )  //108
DX3DVERT( 1.19219, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //109
DX3DVERT( 0.182814, 0.484375, 0 ) DX3DVNORM( 0, 0, 1 )  //110
DX3DVERT( 0.182814, 0.242186, 0 ) DX3DVNORM( 0, 0, 1 )  //111
DX3DVERT( 0.230209, 0.242186, 0 ) DX3DVNORM( 0, 0, 1 )  //112
DX3DVERT( 0.670314, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //113
DX3DVERT( 0.82448, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //114
DX3DVERT( 0.393751, 1.08906, 0 ) DX3DVNORM( 0, 0, 1 )  //115
DX3DVERT( 0.393751, 0.936562, 0 ) DX3DVNORM( 0, 0, 1 )  //116
DX3DVERT( 0.82448, 1.08906, 0 ) DX3DVNORM( 0, 0, 1 )  //117
DX3DVERT( 1.96875, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //118
DX3DVERT( 2.22656, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //119
DX3DVERT( 2.01302, 0.589375, 0 ) DX3DVNORM( 0, 0, 1 )  //120
DX3DVERT( 1.41875, 1.08906, 0 ) DX3DVNORM( 0, 0, 1 )  //121
DX3DVERT( 1.71589, 0.936562, 0 ) DX3DVNORM( 0, 0, 1 )  //122
DX3DVERT( 1.71589, 0.242186, 0 ) DX3DVNORM( 0, 0, 1 )  //123
DX3DVERT( 1.71589, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //124
DX3DVERT( 1.44688, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //125
DX3DVERT( 1.41875, 0.589375, 0 ) DX3DVNORM( 0, 0, 1 )  //126
DX3DVERT( 1.44688, 0.589375, 0 ) DX3DVNORM( 0, 0, 1 )  //127
DX3DVERT( 1.44688, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //128
DX3DVERT( 2.01302, 0.936562, 0 ) DX3DVNORM( 0, 0, 1 )  //129
DX3DVERT( 1.96875, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //130
DX3DVERT( 2.22656, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //131
DX3DVERT( 2.60729, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //132
DX3DVERT( 2.01302, 1.08906, 0 ) DX3DVNORM( 0, 0, 1 )  //133
DX3DVERT( 3.02969, 0.936562, 0 ) DX3DVNORM( 0, 0, 1 )  //134
DX3DVERT( 3.20156, 0.242186, 0 ) DX3DVNORM( 0, 0, 1 )  //135
DX3DVERT( 3.20156, 0.484375, 0 ) DX3DVNORM( 0, 0, 1 )  //136
DX3DVERT( 3.02969, 0.484375, 0 ) DX3DVNORM( 0, 0, 1 )  //137
DX3DVERT( 2.74844, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //138
DX3DVERT( 2.60729, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //139
DX3DVERT( 2.60729, 0.242186, 0 ) DX3DVNORM( 0, 0, 1 )  //140
DX3DVERT( 1.19219, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //141
DX3DVERT( 0.82448, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //142
DX3DVERT( 0.82448, 0.242186, 0 ) DX3DVNORM( 0, 0, 1 )  //143
DX3DVERT( 1.41875, 0.242186, 0 ) DX3DVNORM( 0, 0, 1 )  //144
DX3DVERT( 0.230209, 0.484375, 0 ) DX3DVNORM( 0, 0, 1 )  //145
DX3DVERT( 0.670314, 0.465624, 0 ) DX3DVNORM( 0, 0, 1 )  //146
DX3DVERT( 0.393751, 0.484375, 0 ) DX3DVNORM( 0, 0, 1 )  //147
DX3DVERT( 0.393751, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //148
DX3DVERT( 1.96875, 0.589375, 0 ) DX3DVNORM( 0, 0, 1 )  //149
DX3DVERT( 2.01302, 0.242186, 0 ) DX3DVNORM( 0, 0, 1 )  //150
DX3DVERT( 1.71589, 0.885937, 0 ) DX3DVNORM( 0, 0, 1 )  //151
DX3DVERT( 3.02969, 1.08906, 0 ) DX3DVNORM( 0, 0, 1 )  //152
DX3DVERT( 2.60729, 1.63094, 0 ) DX3DVNORM( 0, 0, 1 )  //153
DX3DVERT( 2.60729, 1.58437, 0 ) DX3DVNORM( 0, 0, 1 )  //154
DX3DVERT( 2.65938, 1.58437, 0 ) DX3DVNORM( 0, 0, 1 )  //155
DX3DVERT( 0.82448, 1.22187, 0 ) DX3DVNORM( 0, 0, 1 )  //156
DX3DVERT( 1.41875, 1.22187, 0 ) DX3DVNORM( 0, 0, 1 )  //157
DX3DVERT( 0.82448, 1.40156, 0 ) DX3DVNORM( 0, 0, 1 )  //158
DX3DVERT( 0.82448, 2.10312, 0 ) DX3DVNORM( 0, 0, 1 )  //159
DX3DVERT( 0.82448, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //160
DX3DVERT( 1.41875, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //161
DX3DVERT( 0.82448, 1.63094, 0 ) DX3DVNORM( 0, 0, 1 )  //162
DX3DVERT( 0.82448, 1.74062, 0 ) DX3DVNORM( 0, 0, 1 )  //163
DX3DVERT( 0.795314, 1.74062, 0 ) DX3DVNORM( 0, 0, 1 )  //164
DX3DVERT( 0.493751, 1.63094, 0 ) DX3DVNORM( 0, 0, 1 )  //165
DX3DVERT( 0.493751, 1.22187, 0 ) DX3DVNORM( 0, 0, 1 )  //166
DX3DVERT( 0.795314, 1.58437, 0 ) DX3DVNORM( 0, 0, 1 )  //167
DX3DVERT( 1.41875, 1.63094, 0 ) DX3DVNORM( 0, 0, 1 )  //168
DX3DVERT( 1.41875, 1.58437, 0 ) DX3DVNORM( 0, 0, 1 )  //169
DX3DVERT( 1.59063, 1.58437, 0 ) DX3DVNORM( 0, 0, 1 )  //170
DX3DVERT( 1.59063, 1.74062, 0 ) DX3DVNORM( 0, 0, 1 )  //171
DX3DVERT( 1.41875, 1.74062, 0 ) DX3DVNORM( 0, 0, 1 )  //172
DX3DVERT( 2.60729, 2.10312, 0 ) DX3DVNORM( 0, 0, 1 )  //173
DX3DVERT( 2.60729, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //174
DX3DVERT( 2.65938, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //175
DX3DVERT( 2.01302, 2.10312, 0 ) DX3DVNORM( 0, 0, 1 )  //176
DX3DVERT( 2.01302, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //177
DX3DVERT( 2.01302, 1.22187, 0 ) DX3DVNORM( 0, 0, 1 )  //178
DX3DVERT( 2.60729, 1.22187, 0 ) DX3DVNORM( 0, 0, 1 )  //179
DX3DVERT( 2.01302, 1.40156, 0 ) DX3DVNORM( 0, 0, 1 )  //180
DX3DVERT( 0.82448, 1.58437, 0 ) DX3DVNORM( 0, 0, 1 )  //181
DX3DVERT( 2.01302, 1.74062, 0 ) DX3DVNORM( 0, 0, 1 )  //182
DX3DVERT( 2.01302, 1.63094, 0 ) DX3DVNORM( 0, 0, 1 )  //183
DX3DVERT( 2.01302, 1.58437, 0 ) DX3DVNORM( 0, 0, 1 )  //184
DX3DVERT( 2.65938, 1.40156, 0 ) DX3DVNORM( 0, 0, 1 )  //185
DX3DVERT( 2.60729, 1.40156, 0 ) DX3DVNORM( 0, 0, 1 )  //186
DX3DVERT( 2.96719, 1.22187, 0 ) DX3DVNORM( 0, 0, 1 )  //187
DX3DVERT( 2.96719, 1.63094, 0 ) DX3DVNORM( 0, 0, 1 )  //188
DX3DVERT( 2.65938, 1.74062, 0 ) DX3DVNORM( 0, 0, 1 )  //189
DX3DVERT( 1.41875, 1.40156, 0 ) DX3DVNORM( 0, 0, 1 )  //190
DX3DVERT( 1.41875, 2.10312, 0 ) DX3DVNORM( 0, 0, 1 )  //191
DX3DVERT( 0.795314, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //192
DX3DVERT( 0.493751, 2.10312, 0 ) DX3DVNORM( 0, 0, 1 )  //193
DX3DVERT( 0.795314, 1.22187, 0 ) DX3DVNORM( 0, 0, 1 )  //194
DX3DVERT( 0.795314, 1.40156, 0 ) DX3DVNORM( 0, 0, 1 )  //195
DX3DVERT( 1.85938, 1.40156, 0 ) DX3DVNORM( 0, 0, 1 )  //196
DX3DVERT( 1.59063, 1.40156, 0 ) DX3DVNORM( 0, 0, 1 )  //197
DX3DVERT( 1.85938, 1.58437, 0 ) DX3DVNORM( 0, 0, 1 )  //198
DX3DVERT( 1.59063, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //199
DX3DVERT( 1.85938, 1.74062, 0 ) DX3DVNORM( 0, 0, 1 )  //200
DX3DVERT( 1.85938, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //201
DX3DVERT( 2.60729, 1.74062, 0 ) DX3DVNORM( 0, 0, 1 )  //202
DX3DVERT( 2.96719, 2.10312, 0 ) DX3DVNORM( 0, 0, 1 )  //203
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_6_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_6_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 204 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_6_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_6_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_6_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 5, // 1 5
	6, 7, 8, // 2 8
	9, 10, 11, // 3 11
	12, 9, 13, // 4 14
	11, 14, 15, // 5 17
	16, 13, 17, // 6 20
	18, 19, 20, // 7 23
	21, 22, 23, // 8 26
	24, 25, 19, // 9 29
	26, 20, 19, // 10 32
	27, 28, 29, // 11 35
	25, 30, 31, // 12 38
	32, 33, 34, // 13 41
	6, 8, 35, // 14 44
	36, 37, 35, // 15 47
	38, 29, 35, // 16 50
	31, 38, 37, // 17 53
	39, 40, 37, // 18 56
	41, 42, 8, // 19 59
	43, 44, 45, // 20 62
	10, 46, 5, // 21 65
	46, 47, 45, // 22 68
	28, 27, 48, // 23 71
	4, 14, 11, // 24 74
	27, 49, 48, // 25 77
	50, 51, 52, // 26 80
	20, 53, 54, // 27 83
	55, 56, 57, // 28 86
	58, 54, 59, // 29 89
	60, 58, 51, // 30 92
	61, 51, 50, // 31 95
	62, 63, 64, // 32 98
	65, 66, 64, // 33 101
	0, 2, 66, // 34 104
	21, 67, 68, // 35 107
	69, 41, 70, // 36 110
	71, 72, 73, // 37 113
	56, 74, 75, // 38 116
	74, 76, 77, // 39 119
	33, 78, 79, // 40 122
	66, 80, 81, // 41 125
	82, 83, 79, // 42 128
	7, 70, 8, // 43 131
	9, 15, 13, // 44 134
	13, 16, 12, // 45 137
	15, 84, 17, // 46 140
	15, 17, 13, // 47 143
	15, 9, 11, // 48 146
	17, 85, 16, // 49 149
	85, 17, 19, // 50 152
	86, 87, 18, // 51 155
	18, 55, 86, // 52 158
	19, 18, 85, // 53 161
	49, 27, 30, // 54 164
	23, 88, 30, // 55 167
	23, 30, 25, // 56 170
	25, 21, 23, // 57 173
	30, 88, 49, // 58 176
	67, 21, 25, // 59 179
	17, 84, 89, // 60 182
	19, 17, 89, // 61 185
	89, 24, 19, // 62 188
	25, 24, 67, // 63 191
	34, 90, 91, // 64 194
	26, 53, 20, // 65 197
	25, 91, 26, // 66 200
	26, 19, 25, // 67 203
	91, 25, 92, // 68 206
	91, 92, 34, // 69 209
	38, 31, 30, // 70 212
	29, 38, 27, // 71 215
	30, 27, 38, // 72 218
	31, 92, 25, // 73 221
	40, 39, 93, // 74 224
	31, 40, 32, // 75 227
	92, 31, 32, // 76 230
	34, 92, 32, // 77 233
	93, 32, 40, // 78 236
	29, 28, 6, // 79 239
	35, 29, 6, // 80 242
	35, 8, 42, // 81 245
	35, 42, 36, // 82 248
	35, 37, 38, // 83 251
	37, 40, 31, // 84 254
	37, 36, 39, // 85 257
	8, 70, 41, // 86 260
	45, 47, 43, // 87 263
	5, 11, 10, // 88 266
	3, 5, 46, // 89 269
	46, 45, 3, // 90 272
	94, 7, 6, // 91 275
	94, 6, 28, // 92 278
	28, 48, 94, // 93 281
	11, 5, 4, // 94 284
	1, 95, 96, // 95 287
	71, 97, 96, // 96 290
	51, 59, 52, // 97 293
	52, 96, 98, // 98 296
	52, 98, 50, // 99 299
	96, 52, 72, // 100 302
	96, 72, 71, // 101 305
	97, 80, 66, // 102 308
	96, 97, 2, // 103 311
	96, 2, 1, // 104 314
	66, 2, 97, // 105 317
	54, 58, 20, // 106 320
	58, 60, 99, // 107 323
	57, 100, 86, // 108 326
	57, 86, 55, // 109 329
	56, 75, 57, // 110 332
	55, 18, 20, // 111 335
	99, 55, 20, // 112 338
	99, 20, 58, // 113 341
	59, 51, 58, // 114 344
	51, 61, 60, // 115 347
	50, 101, 61, // 116 350
	64, 7, 94, // 117 353
	64, 94, 62, // 118 356
	64, 63, 65, // 119 359
	66, 65, 0, // 120 362
	68, 102, 22, // 121 365
	22, 21, 68, // 122 368
	64, 81, 69, // 123 371
	70, 7, 69, // 124 374
	69, 7, 64, // 125 377
	74, 77, 75, // 126 380
	76, 103, 77, // 127 383
	79, 90, 34, // 128 386
	34, 33, 79, // 129 389
	81, 64, 66, // 130 392
	79, 78, 82, // 131 395
	104, 105, 106, // 132 398
	107, 108, 109, // 133 401
	110, 111, 112, // 134 404
	113, 114, 108, // 135 407
	115, 116, 108, // 136 410
	117, 108, 107, // 137 413
	118, 119, 120, // 138 416
	121, 107, 122, // 139 419
	123, 124, 125, // 140 422
	126, 127, 128, // 141 425
	129, 122, 130, // 142 428
	131, 132, 106, // 143 431
	133, 131, 106, // 144 434
	105, 104, 134, // 145 437
	135, 136, 137, // 146 440
	106, 132, 104, // 147 443
	104, 138, 137, // 148 446
	137, 134, 104, // 149 449
	138, 139, 140, // 150 452
	138, 140, 135, // 151 455
	137, 138, 135, // 152 458
	141, 142, 143, // 153 461
	108, 114, 109, // 154 464
	109, 141, 126, // 155 467
	109, 128, 107, // 156 470
	141, 125, 126, // 157 473
	143, 144, 141, // 158 476
	112, 145, 110, // 159 479
	112, 143, 146, // 160 482
	147, 146, 113, // 161 485
	116, 148, 113, // 162 488
	108, 116, 113, // 163 491
	113, 148, 147, // 164 494
	143, 142, 146, // 165 497
	147, 145, 112, // 166 500
	112, 146, 147, // 167 503
	108, 117, 115, // 168 506
	107, 121, 117, // 169 509
	120, 149, 118, // 170 512
	118, 124, 123, // 171 515
	123, 150, 118, // 172 518
	122, 129, 133, // 173 521
	133, 121, 122, // 174 524
	125, 127, 126, // 175 527
	125, 141, 144, // 176 530
	125, 144, 123, // 177 533
	128, 151, 122, // 178 536
	128, 122, 107, // 179 539
	128, 109, 126, // 180 542
	122, 151, 130, // 181 545
	130, 149, 120, // 182 548
	120, 129, 130, // 183 551
	140, 139, 119, // 184 554
	120, 119, 131, // 185 557
	129, 120, 131, // 186 560
	131, 133, 129, // 187 563
	119, 118, 150, // 188 566
	119, 150, 140, // 189 569
	106, 105, 133, // 190 572
	134, 152, 105, // 191 575
	153, 154, 155, // 192 578
	156, 157, 158, // 193 581
	159, 160, 161, // 194 584
	162, 163, 164, // 195 587
	165, 166, 167, // 196 590
	168, 169, 170, // 197 593
	171, 172, 168, // 198 596
	173, 174, 175, // 199 599
	176, 177, 174, // 200 602
	178, 179, 180, // 201 605
	181, 169, 162, // 202 608
	162, 168, 163, // 203 611
	182, 183, 153, // 204 614
	184, 154, 183, // 205 617
	185, 186, 179, // 206 620
	155, 187, 188, // 207 623
	155, 189, 153, // 208 626
	187, 155, 185, // 209 629
	179, 187, 185, // 210 632
	157, 190, 158, // 211 635
	161, 191, 159, // 212 638
	192, 160, 159, // 213 641
	164, 192, 165, // 214 644
	164, 165, 162, // 215 647
	193, 165, 192, // 216 650
	159, 193, 192, // 217 653
	194, 158, 195, // 218 656
	167, 181, 162, // 219 659
	162, 165, 167, // 220 662
	194, 156, 158, // 221 665
	195, 167, 166, // 222 668
	195, 166, 194, // 223 671
	157, 178, 196, // 224 674
	170, 197, 196, // 225 677
	198, 184, 183, // 226 680
	170, 198, 171, // 227 683
	170, 171, 168, // 228 686
	196, 198, 170, // 229 689
	178, 180, 196, // 230 692
	197, 190, 157, // 231 695
	157, 196, 197, // 232 698
	191, 161, 199, // 233 701
	199, 171, 200, // 234 704
	183, 182, 200, // 235 707
	183, 200, 198, // 236 710
	171, 198, 200, // 237 713
	200, 201, 199, // 238 716
	201, 177, 176, // 239 719
	201, 176, 191, // 240 722
	199, 201, 191, // 241 725
	189, 202, 153, // 242 728
	175, 189, 203, // 243 731
	175, 203, 173, // 244 734
	188, 203, 189, // 245 737
	189, 155, 188, // 246 740
	174, 173, 176, // 247 743
	179, 186, 180, // 248 746
	169, 168, 162, // 249 749
	168, 172, 163, // 250 752
	153, 202, 182, // 251 755
	154, 153, 183, // 252 758
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_6_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_6_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_6_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_6_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_6_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_6_1__ )
DX3DMODEL_START( model_Trim_Char_x_6_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_6_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_6_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 759 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_6_1__, 680751877 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_6_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_5_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_7_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_7_1___initialShadingGroup_0 )
DX3DVERT( 1.50561, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //0
DX3DVERT( 1.43594, 0.752428, 0 ) DX3DVNORM( 0, 0, 1 )  //1
DX3DVERT( 1.43594, 0.321072, 0 ) DX3DVNORM( 0, 0, 1 )  //2
DX3DVERT( 1.25469, 0.706247, 0 ) DX3DVNORM( 0, 0, 1 )  //3
DX3DVERT( 1.5, 0.768749, 0 ) DX3DVNORM( 0, 0, 1 )  //4
DX3DVERT( 1.46116, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //5
DX3DVERT( 1.45313, 0.273436, 0 ) DX3DVNORM( 0, 0, 1 )  //6
DX3DVERT( 1.70313, 0.332811, 0 ) DX3DVNORM( 0, 0, 1 )  //7
DX3DVERT( 0.965626, 0.262499, 0 ) DX3DVNORM( 0, 0, 1 )  //8
DX3DVERT( 0.856772, 0.65729, 0 ) DX3DVNORM( 0, 0, 1 )  //9
DX3DVERT( 0.856772, 0.242945, 0 ) DX3DVNORM( 0, 0, 1 )  //10
DX3DVERT( 0.564063, 0.703123, 0 ) DX3DVNORM( 0, 0, 1 )  //11
DX3DVERT( 0.704688, 0.215624, 0 ) DX3DVNORM( 0, 0, 1 )  //12
DX3DVERT( 0.81875, 0.757811, 0 ) DX3DVNORM( 0, 0, 1 )  //13
DX3DVERT( 0.277606, 0.722744, 0 ) DX3DVNORM( 0, 0, 1 )  //14
DX3DVERT( 0.284376, 0.737497, 0 ) DX3DVNORM( 0, 0, 1 )  //15
DX3DVERT( 0.277606, 0.739826, 0 ) DX3DVNORM( 0, 0, 1 )  //16
DX3DVERT( -0.0546868, 0.176561, 0 ) DX3DVNORM( 0, 0, 1 )  //17
DX3DVERT( 0.222253, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //18
DX3DVERT( 0.0343755, 0.823435, 0 ) DX3DVNORM( 0, 0, 1 )  //19
DX3DVERT( 0.00254824, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //20
DX3DVERT( -0.301561, 0.278124, 0 ) DX3DVNORM( 0, 0, 1 )  //21
DX3DVERT( 2.88395, 0.354059, 0 ) DX3DVNORM( 0, 0, 1 )  //22
DX3DVERT( 2.95148, 0.467701, 0 ) DX3DVNORM( 0, 0, 1 )  //23
DX3DVERT( 2.88386, 0.467707, 0 ) DX3DVNORM( 0, 0, 1 )  //24
DX3DVERT( 0.856772, 1.33906, 0 ) DX3DVNORM( 0, 0, 1 )  //25
DX3DVERT( 0.856772, 1.15937, 0 ) DX3DVNORM( 0, 0, 1 )  //26
DX3DVERT( 1.43594, 1.15937, 0 ) DX3DVNORM( 0, 0, 1 )  //27
DX3DVERT( 0.856772, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //28
DX3DVERT( 1.43594, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //29
DX3DVERT( 0.856772, 1.9625, 0 ) DX3DVNORM( 0, 0, 1 )  //30
DX3DVERT( -0.273437, 2.34844, 0 ) DX3DVNORM( 0, 0, 1 )  //31
DX3DVERT( -0.203124, 2.0875, 0 ) DX3DVNORM( 0, 0, 1 )  //32
DX3DVERT( 0.170314, 2.18125, 0 ) DX3DVNORM( 0, 0, 1 )  //33
DX3DVERT( 0.143751, 3.48281, 0 ) DX3DVNORM( 0, 0, 1 )  //34
DX3DVERT( 0.143751, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //35
DX3DVERT( 0.277606, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //36
DX3DVERT( 0.143751, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //37
DX3DVERT( -0.270312, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //38
DX3DVERT( -0.270312, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //39
DX3DVERT( 1.27813, 3.48281, 0 ) DX3DVNORM( 0, 0, 1 )  //40
DX3DVERT( 1.53594, 3.27656, 0 ) DX3DVNORM( 0, 0, 1 )  //41
DX3DVERT( 1.43594, 3.66677, 0 ) DX3DVNORM( 0, 0, 1 )  //42
DX3DVERT( 0.277606, 3.48281, 0 ) DX3DVNORM( 0, 0, 1 )  //43
DX3DVERT( 0.432813, 3.27656, 0 ) DX3DVNORM( 0, 0, 1 )  //44
DX3DVERT( 0.277606, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //45
DX3DVERT( 0.467189, 1.9625, 0 ) DX3DVNORM( 0, 0, 1 )  //46
DX3DVERT( 0.467189, 2.11406, 0 ) DX3DVNORM( 0, 0, 1 )  //47
DX3DVERT( 0.821875, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //48
DX3DVERT( 0.856772, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //49
DX3DVERT( 0.432813, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //50
DX3DVERT( 1.43594, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //51
DX3DVERT( 1.43594, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //52
DX3DVERT( 1.3875, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //53
DX3DVERT( 0.170314, 1.48516, 0 ) DX3DVNORM( 0, 0, 1 )  //54
DX3DVERT( 0.170314, 0.835936, 0 ) DX3DVNORM( 0, 0, 1 )  //55
DX3DVERT( 0.277606, 0.835936, 0 ) DX3DVNORM( 0, 0, 1 )  //56
DX3DVERT( 0.170314, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //57
DX3DVERT( 0.277606, 1.48516, 0 ) DX3DVNORM( 0, 0, 1 )  //58
DX3DVERT( 0.856772, 1.79531, 0 ) DX3DVNORM( 0, 0, 1 )  //59
DX3DVERT( 1.43594, 1.79531, 0 ) DX3DVNORM( 0, 0, 1 )  //60
DX3DVERT( 0.856772, 1.48516, 0 ) DX3DVNORM( 0, 0, 1 )  //61
DX3DVERT( 0.856772, 1.64219, 0 ) DX3DVNORM( 0, 0, 1 )  //62
DX3DVERT( 0.467189, 1.64219, 0 ) DX3DVNORM( 0, 0, 1 )  //63
DX3DVERT( 0.467189, 1.47187, 0 ) DX3DVNORM( 0, 0, 1 )  //64
DX3DVERT( 0.856772, 1.47187, 0 ) DX3DVNORM( 0, 0, 1 )  //65
DX3DVERT( 2.64688, 2.20469, 0 ) DX3DVNORM( 0, 0, 1 )  //66
DX3DVERT( 3.10313, 2.0875, 0 ) DX3DVNORM( 0, 0, 1 )  //67
DX3DVERT( 3.17344, 2.34844, 0 ) DX3DVNORM( 0, 0, 1 )  //68
DX3DVERT( 2.15677, 2.11406, 0 ) DX3DVNORM( 0, 0, 1 )  //69
DX3DVERT( 2.15677, 2.30625, 0 ) DX3DVNORM( 0, 0, 1 )  //70
DX3DVERT( 1.50469, 2.30625, 0 ) DX3DVNORM( 0, 0, 1 )  //71
DX3DVERT( 1.43594, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //72
DX3DVERT( 2.07813, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //73
DX3DVERT( 1.69531, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //74
DX3DVERT( 1.97148, 2.50573, 0 ) DX3DVNORM( 0, 0, 1 )  //75
DX3DVERT( 2.59427, 3.48281, 0 ) DX3DVNORM( 0, 0, 1 )  //76
DX3DVERT( 2.59427, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //77
DX3DVERT( 2.75625, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //78
DX3DVERT( 2.15677, 3.48281, 0 ) DX3DVNORM( 0, 0, 1 )  //79
DX3DVERT( 2.15677, 3.27656, 0 ) DX3DVNORM( 0, 0, 1 )  //80
DX3DVERT( 2.46719, 3.27656, 0 ) DX3DVNORM( 0, 0, 1 )  //81
DX3DVERT( 2.52122, 2.50572, 0 ) DX3DVNORM( 0, 0, 1 )  //82
DX3DVERT( 2.15677, 2.50573, 0 ) DX3DVNORM( 0, 0, 1 )  //83
DX3DVERT( 2.15677, 2.39956, 0 ) DX3DVNORM( 0, 0, 1 )  //84
DX3DVERT( 2.1568, 2.6743, 0 ) DX3DVNORM( 0, 0, 1 )  //85
DX3DVERT( 3.17031, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //86
DX3DVERT( 3.17031, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //87
DX3DVERT( 2.75625, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //88
DX3DVERT( 2.01719, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //89
DX3DVERT( 1.92969, 0.729685, 0 ) DX3DVNORM( 0, 0, 1 )  //90
DX3DVERT( 2.13594, 0.442186, 0 ) DX3DVNORM( 0, 0, 1 )  //91
DX3DVERT( 1.43594, 1.64219, 0 ) DX3DVNORM( 0, 0, 1 )  //92
DX3DVERT( 1.43594, 1.48516, 0 ) DX3DVNORM( 0, 0, 1 )  //93
DX3DVERT( 2.15677, 1.48516, 0 ) DX3DVNORM( 0, 0, 1 )  //94
DX3DVERT( 1.43594, 1.33906, 0 ) DX3DVNORM( 0, 0, 1 )  //95
DX3DVERT( 2.15677, 1.15937, 0 ) DX3DVNORM( 0, 0, 1 )  //96
DX3DVERT( 2.59427, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //97
DX3DVERT( 2.59427, 1.48516, 0 ) DX3DVNORM( 0, 0, 1 )  //98
DX3DVERT( 2.64688, 1.48516, 0 ) DX3DVNORM( 0, 0, 1 )  //99
DX3DVERT( 2.34688, 1.64219, 0 ) DX3DVNORM( 0, 0, 1 )  //100
DX3DVERT( 2.15677, 1.64219, 0 ) DX3DVNORM( 0, 0, 1 )  //101
DX3DVERT( 2.2016, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //102
DX3DVERT( 2.15677, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //103
DX3DVERT( 2.15677, 0.210171, 0 ) DX3DVNORM( 0, 0, 1 )  //104
DX3DVERT( 2.15677, 1.33906, 0 ) DX3DVNORM( 0, 0, 1 )  //105
DX3DVERT( 2.59427, 1.15937, 0 ) DX3DVNORM( 0, 0, 1 )  //106
DX3DVERT( 2.59427, 1.33906, 0 ) DX3DVNORM( 0, 0, 1 )  //107
DX3DVERT( 3.13125, 1.15937, 0 ) DX3DVNORM( 0, 0, 1 )  //108
DX3DVERT( 2.73921, 0.244631, 0 ) DX3DVNORM( 0, 0, 1 )  //109
DX3DVERT( 2.85439, 0.322067, 0 ) DX3DVNORM( 0, 0, 1 )  //110
DX3DVERT( 2.73906, 0.322134, 0 ) DX3DVNORM( 0, 0, 1 )  //111
DX3DVERT( 2.73906, 0.467707, 0 ) DX3DVNORM( 0, 0, 1 )  //112
DX3DVERT( 2.73906, 0.613279, 0 ) DX3DVNORM( 0, 0, 1 )  //113
DX3DVERT( 2.59467, 0.467991, 0 ) DX3DVNORM( 0, 0, 1 )  //114
DX3DVERT( 2.72844, 0.758858, 0 ) DX3DVNORM( 0, 0, 1 )  //115
DX3DVERT( 2.69544, 0.613274, 0 ) DX3DVNORM( 0, 0, 1 )  //116
DX3DVERT( 2.73906, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //117
DX3DVERT( 2.88386, 0.613279, 0 ) DX3DVNORM( 0, 0, 1 )  //118
DX3DVERT( 2.59427, 0.322134, 0 ) DX3DVNORM( 0, 0, 1 )  //119
DX3DVERT( 2.59426, 0.207235, 0 ) DX3DVNORM( 0, 0, 1 )  //120
DX3DVERT( 3.01721, 0.758848, 0 ) DX3DVNORM( 0, 0, 1 )  //121
DX3DVERT( 2.88386, 0.758854, 0 ) DX3DVNORM( 0, 0, 1 )  //122
DX3DVERT( 1.43594, 1.47187, 0 ) DX3DVNORM( 0, 0, 1 )  //123
DX3DVERT( 0.926238, 2.50573, 0 ) DX3DVNORM( 0, 0, 1 )  //124
DX3DVERT( 0.856772, 2.50573, 0 ) DX3DVNORM( 0, 0, 1 )  //125
DX3DVERT( 0.856772, 2.46298, 0 ) DX3DVNORM( 0, 0, 1 )  //126
DX3DVERT( 1.43594, 2.50573, 0 ) DX3DVNORM( 0, 0, 1 )  //127
DX3DVERT( 1.43594, 2.6031, 0 ) DX3DVNORM( 0, 0, 1 )  //128
DX3DVERT( 1.31719, 2.61406, 0 ) DX3DVNORM( 0, 0, 1 )  //129
DX3DVERT( 1.4608, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //130
DX3DVERT( 1.43594, 3.03934, 0 ) DX3DVNORM( 0, 0, 1 )  //131
DX3DVERT( 2.59427, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //132
DX3DVERT( 2.46719, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //133
DX3DVERT( 2.15677, 1.79531, 0 ) DX3DVNORM( 0, 0, 1 )  //134
DX3DVERT( 2.15677, 1.47187, 0 ) DX3DVNORM( 0, 0, 1 )  //135
DX3DVERT( 2.59427, 1.47187, 0 ) DX3DVNORM( 0, 0, 1 )  //136
DX3DVERT( 2.64688, 1.47187, 0 ) DX3DVNORM( 0, 0, 1 )  //137
DX3DVERT( 0.856772, 0.835936, 0 ) DX3DVNORM( 0, 0, 1 )  //138
DX3DVERT( 1.43594, 0.835936, 0 ) DX3DVNORM( 0, 0, 1 )  //139
DX3DVERT( 0.856772, 1.02656, 0 ) DX3DVNORM( 0, 0, 1 )  //140
DX3DVERT( 1.43594, 2.11406, 0 ) DX3DVNORM( 0, 0, 1 )  //141
DX3DVERT( 1.18438, 2.30625, 0 ) DX3DVNORM( 0, 0, 1 )  //142
DX3DVERT( 1.43594, 1.9625, 0 ) DX3DVNORM( 0, 0, 1 )  //143
DX3DVERT( 2.15677, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //144
DX3DVERT( 1.59175, 2.50573, 0 ) DX3DVNORM( 0, 0, 1 )  //145
DX3DVERT( 2.15677, 0.835936, 0 ) DX3DVNORM( 0, 0, 1 )  //146
DX3DVERT( 1.43594, 1.02656, 0 ) DX3DVNORM( 0, 0, 1 )  //147
DX3DVERT( 2.59427, 0.835936, 0 ) DX3DVNORM( 0, 0, 1 )  //148
DX3DVERT( 2.15677, 1.02656, 0 ) DX3DVNORM( 0, 0, 1 )  //149
DX3DVERT( 3.02969, 1.02656, 0 ) DX3DVNORM( 0, 0, 1 )  //150
DX3DVERT( 2.15677, 0.80538, 0 ) DX3DVNORM( 0, 0, 1 )  //151
DX3DVERT( 2.16406, 0.80781, 0 ) DX3DVNORM( 0, 0, 1 )  //152
DX3DVERT( 0.277607, 2.47244, 0 ) DX3DVNORM( 0, 0, 1 )  //153
DX3DVERT( 0.277606, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //154
DX3DVERT( 0.856772, 3.48281, 0 ) DX3DVNORM( 0, 0, 1 )  //155
DX3DVERT( 0.856772, 3.27656, 0 ) DX3DVNORM( 0, 0, 1 )  //156
DX3DVERT( 1.22813, 3.27656, 0 ) DX3DVNORM( 0, 0, 1 )  //157
DX3DVERT( 1.29844, 3.67031, 0 ) DX3DVNORM( 0, 0, 1 )  //158
DX3DVERT( 1.1468, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //159
DX3DVERT( 0.432813, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //160
DX3DVERT( 0.856772, 2.11406, 0 ) DX3DVNORM( 0, 0, 1 )  //161
DX3DVERT( 0.856772, 2.30625, 0 ) DX3DVNORM( 0, 0, 1 )  //162
DX3DVERT( 0.532813, 2.30625, 0 ) DX3DVNORM( 0, 0, 1 )  //163
DX3DVERT( 0.378779, 2.50572, 0 ) DX3DVNORM( 0, 0, 1 )  //164
DX3DVERT( 0.467189, 1.79531, 0 ) DX3DVNORM( 0, 0, 1 )  //165
DX3DVERT( 1.2, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //166
DX3DVERT( 1.05938, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //167
DX3DVERT( 0.467189, 1.15937, 0 ) DX3DVNORM( 0, 0, 1 )  //168
DX3DVERT( 0.467189, 1.02656, 0 ) DX3DVNORM( 0, 0, 1 )  //169
DX3DVERT( 0.467189, 1.33906, 0 ) DX3DVNORM( 0, 0, 1 )  //170
DX3DVERT( 2.64688, 1.92344, 0 ) DX3DVNORM( 0, 0, 1 )  //171
DX3DVERT( 2.34688, 2.11406, 0 ) DX3DVNORM( 0, 0, 1 )  //172
DX3DVERT( 2.59427, 2.48126, 0 ) DX3DVNORM( 0, 0, 1 )  //173
DX3DVERT( 1.58594, 3.48281, 0 ) DX3DVNORM( 0, 0, 1 )  //174
DX3DVERT( 1.60156, 3.6625, 0 ) DX3DVNORM( 0, 0, 1 )  //175
DX3DVERT( 2.15677, 2.72656, 0 ) DX3DVNORM( 0, 0, 1 )  //176
DX3DVERT( 2.15677, 2.95625, 0 ) DX3DVNORM( 0, 0, 1 )  //177
DX3DVERT( 2.75625, 3.48281, 0 ) DX3DVNORM( 0, 0, 1 )  //178
DX3DVERT( 2.46719, 3.08802, 0 ) DX3DVNORM( 0, 0, 1 )  //179
DX3DVERT( 2.34688, 1.9625, 0 ) DX3DVNORM( 0, 0, 1 )  //180
DX3DVERT( 2.3625, 2.30625, 0 ) DX3DVNORM( 0, 0, 1 )  //181
DX3DVERT( 2.15677, 1.9625, 0 ) DX3DVNORM( 0, 0, 1 )  //182
DX3DVERT( 2.34688, 1.79531, 0 ) DX3DVNORM( 0, 0, 1 )  //183
DX3DVERT( 2.01094, 0.445311, 0 ) DX3DVNORM( 0, 0, 1 )  //184
DX3DVERT( 2.02656, 0.215624, 0 ) DX3DVNORM( 0, 0, 1 )  //185
DX3DVERT( 2.44048, 0.434462, 0 ) DX3DVNORM( 0, 0, 1 )  //186
DX3DVERT( 2.49663, 0.20277, 0 ) DX3DVNORM( 0, 0, 1 )  //187
DX3DVERT( 2.425, 0.434374, 0 ) DX3DVNORM( 0, 0, 1 )  //188
DX3DVERT( 3.13125, 1.33906, 0 ) DX3DVNORM( 0, 0, 1 )  //189
DX3DVERT( 1.27819, 2.50573, 0 ) DX3DVNORM( 0, 0, 1 )  //190
DX3DVERT( 1.62188, 2.58594, 0 ) DX3DVNORM( 0, 0, 1 )  //191
DX3DVERT( 2.59427, 1.02656, 0 ) DX3DVNORM( 0, 0, 1 )  //192
DX3DVERT( 2.7375, 0.835936, 0 ) DX3DVNORM( 0, 0, 1 )  //193
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_7_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_7_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 194 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_7_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_7_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_7_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	1, 3, 2, // 1 5
	0, 4, 5, // 2 8
	0, 5, 1, // 3 11
	2, 6, 7, // 4 14
	7, 0, 2, // 5 17
	8, 9, 10, // 6 20
	11, 12, 10, // 7 23
	9, 13, 11, // 8 26
	11, 10, 9, // 9 29
	14, 15, 16, // 10 32
	17, 14, 18, // 11 35
	18, 19, 20, // 12 38
	14, 16, 18, // 13 41
	20, 21, 17, // 14 44
	18, 20, 17, // 15 47
	22, 23, 24, // 16 50
	25, 26, 27, // 17 53
	28, 29, 30, // 18 56
	31, 32, 33, // 19 59
	34, 35, 36, // 20 62
	37, 38, 39, // 21 65
	40, 41, 42, // 22 68
	43, 36, 44, // 23 71
	45, 46, 47, // 24 74
	48, 49, 50, // 25 77
	51, 52, 53, // 26 80
	54, 55, 56, // 27 83
	57, 54, 58, // 28 86
	28, 59, 60, // 29 89
	61, 62, 63, // 30 92
	64, 65, 61, // 31 95
	66, 67, 68, // 32 98
	69, 70, 71, // 33 101
	41, 40, 72, // 34 104
	73, 74, 75, // 35 107
	76, 77, 78, // 36 110
	79, 80, 81, // 37 113
	82, 83, 84, // 38 116
	82, 85, 83, // 39 119
	86, 87, 88, // 40 122
	89, 90, 91, // 41 125
	92, 93, 94, // 42 128
	95, 27, 96, // 43 131
	97, 98, 99, // 44 134
	100, 101, 94, // 45 137
	102, 103, 104, // 46 140
	105, 96, 106, // 47 143
	107, 106, 108, // 48 146
	109, 110, 111, // 49 149
	112, 24, 113, // 50 152
	114, 114, 112, // 51 155
	115, 116, 113, // 52 158
	117, 113, 118, // 53 161
	119, 120, 109, // 54 164
	114, 119, 111, // 55 167
	24, 112, 111, // 56 170
	121, 122, 118, // 57 173
	65, 123, 61, // 58 176
	124, 125, 126, // 59 179
	127, 128, 129, // 60 182
	61, 93, 62, // 61 185
	83, 75, 84, // 62 188
	130, 72, 131, // 63 191
	132, 77, 133, // 64 194
	60, 134, 29, // 65 197
	123, 135, 93, // 66 200
	135, 136, 94, // 67 203
	136, 137, 98, // 68 206
	138, 139, 140, // 69 209
	141, 127, 142, // 70 212
	143, 29, 144, // 71 215
	128, 127, 145, // 72 218
	139, 146, 147, // 73 221
	146, 148, 149, // 74 224
	122, 121, 150, // 75 227
	103, 151, 89, // 76 230
	102, 152, 151, // 77 233
	27, 95, 25, // 78 236
	29, 143, 30, // 79 239
	33, 57, 45, // 80 242
	33, 47, 153, // 81 245
	33, 153, 31, // 82 248
	36, 43, 34, // 83 251
	36, 35, 37, // 84 254
	154, 36, 37, // 85 257
	39, 154, 37, // 86 260
	155, 156, 157, // 87 263
	42, 158, 40, // 88 266
	157, 159, 72, // 89 269
	72, 40, 157, // 90 272
	157, 40, 155, // 91 275
	36, 160, 44, // 92 278
	44, 156, 155, // 93 281
	155, 43, 44, // 94 284
	161, 162, 163, // 95 287
	28, 30, 46, // 96 290
	47, 164, 153, // 97 293
	47, 33, 45, // 98 296
	46, 165, 28, // 99 299
	126, 125, 164, // 100 302
	163, 47, 161, // 101 305
	164, 47, 163, // 102 308
	164, 163, 126, // 103 311
	48, 164, 125, // 104 314
	50, 160, 36, // 105 317
	50, 36, 154, // 106 320
	50, 154, 48, // 107 323
	125, 49, 48, // 108 326
	49, 125, 124, // 109 329
	131, 72, 159, // 110 332
	53, 166, 51, // 111 335
	159, 166, 53, // 112 338
	159, 53, 131, // 113 341
	166, 159, 167, // 114 344
	124, 166, 167, // 115 347
	124, 167, 49, // 116 350
	56, 58, 54, // 117 353
	58, 45, 57, // 118 356
	60, 29, 28, // 119 359
	165, 59, 28, // 120 362
	63, 165, 58, // 121 365
	63, 64, 61, // 122 368
	45, 58, 165, // 123 371
	165, 46, 45, // 124 374
	168, 26, 25, // 125 377
	138, 140, 169, // 126 380
	168, 25, 170, // 127 383
	64, 63, 58, // 128 386
	170, 64, 58, // 129 389
	58, 168, 170, // 130 392
	168, 58, 56, // 131 395
	169, 168, 56, // 132 398
	169, 56, 138, // 133 401
	97, 171, 66, // 134 404
	66, 172, 97, // 135 407
	68, 173, 66, // 136 410
	71, 145, 127, // 137 413
	71, 127, 141, // 138 416
	71, 141, 69, // 139 419
	80, 79, 174, // 140 422
	72, 130, 41, // 141 425
	174, 175, 42, // 142 428
	42, 41, 174, // 143 431
	174, 41, 80, // 144 434
	52, 51, 74, // 145 437
	75, 83, 85, // 146 440
	85, 73, 75, // 147 443
	73, 176, 177, // 148 446
	73, 177, 52, // 149 449
	74, 73, 52, // 150 452
	78, 178, 76, // 151 455
	81, 179, 77, // 152 458
	81, 77, 76, // 153 461
	81, 76, 79, // 154 464
	172, 180, 97, // 155 467
	70, 69, 172, // 156 470
	181, 172, 82, // 157 473
	84, 181, 82, // 158 476
	172, 181, 70, // 159 479
	180, 182, 144, // 160 482
	173, 82, 172, // 161 485
	172, 66, 173, // 162 488
	180, 183, 97, // 163 491
	88, 78, 77, // 164 494
	88, 77, 132, // 165 497
	88, 132, 86, // 166 500
	91, 184, 185, // 167 503
	91, 104, 103, // 168 506
	91, 103, 89, // 169 509
	185, 104, 91, // 170 512
	94, 101, 92, // 171 515
	96, 105, 95, // 172 518
	99, 171, 97, // 173 521
	144, 134, 183, // 174 524
	98, 183, 100, // 175 527
	94, 98, 100, // 176 530
	183, 98, 97, // 177 533
	183, 180, 144, // 178 536
	114, 114, 186, // 179 539
	187, 120, 119, // 180 542
	104, 187, 188, // 181 545
	104, 188, 102, // 182 548
	119, 188, 187, // 183 551
	186, 188, 119, // 184 554
	119, 114, 186, // 185 557
	106, 107, 105, // 186 560
	108, 189, 107, // 187 563
	24, 118, 113, // 188 566
	112, 113, 116, // 189 569
	116, 114, 112, // 190 572
	113, 117, 115, // 191 575
	118, 122, 117, // 192 578
	109, 111, 119, // 193 581
	111, 112, 114, // 194 584
	111, 110, 22, // 195 587
	22, 24, 111, // 196 590
	118, 24, 23, // 197 593
	23, 121, 118, // 198 596
	123, 93, 61, // 199 599
	129, 190, 127, // 200 602
	93, 92, 62, // 201 605
	77, 179, 133, // 202 608
	133, 177, 176, // 203 611
	176, 132, 133, // 204 614
	134, 144, 29, // 205 617
	135, 94, 93, // 206 620
	136, 98, 94, // 207 623
	137, 99, 98, // 208 626
	139, 147, 140, // 209 629
	127, 190, 142, // 210 632
	142, 162, 161, // 211 635
	161, 141, 142, // 212 638
	144, 182, 143, // 213 641
	145, 191, 128, // 214 644
	146, 149, 147, // 215 647
	148, 192, 149, // 216 650
	192, 148, 193, // 217 653
	117, 193, 115, // 218 656
	122, 193, 117, // 219 659
	193, 122, 150, // 220 662
	193, 150, 192, // 221 665
	151, 103, 102, // 222 668
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_7_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_7_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_7_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_7_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_7_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_7_1__ )
DX3DMODEL_START( model_Trim_Char_x_7_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_7_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_7_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 669 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_7_1__, 682837013 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_7_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_6_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_8_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_8_1___initialShadingGroup_0 )
DX3DVERT( 2.66719, 3.60649, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 2.72188, 3.63125, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 3.11587, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 2.66719, 3.2532, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 2.49063, 3.52656, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 2.9125, 2.82031, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( 2.83056, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( 3.14219, 2.92188, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( 2.66719, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( 3.22031, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 2.66719, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 1.31719, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( 1.31719, 3.65469, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( 1.44219, 3.65469, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( 1.09531, 1.475, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( 1.09531, 1.70156, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( 1.35625, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( -0.207811, 1.40937, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( -0.395312, 1.60312, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( -0.31189, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 0.217208, 0.626337, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( -0.153124, 0.242188, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( -0.312499, 0.450001, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 0.704688, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 0.704688, 1.21719, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 0.829688, 1.21719, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 0.829681, 0.367018, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 0.6, 0.324999, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( 0.556251, 0.578125, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 0.829688, 0.627371, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 1.09531, 0.682814, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 0.0531258, 3.22969, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( -0.312499, 3.22969, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( -0.312499, 3.48281, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( -0.123773, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 0.142508, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 0.0687511, 2.04375, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 0.217188, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 0.217188, 2.49688, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 0.198439, 2.49688, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 1.09531, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 1.09531, 1.95156, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 0.420564, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 0.500163, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 0.764063, 2.17344, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 0.790626, 3.48281, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 0.790626, 3.22969, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( 0.323438, 3.22969, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 0.782814, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 0.779689, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 0.514063, 2.49688, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 1.31719, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 1.35625, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 1.09531, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 2.66719, 1.39589, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( 2.81865, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( 3.09081, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 1.825, 1.35781, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 2.20313, 1.35781, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 1.825, 1.13906, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( 2.2043, 0.384428, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( 2.02344, 0.25, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 1.80156, 0.426561, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 2.66719, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 2.3719, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 2.43281, 1.00312, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( 2.53438, 0.698439, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 2.2043, 0.742325, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 2.97344, 0.680462, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( 3.01454, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 3.2576, 0.924686, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 2.74512, 0.924686, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 2.8916, 0.584051, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 2.82031, 0.583437, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 2.9344, 0.583803, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 2.97344, 0.583437, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 2.97344, 0.412813, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 2.66713, 0.436274, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 2.66719, 0.583437, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 2.82031, 0.282331, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 2.68381, 0.41276, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 2.82031, 0.412813, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 2.97344, 0.327499, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 2.94687, 0.246977, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 3.13891, 0.412806, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 3.12656, 0.412813, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 3.12656, 0.583437, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 3.08863, 0.327448, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( 3.05, 0.327499, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 3.05, 0.412813, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 3.05007, 0.286451, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 2.97337, 0.24954, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 3.12656, 0.387724, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 1.59063, 3.65469, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 1.59063, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 1.825, 1.79844, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 2.20313, 1.79844, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 2.20313, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 2.2043, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 2.2043, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 1.825, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( 2.94688, 2.23906, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( 2.52265, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 2.57853, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 2.28894, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 2.2043, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 2.2043, 3.65469, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 2.46406, 3.65469, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( 2.2043, 2.87392, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( 2.47529, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( 0.217188, 1.16143, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( 0.217188, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( 0.093141, 0.924686, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( 0.704688, 1.475, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( 0.704688, 1.70156, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 0.829688, 1.70156, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 0.400501, 0.924648, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 0.399889, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 0.217188, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 0.217188, 1.92822, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT( 3.04531, 1.26094, 0 ) DX3DVNORM( 0, 0, -1 )  //120
DX3DVERT( 3.27969, 1.17031, 0 ) DX3DVNORM( 0, 0, -1 )  //121
DX3DVERT( 2.19859, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //122
DX3DVERT( 1.99962, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //123
DX3DVERT( 2.19063, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //124
DX3DVERT( 2.2043, 0.877453, 0 ) DX3DVNORM( 0, 0, -1 )  //125
DX3DVERT( 2.2043, 0.751682, 0 ) DX3DVNORM( 0, 0, -1 )  //126
DX3DVERT( 2.21875, 0.757813, 0 ) DX3DVNORM( 0, 0, -1 )  //127
DX3DVERT( 2.20048, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //128
DX3DVERT( 0.217188, 1.59657, 0 ) DX3DVNORM( 0, 0, -1 )  //129
DX3DVERT( 0.00174941, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //130
DX3DVERT( 0.342188, 1.48594, 0 ) DX3DVNORM( 0, 0, -1 )  //131
DX3DVERT( 3.22031, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //132
DX3DVERT( 0.865626, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //133
DX3DVERT( 0.865626, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //134
DX3DVERT( 1.44219, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //135
DX3DVERT( 1.31719, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //136
DX3DVERT( 1.31719, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //137
DX3DVERT( 0.829688, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //138
DX3DVERT( 1.09531, 1.21719, 0 ) DX3DVNORM( 0, 0, -1 )  //139
DX3DVERT( 0.829688, 1.475, 0 ) DX3DVNORM( 0, 0, -1 )  //140
DX3DVERT( 1.35625, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //141
DX3DVERT( 1.09531, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //142
DX3DVERT( 1.09531, 0.990625, 0 ) DX3DVNORM( 0, 0, -1 )  //143
DX3DVERT( -0.0320266, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //144
DX3DVERT( 1.35625, 0.742188, 0 ) DX3DVNORM( 0, 0, -1 )  //145
DX3DVERT( 1.44219, 0.762634, 0 ) DX3DVNORM( 0, 0, -1 )  //146
DX3DVERT( 1.44219, 0.502998, 0 ) DX3DVNORM( 0, 0, -1 )  //147
DX3DVERT( 0.0211369, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //148
DX3DVERT( 0.217188, 3.48281, 0 ) DX3DVNORM( 0, 0, -1 )  //149
DX3DVERT( -0.0234363, 1.79531, 0 ) DX3DVNORM( 0, 0, -1 )  //150
DX3DVERT( 0.829688, 1.95156, 0 ) DX3DVNORM( 0, 0, -1 )  //151
DX3DVERT( 0.829688, 2.17344, 0 ) DX3DVNORM( 0, 0, -1 )  //152
DX3DVERT( 1.09531, 2.17344, 0 ) DX3DVNORM( 0, 0, -1 )  //153
DX3DVERT( 1.09531, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //154
DX3DVERT( 1.35625, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //155
DX3DVERT( 0.772602, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //156
DX3DVERT( 0.732813, 1.95156, 0 ) DX3DVNORM( 0, 0, -1 )  //157
DX3DVERT( 0.699769, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //158
DX3DVERT( 0.290699, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //159
DX3DVERT( 0.248438, 2.73125, 0 ) DX3DVNORM( 0, 0, -1 )  //160
DX3DVERT( 0.782814, 2.73125, 0 ) DX3DVNORM( 0, 0, -1 )  //161
DX3DVERT( 0.829688, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //162
DX3DVERT( 0.829688, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //163
DX3DVERT( 1.44219, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //164
DX3DVERT( 1.59063, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //165
DX3DVERT( 2.73281, 0.96875, 0 ) DX3DVNORM( 0, 0, -1 )  //166
DX3DVERT( 1.825, 1.57969, 0 ) DX3DVNORM( 0, 0, -1 )  //167
DX3DVERT( 1.825, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //168
DX3DVERT( 1.5625, 0.924688, 0 ) DX3DVNORM( 0, 0, -1 )  //169
DX3DVERT( 2.20313, 1.13906, 0 ) DX3DVNORM( 0, 0, -1 )  //170
DX3DVERT( 2.20313, 1.57969, 0 ) DX3DVNORM( 0, 0, -1 )  //171
DX3DVERT( 1.5625, 1.77477, 0 ) DX3DVNORM( 0, 0, -1 )  //172
DX3DVERT( 2.64688, 1.35469, 0 ) DX3DVNORM( 0, 0, -1 )  //173
DX3DVERT( 3.1975, 0.583477, 0 ) DX3DVNORM( 0, 0, -1 )  //174
DX3DVERT( 2.91558, 0.574415, 0 ) DX3DVNORM( 0, 0, -1 )  //175
DX3DVERT( 2.05, 3.3, 0 ) DX3DVNORM( 0, 0, -1 )  //176
DX3DVERT( 1.59063, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //177
DX3DVERT( 1.59063, 2.97219, 0 ) DX3DVNORM( 0, 0, -1 )  //178
DX3DVERT( 2.05, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //179
DX3DVERT( 1.825, 2.22344, 0 ) DX3DVNORM( 0, 0, -1 )  //180
DX3DVERT( 2.175, 2.22344, 0 ) DX3DVNORM( 0, 0, -1 )  //181
DX3DVERT( 1.825, 2.00469, 0 ) DX3DVNORM( 0, 0, -1 )  //182
DX3DVERT( 1.5625, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //183
DX3DVERT( 1.825, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //184
DX3DVERT( 2.175, 2.00469, 0 ) DX3DVNORM( 0, 0, -1 )  //185
DX3DVERT( 1.5625, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //186
DX3DVERT( 3.19375, 2.15, 0 ) DX3DVNORM( 0, 0, -1 )  //187
DX3DVERT( 2.23705, 2.28969, 0 ) DX3DVNORM( 0, 0, -1 )  //188
DX3DVERT( 2.51094, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //189
DX3DVERT( 2.21406, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //190
DX3DVERT( 2.49063, 2.66094, 0 ) DX3DVNORM( 0, 0, -1 )  //191
DX3DVERT( 2.22656, 2.43125, 0 ) DX3DVNORM( 0, 0, -1 )  //192
DX3DVERT( 1.825, 0.867188, 0 ) DX3DVNORM( 0, 0, -1 )  //193
DX3DVERT( 1.5625, 0.796875, 0 ) DX3DVNORM( 0, 0, -1 )  //194
DX3DVERT( 2.1875, 3.65469, 0 ) DX3DVNORM( 0, 0, -1 )  //195
DX3DVERT( 0.417188, 1.75937, 0 ) DX3DVNORM( 0, 0, -1 )  //196
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_8_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_8_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 197 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_8_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_8_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_8_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 0, // 1 5
	5, 6, 2, // 2 8
	2, 6, 3, // 3 11
	2, 3, 0, // 4 14
	2, 7, 5, // 5 17
	8, 9, 10, // 6 20
	11, 12, 13, // 7 23
	14, 15, 16, // 8 26
	17, 18, 19, // 9 29
	20, 21, 22, // 10 32
	23, 24, 25, // 11 35
	26, 27, 28, // 12 38
	26, 29, 30, // 13 41
	31, 32, 33, // 14 44
	34, 35, 36, // 15 47
	37, 38, 39, // 16 50
	16, 40, 41, // 17 53
	42, 43, 44, // 18 56
	45, 46, 47, // 19 59
	48, 49, 50, // 20 62
	51, 52, 53, // 21 65
	54, 55, 56, // 22 68
	57, 58, 59, // 23 71
	60, 61, 62, // 24 74
	63, 64, 65, // 25 77
	66, 60, 67, // 26 80
	68, 69, 70, // 27 83
	71, 72, 73, // 28 86
	74, 75, 76, // 29 89
	77, 78, 73, // 30 92
	79, 80, 81, // 31 95
	82, 83, 79, // 32 98
	84, 85, 86, // 33 101
	76, 75, 86, // 34 104
	87, 88, 89, // 35 107
	82, 76, 89, // 36 110
	90, 91, 82, // 37 113
	87, 90, 88, // 38 116
	84, 92, 85, // 39 119
	13, 93, 94, // 40 122
	95, 96, 97, // 41 125
	98, 99, 100, // 42 128
	56, 55, 101, // 43 131
	102, 103, 104, // 44 134
	105, 106, 107, // 45 137
	108, 105, 109, // 46 140
	110, 111, 112, // 47 143
	113, 114, 115, // 48 146
	116, 20, 111, // 49 149
	117, 118, 119, // 50 152
	69, 120, 121, // 51 155
	122, 123, 124, // 52 158
	123, 125, 126, // 53 161
	125, 127, 126, // 54 164
	75, 74, 68, // 55 167
	106, 105, 128, // 56 170
	105, 108, 128, // 57 173
	118, 129, 130, // 58 176
	116, 110, 131, // 59 179
	9, 132, 10, // 60 182
	133, 134, 11, // 61 185
	135, 136, 137, // 62 188
	135, 137, 11, // 63 191
	11, 94, 135, // 64 194
	11, 137, 133, // 65 197
	138, 25, 139, // 66 200
	140, 115, 15, // 67 203
	15, 40, 16, // 68 206
	16, 141, 139, // 69 209
	16, 139, 14, // 70 212
	15, 14, 140, // 71 215
	141, 142, 143, // 72 218
	139, 141, 143, // 73 221
	139, 143, 138, // 74 224
	19, 144, 17, // 75 227
	112, 111, 20, // 76 230
	20, 22, 112, // 77 233
	25, 138, 23, // 78 236
	28, 29, 26, // 79 239
	142, 141, 145, // 80 242
	145, 146, 147, // 81 245
	30, 145, 147, // 82 248
	30, 147, 26, // 83 251
	145, 30, 142, // 84 254
	37, 148, 31, // 85 257
	31, 47, 37, // 86 260
	33, 149, 31, // 87 263
	119, 118, 130, // 88 266
	36, 150, 19, // 89 269
	19, 150, 144, // 90 272
	19, 34, 36, // 91 275
	150, 36, 119, // 92 278
	119, 130, 150, // 93 281
	39, 35, 34, // 94 284
	39, 148, 37, // 95 287
	34, 148, 39, // 96 290
	151, 152, 153, // 97 293
	153, 154, 155, // 98 296
	153, 155, 16, // 99 299
	41, 153, 16, // 100 302
	153, 41, 151, // 101 305
	44, 152, 151, // 102 308
	43, 156, 44, // 103 311
	157, 158, 42, // 104 314
	42, 44, 157, // 105 317
	151, 157, 44, // 106 320
	47, 159, 37, // 107 323
	47, 31, 149, // 108 326
	47, 149, 45, // 109 329
	49, 156, 43, // 110 332
	37, 159, 160, // 111 335
	160, 161, 48, // 112 338
	50, 160, 48, // 113 341
	160, 50, 38, // 114 344
	160, 38, 37, // 115 347
	162, 163, 49, // 116 350
	43, 50, 49, // 117 353
	49, 48, 162, // 118 356
	51, 136, 135, // 119 359
	154, 53, 52, // 120 362
	53, 163, 162, // 121 365
	162, 51, 53, // 122 368
	52, 155, 154, // 123 371
	164, 52, 51, // 124 374
	51, 165, 164, // 125 377
	166, 71, 63, // 126 380
	166, 63, 54, // 127 383
	56, 166, 54, // 128 386
	167, 95, 97, // 129 389
	59, 168, 169, // 130 392
	59, 169, 57, // 131 395
	58, 170, 59, // 132 398
	97, 171, 167, // 133 401
	57, 169, 172, // 134 404
	167, 57, 172, // 135 407
	62, 67, 60, // 136 410
	104, 103, 173, // 137 413
	173, 54, 63, // 138 416
	63, 65, 173, // 139 419
	173, 65, 104, // 140 422
	78, 77, 66, // 141 425
	64, 63, 66, // 142 428
	67, 64, 66, // 143 431
	66, 63, 78, // 144 434
	86, 75, 68, // 145 437
	70, 174, 86, // 146 440
	86, 68, 70, // 147 443
	78, 63, 71, // 148 446
	71, 73, 78, // 149 449
	81, 73, 72, // 150 452
	76, 175, 74, // 151 455
	175, 76, 81, // 152 458
	81, 72, 175, // 153 461
	73, 81, 80, // 154 464
	80, 77, 73, // 155 467
	82, 91, 83, // 156 470
	79, 81, 76, // 157 473
	79, 76, 82, // 158 476
	86, 174, 84, // 159 479
	86, 85, 89, // 160 482
	89, 76, 86, // 161 485
	89, 85, 92, // 162 488
	92, 87, 89, // 163 491
	89, 88, 82, // 164 494
	82, 88, 90, // 165 497
	94, 176, 177, // 166 500
	177, 178, 135, // 167 503
	94, 177, 135, // 168 506
	94, 11, 13, // 169 509
	176, 179, 177, // 170 512
	180, 181, 182, // 171 515
	172, 183, 182, // 172 518
	172, 182, 95, // 173 521
	95, 167, 172, // 174 524
	183, 184, 180, // 175 527
	182, 183, 180, // 176 530
	181, 185, 182, // 177 533
	135, 178, 165, // 178 536
	183, 186, 100, // 179 539
	100, 186, 165, // 180 542
	165, 98, 100, // 181 545
	100, 184, 183, // 182 548
	165, 186, 164, // 183 551
	165, 51, 135, // 184 554
	101, 187, 56, // 185 557
	104, 188, 102, // 186 560
	107, 109, 105, // 187 563
	189, 102, 188, // 188 566
	99, 98, 190, // 189 569
	191, 192, 190, // 190 572
	109, 191, 190, // 191 575
	109, 190, 108, // 192 578
	190, 192, 99, // 193 581
	8, 10, 189, // 194 584
	192, 191, 189, // 195 587
	188, 192, 189, // 196 590
	189, 191, 8, // 197 593
	115, 140, 113, // 198 596
	121, 70, 69, // 199 599
	169, 168, 193, // 200 602
	122, 125, 123, // 201 605
	126, 147, 193, // 202 608
	126, 193, 123, // 203 611
	147, 146, 194, // 204 614
	193, 194, 169, // 205 617
	194, 193, 147, // 206 620
	128, 195, 106, // 207 623
	129, 118, 117, // 208 626
	116, 111, 110, // 209 629
	131, 196, 158, // 210 632
	131, 158, 116, // 211 635
	196, 42, 158, // 212 638
	117, 196, 129, // 213 641
	196, 131, 129, // 214 644
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_8_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_8_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_8_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_8_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_8_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_8_1__ )
DX3DMODEL_START( model_Trim_Char_x_8_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_8_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_8_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 645 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_8_1__, 684922149 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_8_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_7_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_9_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_9_1___initialShadingGroup_0 )
DX3DVERT( 2.6138, 1.41718, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 2.6138, 1.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 2.675, 1.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 1.42266, 1.86875, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 1.42266, 1.71719, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 1.11875, 1.71719, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( 0.826563, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( 0.826563, 1.86875, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( 0.975586, 1.86875, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( 0.826563, 1.10468, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 0.975586, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 1.11875, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( 1.11875, 1.26094, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( 1.42266, 1.41718, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( 1.42266, 1.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( 1.7625, 1.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( 1.42266, 1.10468, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( 1.42266, 1.26094, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( 1.7625, 1.26094, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 2.03125, 1.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 2.03125, 1.41718, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( 2.03125, 1.26094, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( 2.01823, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 2.6138, 1.10468, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 2.6138, 1.26094, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 2.675, 1.26094, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 2.675, 1.71719, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 2.6138, 1.86875, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( 2.97031, 1.86875, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 2.97031, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 2.675, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 2.675, 1.41718, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( 2.6138, 1.71719, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 1.11875, 1.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 1.11875, 1.41718, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 0.975586, 1.10468, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 1.11875, 1.10468, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 1.7625, 1.71719, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 2.01823, 1.86875, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 1.7625, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 1.7625, 1.41718, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 2.01823, 1.10468, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 2.03125, 1.71719, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 2.03125, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 2.97031, 1.10468, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 2.6138, 3.46406, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 3.15, 3.46406, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( 2.6138, 3.22187, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 1.41875, 3.46406, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 1.41875, 3.75312, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 1.56862, 3.75312, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 0.638341, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 0.355568, 1.3948, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 0.385311, 1.98437, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 0.149429, 1.39481, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( -0.139284, 1.39479, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( -0.10197, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 0.231511, 0.270412, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 0.0687511, 0.429684, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 0.231568, 0.804722, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( 0.0505475, 0.805199, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( -0.245499, 0.805275, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 0.537578, 0.805214, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 0.287501, 0.215622, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 0.182814, 3.22187, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 0.182814, 3.16354, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( -0.0981859, 3.16354, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 0.182848, 2.42265, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 0.183365, 2.15559, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( -0.098103, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 1.19785, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 1.56862, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 1.5125, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 0.756251, 2.32969, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 0.827084, 2.33667, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 0.827084, 2.15876, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 0.977257, 2.35149, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 1.19785, 2.37326, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 1.19785, 2.35149, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 1.19785, 2.19659, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 1.56862, 2.35149, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 1.56862, 2.25972, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 1.52227, 2.25972, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 1.23125, 2.2, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 1.29054, 2.07615, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 1.29054, 2.16793, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 1.38324, 2.16793, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 1.25775, 2.07613, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( 1.23249, 2.16793, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 1.29053, 2.03703, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 1.38324, 2.07615, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 1.56862, 1.98622, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 1.38328, 2.00191, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 1.38324, 2.25972, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 1.38324, 2.35149, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 1.47593, 2.35149, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 1.47593, 2.16793, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 1.56862, 2.23343, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 1.52227, 2.22879, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 1.51563, 2.22812, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 1.51864, 2.21379, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( 1.47593, 2.21383, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( 1.52204, 2.20597, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 1.52227, 2.16793, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 1.56842, 2.17247, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 1.56862, 2.16793, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 0.231511, 3.22187, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 0.231511, 3.46406, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( 0.827084, 3.46406, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( 0.385939, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( 0.385939, 2.80937, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( 0.827084, 2.80937, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( 1.3375, 2.80937, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( 1.3375, 3.16354, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( 1.56862, 3.16354, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 2.03438, 1.97803, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 2.01823, 1.97803, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 2.01823, 1.98437, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 1.61258, 1.98437, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 1.72344, 3.75312, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT( 1.72344, 3.46406, 0 ) DX3DVNORM( 0, 0, -1 )  //120
DX3DVERT( 1.64063, 2.78125, 0 ) DX3DVNORM( 0, 0, -1 )  //121
DX3DVERT( 2.01823, 2.78125, 0 ) DX3DVNORM( 0, 0, -1 )  //122
DX3DVERT( 2.01823, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //123
DX3DVERT( 2.9125, 2.35625, 0 ) DX3DVNORM( 0, 0, -1 )  //124
DX3DVERT( 2.79219, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //125
DX3DVERT( 2.91159, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //126
DX3DVERT( 2.03334, 2.15256, 0 ) DX3DVNORM( 0, 0, -1 )  //127
DX3DVERT( 2.91159, 2.35149, 0 ) DX3DVNORM( 0, 0, -1 )  //128
DX3DVERT( 2.6138, 2.24726, 0 ) DX3DVNORM( 0, 0, -1 )  //129
DX3DVERT( 2.6138, 2.35149, 0 ) DX3DVNORM( 0, 0, -1 )  //130
DX3DVERT( 3.00574, 2.1679, 0 ) DX3DVNORM( 0, 0, -1 )  //131
DX3DVERT( 2.91159, 2.16793, 0 ) DX3DVNORM( 0, 0, -1 )  //132
DX3DVERT( 2.91152, 2.0385, 0 ) DX3DVNORM( 0, 0, -1 )  //133
DX3DVERT( 2.01823, 3.46406, 0 ) DX3DVNORM( 0, 0, -1 )  //134
DX3DVERT( 2.01823, 3.22187, 0 ) DX3DVNORM( 0, 0, -1 )  //135
DX3DVERT( 2.01823, 3.09375, 0 ) DX3DVNORM( 0, 0, -1 )  //136
DX3DVERT( 2.6138, 3.09375, 0 ) DX3DVNORM( 0, 0, -1 )  //137
DX3DVERT( 2.01823, 2.91093, 0 ) DX3DVNORM( 0, 0, -1 )  //138
DX3DVERT( 2.87813, 3.09375, 0 ) DX3DVNORM( 0, 0, -1 )  //139
DX3DVERT( 2.6138, 2.91093, 0 ) DX3DVNORM( 0, 0, -1 )  //140
DX3DVERT( -0.148437, 0.218746, 0 ) DX3DVNORM( 0, 0, -1 )  //141
DX3DVERT( -0.364062, 0.460934, 0 ) DX3DVNORM( 0, 0, -1 )  //142
DX3DVERT( 0.657813, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //143
DX3DVERT( 0.657813, 1.98437, 0 ) DX3DVNORM( 0, 0, -1 )  //144
DX3DVERT( 0.827084, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //145
DX3DVERT( 0.827084, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //146
DX3DVERT( 1.56862, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //147
DX3DVERT( 2.51406, 2.3375, 0 ) DX3DVNORM( 0, 0, -1 )  //148
DX3DVERT( 2.6138, 2.78125, 0 ) DX3DVNORM( 0, 0, -1 )  //149
DX3DVERT( 3.10781, 2.78125, 0 ) DX3DVNORM( 0, 0, -1 )  //150
DX3DVERT( 3.10781, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //151
DX3DVERT( 2.01823, 2.27847, 0 ) DX3DVNORM( 0, 0, -1 )  //152
DX3DVERT( 2.01823, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //153
DX3DVERT( 2.6138, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //154
DX3DVERT( 2.01823, 2.4519, 0 ) DX3DVNORM( 0, 0, -1 )  //155
DX3DVERT( 2.43594, 2.49219, 0 ) DX3DVNORM( 0, 0, -1 )  //156
DX3DVERT( 2.45156, 2.32187, 0 ) DX3DVNORM( 0, 0, -1 )  //157
DX3DVERT( 3.15, 3.22187, 0 ) DX3DVNORM( 0, 0, -1 )  //158
DX3DVERT( 1.3375, 3.22187, 0 ) DX3DVNORM( 0, 0, -1 )  //159
DX3DVERT( 0.827084, 3.22187, 0 ) DX3DVNORM( 0, 0, -1 )  //160
DX3DVERT( 1.64063, 3.22187, 0 ) DX3DVNORM( 0, 0, -1 )  //161
DX3DVERT( 0.182378, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //162
DX3DVERT( -0.0984375, 3.46406, 0 ) DX3DVNORM( 0, 0, -1 )  //163
DX3DVERT( 0.182814, 2.71862, 0 ) DX3DVNORM( 0, 0, -1 )  //164
DX3DVERT( 1.23125, 2.37656, 0 ) DX3DVNORM( 0, 0, -1 )  //165
DX3DVERT( 1.23125, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //166
DX3DVERT( 1.5125, 2.40312, 0 ) DX3DVNORM( 0, 0, -1 )  //167
DX3DVERT( 1.56862, 2.40854, 0 ) DX3DVNORM( 0, 0, -1 )  //168
DX3DVERT( 1.19785, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //169
DX3DVERT( 0.771876, 2.15312, 0 ) DX3DVNORM( 0, 0, -1 )  //170
DX3DVERT( 1.47593, 2.25972, 0 ) DX3DVNORM( 0, 0, -1 )  //171
DX3DVERT( 1.64063, 2.91093, 0 ) DX3DVNORM( 0, 0, -1 )  //172
DX3DVERT( 2.48205, 1.98433, 0 ) DX3DVNORM( 0, 0, -1 )  //173
DX3DVERT( 1.64063, 3.16354, 0 ) DX3DVNORM( 0, 0, -1 )  //174
DX3DVERT( 2.01823, 2.15257, 0 ) DX3DVNORM( 0, 0, -1 )  //175
DX3DVERT( 1.64063, 3.09375, 0 ) DX3DVNORM( 0, 0, -1 )  //176
DX3DVERT( 2.99044, 2.35149, 0 ) DX3DVNORM( 0, 0, -1 )  //177
DX3DVERT( 3.10781, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //178
DX3DVERT( 2.61378, 2.17423, 0 ) DX3DVNORM( 0, 0, -1 )  //179
DX3DVERT( 2.61381, 1.9904, 0 ) DX3DVNORM( 0, 0, -1 )  //180
DX3DVERT( 2.6138, 2.57031, 0 ) DX3DVNORM( 0, 0, -1 )  //181
DX3DVERT( 2.6138, 2.41353, 0 ) DX3DVNORM( 0, 0, -1 )  //182
DX3DVERT( 2.67813, 2.18906, 0 ) DX3DVNORM( 0, 0, -1 )  //183
DX3DVERT( 3.04063, 2.34843, 0 ) DX3DVNORM( 0, 0, -1 )  //184
DX3DVERT( 2.87813, 2.91093, 0 ) DX3DVNORM( 0, 0, -1 )  //185
DX3DVERT( 2.6138, 0.979687, 0 ) DX3DVNORM( 0, 0, -1 )  //186
DX3DVERT( 2.75625, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //187
DX3DVERT( 2.6138, 0.805206, 0 ) DX3DVNORM( 0, 0, -1 )  //188
DX3DVERT( 1.42266, 0.979687, 0 ) DX3DVNORM( 0, 0, -1 )  //189
DX3DVERT( 1.37656, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //190
DX3DVERT( 1.12487, 0.805206, 0 ) DX3DVNORM( 0, 0, -1 )  //191
DX3DVERT( 1.42266, 0.510414, 0 ) DX3DVNORM( 0, 0, -1 )  //192
DX3DVERT( 1.37656, 0.510414, 0 ) DX3DVNORM( 0, 0, -1 )  //193
DX3DVERT( 0.827084, 0.218746, 0 ) DX3DVNORM( 0, 0, -1 )  //194
DX3DVERT( 0.456251, 0.218746, 0 ) DX3DVNORM( 0, 0, -1 )  //195
DX3DVERT( 0.456251, 0.460934, 0 ) DX3DVNORM( 0, 0, -1 )  //196
DX3DVERT( 0.935938, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //197
DX3DVERT( 0.827084, 0.979687, 0 ) DX3DVNORM( 0, 0, -1 )  //198
DX3DVERT( 0.827084, 0.510414, 0 ) DX3DVNORM( 0, 0, -1 )  //199
DX3DVERT( 0.935938, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //200
DX3DVERT( 1.12487, 0.218746, 0 ) DX3DVNORM( 0, 0, -1 )  //201
DX3DVERT( 1.12487, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //202
DX3DVERT( 1.37656, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //203
DX3DVERT( 0.665626, 0.805206, 0 ) DX3DVNORM( 0, 0, -1 )  //204
DX3DVERT( 0.665626, 0.979687, 0 ) DX3DVNORM( 0, 0, -1 )  //205
DX3DVERT( 1.42266, 0.805206, 0 ) DX3DVNORM( 0, 0, -1 )  //206
DX3DVERT( 1.625, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //207
DX3DVERT( 2.01823, 0.805206, 0 ) DX3DVNORM( 0, 0, -1 )  //208
DX3DVERT( 2.01823, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //209
DX3DVERT( 3.20938, 0.218746, 0 ) DX3DVNORM( 0, 0, -1 )  //210
DX3DVERT( 2.6138, 0.218746, 0 ) DX3DVNORM( 0, 0, -1 )  //211
DX3DVERT( 2.75625, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //212
DX3DVERT( 2.6138, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //213
DX3DVERT( 2.3125, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //214
DX3DVERT( 2.01823, 0.979687, 0 ) DX3DVNORM( 0, 0, -1 )  //215
DX3DVERT( 3.0375, 0.979687, 0 ) DX3DVNORM( 0, 0, -1 )  //216
DX3DVERT( 0.827084, 0.805206, 0 ) DX3DVNORM( 0, 0, -1 )  //217
DX3DVERT( 1.12487, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //218
DX3DVERT( 0.665626, 0.460934, 0 ) DX3DVNORM( 0, 0, -1 )  //219
DX3DVERT( 0.935938, 0.510414, 0 ) DX3DVNORM( 0, 0, -1 )  //220
DX3DVERT( 1.42266, 0.218746, 0 ) DX3DVNORM( 0, 0, -1 )  //221
DX3DVERT( 2.01823, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //222
DX3DVERT( 2.01823, 0.218746, 0 ) DX3DVNORM( 0, 0, -1 )  //223
DX3DVERT( 1.625, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //224
DX3DVERT( 3.0375, 0.805206, 0 ) DX3DVNORM( 0, 0, -1 )  //225
DX3DVERT( 2.6138, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //226
DX3DVERT( 3.0375, 0.460934, 0 ) DX3DVNORM( 0, 0, -1 )  //227
DX3DVERT( 3.20938, 0.460934, 0 ) DX3DVNORM( 0, 0, -1 )  //228
DX3DVERT( 2.3125, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //229
DX3DVERT( 2.06563, 0.445309, 0 ) DX3DVNORM( 0, 0, -1 )  //230
DX3DVERT( 2.06563, 0.792187, 0 ) DX3DVNORM( 0, 0, -1 )  //231
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_9_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_9_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 232 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_9_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_9_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_9_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 5, // 1 5
	6, 7, 8, // 2 8
	9, 6, 10, // 3 11
	10, 11, 12, // 4 14
	13, 14, 15, // 5 17
	16, 17, 18, // 6 20
	19, 1, 20, // 7 23
	21, 18, 22, // 8 26
	23, 24, 25, // 9 29
	26, 27, 28, // 10 32
	29, 30, 31, // 11 35
	2, 31, 0, // 12 38
	31, 2, 29, // 13 41
	26, 32, 27, // 14 44
	28, 29, 2, // 15 47
	28, 2, 26, // 16 50
	33, 14, 34, // 17 53
	33, 10, 8, // 18 56
	5, 33, 8, // 19 59
	5, 8, 3, // 20 62
	34, 11, 10, // 21 65
	34, 10, 33, // 22 68
	14, 13, 34, // 23 71
	8, 10, 6, // 24 74
	10, 35, 9, // 25 77
	12, 17, 36, // 26 80
	12, 36, 35, // 27 83
	12, 35, 10, // 28 86
	17, 16, 36, // 29 89
	37, 3, 38, // 30 92
	22, 39, 40, // 31 95
	15, 40, 13, // 32 98
	40, 15, 22, // 33 101
	37, 4, 3, // 34 104
	15, 19, 22, // 35 107
	15, 37, 38, // 36 110
	18, 39, 22, // 37 113
	18, 21, 41, // 38 116
	18, 41, 16, // 39 119
	27, 32, 42, // 40 122
	20, 43, 22, // 41 125
	20, 22, 19, // 42 128
	1, 0, 20, // 43 131
	19, 15, 42, // 44 134
	42, 15, 38, // 45 137
	42, 38, 27, // 46 140
	22, 43, 21, // 47 143
	21, 24, 23, // 48 146
	23, 41, 21, // 49 149
	25, 30, 29, // 50 152
	25, 44, 23, // 51 155
	29, 44, 25, // 52 158
	45, 46, 47, // 53 161
	48, 49, 50, // 54 164
	51, 52, 53, // 55 167
	54, 55, 56, // 56 170
	57, 58, 59, // 57 173
	60, 61, 55, // 58 176
	62, 63, 57, // 59 179
	62, 59, 52, // 60 182
	64, 65, 66, // 61 185
	67, 68, 56, // 62 188
	69, 66, 65, // 63 191
	70, 71, 72, // 64 194
	73, 74, 75, // 65 197
	76, 77, 78, // 66 200
	78, 79, 75, // 67 203
	80, 81, 82, // 68 206
	83, 79, 78, // 69 209
	84, 85, 86, // 70 212
	87, 88, 85, // 71 215
	89, 87, 84, // 72 218
	89, 84, 90, // 73 221
	91, 92, 90, // 74 224
	93, 94, 95, // 75 227
	96, 86, 93, // 76 230
	97, 98, 82, // 77 233
	99, 100, 101, // 78 236
	102, 103, 96, // 79 239
	104, 105, 103, // 80 242
	106, 107, 108, // 81 245
	109, 110, 111, // 82 248
	112, 113, 114, // 83 251
	115, 116, 117, // 84 254
	116, 118, 117, // 85 257
	50, 119, 120, // 86 260
	118, 91, 105, // 87 263
	121, 122, 123, // 88 266
	124, 125, 126, // 89 269
	127, 115, 117, // 90 272
	125, 124, 128, // 91 275
	129, 130, 128, // 92 278
	131, 132, 128, // 93 281
	131, 133, 132, // 94 284
	134, 45, 135, // 95 287
	136, 137, 138, // 96 290
	137, 139, 140, // 97 293
	60, 141, 142, // 98 296
	143, 144, 53, // 99 299
	145, 146, 70, // 100 302
	147, 121, 123, // 101 305
	130, 129, 148, // 102 308
	122, 149, 123, // 103 311
	150, 151, 126, // 104 314
	152, 97, 81, // 105 317
	153, 123, 154, // 106 320
	155, 156, 157, // 107 323
	46, 158, 47, // 108 326
	159, 160, 108, // 109 329
	114, 113, 159, // 110 332
	114, 159, 48, // 111 335
	48, 161, 114, // 112 338
	108, 48, 159, // 113 341
	53, 144, 51, // 114 344
	56, 162, 54, // 115 347
	55, 54, 60, // 116 350
	59, 59, 62, // 117 353
	62, 57, 59, // 118 356
	52, 51, 62, // 119 359
	107, 106, 64, // 120 362
	66, 163, 64, // 121 365
	64, 163, 107, // 122 368
	68, 162, 56, // 123 371
	69, 164, 67, // 124 374
	56, 69, 67, // 125 377
	65, 164, 69, // 126 380
	94, 165, 166, // 127 383
	167, 168, 80, // 128 386
	71, 147, 72, // 129 389
	167, 95, 70, // 130 392
	72, 167, 70, // 131 395
	80, 95, 167, // 132 398
	78, 77, 165, // 133 401
	166, 169, 70, // 134 404
	166, 70, 95, // 135 407
	95, 94, 166, // 136 410
	165, 94, 78, // 137 413
	75, 170, 73, // 138 416
	75, 74, 76, // 139 419
	76, 78, 75, // 140 422
	171, 95, 80, // 141 425
	82, 171, 80, // 142 428
	93, 86, 85, // 143 431
	83, 85, 88, // 144 434
	78, 94, 83, // 145 437
	85, 83, 94, // 146 440
	94, 93, 85, // 147 443
	86, 90, 84, // 148 446
	85, 84, 87, // 149 449
	90, 92, 89, // 150 452
	90, 86, 96, // 151 455
	103, 105, 91, // 152 458
	91, 90, 103, // 153 461
	96, 103, 90, // 154 464
	95, 171, 93, // 155 467
	93, 171, 101, // 156 470
	101, 96, 93, // 157 473
	82, 81, 97, // 158 476
	82, 98, 99, // 159 479
	101, 171, 99, // 160 482
	99, 171, 82, // 161 485
	96, 101, 100, // 162 488
	100, 102, 96, // 163 491
	103, 102, 104, // 164 494
	108, 160, 106, // 165 497
	111, 146, 109, // 166 500
	70, 146, 111, // 167 503
	71, 70, 112, // 168 506
	112, 172, 71, // 169 509
	111, 112, 70, // 170 512
	115, 127, 173, // 171 515
	120, 134, 135, // 172 518
	161, 174, 114, // 173 521
	161, 48, 120, // 174 524
	50, 120, 48, // 175 527
	135, 161, 120, // 176 530
	105, 104, 175, // 177 533
	105, 117, 118, // 178 536
	175, 117, 105, // 179 539
	176, 136, 172, // 180 542
	172, 112, 114, // 181 545
	71, 172, 121, // 182 548
	121, 147, 71, // 183 551
	114, 174, 176, // 184 554
	172, 114, 176, // 185 557
	136, 138, 172, // 186 560
	124, 177, 128, // 187 563
	126, 151, 178, // 188 566
	178, 124, 126, // 189 569
	117, 175, 127, // 190 572
	179, 180, 173, // 191 575
	173, 127, 179, // 192 578
	125, 181, 154, // 193 581
	128, 130, 182, // 194 584
	182, 125, 128, // 195 587
	154, 126, 125, // 196 590
	132, 133, 180, // 197 593
	128, 132, 183, // 198 596
	128, 183, 129, // 199 599
	180, 179, 183, // 200 602
	183, 132, 180, // 201 605
	177, 184, 131, // 202 608
	131, 128, 177, // 203 611
	45, 47, 135, // 204 614
	137, 140, 138, // 205 617
	139, 185, 140, // 206 620
	142, 61, 60, // 207 623
	146, 145, 143, // 208 626
	109, 146, 143, // 209 629
	53, 109, 143, // 210 632
	70, 169, 145, // 211 635
	123, 153, 147, // 212 638
	148, 182, 130, // 213 641
	149, 154, 123, // 214 644
	126, 154, 149, // 215 647
	126, 149, 150, // 216 650
	80, 168, 155, // 217 653
	81, 155, 152, // 218 656
	155, 81, 80, // 219 659
	154, 181, 153, // 220 662
	157, 152, 155, // 221 665
	186, 187, 188, // 222 668
	189, 190, 191, // 223 671
	192, 193, 190, // 224 674
	194, 195, 196, // 225 677
	197, 198, 191, // 226 680
	194, 199, 200, // 227 683
	201, 202, 203, // 228 686
	204, 205, 198, // 229 689
	206, 189, 207, // 230 692
	208, 209, 207, // 231 695
	210, 211, 212, // 232 698
	188, 213, 214, // 233 701
	215, 186, 208, // 234 704
	216, 187, 186, // 235 707
	198, 197, 217, // 236 710
	191, 198, 189, // 237 713
	190, 218, 191, // 238 716
	190, 189, 206, // 239 719
	190, 206, 192, // 240 722
	204, 217, 199, // 241 725
	219, 199, 194, // 242 728
	194, 196, 219, // 243 731
	199, 219, 204, // 244 734
	191, 218, 197, // 245 737
	197, 220, 199, // 246 740
	199, 217, 197, // 247 743
	199, 220, 200, // 248 746
	200, 202, 201, // 249 749
	201, 194, 200, // 250 752
	203, 193, 192, // 251 755
	203, 192, 221, // 252 758
	203, 221, 201, // 253 761
	198, 217, 204, // 254 764
	215, 207, 189, // 255 767
	222, 223, 221, // 256 770
	207, 224, 192, // 257 773
	207, 192, 206, // 258 776
	207, 215, 208, // 259 779
	221, 192, 224, // 260 782
	224, 222, 221, // 261 785
	187, 216, 225, // 262 788
	211, 226, 212, // 263 791
	227, 228, 210, // 264 794
	210, 212, 227, // 265 797
	187, 213, 188, // 266 800
	227, 212, 187, // 267 803
	187, 225, 227, // 268 806
	229, 226, 211, // 269 809
	230, 231, 214, // 270 812
	231, 209, 208, // 271 815
	214, 231, 208, // 272 818
	214, 186, 188, // 273 821
	214, 229, 230, // 274 824
	223, 222, 230, // 275 827
	223, 230, 229, // 276 830
	229, 211, 223, // 277 833
	186, 214, 208, // 278 836
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_9_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_9_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_9_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_9_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_9_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_9_1__ )
DX3DMODEL_START( model_Trim_Char_x_9_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_9_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_9_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 837 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_9_1__, 687007285 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_9_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_8_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_10_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_10_1___initialShadingGroup_0 )
DX3DVERT( 3.02969, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 3.26719, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 3.26719, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 3.02969, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 3.03052, 0.881878, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 2.96263, 0.881874, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( 2.125, 0.254688, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( 2.11719, 0.515625, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( 2.55646, 0.496162, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( 3.02163, 0.538593, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 2.96263, 0.538593, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 2.73828, 0.776901, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( 2.73799, 0.881878, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( 2.81035, 0.452774, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( 2.81035, 0.538593, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( 2.73421, 0.452774, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( 2.65808, 0.233997, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( 2.65807, 0.366955, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( 2.73421, 0.366955, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 2.71785, 0.538532, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 2.73421, 0.538593, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( 2.73421, 0.495682, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( 2.65807, 0.452774, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 2.69614, 0.452774, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 2.65811, 0.503067, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 2.69601, 0.515518, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 2.69614, 0.495682, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 2.65807, 0.495682, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( 2.96239, 0.31176, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 2.81027, 0.245827, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 2.81035, 0.366955, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 2.96263, 0.366955, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( 1.49219, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 1.49219, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 2.04896, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 1.49219, 2.80156, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( 2.04896, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( 2.7375, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 2.7375, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 3.02969, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 2.65807, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 2.04896, 2.80156, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 2.65807, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 3.26719, 2.80156, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 3.02969, 2.80156, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 2.7375, 3.0625, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 2.7375, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( 3.02969, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 2.63206, 0.233829, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 3.03035, 0.779861, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 2.65807, 2.80156, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 2.7375, 2.80156, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 2.04896, 1.99488, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 2.28559, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 2.04896, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( 2.41719, 1.30312, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( 2.17188, 1.17812, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 2.04896, 1.42875, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 1.97506, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 1.63581, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( 1.81719, 2.36406, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( 1.88839, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 1.57813, 2.22031, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 1.43984, 3.59947, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 1.53906, 3.58437, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 1.43984, 3.066, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( 1.097, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 1.25156, 3.62812, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 1.02813, 0.881874, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( 1.02813, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 1.31719, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 0.104688, 0.881874, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 0.104688, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 0.221615, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 0.104688, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 0.221615, 0.881874, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 0.837422, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 0.889064, 1.44062, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 0.678126, 1.29531, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 0.221615, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 0.385939, 0.881874, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 1.02813, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 1.31719, 0.881874, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 0.104688, 2.94844, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 0.104688, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 0.221615, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 0.104688, 1.84531, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 0.016013, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( -0.251188, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 0.0968765, 2.69531, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 0.401563, 2.69531, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 0.221615, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 1.31719, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 0.579665, 1.56858, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 0.385939, 2.10625, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 0.689064, 1.95469, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 0.385939, 2.94844, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 0.221615, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 0.576051, 2.25499, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 0.979883, 2.58431, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 1.31719, 2.625, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( -0.218749, 1.02187, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( -0.3875, 1.28437, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 0.385939, 1.56844, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 0.979883, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 0.843269, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 1.40931, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 0.385939, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( 1.31719, 0.195313, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( -0.312499, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( -0.312499, 2.94844, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( -0.00549648, 2.255, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( -0.312499, 2.69531, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( 1.02813, 2.09063, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( 0.979883, 1.95937, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 0.826563, 1.59531, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 0.767189, 2.94844, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 0.767189, 2.94156, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 0.385939, 3.6125, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 0.767189, 2.69531, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_10_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_10_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 120 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_10_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_10_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_10_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 5, // 1 5
	6, 7, 8, // 2 8
	9, 10, 5, // 3 11
	11, 12, 5, // 4 14
	13, 14, 10, // 5 17
	14, 13, 15, // 6 20
	16, 17, 18, // 7 23
	19, 20, 21, // 8 26
	17, 22, 23, // 9 29
	24, 25, 26, // 10 32
	22, 27, 26, // 11 35
	23, 26, 21, // 12 38
	18, 15, 13, // 13 41
	28, 29, 30, // 14 44
	9, 28, 31, // 15 47
	32, 33, 34, // 16 50
	35, 32, 36, // 17 53
	37, 38, 39, // 18 56
	36, 34, 40, // 19 59
	41, 36, 42, // 20 62
	2, 43, 44, // 21 65
	45, 46, 47, // 22 68
	42, 40, 45, // 23 71
	42, 45, 0, // 24 74
	0, 44, 42, // 25 77
	47, 0, 45, // 26 80
	12, 37, 3, // 27 83
	5, 12, 3, // 28 86
	8, 24, 27, // 29 89
	17, 16, 48, // 30 92
	17, 48, 6, // 31 95
	6, 8, 17, // 32 98
	22, 17, 8, // 33 101
	8, 27, 22, // 34 104
	5, 4, 49, // 35 107
	49, 9, 5, // 36 110
	20, 19, 11, // 37 113
	5, 10, 11, // 38 116
	11, 10, 14, // 39 119
	14, 20, 11, // 40 122
	10, 31, 30, // 41 125
	10, 30, 13, // 42 128
	21, 20, 14, // 43 131
	14, 15, 21, // 44 134
	30, 29, 16, // 45 137
	18, 30, 16, // 46 140
	21, 26, 25, // 47 143
	21, 25, 19, // 48 146
	15, 18, 17, // 49 149
	23, 15, 17, // 50 152
	26, 27, 24, // 51 155
	26, 23, 22, // 52 158
	21, 15, 23, // 53 161
	13, 30, 18, // 54 164
	30, 31, 28, // 55 167
	31, 10, 9, // 56 170
	34, 36, 32, // 57 173
	36, 41, 35, // 58 176
	39, 3, 37, // 59 179
	40, 42, 36, // 60 182
	42, 50, 41, // 61 185
	38, 51, 44, // 62 188
	51, 50, 42, // 63 191
	44, 51, 42, // 64 194
	44, 0, 2, // 65 197
	44, 39, 38, // 66 200
	52, 53, 54, // 67 203
	53, 55, 56, // 68 206
	57, 58, 54, // 69 209
	59, 60, 61, // 70 212
	52, 54, 58, // 71 215
	57, 54, 53, // 72 218
	53, 56, 57, // 73 221
	62, 59, 61, // 74 224
	62, 61, 52, // 75 227
	58, 62, 52, // 76 230
	63, 64, 65, // 77 233
	66, 67, 63, // 78 236
	68, 69, 70, // 79 239
	71, 72, 73, // 80 242
	74, 71, 75, // 81 245
	76, 77, 78, // 82 248
	79, 75, 80, // 83 251
	81, 68, 82, // 84 254
	83, 84, 85, // 85 257
	86, 87, 88, // 86 260
	89, 90, 91, // 87 263
	92, 70, 69, // 88 266
	93, 94, 95, // 89 269
	96, 90, 97, // 90 272
	90, 98, 91, // 91 275
	99, 66, 100, // 92 278
	87, 101, 102, // 93 281
	75, 73, 103, // 94 284
	99, 104, 105, // 95 287
	65, 106, 66, // 96 290
	66, 63, 65, // 97 293
	70, 82, 68, // 98 296
	73, 75, 71, // 99 299
	75, 79, 74, // 100 302
	78, 93, 76, // 101 305
	80, 107, 79, // 102 308
	82, 108, 81, // 103 311
	109, 110, 83, // 104 314
	83, 89, 109, // 105 317
	85, 97, 83, // 106 320
	73, 72, 86, // 107 323
	88, 111, 86, // 108 326
	86, 111, 91, // 109 329
	86, 91, 73, // 110 332
	91, 111, 89, // 111 335
	89, 112, 109, // 112 338
	89, 83, 97, // 113 341
	113, 114, 104, // 114 344
	113, 104, 92, // 115 347
	92, 69, 113, // 116 350
	94, 103, 73, // 117 353
	105, 104, 114, // 118 356
	115, 76, 93, // 119 359
	95, 114, 115, // 120 362
	95, 115, 93, // 121 365
	114, 95, 105, // 122 368
	98, 95, 94, // 123 371
	91, 98, 94, // 124 374
	73, 91, 94, // 125 377
	96, 116, 117, // 126 380
	85, 118, 96, // 127 383
	96, 97, 85, // 128 386
	117, 119, 90, // 129 389
	90, 96, 117, // 130 392
	90, 89, 97, // 131 395
	66, 106, 100, // 132 398
	92, 104, 99, // 133 401
	99, 100, 92, // 134 404
	102, 88, 87, // 135 407
	103, 80, 75, // 136 410
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_10_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_10_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_10_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_10_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_10_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_10_1__ )
DX3DMODEL_START( model_Trim_Char_x_10_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_10_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_10_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 411 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_10_1__, 3902015397 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_10_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_9_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_Trim_Char_x_11_1__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



#if ((PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_TRILIST ) || ((PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP))  || (PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_INDEXSTRIP)


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERT_START( VN, vertexbuff_Trim_Char_x_11_1___initialShadingGroup_0 )
DX3DVERT( 2.52917, 3.50312, 0 ) DX3DVNORM( 0, 0, -1 )  //0
DX3DVERT( 2.84688, 3.50312, 0 ) DX3DVNORM( 0, 0, -1 )  //1
DX3DVERT( 2.52917, 3.28125, 0 ) DX3DVNORM( 0, 0, -1 )  //2
DX3DVERT( 1.23906, 3.1375, 0 ) DX3DVNORM( 0, 0, -1 )  //3
DX3DVERT( 1.23906, 3.71406, 0 ) DX3DVNORM( 0, 0, -1 )  //4
DX3DVERT( 1.37188, 3.71406, 0 ) DX3DVNORM( 0, 0, -1 )  //5
DX3DVERT( 1.37187, 1.83105, 0 ) DX3DVNORM( 0, 0, -1 )  //6
DX3DVERT( 1.08255, 1.89659, 0 ) DX3DVNORM( 0, 0, -1 )  //7
DX3DVERT( 1.22721, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //8
DX3DVERT( -0.0417779, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //9
DX3DVERT( 0.214584, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //10
DX3DVERT( 0.214584, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //11
DX3DVERT( 0.105602, 0.831249, 0 ) DX3DVNORM( 0, 0, -1 )  //12
DX3DVERT( -0.137499, 0.254688, 0 ) DX3DVNORM( 0, 0, -1 )  //13
DX3DVERT( -0.364062, 0.496876, 0 ) DX3DVNORM( 0, 0, -1 )  //14
DX3DVERT( -0.2214, 0.831245, 0 ) DX3DVNORM( 0, 0, -1 )  //15
DX3DVERT( -0.0863654, 1.40783, 0 ) DX3DVNORM( 0, 0, -1 )  //16
DX3DVERT( 1.37188, 0.526062, 0 ) DX3DVNORM( 0, 0, -1 )  //17
DX3DVERT( 0.79323, 0.356396, 0 ) DX3DVNORM( 0, 0, -1 )  //18
DX3DVERT( 0.79323, 0.616966, 0 ) DX3DVNORM( 0, 0, -1 )  //19
DX3DVERT( 0.334376, 0.254688, 0 ) DX3DVNORM( 0, 0, -1 )  //20
DX3DVERT( 0.253126, 0.496876, 0 ) DX3DVNORM( 0, 0, -1 )  //21
DX3DVERT( 0.354688, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //22
DX3DVERT( 0.354688, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //23
DX3DVERT( 0.79323, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //24
DX3DVERT( 0.79323, 1.13664, 0 ) DX3DVNORM( 0, 0, -1 )  //25
DX3DVERT( 0.654688, 1.24531, 0 ) DX3DVNORM( 0, 0, -1 )  //26
DX3DVERT( 0.79323, 1.34922, 0 ) DX3DVNORM( 0, 0, -1 )  //27
DX3DVERT( 0.79323, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //28
DX3DVERT( 1.08255, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //29
DX3DVERT( 0.943751, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //30
DX3DVERT( 1.08255, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //31
DX3DVERT( 1.08255, 1.9123, 0 ) DX3DVNORM( 0, 0, -1 )  //32
DX3DVERT( 1.06486, 1.91229, 0 ) DX3DVNORM( 0, 0, -1 )  //33
DX3DVERT( 1.08255, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //34
DX3DVERT( 1.37188, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //35
DX3DVERT( -0.0359365, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //36
DX3DVERT( -0.0359365, 3.07813, 0 ) DX3DVNORM( 0, 0, -1 )  //37
DX3DVERT( 0.214584, 3.07813, 0 ) DX3DVNORM( 0, 0, -1 )  //38
DX3DVERT( 1.32188, 2.30156, 0 ) DX3DVNORM( 0, 0, -1 )  //39
DX3DVERT( 1.32188, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //40
DX3DVERT( 1.22721, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //41
DX3DVERT( 0.334376, 2.43906, 0 ) DX3DVNORM( 0, 0, -1 )  //42
DX3DVERT( 0.79323, 2.4773, 0 ) DX3DVNORM( 0, 0, -1 )  //43
DX3DVERT( 0.79323, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //44
DX3DVERT( 1.02813, 2.49688, 0 ) DX3DVNORM( 0, 0, -1 )  //45
DX3DVERT( 1.02813, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //46
DX3DVERT( 1.08255, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //47
DX3DVERT( 1.02714, 2.14249, 0 ) DX3DVNORM( 0, 0, -1 )  //48
DX3DVERT( 1.08255, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //49
DX3DVERT( 1.08255, 2.12852, 0 ) DX3DVNORM( 0, 0, -1 )  //50
DX3DVERT( 1.32174, 2.16332, 0 ) DX3DVNORM( 0, 0, -1 )  //51
DX3DVERT( 1.33571, 2.09248, 0 ) DX3DVNORM( 0, 0, -1 )  //52
DX3DVERT( 1.22721, 2.12852, 0 ) DX3DVNORM( 0, 0, -1 )  //53
DX3DVERT( 1.29954, 2.12852, 0 ) DX3DVNORM( 0, 0, -1 )  //54
DX3DVERT( 1.29954, 2.09248, 0 ) DX3DVNORM( 0, 0, -1 )  //55
DX3DVERT( 1.22721, 2.05645, 0 ) DX3DVNORM( 0, 0, -1 )  //56
DX3DVERT( 1.29954, 2.05645, 0 ) DX3DVNORM( 0, 0, -1 )  //57
DX3DVERT( 1.37188, 2.05645, 0 ) DX3DVNORM( 0, 0, -1 )  //58
DX3DVERT( 1.37188, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //59
DX3DVERT( 1.29954, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //60
DX3DVERT( 1.32408, 2.12851, 0 ) DX3DVNORM( 0, 0, -1 )  //61
DX3DVERT( 1.33571, 2.05645, 0 ) DX3DVNORM( 0, 0, -1 )  //62
DX3DVERT( 0.260938, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //63
DX3DVERT( 1.37188, 3.1375, 0 ) DX3DVNORM( 0, 0, -1 )  //64
DX3DVERT( 1.37188, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //65
DX3DVERT( 1.32188, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //66
DX3DVERT( 2.94351, 1.98434, 0 ) DX3DVNORM( 0, 0, -1 )  //67
DX3DVERT( 2.89085, 1.92387, 0 ) DX3DVNORM( 0, 0, -1 )  //68
DX3DVERT( 2.89082, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //69
DX3DVERT( 1.37188, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //70
DX3DVERT( 1.52813, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //71
DX3DVERT( 1.95052, 0.831249, 0 ) DX3DVNORM( 0, 0, -1 )  //72
DX3DVERT( 1.95052, 0.524818, 0 ) DX3DVNORM( 0, 0, -1 )  //73
DX3DVERT( 1.66094, 0.635937, 0 ) DX3DVNORM( 0, 0, -1 )  //74
DX3DVERT( 1.37188, 0.831249, 0 ) DX3DVNORM( 0, 0, -1 )  //75
DX3DVERT( 1.37188, 1.07077, 0 ) DX3DVNORM( 0, 0, -1 )  //76
DX3DVERT( 1.66875, 0.917187, 0 ) DX3DVNORM( 0, 0, -1 )  //77
DX3DVERT( 3.10781, 0.503124, 0 ) DX3DVNORM( 0, 0, -1 )  //78
DX3DVERT( 3.02969, 0.254688, 0 ) DX3DVNORM( 0, 0, -1 )  //79
DX3DVERT( 2.52917, 0.356903, 0 ) DX3DVNORM( 0, 0, -1 )  //80
DX3DVERT( 2.52917, 0.621571, 0 ) DX3DVNORM( 0, 0, -1 )  //81
DX3DVERT( 2.52917, 1.83651, 0 ) DX3DVNORM( 0, 0, -1 )  //82
DX3DVERT( 1.95052, 1.82634, 0 ) DX3DVNORM( 0, 0, -1 )  //83
DX3DVERT( 1.95052, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //84
DX3DVERT( 2.52917, 1.17024, 0 ) DX3DVNORM( 0, 0, -1 )  //85
DX3DVERT( 2.05279, 0.831249, 0 ) DX3DVNORM( 0, 0, -1 )  //86
DX3DVERT( 1.95052, 1.06982, 0 ) DX3DVNORM( 0, 0, -1 )  //87
DX3DVERT( 2.72188, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //88
DX3DVERT( 2.52917, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //89
DX3DVERT( 2.81849, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //90
DX3DVERT( 2.52917, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //91
DX3DVERT( 2.67383, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //92
DX3DVERT( 2.52917, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //93
DX3DVERT( 2.81849, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //94
DX3DVERT( 3.04531, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //95
DX3DVERT( 2.87023, 1.91224, 0 ) DX3DVNORM( 0, 0, -1 )  //96
DX3DVERT( 2.81849, 1.9123, 0 ) DX3DVNORM( 0, 0, -1 )  //97
DX3DVERT( 2.81849, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //98
DX3DVERT( 2.81848, 1.88868, 0 ) DX3DVNORM( 0, 0, -1 )  //99
DX3DVERT( 1.53906, 3.50312, 0 ) DX3DVNORM( 0, 0, -1 )  //100
DX3DVERT( 1.53906, 3.28125, 0 ) DX3DVNORM( 0, 0, -1 )  //101
DX3DVERT( 1.3719, 2.05938, 0 ) DX3DVNORM( 0, 0, -1 )  //102
DX3DVERT( 1.92135, 2.03588, 0 ) DX3DVNORM( 0, 0, -1 )  //103
DX3DVERT( 1.95052, 3.07813, 0 ) DX3DVNORM( 0, 0, -1 )  //104
DX3DVERT( 1.95052, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //105
DX3DVERT( 2.83125, 2.39219, 0 ) DX3DVNORM( 0, 0, -1 )  //106
DX3DVERT( 3.025, 2.36875, 0 ) DX3DVNORM( 0, 0, -1 )  //107
DX3DVERT( 3.01845, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //108
DX3DVERT( 1.95052, 2.03592, 0 ) DX3DVNORM( 0, 0, -1 )  //109
DX3DVERT( 2.725, 2.28594, 0 ) DX3DVNORM( 0, 0, -1 )  //110
DX3DVERT( 2.52917, 2.42109, 0 ) DX3DVNORM( 0, 0, -1 )  //111
DX3DVERT( 2.52917, 2.46873, 0 ) DX3DVNORM( 0, 0, -1 )  //112
DX3DVERT( 2.72368, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //113
DX3DVERT( 2.81849, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //114
DX3DVERT( 2.81849, 2.12852, 0 ) DX3DVNORM( 0, 0, -1 )  //115
DX3DVERT( 2.67163, 2.12852, 0 ) DX3DVNORM( 0, 0, -1 )  //116
DX3DVERT( 2.67383, 2.13127, 0 ) DX3DVNORM( 0, 0, -1 )  //117
DX3DVERT( 2.67383, 2.12852, 0 ) DX3DVNORM( 0, 0, -1 )  //118
DX3DVERT( 2.52926, 2.05959, 0 ) DX3DVNORM( 0, 0, -1 )  //119
DX3DVERT( 1.95052, 3.50312, 0 ) DX3DVNORM( 0, 0, -1 )  //120
DX3DVERT( 1.95052, 3.28125, 0 ) DX3DVNORM( 0, 0, -1 )  //121
DX3DVERT( 2.52917, 3.07813, 0 ) DX3DVNORM( 0, 0, -1 )  //122
DX3DVERT( 3.1, 3.07813, 0 ) DX3DVNORM( 0, 0, -1 )  //123
DX3DVERT( 3.1, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //124
DX3DVERT( 2.7875, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //125
DX3DVERT( 0.221528, 1.40782, 0 ) DX3DVNORM( 0, 0, -1 )  //126
DX3DVERT( 0.354688, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //127
DX3DVERT( 0.261026, 2.38395, 0 ) DX3DVNORM( 0, 0, -1 )  //128
DX3DVERT( 0.259102, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //129
DX3DVERT( 0.964415, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //130
DX3DVERT( 0.79323, 2.25796, 0 ) DX3DVNORM( 0, 0, -1 )  //131
DX3DVERT( 1.37188, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //132
DX3DVERT( 1.95052, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //133
DX3DVERT( 1.95052, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //134
DX3DVERT( 1.76089, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //135
DX3DVERT( 1.95052, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //136
DX3DVERT( 1.95052, 2.35904, 0 ) DX3DVNORM( 0, 0, -1 )  //137
DX3DVERT( 1.95052, 2.57714, 0 ) DX3DVNORM( 0, 0, -1 )  //138
DX3DVERT( 2.38669, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //139
DX3DVERT( 2.39844, 2.4, 0 ) DX3DVNORM( 0, 0, -1 )  //140
DX3DVERT( 2.38281, 2.61406, 0 ) DX3DVNORM( 0, 0, -1 )  //141
DX3DVERT( 0.214489, 1.3518, 0 ) DX3DVNORM( 0, 0, -1 )  //142
DX3DVERT( 2.50312, 2.43906, 0 ) DX3DVNORM( 0, 0, -1 )  //143
DX3DVERT( 2.84688, 3.28125, 0 ) DX3DVNORM( 0, 0, -1 )  //144
DX3DVERT( 1.34844, 0.784378, 0 ) DX3DVNORM( 0, 0, -1 )  //145
DX3DVERT( 1.2612, 0.831249, 0 ) DX3DVNORM( 0, 0, -1 )  //146
DX3DVERT( 0.810938, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //147
DX3DVERT( 0.79323, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //148
DX3DVERT( 1.03588, 1.98438, 0 ) DX3DVNORM( 0, 0, -1 )  //149
DX3DVERT( 0.214584, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //150
DX3DVERT( 1.32188, 2.52344, 0 ) DX3DVNORM( 0, 0, -1 )  //151
DX3DVERT( 1.37188, 2.52771, 0 ) DX3DVNORM( 0, 0, -1 )  //152
DX3DVERT( 1.37188, 2.30613, 0 ) DX3DVNORM( 0, 0, -1 )  //153
DX3DVERT( 1.32188, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //154
DX3DVERT( 0.354688, 2.22031, 0 ) DX3DVNORM( 0, 0, -1 )  //155
DX3DVERT( 1.02812, 2.27266, 0 ) DX3DVNORM( 0, 0, -1 )  //156
DX3DVERT( 1.02813, 2.27813, 0 ) DX3DVNORM( 0, 0, -1 )  //157
DX3DVERT( 0.261, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //158
DX3DVERT( 0.79323, 3.07813, 0 ) DX3DVNORM( 0, 0, -1 )  //159
DX3DVERT( 0.79323, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //160
DX3DVERT( 1.02813, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //161
DX3DVERT( 1.23906, 3.07813, 0 ) DX3DVNORM( 0, 0, -1 )  //162
DX3DVERT( 1.83281, 1.82656, 0 ) DX3DVNORM( 0, 0, -1 )  //163
DX3DVERT( 1.52813, 1.82656, 0 ) DX3DVNORM( 0, 0, -1 )  //164
DX3DVERT( 1.83281, 1.59219, 0 ) DX3DVNORM( 0, 0, -1 )  //165
DX3DVERT( 1.97656, 0.789063, 0 ) DX3DVNORM( 0, 0, -1 )  //166
DX3DVERT( 2.33594, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //167
DX3DVERT( 1.95052, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //168
DX3DVERT( 3.04531, 1.40781, 0 ) DX3DVNORM( 0, 0, -1 )  //169
DX3DVERT( 3.04531, 1.3625, 0 ) DX3DVNORM( 0, 0, -1 )  //170
DX3DVERT( 1.53906, 3.1375, 0 ) DX3DVNORM( 0, 0, -1 )  //171
DX3DVERT( 1.53906, 3.71406, 0 ) DX3DVNORM( 0, 0, -1 )  //172
DX3DVERT( 1.53906, 3.07813, 0 ) DX3DVNORM( 0, 0, -1 )  //173
DX3DVERT( 2.81849, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //174
DX3DVERT( 2.95207, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //175
DX3DVERT( 2.60485, 2.56094, 0 ) DX3DVNORM( 0, 0, -1 )  //176
DX3DVERT( 2.52917, 2.82813, 0 ) DX3DVNORM( 0, 0, -1 )  //177
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_Trim_Char_x_11_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_Trim_Char_x_11_1___initialShadingGroup_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VN, 178 )
DX3DVERTEX_END


#else
#define vertex_Trim_Char_x_11_1___initialShadingGroup_0	NULL
#define vertexbuff_Trim_Char_x_11_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_TRILIST) ) || (PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_TRILIST )


#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DINDEX_START( index_Trim_Char_x_11_1___initialShadingGroup_0 )
	0, 1, 2, // 0 2
	3, 4, 5, // 1 5
	6, 7, 8, // 2 8
	9, 10, 11, // 3 11
	12, 13, 14, // 4 14
	12, 15, 16, // 5 17
	17, 18, 19, // 6 20
	18, 20, 21, // 7 23
	22, 23, 24, // 8 26
	25, 26, 27, // 9 29
	28, 29, 30, // 10 32
	31, 32, 33, // 11 35
	28, 24, 34, // 12 38
	32, 7, 33, // 13 41
	34, 35, 29, // 14 44
	36, 37, 38, // 15 47
	10, 9, 36, // 16 50
	39, 40, 41, // 17 53
	42, 43, 44, // 18 56
	45, 46, 47, // 19 59
	48, 49, 50, // 20 62
	41, 40, 51, // 21 65
	50, 49, 41, // 22 68
	8, 31, 50, // 23 71
	52, 52, 52, // 24 74
	53, 54, 55, // 25 77
	8, 56, 57, // 26 80
	58, 59, 60, // 27 83
	55, 54, 61, // 28 86
	57, 55, 52, // 29 89
	62, 52, 52, // 30 92
	63, 36, 38, // 31 95
	64, 65, 66, // 32 98
	67, 68, 69, // 33 101
	70, 35, 71, // 34 104
	72, 73, 74, // 35 107
	75, 76, 77, // 36 110
	78, 79, 80, // 37 113
	81, 80, 73, // 38 116
	82, 83, 84, // 39 119
	85, 86, 87, // 40 122
	88, 89, 90, // 41 125
	82, 91, 92, // 42 128
	93, 94, 89, // 43 131
	94, 95, 90, // 44 134
	96, 97, 98, // 45 137
	96, 99, 97, // 46 140
	100, 101, 64, // 47 143
	58, 102, 103, // 48 146
	104, 105, 65, // 49 149
	106, 107, 108, // 50 152
	91, 84, 109, // 51 155
	110, 111, 112, // 52 158
	113, 114, 115, // 53 161
	116, 117, 118, // 54 164
	92, 91, 119, // 55 167
	92, 118, 115, // 56 170
	108, 67, 69, // 57 173
	120, 0, 121, // 58 176
	104, 122, 105, // 59 179
	123, 124, 125, // 60 182
	126, 11, 10, // 61 185
	127, 22, 28, // 62 188
	128, 129, 10, // 63 191
	130, 131, 44, // 64 194
	132, 70, 133, // 65 197
	134, 93, 133, // 66 200
	135, 136, 137, // 67 203
	136, 135, 138, // 68 206
	139, 140, 137, // 69 209
	138, 141, 139, // 70 212
	126, 142, 11, // 71 215
	112, 111, 143, // 72 218
	1, 144, 2, // 73 221
	5, 64, 3, // 74 224
	32, 31, 8, // 75 227
	60, 59, 6, // 76 230
	6, 8, 60, // 77 233
	8, 7, 32, // 78 236
	11, 16, 9, // 79 239
	14, 15, 12, // 80 242
	16, 11, 142, // 81 245
	142, 12, 16, // 82 248
	145, 146, 75, // 83 251
	145, 75, 17, // 84 254
	19, 145, 17, // 85 257
	21, 19, 18, // 86 260
	24, 28, 22, // 87 263
	76, 75, 146, // 88 266
	29, 70, 132, // 89 269
	147, 148, 28, // 90 272
	28, 30, 147, // 91 275
	132, 30, 29, // 92 278
	25, 27, 147, // 93 281
	25, 30, 76, // 94 284
	146, 25, 76, // 95 287
	147, 30, 25, // 96 290
	33, 149, 31, // 97 293
	34, 29, 28, // 98 296
	35, 70, 29, // 99 299
	36, 63, 150, // 100 302
	36, 128, 10, // 101 305
	151, 152, 153, // 102 308
	41, 49, 47, // 103 311
	41, 47, 39, // 104 314
	47, 154, 151, // 105 317
	153, 39, 151, // 106 320
	151, 39, 47, // 107 323
	44, 131, 155, // 108 326
	155, 42, 44, // 109 329
	44, 43, 45, // 110 332
	49, 156, 157, // 111 335
	49, 157, 45, // 112 338
	47, 49, 45, // 113 341
	45, 157, 130, // 114 344
	130, 44, 45, // 115 347
	48, 156, 49, // 116 350
	50, 31, 149, // 117 353
	149, 48, 50, // 118 356
	51, 61, 54, // 119 359
	54, 53, 41, // 120 362
	41, 51, 54, // 121 365
	41, 53, 50, // 122 368
	50, 53, 56, // 123 371
	56, 8, 50, // 124 374
	57, 56, 53, // 125 377
	55, 57, 53, // 126 380
	57, 60, 8, // 127 383
	60, 57, 62, // 128 386
	62, 58, 60, // 129 389
	52, 52, 55, // 130 392
	61, 52, 55, // 131 395
	52, 62, 57, // 132 398
	102, 58, 62, // 133 401
	62, 52, 102, // 134 404
	63, 158, 150, // 135 407
	159, 160, 63, // 136 410
	63, 38, 159, // 137 413
	47, 46, 161, // 138 416
	162, 3, 64, // 139 419
	162, 161, 159, // 140 422
	66, 162, 64, // 141 425
	161, 160, 159, // 142 428
	161, 66, 154, // 143 431
	161, 154, 47, // 144 434
	161, 162, 66, // 145 437
	163, 103, 84, // 146 440
	71, 164, 163, // 147 443
	165, 134, 133, // 148 446
	165, 133, 70, // 149 449
	71, 165, 70, // 150 452
	163, 165, 71, // 151 455
	84, 83, 163, // 152 458
	164, 6, 59, // 153 461
	59, 163, 164, // 154 464
	74, 17, 75, // 155 467
	74, 77, 72, // 156 470
	77, 87, 72, // 157 473
	77, 74, 75, // 158 476
	80, 81, 78, // 159 479
	72, 86, 166, // 160 482
	73, 72, 166, // 161 485
	73, 166, 81, // 162 488
	84, 91, 82, // 163 491
	167, 168, 133, // 164 494
	86, 72, 87, // 165 497
	167, 89, 85, // 166 500
	85, 87, 167, // 167 503
	167, 93, 89, // 168 506
	88, 85, 89, // 169 509
	90, 169, 170, // 170 512
	170, 88, 90, // 171 515
	97, 99, 82, // 172 518
	92, 97, 82, // 173 521
	97, 92, 98, // 174 524
	94, 90, 89, // 175 527
	95, 169, 90, // 176 530
	98, 69, 68, // 177 533
	68, 96, 98, // 178 536
	100, 120, 101, // 179 539
	101, 171, 64, // 180 542
	5, 172, 100, // 181 545
	64, 5, 100, // 182 548
	120, 121, 101, // 183 551
	103, 109, 84, // 184 554
	103, 163, 59, // 185 557
	103, 59, 58, // 186 560
	64, 171, 173, // 187 563
	65, 64, 173, // 188 566
	173, 104, 65, // 189 569
	174, 175, 106, // 190 572
	106, 110, 174, // 191 575
	108, 114, 106, // 192 578
	109, 119, 91, // 193 581
	114, 113, 110, // 194 584
	112, 176, 110, // 195 587
	110, 176, 174, // 196 590
	110, 106, 114, // 197 593
	115, 118, 117, // 198 596
	117, 113, 115, // 199 599
	116, 118, 92, // 200 602
	92, 119, 116, // 201 605
	115, 98, 92, // 202 608
	115, 114, 108, // 203 611
	69, 115, 108, // 204 614
	115, 69, 98, // 205 617
	0, 2, 121, // 206 620
	122, 177, 105, // 207 623
	174, 176, 125, // 208 626
	124, 175, 125, // 209 629
	125, 177, 122, // 210 632
	122, 123, 125, // 211 635
	125, 175, 174, // 212 638
	10, 129, 126, // 213 641
	28, 148, 127, // 214 644
	150, 158, 128, // 215 647
	128, 36, 150, // 216 650
	133, 168, 132, // 217 653
	93, 167, 133, // 218 656
	153, 152, 135, // 219 659
	137, 153, 135, // 220 662
	137, 136, 139, // 221 665
	139, 136, 138, // 222 668
DX3DINDEX_END
#endif

#else
#define index_Trim_Char_x_11_1___initialShadingGroup_0	NULL
#endif




#if ((PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_INDEXSTRIP) ) || (PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_Trim_Char_x_11_1___initialShadingGroup_0_INDEXSTRIP 	NULL
#endif




#if ((PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_FOLLOWALL) && (PT_ALL_TextKanji2nd5Mplus2p_tst__ == PT_VERTEXSTRIP) ) || (PT_Trim_Char_x_11_1___initialShadingGroup_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_Trim_Char_x_11_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#define vertexbuff_Trim_Char_x_11_1___initialShadingGroup_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_Trim_Char_x_11_1__ )
DX3DMODEL_START( model_Trim_Char_x_11_1___initialShadingGroup_0 )
DX3DMODEL_VERTEX( vertex_Trim_Char_x_11_1___initialShadingGroup_0 )
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DMODEL_INDEX( index_Trim_Char_x_11_1___initialShadingGroup_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 669 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_initialShadingGroup )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_Trim_Char_x_11_1__, 3904100533 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_Trim_Char_x_11_1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_Trim_Char_x_10_1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_root__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



DX3DOBJECT_START_HASH( object_root__, 680586657 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_NULL__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, 0, 
	0, 0, 0,                // 0, 0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_Trim_Char_x_11_1__ )
DX3DOBJECT_END




//////////// export info ///////////////
DX3DOBJECT_JOINTCOUNT( jointcnt_TextKanji2nd5Mplus2p_tst___0, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_TextKanji2nd5Mplus2p_tst___1, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_TextKanji2nd5Mplus2p_tst___2, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_TextKanji2nd5Mplus2p_tst___3, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_TextKanji2nd5Mplus2p_tst___4, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_TextKanji2nd5Mplus2p_tst___5, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_TextKanji2nd5Mplus2p_tst___6, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_TextKanji2nd5Mplus2p_tst___7, 0 )




/////////////////////////////////////////////
#if ( !BINARY_TextKanji2nd5Mplus2p_tst__ )
DX3DBINARYFILE( binaryfile_TextKanji2nd5Mplus2p_tst__, NULL )
#else
DX3DBINARYFILE( binaryfile_TextKanji2nd5Mplus2p_tst__, "Z:/toshi2/lib/dx/dx3dtext/maya/" )
#endif


DX3DBINARYSIZE( binarysize_TextKanji2nd5Mplus2p_tst__, 0 )


