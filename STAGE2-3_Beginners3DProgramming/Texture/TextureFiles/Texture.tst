//skipped groundPlane_transform
//skipped Manipulator1
//skipped UniversalManip
//skipped CubeCompass
/////////////////////////////////////////////
// object_DXT5__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	6.18694, 0.963706, -0.664807, 1
#endif

DX3DTEXTURE_START( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkdxt5_DDS__ )
DX3DTEXTURE_NAME( "Z:/toshi2/ATEST/ATEST/ATESTNameSpace/STAGE2-3_Beginners3DProgramming/Texture/TextureFiles/checkdxt5.DDS" )
DX3DTEXTURE_END


DX3DMATERIALTEX_START( materialtex_texa_DXT5_ )
DX3DMATERIALTEX_NAME( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkdxt5_DDS__ )
DX3DMATERIALTEX_END


DX3DMATERIAL_START( material_texa_DXT5_ )
DX3DMATERIAL_DIFF( 1, 0.8, 0.8, 0.8 )
DX3DMATERIAL_SPEC( 0.5, 0.5, 0.5, 0.5 )
DX3DMATERIAL_TEX( materialtex_texa_DXT5_ )
DX3DMATERIAL_SHADER( TEXA )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_DXT5___texa_DXT5__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_DXT5___texa_DXT5__0 == PT_TRILIST ) || ((PT_DXT5___texa_DXT5__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP))  || (PT_DXT5___texa_DXT5__0 == PT_INDEXSTRIP)


#if ( !BINARY_Texture_tst__ )
DX3DVERT_START( VNUV, vertexbuff_DXT5___texa_DXT5__0 )
DX3DVERT( 0.668037, -0.963706, 0.217058 ) DX3DVNORM( -0.951057, 0, -0.309016 ) DX3DVUV( 0.688454, 0.801835 )  //0
DX3DVERT( 0.702415, -0.963706, -2.25461e-008 ) DX3DVNORM( -1, 0, -1.13906e-006 ) DX3DVUV( 0.698152, 0.801835 )  //1
DX3DVERT( 0.702415, 0.963706, -2.25461e-008 ) DX3DVNORM( -1, 0, -1.13906e-006 ) DX3DVUV( 0.698152, 0.198165 )  //2
DX3DVERT( 0.668037, 0.963706, 0.217058 ) DX3DVNORM( -0.951057, 0, -0.309016 ) DX3DVUV( 0.688454, 0.198165 )  //3
DX3DVERT( 0.568266, -0.963706, 0.41287 ) DX3DVNORM( -0.809017, 0, -0.587785 ) DX3DVUV( 0.660308, 0.801835 )  //4
DX3DVERT( 0.568266, 0.963706, 0.41287 ) DX3DVNORM( -0.809017, 0, -0.587785 ) DX3DVUV( 0.660308, 0.198165 )  //5
DX3DVERT( 0.412869, -0.963706, 0.568266 ) DX3DVNORM( -0.587785, 0, -0.809017 ) DX3DVUV( 0.616471, 0.801835 )  //6
DX3DVERT( 0.412869, 0.963706, 0.568266 ) DX3DVNORM( -0.587785, 0, -0.809017 ) DX3DVUV( 0.616471, 0.198165 )  //7
DX3DVERT( 0.217058, -0.963706, 0.668037 ) DX3DVNORM( -0.309017, 0, -0.951056 ) DX3DVUV( 0.561232, 0.801835 )  //8
DX3DVERT( 0.217058, 0.963706, 0.668037 ) DX3DVNORM( -0.309017, 0, -0.951056 ) DX3DVUV( 0.561232, 0.198165 )  //9
DX3DVERT( 0, -0.963706, 0.702416 ) DX3DVNORM( -3.09282e-007, 0, -1 ) DX3DVUV( 0.5, 0.801835 )  //10
DX3DVERT( 0, 0.963706, 0.702416 ) DX3DVNORM( -3.09282e-007, 0, -1 ) DX3DVUV( 0.5, 0.198165 )  //11
DX3DVERT( -0.217059, -0.963706, 0.668037 ) DX3DVNORM( 0.309017, 0, -0.951056 ) DX3DVUV( 0.438768, 0.801835 )  //12
DX3DVERT( -0.217059, 0.963706, 0.668037 ) DX3DVNORM( 0.309017, 0, -0.951056 ) DX3DVUV( 0.438768, 0.198165 )  //13
DX3DVERT( -0.412869, -0.963706, 0.568266 ) DX3DVNORM( 0.587785, 0, -0.809017 ) DX3DVUV( 0.383529, 0.801835 )  //14
DX3DVERT( -0.412869, 0.963706, 0.568266 ) DX3DVNORM( 0.587785, 0, -0.809017 ) DX3DVUV( 0.383529, 0.198165 )  //15
DX3DVERT( -0.568266, -0.963706, 0.41287 ) DX3DVNORM( 0.809017, 0, -0.587786 ) DX3DVUV( 0.339691, 0.801835 )  //16
DX3DVERT( -0.568266, 0.963706, 0.41287 ) DX3DVNORM( 0.809017, 0, -0.587786 ) DX3DVUV( 0.339691, 0.198165 )  //17
DX3DVERT( -0.668037, -0.963706, 0.217058 ) DX3DVNORM( 0.951056, 0, -0.309017 ) DX3DVUV( 0.311546, 0.801835 )  //18
DX3DVERT( -0.668037, 0.963706, 0.217058 ) DX3DVNORM( 0.951056, 0, -0.309017 ) DX3DVUV( 0.311546, 0.198165 )  //19
DX3DVERT( -0.702416, -0.963706, -1.79487e-008 ) DX3DVNORM( 1, 0, -0 ) DX3DVUV( 0.301848, 0.801835 )  //20
DX3DVERT( -0.702416, 0.963706, -1.79487e-008 ) DX3DVNORM( 1, 0, -0 ) DX3DVUV( 0.301848, 0.198165 )  //21
DX3DVERT( -0.668037, -0.963706, -0.217058 ) DX3DVNORM( 0.951056, 0, 0.309017 ) DX3DVUV( 0.311546, 0.801835 )  //22
DX3DVERT( -0.668037, 0.963706, -0.217058 ) DX3DVNORM( 0.951056, 0, 0.309017 ) DX3DVUV( 0.311546, 0.198165 )  //23
DX3DVERT( -0.568266, -0.963706, -0.41287 ) DX3DVNORM( 0.809017, 0, 0.587785 ) DX3DVUV( 0.339691, 0.801835 )  //24
DX3DVERT( -0.568266, 0.963706, -0.41287 ) DX3DVNORM( 0.809017, 0, 0.587785 ) DX3DVUV( 0.339691, 0.198165 )  //25
DX3DVERT( -0.41287, -0.963706, -0.568267 ) DX3DVNORM( 0.587786, 0, 0.809017 ) DX3DVUV( 0.383529, 0.801835 )  //26
DX3DVERT( -0.41287, 0.963706, -0.568267 ) DX3DVNORM( 0.587786, 0, 0.809017 ) DX3DVUV( 0.383529, 0.198165 )  //27
DX3DVERT( -0.217059, -0.963706, -0.668037 ) DX3DVNORM( 0.309017, 0, 0.951056 ) DX3DVUV( 0.438768, 0.801835 )  //28
DX3DVERT( -0.217059, 0.963706, -0.668037 ) DX3DVNORM( 0.309017, 0, 0.951056 ) DX3DVUV( 0.438768, 0.198165 )  //29
DX3DVERT( 0, -0.963706, -0.702416 ) DX3DVNORM( 1.43326e-007, 0, 1 ) DX3DVUV( 0.5, 0.801835 )  //30
DX3DVERT( 0, 0.963706, -0.702416 ) DX3DVNORM( 1.43326e-007, 0, 1 ) DX3DVUV( 0.5, 0.198165 )  //31
DX3DVERT( 0.217059, -0.963706, -0.668037 ) DX3DVNORM( -0.309017, 0, 0.951056 ) DX3DVUV( 0.561232, 0.801835 )  //32
DX3DVERT( 0.217059, 0.963706, -0.668037 ) DX3DVNORM( -0.309017, 0, 0.951056 ) DX3DVUV( 0.561232, 0.198165 )  //33
DX3DVERT( 0.41287, -0.963706, -0.568267 ) DX3DVNORM( -0.587786, 0, 0.809017 ) DX3DVUV( 0.616471, 0.801835 )  //34
DX3DVERT( 0.41287, 0.963706, -0.568267 ) DX3DVNORM( -0.587786, 0, 0.809017 ) DX3DVUV( 0.616471, 0.198165 )  //35
DX3DVERT( 0.568266, -0.963706, -0.41287 ) DX3DVNORM( -0.809017, 0, 0.587785 ) DX3DVUV( 0.660308, 0.801835 )  //36
DX3DVERT( 0.568266, 0.963706, -0.41287 ) DX3DVNORM( -0.809017, 0, 0.587785 ) DX3DVUV( 0.660308, 0.198165 )  //37
DX3DVERT( 0.668037, -0.963706, -0.217059 ) DX3DVNORM( -0.951057, 0, 0.309016 ) DX3DVUV( 0.688454, 0.801835 )  //38
DX3DVERT( 0.668037, 0.963706, -0.217059 ) DX3DVNORM( -0.951057, 0, 0.309016 ) DX3DVUV( 0.688454, 0.198165 )  //39
DX3DVERT( 0.668037, 0.963706, 0.217058 ) DX3DVNORM( 1.13375e-007, 1, 1.01261e-007 ) DX3DVUV( 0.688454, 0.198165 )  //40
DX3DVERT( 0.702415, 0.963706, -2.25461e-008 ) DX3DVNORM( 1.19209e-007, 1, 3.55271e-014 ) DX3DVUV( 0.698152, 0.198165 )  //41
DX3DVERT( 1.20242, 0.963706, -2.41824e-008 ) DX3DVNORM( 1.19209e-007, 1, 3.55271e-014 ) DX3DVUV( 0.839203, 0.198165 )  //42
DX3DVERT( 1.14357, 0.963706, 0.371567 ) DX3DVNORM( 1.13375e-007, 1, 1.01261e-007 ) DX3DVUV( 0.822601, 0.198165 )  //43
DX3DVERT( 0.568266, 0.963706, 0.41287 ) DX3DVNORM( 1.10467e-007, 1, -0 ) DX3DVUV( 0.660308, 0.198165 )  //44
DX3DVERT( 0.972775, 0.963706, 0.706762 ) DX3DVNORM( 1.10467e-007, 1, -0 ) DX3DVUV( 0.774421, 0.198165 )  //45
DX3DVERT( 0.412869, 0.963706, 0.568266 ) DX3DVNORM( 5.66964e-008, 1, -5.06303e-008 ) DX3DVUV( 0.616471, 0.198165 )  //46
DX3DVERT( 0.706762, 0.963706, 0.972775 ) DX3DVNORM( 5.66964e-008, 1, -5.06303e-008 ) DX3DVUV( 0.699378, 0.198165 )  //47
DX3DVERT( 0.217058, 0.963706, 0.668037 ) DX3DVNORM( 0, 1, -1.51891e-007 ) DX3DVUV( 0.561232, 0.198165 )  //48
DX3DVERT( 0.371567, 0.963706, 1.14357 ) DX3DVNORM( 0, 1, -1.51891e-007 ) DX3DVUV( 0.604819, 0.198165 )  //49
DX3DVERT( 0, 0.963706, 0.702416 ) DX3DVNORM( 0, 1, -1.51891e-007 ) DX3DVUV( 0.5, 0.198165 )  //50
DX3DVERT( 0, 0.963706, 1.20242 ) DX3DVNORM( 0, 1, -1.51891e-007 ) DX3DVUV( 0.5, 0.198165 )  //51
DX3DVERT( -0.217059, 0.963706, 0.668037 ) DX3DVNORM( 0, 1, -1.51891e-007 ) DX3DVUV( 0.438768, 0.198165 )  //52
DX3DVERT( -0.371567, 0.963706, 1.14357 ) DX3DVNORM( 0, 1, -1.51891e-007 ) DX3DVUV( 0.395181, 0.198165 )  //53
DX3DVERT( -0.412869, 0.963706, 0.568266 ) DX3DVNORM( 0, 1, -1.06581e-013 ) DX3DVUV( 0.383529, 0.198165 )  //54
DX3DVERT( -0.706762, 0.963706, 0.972775 ) DX3DVNORM( 0, 1, -1.06581e-013 ) DX3DVUV( 0.300622, 0.198165 )  //55
DX3DVERT( -0.568266, 0.963706, 0.41287 ) DX3DVNORM( 0, 1, 1.01261e-007 ) DX3DVUV( 0.339691, 0.198165 )  //56
DX3DVERT( -0.972775, 0.963706, 0.706762 ) DX3DVNORM( 0, 1, 1.01261e-007 ) DX3DVUV( 0.225579, 0.198165 )  //57
DX3DVERT( -0.668037, 0.963706, 0.217058 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.311546, 0.198165 )  //58
DX3DVERT( -1.14357, 0.963706, 0.371567 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.177399, 0.198165 )  //59
DX3DVERT( -0.702416, 0.963706, -1.79487e-008 ) DX3DVNORM( 0, 1, -1.01261e-007 ) DX3DVUV( 0.301848, 0.198165 )  //60
DX3DVERT( -1.20242, 0.963706, -7.5917e-008 ) DX3DVNORM( 0, 1, -1.01261e-007 ) DX3DVUV( 0.160797, 0.198165 )  //61
DX3DVERT( -0.668037, 0.963706, -0.217058 ) DX3DVNORM( 0, 1, -8.52651e-014 ) DX3DVUV( 0.311546, 0.198165 )  //62
DX3DVERT( -1.14357, 0.963706, -0.371567 ) DX3DVNORM( 0, 1, -8.52651e-014 ) DX3DVUV( 0.177399, 0.198165 )  //63
DX3DVERT( -0.568266, 0.963706, -0.41287 ) DX3DVNORM( 0, 1, 1.01261e-007 ) DX3DVUV( 0.339691, 0.198165 )  //64
DX3DVERT( -0.972775, 0.963706, -0.706762 ) DX3DVNORM( 0, 1, 1.01261e-007 ) DX3DVUV( 0.225579, 0.198165 )  //65
DX3DVERT( -0.41287, 0.963706, -0.568267 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.383529, 0.198165 )  //66
DX3DVERT( -0.706762, 0.963706, -0.972775 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.300622, 0.198165 )  //67
DX3DVERT( -0.217059, 0.963706, -0.668037 ) DX3DVNORM( 0, 1, 1.01261e-007 ) DX3DVUV( 0.438768, 0.198165 )  //68
DX3DVERT( -0.371567, 0.963706, -1.14357 ) DX3DVNORM( 0, 1, 1.01261e-007 ) DX3DVUV( 0.395181, 0.198165 )  //69
DX3DVERT( 0, 0.963706, -0.702416 ) DX3DVNORM( 0, 1, 1.01261e-007 ) DX3DVUV( 0.5, 0.198165 )  //70
DX3DVERT( 0, 0.963706, -1.20242 ) DX3DVNORM( 0, 1, 1.01261e-007 ) DX3DVUV( 0.5, 0.198165 )  //71
DX3DVERT( 0.217059, 0.963706, -0.668037 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.561232, 0.198165 )  //72
DX3DVERT( 0.371567, 0.963706, -1.14357 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.60482, 0.198165 )  //73
DX3DVERT( 0.41287, 0.963706, -0.568267 ) DX3DVNORM( 5.66964e-008, 1, -0 ) DX3DVUV( 0.616471, 0.198165 )  //74
DX3DVERT( 0.706762, 0.963706, -0.972775 ) DX3DVNORM( 5.66964e-008, 1, -0 ) DX3DVUV( 0.699378, 0.198165 )  //75
DX3DVERT( 0.568266, 0.963706, -0.41287 ) DX3DVNORM( 1.10467e-007, 1, -0 ) DX3DVUV( 0.660308, 0.198165 )  //76
DX3DVERT( 0.972775, 0.963706, -0.706762 ) DX3DVNORM( 1.10467e-007, 1, -0 ) DX3DVUV( 0.774421, 0.198165 )  //77
DX3DVERT( 0.668037, 0.963706, -0.217059 ) DX3DVNORM( 1.13375e-007, 1, -1.01261e-007 ) DX3DVUV( 0.688454, 0.198165 )  //78
DX3DVERT( 1.14357, 0.963706, -0.371567 ) DX3DVNORM( 1.13375e-007, 1, -1.01261e-007 ) DX3DVUV( 0.822601, 0.198165 )  //79
DX3DVERT( 1.14357, 0.963706, 0.371567 ) DX3DVNORM( 0.951057, 0, 0.309017 ) DX3DVUV( 0.822601, 0.198165 )  //80
DX3DVERT( 1.20242, 0.963706, -2.41824e-008 ) DX3DVNORM( 1, 0, 6.63824e-007 ) DX3DVUV( 0.839203, 0.198165 )  //81
DX3DVERT( 1.20242, -0.963706, -2.41824e-008 ) DX3DVNORM( 1, 0, 6.63824e-007 ) DX3DVUV( 0.839203, 0.801835 )  //82
DX3DVERT( 1.14357, -0.963706, 0.371567 ) DX3DVNORM( 0.951057, 0, 0.309017 ) DX3DVUV( 0.822601, 0.801835 )  //83
DX3DVERT( 0.972775, 0.963706, 0.706762 ) DX3DVNORM( 0.809017, 0, 0.587785 ) DX3DVUV( 0.774421, 0.198165 )  //84
DX3DVERT( 0.972775, -0.963706, 0.706762 ) DX3DVNORM( 0.809017, 0, 0.587785 ) DX3DVUV( 0.774421, 0.801835 )  //85
DX3DVERT( 0.706762, 0.963706, 0.972775 ) DX3DVNORM( 0.587786, 0, 0.809017 ) DX3DVUV( 0.699378, 0.198165 )  //86
DX3DVERT( 0.706762, -0.963706, 0.972775 ) DX3DVNORM( 0.587786, 0, 0.809017 ) DX3DVUV( 0.699378, 0.801835 )  //87
DX3DVERT( 0.371567, 0.963706, 1.14357 ) DX3DVNORM( 0.309017, 0, 0.951056 ) DX3DVUV( 0.604819, 0.198165 )  //88
DX3DVERT( 0.371567, -0.963706, 1.14357 ) DX3DVNORM( 0.309017, 0, 0.951056 ) DX3DVUV( 0.604819, 0.801835 )  //89
DX3DVERT( 0, 0.963706, 1.20242 ) DX3DVNORM( 0, 0, 1 ) DX3DVUV( 0.5, 0.198165 )  //90
DX3DVERT( 0, -0.963706, 1.20242 ) DX3DVNORM( 0, 0, 1 ) DX3DVUV( 0.5, 0.801835 )  //91
DX3DVERT( -0.371567, 0.963706, 1.14357 ) DX3DVNORM( -0.309017, 0, 0.951056 ) DX3DVUV( 0.395181, 0.198165 )  //92
DX3DVERT( -0.371567, -0.963706, 1.14357 ) DX3DVNORM( -0.309017, 0, 0.951056 ) DX3DVUV( 0.395181, 0.801835 )  //93
DX3DVERT( -0.706762, 0.963706, 0.972775 ) DX3DVNORM( -0.587785, 0, 0.809017 ) DX3DVUV( 0.300622, 0.198165 )  //94
DX3DVERT( -0.706762, -0.963706, 0.972775 ) DX3DVNORM( -0.587785, 0, 0.809017 ) DX3DVUV( 0.300622, 0.801835 )  //95
DX3DVERT( -0.972775, 0.963706, 0.706762 ) DX3DVNORM( -0.809017, 0, 0.587785 ) DX3DVUV( 0.225579, 0.198165 )  //96
DX3DVERT( -0.972775, -0.963706, 0.706762 ) DX3DVNORM( -0.809017, 0, 0.587785 ) DX3DVUV( 0.225579, 0.801835 )  //97
DX3DVERT( -1.14357, 0.963706, 0.371567 ) DX3DVNORM( -0.951056, 0, 0.309017 ) DX3DVUV( 0.177399, 0.198165 )  //98
DX3DVERT( -1.14357, -0.963706, 0.371567 ) DX3DVNORM( -0.951056, 0, 0.309017 ) DX3DVUV( 0.177399, 0.801835 )  //99
DX3DVERT( -1.20242, 0.963706, -7.5917e-008 ) DX3DVNORM( -1, 0, -0 ) DX3DVUV( 0.160797, 0.198165 )  //100
DX3DVERT( -1.20242, -0.963706, -7.5917e-008 ) DX3DVNORM( -1, 0, -0 ) DX3DVUV( 0.160797, 0.801835 )  //101
DX3DVERT( -1.14357, 0.963706, -0.371567 ) DX3DVNORM( -0.951056, 0, -0.309017 ) DX3DVUV( 0.177399, 0.198165 )  //102
DX3DVERT( -1.14357, -0.963706, -0.371567 ) DX3DVNORM( -0.951056, 0, -0.309017 ) DX3DVUV( 0.177399, 0.801835 )  //103
DX3DVERT( -0.972775, 0.963706, -0.706762 ) DX3DVNORM( -0.809017, 0, -0.587785 ) DX3DVUV( 0.225579, 0.198165 )  //104
DX3DVERT( -0.972775, -0.963706, -0.706762 ) DX3DVNORM( -0.809017, 0, -0.587785 ) DX3DVUV( 0.225579, 0.801835 )  //105
DX3DVERT( -0.706762, 0.963706, -0.972775 ) DX3DVNORM( -0.587785, 0, -0.809017 ) DX3DVUV( 0.300622, 0.198165 )  //106
DX3DVERT( -0.706762, -0.963706, -0.972775 ) DX3DVNORM( -0.587785, 0, -0.809017 ) DX3DVUV( 0.300622, 0.801835 )  //107
DX3DVERT( -0.371567, 0.963706, -1.14357 ) DX3DVNORM( -0.309017, 0, -0.951056 ) DX3DVUV( 0.395181, 0.198165 )  //108
DX3DVERT( -0.371567, -0.963706, -1.14357 ) DX3DVNORM( -0.309017, 0, -0.951056 ) DX3DVUV( 0.395181, 0.801835 )  //109
DX3DVERT( 0, 0.963706, -1.20242 ) DX3DVNORM( -1.05608e-007, 0, -1 ) DX3DVUV( 0.5, 0.198165 )  //110
DX3DVERT( 0, -0.963706, -1.20242 ) DX3DVNORM( -1.05608e-007, 0, -1 ) DX3DVUV( 0.5, 0.801835 )  //111
DX3DVERT( 0.371567, 0.963706, -1.14357 ) DX3DVNORM( 0.309017, 0, -0.951056 ) DX3DVUV( 0.60482, 0.198165 )  //112
DX3DVERT( 0.371567, -0.963706, -1.14357 ) DX3DVNORM( 0.309017, 0, -0.951056 ) DX3DVUV( 0.60482, 0.801835 )  //113
DX3DVERT( 0.706762, 0.963706, -0.972775 ) DX3DVNORM( 0.587785, 0, -0.809017 ) DX3DVUV( 0.699378, 0.198165 )  //114
DX3DVERT( 0.706762, -0.963706, -0.972775 ) DX3DVNORM( 0.587785, 0, -0.809017 ) DX3DVUV( 0.699378, 0.801835 )  //115
DX3DVERT( 0.972775, 0.963706, -0.706762 ) DX3DVNORM( 0.809017, 0, -0.587785 ) DX3DVUV( 0.774421, 0.198165 )  //116
DX3DVERT( 0.972775, -0.963706, -0.706762 ) DX3DVNORM( 0.809017, 0, -0.587785 ) DX3DVUV( 0.774421, 0.801835 )  //117
DX3DVERT( 1.14357, 0.963706, -0.371567 ) DX3DVNORM( 0.951057, 0, -0.309016 ) DX3DVUV( 0.822601, 0.198165 )  //118
DX3DVERT( 1.14357, -0.963706, -0.371567 ) DX3DVNORM( 0.951057, 0, -0.309016 ) DX3DVUV( 0.822601, 0.801835 )  //119
DX3DVERT( 1.14357, -0.963706, 0.371567 ) DX3DVNORM( -1.13375e-007, -1, -0 ) DX3DVUV( 0.822601, 0.801835 )  //120
DX3DVERT( 1.20242, -0.963706, -2.41824e-008 ) DX3DVNORM( -1.19209e-007, -1, -0 ) DX3DVUV( 0.839203, 0.801835 )  //121
DX3DVERT( 0.702415, -0.963706, -2.25461e-008 ) DX3DVNORM( -1.19209e-007, -1, -0 ) DX3DVUV( 0.698152, 0.801835 )  //122
DX3DVERT( 0.668037, -0.963706, 0.217058 ) DX3DVNORM( -1.13375e-007, -1, -0 ) DX3DVUV( 0.688454, 0.801835 )  //123
DX3DVERT( 0.972775, -0.963706, 0.706762 ) DX3DVNORM( -1.10467e-007, -1, 1.01261e-007 ) DX3DVUV( 0.774421, 0.801835 )  //124
DX3DVERT( 0.568266, -0.963706, 0.41287 ) DX3DVNORM( -1.10467e-007, -1, 1.01261e-007 ) DX3DVUV( 0.660308, 0.801835 )  //125
DX3DVERT( 0.706762, -0.963706, 0.972775 ) DX3DVNORM( -5.66964e-008, -1, 5.06304e-008 ) DX3DVUV( 0.699378, 0.801835 )  //126
DX3DVERT( 0.412869, -0.963706, 0.568266 ) DX3DVNORM( -5.66964e-008, -1, 5.06304e-008 ) DX3DVUV( 0.616471, 0.801835 )  //127
DX3DVERT( 0.371567, -0.963706, 1.14357 ) DX3DVNORM( 0, -1, -1.01261e-007 ) DX3DVUV( 0.604819, 0.801835 )  //128
DX3DVERT( 0.217058, -0.963706, 0.668037 ) DX3DVNORM( 0, -1, -1.01261e-007 ) DX3DVUV( 0.561232, 0.801835 )  //129
DX3DVERT( 0, -0.963706, 1.20242 ) DX3DVNORM( 0, -1, -1.01261e-007 ) DX3DVUV( 0.5, 0.801835 )  //130
DX3DVERT( 0, -0.963706, 0.702416 ) DX3DVNORM( 0, -1, -1.01261e-007 ) DX3DVUV( 0.5, 0.801835 )  //131
DX3DVERT( -0.371567, -0.963706, 1.14357 ) DX3DVNORM( 0, -1, -1.51891e-007 ) DX3DVUV( 0.395181, 0.801835 )  //132
DX3DVERT( -0.217059, -0.963706, 0.668037 ) DX3DVNORM( 0, -1, -1.51891e-007 ) DX3DVUV( 0.438768, 0.801835 )  //133
DX3DVERT( -0.706762, -0.963706, 0.972775 ) DX3DVNORM( 0, -1, -2.02521e-007 ) DX3DVUV( 0.300622, 0.801835 )  //134
DX3DVERT( -0.412869, -0.963706, 0.568266 ) DX3DVNORM( 0, -1, -2.02521e-007 ) DX3DVUV( 0.383529, 0.801835 )  //135
DX3DVERT( -0.972775, -0.963706, 0.706762 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.225579, 0.801835 )  //136
DX3DVERT( -0.568266, -0.963706, 0.41287 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.339691, 0.801835 )  //137
DX3DVERT( -1.14357, -0.963706, 0.371567 ) DX3DVNORM( 0, -1, -2.13163e-014 ) DX3DVUV( 0.177399, 0.801835 )  //138
DX3DVERT( -0.668037, -0.963706, 0.217058 ) DX3DVNORM( 0, -1, -2.13163e-014 ) DX3DVUV( 0.311546, 0.801835 )  //139
DX3DVERT( -1.20242, -0.963706, -7.5917e-008 ) DX3DVNORM( 0, -1, -1.01261e-007 ) DX3DVUV( 0.160797, 0.801835 )  //140
DX3DVERT( -0.702416, -0.963706, -1.79487e-008 ) DX3DVNORM( 0, -1, -1.01261e-007 ) DX3DVUV( 0.301848, 0.801835 )  //141
DX3DVERT( -1.14357, -0.963706, -0.371567 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.177399, 0.801835 )  //142
DX3DVERT( -0.668037, -0.963706, -0.217058 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.311546, 0.801835 )  //143
DX3DVERT( -0.972775, -0.963706, -0.706762 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.225579, 0.801835 )  //144
DX3DVERT( -0.568266, -0.963706, -0.41287 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.339691, 0.801835 )  //145
DX3DVERT( -0.706762, -0.963706, -0.972775 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.300622, 0.801835 )  //146
DX3DVERT( -0.41287, -0.963706, -0.568267 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.383529, 0.801835 )  //147
DX3DVERT( -0.371567, -0.963706, -1.14357 ) DX3DVNORM( 0, -1, 5.06304e-008 ) DX3DVUV( 0.395181, 0.801835 )  //148
DX3DVERT( -0.217059, -0.963706, -0.668037 ) DX3DVNORM( 0, -1, 5.06304e-008 ) DX3DVUV( 0.438768, 0.801835 )  //149
DX3DVERT( 0, -0.963706, -1.20242 ) DX3DVNORM( 0, -1, 5.06304e-008 ) DX3DVUV( 0.5, 0.801835 )  //150
DX3DVERT( 0, -0.963706, -0.702416 ) DX3DVNORM( 0, -1, 5.06304e-008 ) DX3DVUV( 0.5, 0.801835 )  //151
DX3DVERT( 0.371567, -0.963706, -1.14357 ) DX3DVNORM( 0, -1, 1.01261e-007 ) DX3DVUV( 0.60482, 0.801835 )  //152
DX3DVERT( 0.217059, -0.963706, -0.668037 ) DX3DVNORM( 0, -1, 1.01261e-007 ) DX3DVUV( 0.561232, 0.801835 )  //153
DX3DVERT( 0.706762, -0.963706, -0.972775 ) DX3DVNORM( -5.66964e-008, -1, 1.01261e-007 ) DX3DVUV( 0.699378, 0.801835 )  //154
DX3DVERT( 0.41287, -0.963706, -0.568267 ) DX3DVNORM( -5.66964e-008, -1, 1.01261e-007 ) DX3DVUV( 0.616471, 0.801835 )  //155
DX3DVERT( 0.972775, -0.963706, -0.706762 ) DX3DVNORM( -1.10467e-007, -1, -1.01261e-007 ) DX3DVUV( 0.774421, 0.801835 )  //156
DX3DVERT( 0.568266, -0.963706, -0.41287 ) DX3DVNORM( -1.10467e-007, -1, -1.01261e-007 ) DX3DVUV( 0.660308, 0.801835 )  //157
DX3DVERT( 1.14357, -0.963706, -0.371567 ) DX3DVNORM( -1.13375e-007, -1, -1.01261e-007 ) DX3DVUV( 0.822601, 0.801835 )  //158
DX3DVERT( 0.668037, -0.963706, -0.217059 ) DX3DVNORM( -1.13375e-007, -1, -1.01261e-007 ) DX3DVUV( 0.688454, 0.801835 )  //159
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_DXT5___texa_DXT5__0 )
#if ( !BINARY_Texture_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_DXT5___texa_DXT5__0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VNUV, 160 )
DX3DVERTEX_END


#else
#define vertex_DXT5___texa_DXT5__0	NULL
#define vertexbuff_DXT5___texa_DXT5__0	NULL
#endif




#if ((PT_DXT5___texa_DXT5__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_DXT5___texa_DXT5__0 == PT_TRILIST )


#if ( !BINARY_Texture_tst__ )
DX3DINDEX_START( index_DXT5___texa_DXT5__0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 0, 5, // 2 8
	0, 3, 5, // 3 11
	6, 4, 7, // 4 14
	4, 5, 7, // 5 17
	8, 6, 9, // 6 20
	6, 7, 9, // 7 23
	10, 8, 11, // 8 26
	8, 9, 11, // 9 29
	12, 10, 13, // 10 32
	10, 11, 13, // 11 35
	14, 12, 15, // 12 38
	12, 13, 15, // 13 41
	16, 14, 17, // 14 44
	14, 15, 17, // 15 47
	18, 16, 19, // 16 50
	16, 17, 19, // 17 53
	20, 18, 21, // 18 56
	18, 19, 21, // 19 59
	22, 20, 23, // 20 62
	20, 21, 23, // 21 65
	24, 22, 25, // 22 68
	22, 23, 25, // 23 71
	26, 24, 27, // 24 74
	24, 25, 27, // 25 77
	28, 26, 29, // 26 80
	26, 27, 29, // 27 83
	30, 28, 31, // 28 86
	28, 29, 31, // 29 89
	32, 30, 33, // 30 92
	30, 31, 33, // 31 95
	34, 32, 35, // 32 98
	32, 33, 35, // 33 101
	36, 34, 37, // 34 104
	34, 35, 37, // 35 107
	38, 36, 39, // 36 110
	36, 37, 39, // 37 113
	1, 38, 2, // 38 116
	38, 39, 2, // 39 119
	40, 41, 43, // 40 122
	41, 42, 43, // 41 125
	44, 40, 45, // 42 128
	40, 43, 45, // 43 131
	46, 44, 47, // 44 134
	44, 45, 47, // 45 137
	48, 46, 49, // 46 140
	46, 47, 49, // 47 143
	50, 48, 51, // 48 146
	48, 49, 51, // 49 149
	52, 50, 53, // 50 152
	50, 51, 53, // 51 155
	54, 52, 55, // 52 158
	52, 53, 55, // 53 161
	56, 54, 57, // 54 164
	54, 55, 57, // 55 167
	58, 56, 59, // 56 170
	56, 57, 59, // 57 173
	60, 58, 61, // 58 176
	58, 59, 61, // 59 179
	62, 60, 63, // 60 182
	60, 61, 63, // 61 185
	64, 62, 65, // 62 188
	62, 63, 65, // 63 191
	66, 64, 67, // 64 194
	64, 65, 67, // 65 197
	68, 66, 69, // 66 200
	66, 67, 69, // 67 203
	70, 68, 71, // 68 206
	68, 69, 71, // 69 209
	72, 70, 73, // 70 212
	70, 71, 73, // 71 215
	74, 72, 75, // 72 218
	72, 73, 75, // 73 221
	76, 74, 77, // 74 224
	74, 75, 77, // 75 227
	78, 76, 79, // 76 230
	76, 77, 79, // 77 233
	41, 78, 42, // 78 236
	78, 79, 42, // 79 239
	80, 81, 83, // 80 242
	81, 82, 83, // 81 245
	84, 80, 85, // 82 248
	80, 83, 85, // 83 251
	86, 84, 87, // 84 254
	84, 85, 87, // 85 257
	88, 86, 89, // 86 260
	86, 87, 89, // 87 263
	90, 88, 91, // 88 266
	88, 89, 91, // 89 269
	92, 90, 93, // 90 272
	90, 91, 93, // 91 275
	94, 92, 95, // 92 278
	92, 93, 95, // 93 281
	96, 94, 97, // 94 284
	94, 95, 97, // 95 287
	98, 96, 99, // 96 290
	96, 97, 99, // 97 293
	100, 98, 101, // 98 296
	98, 99, 101, // 99 299
	102, 100, 103, // 100 302
	100, 101, 103, // 101 305
	104, 102, 105, // 102 308
	102, 103, 105, // 103 311
	106, 104, 107, // 104 314
	104, 105, 107, // 105 317
	108, 106, 109, // 106 320
	106, 107, 109, // 107 323
	110, 108, 111, // 108 326
	108, 109, 111, // 109 329
	112, 110, 113, // 110 332
	110, 111, 113, // 111 335
	114, 112, 115, // 112 338
	112, 113, 115, // 113 341
	116, 114, 117, // 114 344
	114, 115, 117, // 115 347
	118, 116, 119, // 116 350
	116, 117, 119, // 117 353
	81, 118, 82, // 118 356
	118, 119, 82, // 119 359
	120, 121, 123, // 120 362
	121, 122, 123, // 121 365
	124, 120, 125, // 122 368
	120, 123, 125, // 123 371
	126, 124, 127, // 124 374
	124, 125, 127, // 125 377
	128, 126, 129, // 126 380
	126, 127, 129, // 127 383
	130, 128, 131, // 128 386
	128, 129, 131, // 129 389
	132, 130, 133, // 130 392
	130, 131, 133, // 131 395
	134, 132, 135, // 132 398
	132, 133, 135, // 133 401
	136, 134, 137, // 134 404
	134, 135, 137, // 135 407
	138, 136, 139, // 136 410
	136, 137, 139, // 137 413
	140, 138, 141, // 138 416
	138, 139, 141, // 139 419
	142, 140, 143, // 140 422
	140, 141, 143, // 141 425
	144, 142, 145, // 142 428
	142, 143, 145, // 143 431
	146, 144, 147, // 144 434
	144, 145, 147, // 145 437
	148, 146, 149, // 146 440
	146, 147, 149, // 147 443
	150, 148, 151, // 148 446
	148, 149, 151, // 149 449
	152, 150, 153, // 150 452
	150, 151, 153, // 151 455
	154, 152, 155, // 152 458
	152, 153, 155, // 153 461
	156, 154, 157, // 154 464
	154, 155, 157, // 155 467
	158, 156, 159, // 156 470
	156, 157, 159, // 157 473
	121, 158, 122, // 158 476
	158, 159, 122, // 159 479
DX3DINDEX_END
#endif

#else
#define index_DXT5___texa_DXT5__0	NULL
#endif




#if ((PT_DXT5___texa_DXT5__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP) ) || (PT_DXT5___texa_DXT5__0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_DXT5___texa_DXT5__0_INDEXSTRIP 	NULL
#endif




#if ((PT_DXT5___texa_DXT5__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_VERTEXSTRIP) ) || (PT_DXT5___texa_DXT5__0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_DXT5___texa_DXT5__0_VERTEXSTRIP 	NULL
#define vertexbuff_DXT5___texa_DXT5__0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_DXT5__ )
DX3DMODEL_START( model_DXT5___texa_DXT5__0 )
DX3DMODEL_VERTEX( vertex_DXT5___texa_DXT5__0 )
#if ( !BINARY_Texture_tst__ )
DX3DMODEL_INDEX( index_DXT5___texa_DXT5__0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 480 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_texa_DXT5_ )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_DXT5__, 1281205581 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_DXT5__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	6.18694, 0.963706, 0.664807, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	6.18694, 0.963706, 0.664807, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_DXT3__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	2.9431, 0.736991, 0.136287, 1
#endif

DX3DTEXTURE_START( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkdxt3_DDS__ )
DX3DTEXTURE_NAME( "Z:/toshi2/ATEST/ATEST/ATESTNameSpace/STAGE2-3_Beginners3DProgramming/Texture/TextureFiles/checkdxt3.DDS" )
DX3DTEXTURE_END


DX3DMATERIALTEX_START( materialtex_texa_DXT3_ )
DX3DMATERIALTEX_NAME( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkdxt3_DDS__ )
DX3DMATERIALTEX_END


DX3DMATERIAL_START( material_texa_DXT3_ )
DX3DMATERIAL_DIFF( 1, 0.8, 0.8, 0.8 )
DX3DMATERIAL_SPEC( 0.5, 0.5, 0.5, 0.5 )
DX3DMATERIAL_TEX( materialtex_texa_DXT3_ )
DX3DMATERIAL_SHADER( TEXA )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_DXT3___texa_DXT3__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_DXT3___texa_DXT3__0 == PT_TRILIST ) || ((PT_DXT3___texa_DXT3__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP))  || (PT_DXT3___texa_DXT3__0 == PT_INDEXSTRIP)


#if ( !BINARY_Texture_tst__ )
DX3DVERT_START( VNUV, vertexbuff_DXT3___texa_DXT3__0 )
DX3DVERT( 0.211282, 1.55296e-008, 0.234653 ) DX3DVNORM( -0.669131, -9.36546e-008, -0.743145 ) DX3DVUV( 0.575653, 0.5 )  //0
DX3DVERT( 0.288457, 1.44513e-008, 0.12843 ) DX3DVNORM( -0.913545, -9.36546e-008, -0.406737 ) DX3DVUV( 0.605304, 0.5 )  //1
DX3DVERT( 0.333692, 0.216942, 0.148569 ) DX3DVNORM( -0.822741, 0.434645, -0.366308 ) DX3DVUV( 0.622684, 0.277479 )  //2
DX3DVERT( 0.244414, 0.216942, 0.27145 ) DX3DVNORM( -0.602621, 0.434645, -0.669278 ) DX3DVUV( 0.588382, 0.277479 )  //3
DX3DVERT( 0.0975738, 1.71184e-008, 0.300302 ) DX3DVNORM( -0.309017, -1.05361e-007, -0.951056 ) DX3DVUV( 0.531965, 0.5 )  //4
DX3DVERT( 0.112875, 0.216942, 0.347394 ) DX3DVNORM( -0.278301, 0.434645, -0.856523 ) DX3DVUV( 0.537844, 0.277479 )  //5
DX3DVERT( -0.0330059, 1.8943e-008, 0.314027 ) DX3DVNORM( 0.104528, -8.97523e-008, -0.994522 ) DX3DVUV( 0.481796, 0.5 )  //6
DX3DVERT( -0.0381817, 0.216942, 0.363271 ) DX3DVNORM( 0.0941384, 0.434645, -0.895668 ) DX3DVUV( 0.479807, 0.277479 )  //7
DX3DVERT( -0.157879, 2.06878e-008, 0.273453 ) DX3DVNORM( 0.5, -8.97523e-008, -0.866025 ) DX3DVUV( 0.433819, 0.5 )  //8
DX3DVERT( -0.182636, 0.216942, 0.316335 ) DX3DVNORM( 0.450301, 0.434645, -0.779944 ) DX3DVUV( 0.424306, 0.277479 )  //9
DX3DVERT( -0.255453, 2.20511e-008, 0.185597 ) DX3DVNORM( 0.809017, -1.52189e-007, -0.587785 ) DX3DVUV( 0.39633, 0.5 )  //10
DX3DVERT( -0.295512, 0.216942, 0.214702 ) DX3DVNORM( 0.728602, 0.434645, -0.529361 ) DX3DVUV( 0.380939, 0.277479 )  //11
DX3DVERT( -0.308857, 2.27973e-008, 0.0656495 ) DX3DVNORM( 0.978148, -1.59993e-007, -0.207912 ) DX3DVUV( 0.375812, 0.5 )  //12
DX3DVERT( -0.35729, 0.216942, 0.0759444 ) DX3DVNORM( 0.880922, 0.434645, -0.187246 ) DX3DVUV( 0.357203, 0.277479 )  //13
DX3DVERT( -0.308857, 2.27973e-008, -0.0656494 ) DX3DVNORM( 0.978148, -1.24873e-007, 0.207912 ) DX3DVUV( 0.375812, 0.5 )  //14
DX3DVERT( -0.35729, 0.216942, -0.0759443 ) DX3DVNORM( 0.880922, 0.434645, 0.187246 ) DX3DVUV( 0.357203, 0.277479 )  //15
DX3DVERT( -0.255453, 2.20511e-008, -0.185597 ) DX3DVNORM( 0.809017, -1.24873e-007, 0.587785 ) DX3DVUV( 0.39633, 0.5 )  //16
DX3DVERT( -0.295512, 0.216942, -0.214702 ) DX3DVNORM( 0.728602, 0.434645, 0.529361 ) DX3DVUV( 0.380939, 0.277479 )  //17
DX3DVERT( -0.157879, 2.06878e-008, -0.273453 ) DX3DVNORM( 0.5, -1.05361e-007, 0.866026 ) DX3DVUV( 0.433819, 0.5 )  //18
DX3DVERT( -0.182636, 0.216942, -0.316335 ) DX3DVNORM( 0.450301, 0.434645, 0.779944 ) DX3DVUV( 0.424306, 0.277479 )  //19
DX3DVERT( -0.0330059, 1.8943e-008, -0.314027 ) DX3DVNORM( 0.104529, -1.01459e-007, 0.994522 ) DX3DVUV( 0.481796, 0.5 )  //20
DX3DVERT( -0.0381817, 0.216942, -0.363271 ) DX3DVNORM( 0.0941386, 0.434645, 0.895668 ) DX3DVUV( 0.479807, 0.277479 )  //21
DX3DVERT( 0.0975738, 1.71184e-008, -0.300302 ) DX3DVNORM( -0.309017, -9.75569e-008, 0.951057 ) DX3DVUV( 0.531965, 0.5 )  //22
DX3DVERT( 0.112875, 0.216942, -0.347394 ) DX3DVNORM( -0.278301, 0.434645, 0.856523 ) DX3DVUV( 0.537844, 0.277479 )  //23
DX3DVERT( 0.211282, 1.55296e-008, -0.234653 ) DX3DVNORM( -0.669131, -1.01459e-007, 0.743145 ) DX3DVUV( 0.575653, 0.5 )  //24
DX3DVERT( 0.244414, 0.216942, -0.27145 ) DX3DVNORM( -0.60262, 0.434645, 0.669278 ) DX3DVUV( 0.588382, 0.277479 )  //25
DX3DVERT( 0.288457, 1.44513e-008, -0.12843 ) DX3DVNORM( -0.913545, -9.75569e-008, 0.406737 ) DX3DVUV( 0.605304, 0.5 )  //26
DX3DVERT( 0.333692, 0.216942, -0.14857 ) DX3DVNORM( -0.822741, 0.434645, 0.366308 ) DX3DVUV( 0.622684, 0.277479 )  //27
DX3DVERT( 0.315756, 1.40698e-008, 5.4729e-009 ) DX3DVNORM( -1, -8.58501e-008, -5.03394e-007 ) DX3DVUV( 0.615793, 0.5 )  //28
DX3DVERT( 0.365272, 0.216942, 5.55606e-009 ) DX3DVNORM( -0.900602, 0.434645, -3.69344e-007 ) DX3DVUV( 0.634817, 0.277479 )  //29
DX3DVERT( 0.460437, 0.390916, 0.205 ) DX3DVNORM( -0.568821, 0.782499, -0.253255 ) DX3DVUV( 0.67138, 0.099031 )  //30
DX3DVERT( 0.337249, 0.390916, 0.374554 ) DX3DVNORM( -0.416635, 0.782499, -0.46272 ) DX3DVUV( 0.62405, 0.099031 )  //31
DX3DVERT( 0.155748, 0.390916, 0.479344 ) DX3DVNORM( -0.19241, 0.782499, -0.592177 ) DX3DVUV( 0.554316, 0.099031 )  //32
DX3DVERT( -0.052684, 0.390916, 0.501251 ) DX3DVNORM( 0.0650848, 0.782499, -0.619241 ) DX3DVUV( 0.474235, 0.099031 )  //33
DX3DVERT( -0.252006, 0.390916, 0.436487 ) DX3DVNORM( 0.311326, 0.782499, -0.539232 ) DX3DVUV( 0.397654, 0.099031 )  //34
DX3DVERT( -0.407754, 0.390916, 0.296251 ) DX3DVNORM( 0.503736, 0.782499, -0.365986 ) DX3DVUV( 0.337814, 0.099031 )  //35
DX3DVERT( -0.492998, 0.390916, 0.10479 ) DX3DVNORM( 0.609046, 0.782499, -0.129457 ) DX3DVUV( 0.305063, 0.099031 )  //36
DX3DVERT( -0.492998, 0.390916, -0.10479 ) DX3DVNORM( 0.609045, 0.782499, 0.129456 ) DX3DVUV( 0.305063, 0.099031 )  //37
DX3DVERT( -0.407754, 0.390916, -0.296251 ) DX3DVNORM( 0.503736, 0.782499, 0.365986 ) DX3DVUV( 0.337814, 0.099031 )  //38
DX3DVERT( -0.252006, 0.390916, -0.436487 ) DX3DVNORM( 0.311326, 0.782499, 0.539232 ) DX3DVUV( 0.397654, 0.099031 )  //39
DX3DVERT( -0.052684, 0.390916, -0.501251 ) DX3DVNORM( 0.0650849, 0.782499, 0.619241 ) DX3DVUV( 0.474235, 0.099031 )  //40
DX3DVERT( 0.155748, 0.390916, -0.479344 ) DX3DVNORM( -0.19241, 0.782499, 0.592177 ) DX3DVUV( 0.554316, 0.099031 )  //41
DX3DVERT( 0.337249, 0.390916, -0.374554 ) DX3DVNORM( -0.416635, 0.782499, 0.462721 ) DX3DVUV( 0.62405, 0.099031 )  //42
DX3DVERT( 0.460437, 0.390916, -0.205 ) DX3DVNORM( -0.568821, 0.782499, 0.253255 ) DX3DVUV( 0.67138, 0.099031 )  //43
DX3DVERT( 0.504011, 0.390916, 5.78906e-009 ) DX3DVNORM( -0.622652, 0.782499, -1.40719e-007 ) DX3DVUV( 0.688122, 0.099031 )  //44
DX3DVERT( 0.643589, 0.487464, 0.286544 ) DX3DVNORM( -0.202852, 0.975035, -0.0903157 ) DX3DVUV( 0.741748, -1.19209e-007 )  //45
DX3DVERT( 0.4714, 0.487464, 0.523542 ) DX3DVNORM( -0.14858, 0.975035, -0.165015 ) DX3DVUV( 0.675592, -1.19209e-007 )  //46
DX3DVERT( 0.217701, 0.487464, 0.670016 ) DX3DVNORM( -0.068617, 0.975035, -0.211182 ) DX3DVUV( 0.578119, -1.19209e-007 )  //47
DX3DVERT( -0.0736403, 0.487464, 0.700637 ) DX3DVNORM( 0.0232105, 0.975035, -0.220833 ) DX3DVUV( 0.466184, -1.19209e-007 )  //48
DX3DVERT( -0.352248, 0.487464, 0.610112 ) DX3DVNORM( 0.111025, 0.975035, -0.192301 ) DX3DVUV( 0.35914, -1.19209e-007 )  //49
DX3DVERT( -0.56995, 0.487464, 0.414092 ) DX3DVNORM( 0.179642, 0.975035, -0.130517 ) DX3DVUV( 0.275498, -1.19209e-007 )  //50
DX3DVERT( -0.689101, 0.487464, 0.146473 ) DX3DVNORM( 0.217197, 0.975035, -0.0461668 ) DX3DVUV( 0.229719, -1.19209e-007 )  //51
DX3DVERT( -0.689102, 0.487464, -0.146473 ) DX3DVNORM( 0.217197, 0.975035, 0.0461666 ) DX3DVUV( 0.229719, -1.19209e-007 )  //52
DX3DVERT( -0.56995, 0.487464, -0.414092 ) DX3DVNORM( 0.179642, 0.975035, 0.130517 ) DX3DVUV( 0.275498, -1.19209e-007 )  //53
DX3DVERT( -0.352248, 0.487464, -0.610111 ) DX3DVNORM( 0.111025, 0.975035, 0.192301 ) DX3DVUV( 0.35914, -1.19209e-007 )  //54
DX3DVERT( -0.0736403, 0.487464, -0.700637 ) DX3DVNORM( 0.0232105, 0.975035, 0.220833 ) DX3DVUV( 0.466184, -1.19209e-007 )  //55
DX3DVERT( 0.217701, 0.487464, -0.670016 ) DX3DVNORM( -0.0686169, 0.975035, 0.211182 ) DX3DVUV( 0.578119, -1.19209e-007 )  //56
DX3DVERT( 0.4714, 0.487464, -0.523543 ) DX3DVNORM( -0.14858, 0.975035, 0.165015 ) DX3DVUV( 0.675592, -1.19209e-007 )  //57
DX3DVERT( 0.643589, 0.487464, -0.286544 ) DX3DVNORM( -0.202852, 0.975035, 0.0903156 ) DX3DVUV( 0.741748, -1.19209e-007 )  //58
DX3DVERT( 0.704496, 0.487464, 6.12575e-009 ) DX3DVNORM( -0.222049, 0.975035, -1.72313e-008 ) DX3DVUV( 0.765149, -1.19209e-007 )  //59
DX3DVERT( 0.846872, 0.487464, 0.377052 ) DX3DVNORM( 0.202853, 0.975035, 0.0903158 ) DX3DVUV( 0.819851, -1.19209e-007 )  //60
DX3DVERT( 0.620295, 0.487464, 0.688908 ) DX3DVNORM( 0.14858, 0.975035, 0.165015 ) DX3DVUV( 0.732799, -1.19209e-007 )  //61
DX3DVERT( 0.286464, 0.487464, 0.881645 ) DX3DVNORM( 0.0686172, 0.975035, 0.211182 ) DX3DVUV( 0.604538, -1.19209e-007 )  //62
DX3DVERT( -0.0968999, 0.487464, 0.921939 ) DX3DVNORM( -0.0232105, 0.975035, 0.220833 ) DX3DVUV( 0.457247, -1.19209e-007 )  //63
DX3DVERT( -0.463509, 0.487464, 0.80282 ) DX3DVNORM( -0.111025, 0.975035, 0.192301 ) DX3DVUV( 0.316393, -1.19209e-007 )  //64
DX3DVERT( -0.749973, 0.487464, 0.544887 ) DX3DVNORM( -0.179642, 0.975035, 0.130518 ) DX3DVUV( 0.206332, -1.19209e-007 )  //65
DX3DVERT( -0.90676, 0.487464, 0.192738 ) DX3DVNORM( -0.217197, 0.975035, 0.0461668 ) DX3DVUV( 0.146093, -1.19209e-007 )  //66
DX3DVERT( -0.90676, 0.487464, -0.192738 ) DX3DVNORM( -0.217197, 0.975035, -0.0461668 ) DX3DVUV( 0.146093, -1.19209e-007 )  //67
DX3DVERT( -0.749973, 0.487464, -0.544887 ) DX3DVNORM( -0.179642, 0.975035, -0.130518 ) DX3DVUV( 0.206332, -1.19209e-007 )  //68
DX3DVERT( -0.463509, 0.487464, -0.80282 ) DX3DVNORM( -0.111025, 0.975035, -0.192301 ) DX3DVUV( 0.316393, -1.19209e-007 )  //69
DX3DVERT( -0.0969002, 0.487464, -0.921939 ) DX3DVNORM( -0.0232105, 0.975035, -0.220834 ) DX3DVUV( 0.457247, -1.19209e-007 )  //70
DX3DVERT( 0.286464, 0.487464, -0.881646 ) DX3DVNORM( 0.0686172, 0.975035, -0.211182 ) DX3DVUV( 0.604538, -1.19209e-007 )  //71
DX3DVERT( 0.620295, 0.487464, -0.688908 ) DX3DVNORM( 0.14858, 0.975035, -0.165015 ) DX3DVUV( 0.732799, -1.19209e-007 )  //72
DX3DVERT( 0.846872, 0.487464, -0.377052 ) DX3DVNORM( 0.202852, 0.975035, -0.0903158 ) DX3DVUV( 0.819851, -1.19209e-007 )  //73
DX3DVERT( 0.927016, 0.487464, 6.49945e-009 ) DX3DVNORM( 0.22205, 0.975035, 4.2121e-008 ) DX3DVUV( 0.850643, -1.19209e-007 )  //74
DX3DVERT( 1.03002, 0.390916, 0.458596 ) DX3DVNORM( 0.568821, 0.782499, 0.253255 ) DX3DVUV( 0.890219, 0.0990311 )  //75
DX3DVERT( 0.754445, 0.390916, 0.837897 ) DX3DVNORM( 0.416636, 0.782499, 0.462721 ) DX3DVUV( 0.78434, 0.0990311 )  //76
DX3DVERT( 0.348417, 0.390916, 1.07232 ) DX3DVNORM( 0.19241, 0.782499, 0.592177 ) DX3DVUV( 0.628341, 0.0990311 )  //77
DX3DVERT( -0.117856, 0.390916, 1.12132 ) DX3DVNORM( -0.0650848, 0.782499, 0.619241 ) DX3DVUV( 0.449196, 0.0990311 )  //78
DX3DVERT( -0.563751, 0.390916, 0.976445 ) DX3DVNORM( -0.311326, 0.782499, 0.539233 ) DX3DVUV( 0.277879, 0.0990311 )  //79
DX3DVERT( -0.912168, 0.390916, 0.662729 ) DX3DVNORM( -0.503736, 0.782499, 0.365986 ) DX3DVUV( 0.144015, 0.0990311 )  //80
DX3DVERT( -1.10286, 0.390916, 0.234421 ) DX3DVNORM( -0.609046, 0.782499, 0.129457 ) DX3DVUV( 0.0707484, 0.0990311 )  //81
DX3DVERT( -1.10286, 0.390916, -0.234421 ) DX3DVNORM( -0.609046, 0.782499, -0.129457 ) DX3DVUV( 0.0707484, 0.0990311 )  //82
DX3DVERT( -0.912168, 0.390916, -0.662729 ) DX3DVNORM( -0.503736, 0.782499, -0.365986 ) DX3DVUV( 0.144015, 0.0990311 )  //83
DX3DVERT( -0.563751, 0.390916, -0.976445 ) DX3DVNORM( -0.311326, 0.782499, -0.539233 ) DX3DVUV( 0.277879, 0.0990311 )  //84
DX3DVERT( -0.117856, 0.390916, -1.12132 ) DX3DVNORM( -0.0650849, 0.782499, -0.619241 ) DX3DVUV( 0.449195, 0.0990311 )  //85
DX3DVERT( 0.348417, 0.390916, -1.07232 ) DX3DVNORM( 0.19241, 0.782499, -0.592177 ) DX3DVUV( 0.628341, 0.0990311 )  //86
DX3DVERT( 0.754445, 0.390916, -0.837897 ) DX3DVNORM( 0.416636, 0.782499, -0.462721 ) DX3DVUV( 0.78434, 0.0990311 )  //87
DX3DVERT( 1.03002, 0.390916, -0.458596 ) DX3DVNORM( 0.568821, 0.782499, -0.253255 ) DX3DVUV( 0.890219, 0.0990311 )  //88
DX3DVERT( 1.1275, 0.390916, 6.83614e-009 ) DX3DVNORM( 0.622652, 0.782499, 4.62638e-008 ) DX3DVUV( 0.927671, 0.0990311 )  //89
DX3DVERT( 1.15677, 0.216942, 0.515026 ) DX3DVNORM( 0.822741, 0.434645, 0.366308 ) DX3DVUV( 0.938916, 0.277479 )  //90
DX3DVERT( 0.84728, 0.216942, 0.941 ) DX3DVNORM( 0.60262, 0.434644, 0.669278 ) DX3DVUV( 0.820008, 0.277479 )  //91
DX3DVERT( 0.39129, 0.216942, 1.20427 ) DX3DVNORM( 0.278302, 0.434645, 0.856523 ) DX3DVUV( 0.644813, 0.277479 )  //92
DX3DVERT( -0.132358, 0.216942, 1.2593 ) DX3DVNORM( -0.0941385, 0.434645, 0.895669 ) DX3DVUV( 0.443624, 0.277479 )  //93
DX3DVERT( -0.63312, 0.216942, 1.0966 ) DX3DVNORM( -0.450301, 0.434645, 0.779944 ) DX3DVUV( 0.251227, 0.277479 )  //94
DX3DVERT( -1.02441, 0.216942, 0.744278 ) DX3DVNORM( -0.728602, 0.434645, 0.529361 ) DX3DVUV( 0.100891, 0.277479 )  //95
DX3DVERT( -1.23857, 0.216942, 0.263266 ) DX3DVNORM( -0.880922, 0.434645, 0.187246 ) DX3DVUV( 0.0186087, 0.277479 )  //96
DX3DVERT( -1.23857, 0.216942, -0.263266 ) DX3DVNORM( -0.880922, 0.434645, -0.187246 ) DX3DVUV( 0.0186086, 0.277479 )  //97
DX3DVERT( -1.02441, 0.216942, -0.744278 ) DX3DVNORM( -0.728602, 0.434644, -0.529361 ) DX3DVUV( 0.100891, 0.277479 )  //98
DX3DVERT( -0.633121, 0.216942, -1.0966 ) DX3DVNORM( -0.450301, 0.434644, -0.779944 ) DX3DVUV( 0.251227, 0.277479 )  //99
DX3DVERT( -0.132359, 0.216942, -1.2593 ) DX3DVNORM( -0.0941387, 0.434645, -0.895669 ) DX3DVUV( 0.443624, 0.277479 )  //100
DX3DVERT( 0.39129, 0.216942, -1.20427 ) DX3DVNORM( 0.278301, 0.434645, -0.856524 ) DX3DVUV( 0.644813, 0.277479 )  //101
DX3DVERT( 0.84728, 0.216942, -0.941 ) DX3DVNORM( 0.60262, 0.434644, -0.669278 ) DX3DVUV( 0.820008, 0.277479 )  //102
DX3DVERT( 1.15677, 0.216942, -0.515027 ) DX3DVNORM( 0.822741, 0.434644, -0.366308 ) DX3DVUV( 0.938916, 0.277479 )  //103
DX3DVERT( 1.26624, 0.216942, 7.06914e-009 ) DX3DVNORM( 0.900602, 0.434645, 2.72148e-008 ) DX3DVUV( 0.980976, 0.277479 )  //104
DX3DVERT( 1.202, -1.17523e-007, 0.535166 ) DX3DVNORM( 0.913545, -7.41432e-008, 0.406737 ) DX3DVUV( 0.956295, 0.5 )  //105
DX3DVERT( 0.880412, -1.13029e-007, 0.977797 ) DX3DVNORM( 0.669131, -1.09264e-007, 0.743145 ) DX3DVUV( 0.832738, 0.5 )  //106
DX3DVERT( 0.406591, -1.06409e-007, 1.25136 ) DX3DVNORM( 0.309017, -7.41433e-008, 0.951056 ) DX3DVUV( 0.650692, 0.5 )  //107
DX3DVERT( -0.137534, -9.88058e-008, 1.30855 ) DX3DVNORM( -0.104528, -1.13166e-007, 0.994522 ) DX3DVUV( 0.441635, 0.5 )  //108
DX3DVERT( -0.657878, -9.15352e-008, 1.13948 ) DX3DVNORM( -0.5, -2.30234e-007, 0.866025 ) DX3DVUV( 0.241715, 0.5 )  //109
DX3DVERT( -1.06447, -2.62494e-008, 0.773382 ) DX3DVNORM( -0.809017, -9.75569e-008, 0.587785 ) DX3DVUV( 0.0854995, 0.5 )  //110
DX3DVERT( -1.287, -2.314e-008, 0.273561 ) DX3DVNORM( -0.978148, -8.58501e-008, 0.207912 ) DX3DVUV( 1.19209e-007, 0.5 )  //111
DX3DVERT( -1.287, -2.314e-008, -0.273561 ) DX3DVNORM( -0.978148, -3.66814e-007, -0.207912 ) DX3DVUV( 0, 0.5 )  //112
DX3DVERT( -1.06447, -2.62494e-008, -0.773382 ) DX3DVNORM( -0.809017, -5.151e-007, -0.587785 ) DX3DVUV( 0.0854995, 0.5 )  //113
DX3DVERT( -0.657878, -9.15352e-008, -1.13948 ) DX3DVNORM( -0.5, -3.9413e-007, -0.866025 ) DX3DVUV( 0.241715, 0.5 )  //114
DX3DVERT( -0.137535, -9.88058e-008, -1.30855 ) DX3DVNORM( -0.104529, -2.69257e-007, -0.994522 ) DX3DVUV( 0.441635, 0.5 )  //115
DX3DVERT( 0.406591, -1.06409e-007, -1.25136 ) DX3DVNORM( 0.309017, -3.31693e-007, -0.951057 ) DX3DVUV( 0.650692, 0.5 )  //116
DX3DVERT( 0.880412, -1.13029e-007, -0.977798 ) DX3DVNORM( 0.66913, -2.02918e-007, -0.743145 ) DX3DVUV( 0.832738, 0.5 )  //117
DX3DVERT( 1.202, -1.17523e-007, -0.535166 ) DX3DVNORM( 0.913545, -3.51205e-008, -0.406737 ) DX3DVUV( 0.956295, 0.5 )  //118
DX3DVERT( 1.31576, -1.19112e-007, 7.1523e-009 ) DX3DVNORM( 1, -4.2925e-008, 4.68273e-008 ) DX3DVUV( 1, 0.5 )  //119
DX3DVERT( 1.15677, -0.216942, 0.515026 ) DX3DVNORM( 0.822741, -0.434645, 0.366308 ) DX3DVUV( 0.938916, 0.722521 )  //120
DX3DVERT( 0.84728, -0.216942, 0.941 ) DX3DVNORM( 0.60262, -0.434645, 0.669278 ) DX3DVUV( 0.820008, 0.722521 )  //121
DX3DVERT( 0.39129, -0.216942, 1.20427 ) DX3DVNORM( 0.278302, -0.434645, 0.856523 ) DX3DVUV( 0.644813, 0.722521 )  //122
DX3DVERT( -0.132358, -0.216942, 1.2593 ) DX3DVNORM( -0.0941385, -0.434645, 0.895668 ) DX3DVUV( 0.443624, 0.722521 )  //123
DX3DVERT( -0.63312, -0.216942, 1.0966 ) DX3DVNORM( -0.450301, -0.434645, 0.779944 ) DX3DVUV( 0.251227, 0.722521 )  //124
DX3DVERT( -1.02441, -0.216942, 0.744278 ) DX3DVNORM( -0.728602, -0.434645, 0.529361 ) DX3DVUV( 0.100891, 0.722521 )  //125
DX3DVERT( -1.23857, -0.216942, 0.263266 ) DX3DVNORM( -0.880922, -0.434645, 0.187246 ) DX3DVUV( 0.0186087, 0.722521 )  //126
DX3DVERT( -1.23857, -0.216942, -0.263266 ) DX3DVNORM( -0.880922, -0.434645, -0.187246 ) DX3DVUV( 0.0186087, 0.722521 )  //127
DX3DVERT( -1.02441, -0.216942, -0.744278 ) DX3DVNORM( -0.728602, -0.434645, -0.529361 ) DX3DVUV( 0.100891, 0.722521 )  //128
DX3DVERT( -0.63312, -0.216942, -1.0966 ) DX3DVNORM( -0.450301, -0.434645, -0.779944 ) DX3DVUV( 0.251227, 0.722521 )  //129
DX3DVERT( -0.132359, -0.216942, -1.2593 ) DX3DVNORM( -0.0941387, -0.434645, -0.895668 ) DX3DVUV( 0.443624, 0.722521 )  //130
DX3DVERT( 0.39129, -0.216942, -1.20427 ) DX3DVNORM( 0.278301, -0.434645, -0.856523 ) DX3DVUV( 0.644813, 0.722521 )  //131
DX3DVERT( 0.84728, -0.216942, -0.941 ) DX3DVNORM( 0.60262, -0.434645, -0.669278 ) DX3DVUV( 0.820008, 0.722521 )  //132
DX3DVERT( 1.15677, -0.216942, -0.515027 ) DX3DVNORM( 0.822741, -0.434645, -0.366308 ) DX3DVUV( 0.938916, 0.722521 )  //133
DX3DVERT( 1.26624, -0.216942, 7.06914e-009 ) DX3DVNORM( 0.900602, -0.434645, 8.16445e-008 ) DX3DVUV( 0.980976, 0.722521 )  //134
DX3DVERT( 1.03002, -0.390916, 0.458596 ) DX3DVNORM( 0.56882, -0.782499, 0.253255 ) DX3DVUV( 0.890219, 0.900969 )  //135
DX3DVERT( 0.754445, -0.390916, 0.837897 ) DX3DVNORM( 0.416635, -0.782499, 0.46272 ) DX3DVUV( 0.78434, 0.900969 )  //136
DX3DVERT( 0.348417, -0.390916, 1.07232 ) DX3DVNORM( 0.19241, -0.782499, 0.592177 ) DX3DVUV( 0.628341, 0.900969 )  //137
DX3DVERT( -0.117856, -0.390916, 1.12132 ) DX3DVNORM( -0.0650849, -0.782499, 0.619241 ) DX3DVUV( 0.449196, 0.900969 )  //138
DX3DVERT( -0.563751, -0.390916, 0.976445 ) DX3DVNORM( -0.311326, -0.782499, 0.539232 ) DX3DVUV( 0.277879, 0.900969 )  //139
DX3DVERT( -0.912168, -0.390916, 0.662729 ) DX3DVNORM( -0.503736, -0.782499, 0.365986 ) DX3DVUV( 0.144015, 0.900969 )  //140
DX3DVERT( -1.10286, -0.390916, 0.234421 ) DX3DVNORM( -0.609046, -0.782499, 0.129457 ) DX3DVUV( 0.0707486, 0.900969 )  //141
DX3DVERT( -1.10286, -0.390916, -0.234421 ) DX3DVNORM( -0.609046, -0.782499, -0.129457 ) DX3DVUV( 0.0707486, 0.900969 )  //142
DX3DVERT( -0.912168, -0.390916, -0.662729 ) DX3DVNORM( -0.503736, -0.782499, -0.365986 ) DX3DVUV( 0.144015, 0.900969 )  //143
DX3DVERT( -0.563751, -0.390916, -0.976445 ) DX3DVNORM( -0.311326, -0.782499, -0.539232 ) DX3DVUV( 0.277879, 0.900969 )  //144
DX3DVERT( -0.117856, -0.390916, -1.12132 ) DX3DVNORM( -0.065085, -0.782499, -0.619241 ) DX3DVUV( 0.449195, 0.900969 )  //145
DX3DVERT( 0.348417, -0.390916, -1.07232 ) DX3DVNORM( 0.19241, -0.782499, -0.592177 ) DX3DVUV( 0.628341, 0.900969 )  //146
DX3DVERT( 0.754445, -0.390916, -0.837897 ) DX3DVNORM( 0.416635, -0.782499, -0.462721 ) DX3DVUV( 0.78434, 0.900969 )  //147
DX3DVERT( 1.03002, -0.390916, -0.458596 ) DX3DVNORM( 0.568821, -0.782499, -0.253255 ) DX3DVUV( 0.890219, 0.900969 )  //148
DX3DVERT( 1.1275, -0.390916, 6.83614e-009 ) DX3DVNORM( 0.622652, -0.782499, 1.25298e-007 ) DX3DVUV( 0.927671, 0.900969 )  //149
DX3DVERT( 0.846872, -0.487464, 0.377052 ) DX3DVNORM( 0.202852, -0.975035, 0.0903158 ) DX3DVUV( 0.819851, 1 )  //150
DX3DVERT( 0.620295, -0.487464, 0.688908 ) DX3DVNORM( 0.14858, -0.975035, 0.165015 ) DX3DVUV( 0.732799, 1 )  //151
DX3DVERT( 0.286464, -0.487464, 0.881645 ) DX3DVNORM( 0.0686171, -0.975035, 0.211182 ) DX3DVUV( 0.604538, 1 )  //152
DX3DVERT( -0.0968999, -0.487464, 0.921938 ) DX3DVNORM( -0.0232105, -0.975035, 0.220833 ) DX3DVUV( 0.457247, 1 )  //153
DX3DVERT( -0.463509, -0.487464, 0.80282 ) DX3DVNORM( -0.111025, -0.975035, 0.192301 ) DX3DVUV( 0.316393, 1 )  //154
DX3DVERT( -0.749973, -0.487464, 0.544887 ) DX3DVNORM( -0.179642, -0.975035, 0.130518 ) DX3DVUV( 0.206332, 1 )  //155
DX3DVERT( -0.90676, -0.487464, 0.192738 ) DX3DVNORM( -0.217197, -0.975035, 0.0461667 ) DX3DVUV( 0.146093, 1 )  //156
DX3DVERT( -0.90676, -0.487464, -0.192738 ) DX3DVNORM( -0.217197, -0.975035, -0.0461667 ) DX3DVUV( 0.146093, 1 )  //157
DX3DVERT( -0.749973, -0.487464, -0.544887 ) DX3DVNORM( -0.179642, -0.975035, -0.130517 ) DX3DVUV( 0.206332, 1 )  //158
DX3DVERT( -0.463509, -0.487464, -0.80282 ) DX3DVNORM( -0.111025, -0.975035, -0.192301 ) DX3DVUV( 0.316393, 1 )  //159
DX3DVERT( -0.0969002, -0.487464, -0.921939 ) DX3DVNORM( -0.0232106, -0.975035, -0.220833 ) DX3DVUV( 0.457247, 1 )  //160
DX3DVERT( 0.286464, -0.487464, -0.881645 ) DX3DVNORM( 0.068617, -0.975035, -0.211182 ) DX3DVUV( 0.604538, 1 )  //161
DX3DVERT( 0.620295, -0.487464, -0.688908 ) DX3DVNORM( 0.14858, -0.975035, -0.165015 ) DX3DVUV( 0.732799, 1 )  //162
DX3DVERT( 0.846872, -0.487464, -0.377052 ) DX3DVNORM( 0.202852, -0.975035, -0.0903158 ) DX3DVUV( 0.819851, 1 )  //163
DX3DVERT( 0.927016, -0.487464, 6.49945e-009 ) DX3DVNORM( 0.222049, -0.975035, 4.1079e-008 ) DX3DVUV( 0.850643, 1 )  //164
DX3DVERT( 0.643589, -0.487464, 0.286544 ) DX3DVNORM( -0.202853, -0.975035, -0.0903159 ) DX3DVUV( 0.741748, 1 )  //165
DX3DVERT( 0.471399, -0.487464, 0.523542 ) DX3DVNORM( -0.148581, -0.975035, -0.165015 ) DX3DVUV( 0.675592, 1 )  //166
DX3DVERT( 0.217701, -0.487464, 0.670015 ) DX3DVNORM( -0.0686174, -0.975035, -0.211182 ) DX3DVUV( 0.578119, 1 )  //167
DX3DVERT( -0.0736403, -0.487464, 0.700637 ) DX3DVNORM( 0.0232105, -0.975035, -0.220834 ) DX3DVUV( 0.466184, 1 )  //168
DX3DVERT( -0.352248, -0.487464, 0.610111 ) DX3DVNORM( 0.111025, -0.975035, -0.192301 ) DX3DVUV( 0.35914, 1 )  //169
DX3DVERT( -0.56995, -0.487464, 0.414092 ) DX3DVNORM( 0.179642, -0.975035, -0.130518 ) DX3DVUV( 0.275498, 1 )  //170
DX3DVERT( -0.689101, -0.487464, 0.146473 ) DX3DVNORM( 0.217198, -0.975035, -0.0461668 ) DX3DVUV( 0.229719, 1 )  //171
DX3DVERT( -0.689101, -0.487464, -0.146473 ) DX3DVNORM( 0.217198, -0.975035, 0.0461668 ) DX3DVUV( 0.229719, 1 )  //172
DX3DVERT( -0.56995, -0.487464, -0.414092 ) DX3DVNORM( 0.179642, -0.975035, 0.130518 ) DX3DVUV( 0.275498, 1 )  //173
DX3DVERT( -0.352248, -0.487464, -0.610111 ) DX3DVNORM( 0.111025, -0.975035, 0.192301 ) DX3DVUV( 0.35914, 1 )  //174
DX3DVERT( -0.0736403, -0.487464, -0.700637 ) DX3DVNORM( 0.0232106, -0.975035, 0.220834 ) DX3DVUV( 0.466184, 1 )  //175
DX3DVERT( 0.217701, -0.487464, -0.670015 ) DX3DVNORM( -0.0686173, -0.975035, 0.211182 ) DX3DVUV( 0.578119, 1 )  //176
DX3DVERT( 0.471399, -0.487464, -0.523543 ) DX3DVNORM( -0.148581, -0.975035, 0.165015 ) DX3DVUV( 0.675592, 1 )  //177
DX3DVERT( 0.643589, -0.487464, -0.286544 ) DX3DVNORM( -0.202853, -0.975035, 0.0903159 ) DX3DVUV( 0.741748, 1 )  //178
DX3DVERT( 0.704495, -0.487464, 6.12575e-009 ) DX3DVNORM( -0.22205, -0.975035, -4.40356e-008 ) DX3DVUV( 0.765149, 1 )  //179
DX3DVERT( 0.460437, -0.390916, 0.205 ) DX3DVNORM( -0.568821, -0.782499, -0.253256 ) DX3DVUV( 0.67138, 0.900969 )  //180
DX3DVERT( 0.337249, -0.390916, 0.374554 ) DX3DVNORM( -0.416636, -0.782499, -0.462721 ) DX3DVUV( 0.62405, 0.900969 )  //181
DX3DVERT( 0.155748, -0.390916, 0.479343 ) DX3DVNORM( -0.19241, -0.782499, -0.592177 ) DX3DVUV( 0.554316, 0.900969 )  //182
DX3DVERT( -0.052684, -0.390916, 0.501251 ) DX3DVNORM( 0.0650848, -0.782499, -0.619241 ) DX3DVUV( 0.474235, 0.900969 )  //183
DX3DVERT( -0.252006, -0.390916, 0.436487 ) DX3DVNORM( 0.311326, -0.782499, -0.539233 ) DX3DVUV( 0.397654, 0.900969 )  //184
DX3DVERT( -0.407754, -0.390916, 0.296251 ) DX3DVNORM( 0.503736, -0.782499, -0.365986 ) DX3DVUV( 0.337814, 0.900969 )  //185
DX3DVERT( -0.492998, -0.390916, 0.10479 ) DX3DVNORM( 0.609046, -0.782499, -0.129457 ) DX3DVUV( 0.305063, 0.900969 )  //186
DX3DVERT( -0.492998, -0.390916, -0.10479 ) DX3DVNORM( 0.609046, -0.782499, 0.129457 ) DX3DVUV( 0.305063, 0.900969 )  //187
DX3DVERT( -0.407754, -0.390916, -0.296251 ) DX3DVNORM( 0.503736, -0.782499, 0.365986 ) DX3DVUV( 0.337814, 0.900969 )  //188
DX3DVERT( -0.252006, -0.390916, -0.436487 ) DX3DVNORM( 0.311326, -0.782499, 0.539233 ) DX3DVUV( 0.397654, 0.900969 )  //189
DX3DVERT( -0.052684, -0.390916, -0.501251 ) DX3DVNORM( 0.065085, -0.782499, 0.619241 ) DX3DVUV( 0.474235, 0.900969 )  //190
DX3DVERT( 0.155748, -0.390916, -0.479344 ) DX3DVNORM( -0.19241, -0.782499, 0.592177 ) DX3DVUV( 0.554316, 0.900969 )  //191
DX3DVERT( 0.337249, -0.390916, -0.374554 ) DX3DVNORM( -0.416636, -0.782499, 0.462721 ) DX3DVUV( 0.62405, 0.900969 )  //192
DX3DVERT( 0.460437, -0.390916, -0.205 ) DX3DVNORM( -0.568821, -0.782499, 0.253256 ) DX3DVUV( 0.67138, 0.900969 )  //193
DX3DVERT( 0.504011, -0.390916, 5.78906e-009 ) DX3DVNORM( -0.622652, -0.782499, -1.65779e-007 ) DX3DVUV( 0.688122, 0.900969 )  //194
DX3DVERT( 0.333692, -0.216942, 0.148569 ) DX3DVNORM( -0.822741, -0.434645, -0.366308 ) DX3DVUV( 0.622684, 0.722521 )  //195
DX3DVERT( 0.244414, -0.216942, 0.27145 ) DX3DVNORM( -0.602621, -0.434645, -0.669278 ) DX3DVUV( 0.588382, 0.722521 )  //196
DX3DVERT( 0.112875, -0.216942, 0.347394 ) DX3DVNORM( -0.278302, -0.434645, -0.856523 ) DX3DVUV( 0.537844, 0.722521 )  //197
DX3DVERT( -0.0381817, -0.216942, 0.363271 ) DX3DVNORM( 0.0941384, -0.434645, -0.895669 ) DX3DVUV( 0.479807, 0.722521 )  //198
DX3DVERT( -0.182636, -0.216942, 0.316335 ) DX3DVNORM( 0.450301, -0.434645, -0.779944 ) DX3DVUV( 0.424306, 0.722521 )  //199
DX3DVERT( -0.295512, -0.216942, 0.214702 ) DX3DVNORM( 0.728602, -0.434645, -0.529361 ) DX3DVUV( 0.380939, 0.722521 )  //200
DX3DVERT( -0.35729, -0.216942, 0.0759444 ) DX3DVNORM( 0.880922, -0.434645, -0.187246 ) DX3DVUV( 0.357203, 0.722521 )  //201
DX3DVERT( -0.35729, -0.216942, -0.0759443 ) DX3DVNORM( 0.880922, -0.434645, 0.187246 ) DX3DVUV( 0.357203, 0.722521 )  //202
DX3DVERT( -0.295512, -0.216942, -0.214702 ) DX3DVNORM( 0.728602, -0.434645, 0.529361 ) DX3DVUV( 0.380939, 0.722521 )  //203
DX3DVERT( -0.182636, -0.216942, -0.316335 ) DX3DVNORM( 0.450301, -0.434645, 0.779944 ) DX3DVUV( 0.424306, 0.722521 )  //204
DX3DVERT( -0.0381817, -0.216942, -0.363271 ) DX3DVNORM( 0.0941387, -0.434645, 0.895668 ) DX3DVUV( 0.479807, 0.722521 )  //205
DX3DVERT( 0.112875, -0.216942, -0.347394 ) DX3DVNORM( -0.278301, -0.434645, 0.856523 ) DX3DVUV( 0.537844, 0.722521 )  //206
DX3DVERT( 0.244414, -0.216942, -0.27145 ) DX3DVNORM( -0.60262, -0.434645, 0.669278 ) DX3DVUV( 0.588382, 0.722521 )  //207
DX3DVERT( 0.333692, -0.216942, -0.14857 ) DX3DVNORM( -0.822741, -0.434645, 0.366308 ) DX3DVUV( 0.622684, 0.722521 )  //208
DX3DVERT( 0.365272, -0.216942, 5.55606e-009 ) DX3DVNORM( -0.900602, -0.434645, -4.04335e-007 ) DX3DVUV( 0.634817, 0.722521 )  //209
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_DXT3___texa_DXT3__0 )
#if ( !BINARY_Texture_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_DXT3___texa_DXT3__0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VNUV, 210 )
DX3DVERTEX_END


#else
#define vertex_DXT3___texa_DXT3__0	NULL
#define vertexbuff_DXT3___texa_DXT3__0	NULL
#endif




#if ((PT_DXT3___texa_DXT3__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_DXT3___texa_DXT3__0 == PT_TRILIST )


#if ( !BINARY_Texture_tst__ )
DX3DINDEX_START( index_DXT3___texa_DXT3__0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 0, 5, // 2 8
	0, 3, 5, // 3 11
	6, 4, 7, // 4 14
	4, 5, 7, // 5 17
	8, 6, 9, // 6 20
	6, 7, 9, // 7 23
	10, 8, 11, // 8 26
	8, 9, 11, // 9 29
	12, 10, 13, // 10 32
	10, 11, 13, // 11 35
	14, 12, 15, // 12 38
	12, 13, 15, // 13 41
	16, 14, 17, // 14 44
	14, 15, 17, // 15 47
	18, 16, 19, // 16 50
	16, 17, 19, // 17 53
	20, 18, 21, // 18 56
	18, 19, 21, // 19 59
	22, 20, 23, // 20 62
	20, 21, 23, // 21 65
	24, 22, 25, // 22 68
	22, 23, 25, // 23 71
	26, 24, 27, // 24 74
	24, 25, 27, // 25 77
	28, 26, 29, // 26 80
	26, 27, 29, // 27 83
	1, 28, 2, // 28 86
	28, 29, 2, // 29 89
	3, 2, 31, // 30 92
	2, 30, 31, // 31 95
	5, 3, 32, // 32 98
	3, 31, 32, // 33 101
	7, 5, 33, // 34 104
	5, 32, 33, // 35 107
	9, 7, 34, // 36 110
	7, 33, 34, // 37 113
	11, 9, 35, // 38 116
	9, 34, 35, // 39 119
	13, 11, 36, // 40 122
	11, 35, 36, // 41 125
	15, 13, 37, // 42 128
	13, 36, 37, // 43 131
	17, 15, 38, // 44 134
	15, 37, 38, // 45 137
	19, 17, 39, // 46 140
	17, 38, 39, // 47 143
	21, 19, 40, // 48 146
	19, 39, 40, // 49 149
	23, 21, 41, // 50 152
	21, 40, 41, // 51 155
	25, 23, 42, // 52 158
	23, 41, 42, // 53 161
	27, 25, 43, // 54 164
	25, 42, 43, // 55 167
	29, 27, 44, // 56 170
	27, 43, 44, // 57 173
	2, 29, 30, // 58 176
	29, 44, 30, // 59 179
	31, 30, 46, // 60 182
	30, 45, 46, // 61 185
	32, 31, 47, // 62 188
	31, 46, 47, // 63 191
	33, 32, 48, // 64 194
	32, 47, 48, // 65 197
	34, 33, 49, // 66 200
	33, 48, 49, // 67 203
	35, 34, 50, // 68 206
	34, 49, 50, // 69 209
	36, 35, 51, // 70 212
	35, 50, 51, // 71 215
	37, 36, 52, // 72 218
	36, 51, 52, // 73 221
	38, 37, 53, // 74 224
	37, 52, 53, // 75 227
	39, 38, 54, // 76 230
	38, 53, 54, // 77 233
	40, 39, 55, // 78 236
	39, 54, 55, // 79 239
	41, 40, 56, // 80 242
	40, 55, 56, // 81 245
	42, 41, 57, // 82 248
	41, 56, 57, // 83 251
	43, 42, 58, // 84 254
	42, 57, 58, // 85 257
	44, 43, 59, // 86 260
	43, 58, 59, // 87 263
	30, 44, 45, // 88 266
	44, 59, 45, // 89 269
	46, 45, 61, // 90 272
	45, 60, 61, // 91 275
	47, 46, 62, // 92 278
	46, 61, 62, // 93 281
	48, 47, 63, // 94 284
	47, 62, 63, // 95 287
	49, 48, 64, // 96 290
	48, 63, 64, // 97 293
	50, 49, 65, // 98 296
	49, 64, 65, // 99 299
	51, 50, 66, // 100 302
	50, 65, 66, // 101 305
	52, 51, 67, // 102 308
	51, 66, 67, // 103 311
	53, 52, 68, // 104 314
	52, 67, 68, // 105 317
	54, 53, 69, // 106 320
	53, 68, 69, // 107 323
	55, 54, 70, // 108 326
	54, 69, 70, // 109 329
	56, 55, 71, // 110 332
	55, 70, 71, // 111 335
	57, 56, 72, // 112 338
	56, 71, 72, // 113 341
	58, 57, 73, // 114 344
	57, 72, 73, // 115 347
	59, 58, 74, // 116 350
	58, 73, 74, // 117 353
	45, 59, 60, // 118 356
	59, 74, 60, // 119 359
	61, 60, 76, // 120 362
	60, 75, 76, // 121 365
	62, 61, 77, // 122 368
	61, 76, 77, // 123 371
	63, 62, 78, // 124 374
	62, 77, 78, // 125 377
	64, 63, 79, // 126 380
	63, 78, 79, // 127 383
	65, 64, 80, // 128 386
	64, 79, 80, // 129 389
	66, 65, 81, // 130 392
	65, 80, 81, // 131 395
	67, 66, 82, // 132 398
	66, 81, 82, // 133 401
	68, 67, 83, // 134 404
	67, 82, 83, // 135 407
	69, 68, 84, // 136 410
	68, 83, 84, // 137 413
	70, 69, 85, // 138 416
	69, 84, 85, // 139 419
	71, 70, 86, // 140 422
	70, 85, 86, // 141 425
	72, 71, 87, // 142 428
	71, 86, 87, // 143 431
	73, 72, 88, // 144 434
	72, 87, 88, // 145 437
	74, 73, 89, // 146 440
	73, 88, 89, // 147 443
	60, 74, 75, // 148 446
	74, 89, 75, // 149 449
	76, 75, 91, // 150 452
	75, 90, 91, // 151 455
	77, 76, 92, // 152 458
	76, 91, 92, // 153 461
	78, 77, 93, // 154 464
	77, 92, 93, // 155 467
	79, 78, 94, // 156 470
	78, 93, 94, // 157 473
	80, 79, 95, // 158 476
	79, 94, 95, // 159 479
	81, 80, 96, // 160 482
	80, 95, 96, // 161 485
	82, 81, 97, // 162 488
	81, 96, 97, // 163 491
	83, 82, 98, // 164 494
	82, 97, 98, // 165 497
	84, 83, 99, // 166 500
	83, 98, 99, // 167 503
	85, 84, 100, // 168 506
	84, 99, 100, // 169 509
	86, 85, 101, // 170 512
	85, 100, 101, // 171 515
	87, 86, 102, // 172 518
	86, 101, 102, // 173 521
	88, 87, 103, // 174 524
	87, 102, 103, // 175 527
	89, 88, 104, // 176 530
	88, 103, 104, // 177 533
	75, 89, 90, // 178 536
	89, 104, 90, // 179 539
	91, 90, 106, // 180 542
	90, 105, 106, // 181 545
	92, 91, 107, // 182 548
	91, 106, 107, // 183 551
	93, 92, 108, // 184 554
	92, 107, 108, // 185 557
	94, 93, 109, // 186 560
	93, 108, 109, // 187 563
	95, 94, 110, // 188 566
	94, 109, 110, // 189 569
	96, 95, 111, // 190 572
	95, 110, 111, // 191 575
	97, 96, 112, // 192 578
	96, 111, 112, // 193 581
	98, 97, 113, // 194 584
	97, 112, 113, // 195 587
	99, 98, 114, // 196 590
	98, 113, 114, // 197 593
	100, 99, 115, // 198 596
	99, 114, 115, // 199 599
	101, 100, 116, // 200 602
	100, 115, 116, // 201 605
	102, 101, 117, // 202 608
	101, 116, 117, // 203 611
	103, 102, 118, // 204 614
	102, 117, 118, // 205 617
	104, 103, 119, // 206 620
	103, 118, 119, // 207 623
	90, 104, 105, // 208 626
	104, 119, 105, // 209 629
	106, 105, 121, // 210 632
	105, 120, 121, // 211 635
	107, 106, 122, // 212 638
	106, 121, 122, // 213 641
	108, 107, 123, // 214 644
	107, 122, 123, // 215 647
	109, 108, 124, // 216 650
	108, 123, 124, // 217 653
	110, 109, 125, // 218 656
	109, 124, 125, // 219 659
	111, 110, 126, // 220 662
	110, 125, 126, // 221 665
	112, 111, 127, // 222 668
	111, 126, 127, // 223 671
	113, 112, 128, // 224 674
	112, 127, 128, // 225 677
	114, 113, 129, // 226 680
	113, 128, 129, // 227 683
	115, 114, 130, // 228 686
	114, 129, 130, // 229 689
	116, 115, 131, // 230 692
	115, 130, 131, // 231 695
	117, 116, 132, // 232 698
	116, 131, 132, // 233 701
	118, 117, 133, // 234 704
	117, 132, 133, // 235 707
	119, 118, 134, // 236 710
	118, 133, 134, // 237 713
	105, 119, 120, // 238 716
	119, 134, 120, // 239 719
	121, 120, 136, // 240 722
	120, 135, 136, // 241 725
	122, 121, 137, // 242 728
	121, 136, 137, // 243 731
	123, 122, 138, // 244 734
	122, 137, 138, // 245 737
	124, 123, 139, // 246 740
	123, 138, 139, // 247 743
	125, 124, 140, // 248 746
	124, 139, 140, // 249 749
	126, 125, 141, // 250 752
	125, 140, 141, // 251 755
	127, 126, 142, // 252 758
	126, 141, 142, // 253 761
	128, 127, 143, // 254 764
	127, 142, 143, // 255 767
	129, 128, 144, // 256 770
	128, 143, 144, // 257 773
	130, 129, 145, // 258 776
	129, 144, 145, // 259 779
	131, 130, 146, // 260 782
	130, 145, 146, // 261 785
	132, 131, 147, // 262 788
	131, 146, 147, // 263 791
	133, 132, 148, // 264 794
	132, 147, 148, // 265 797
	134, 133, 149, // 266 800
	133, 148, 149, // 267 803
	120, 134, 135, // 268 806
	134, 149, 135, // 269 809
	136, 135, 151, // 270 812
	135, 150, 151, // 271 815
	137, 136, 152, // 272 818
	136, 151, 152, // 273 821
	138, 137, 153, // 274 824
	137, 152, 153, // 275 827
	139, 138, 154, // 276 830
	138, 153, 154, // 277 833
	140, 139, 155, // 278 836
	139, 154, 155, // 279 839
	141, 140, 156, // 280 842
	140, 155, 156, // 281 845
	142, 141, 157, // 282 848
	141, 156, 157, // 283 851
	143, 142, 158, // 284 854
	142, 157, 158, // 285 857
	144, 143, 159, // 286 860
	143, 158, 159, // 287 863
	145, 144, 160, // 288 866
	144, 159, 160, // 289 869
	146, 145, 161, // 290 872
	145, 160, 161, // 291 875
	147, 146, 162, // 292 878
	146, 161, 162, // 293 881
	148, 147, 163, // 294 884
	147, 162, 163, // 295 887
	149, 148, 164, // 296 890
	148, 163, 164, // 297 893
	135, 149, 150, // 298 896
	149, 164, 150, // 299 899
	151, 150, 166, // 300 902
	150, 165, 166, // 301 905
	152, 151, 167, // 302 908
	151, 166, 167, // 303 911
	153, 152, 168, // 304 914
	152, 167, 168, // 305 917
	154, 153, 169, // 306 920
	153, 168, 169, // 307 923
	155, 154, 170, // 308 926
	154, 169, 170, // 309 929
	156, 155, 171, // 310 932
	155, 170, 171, // 311 935
	157, 156, 172, // 312 938
	156, 171, 172, // 313 941
	158, 157, 173, // 314 944
	157, 172, 173, // 315 947
	159, 158, 174, // 316 950
	158, 173, 174, // 317 953
	160, 159, 175, // 318 956
	159, 174, 175, // 319 959
	161, 160, 176, // 320 962
	160, 175, 176, // 321 965
	162, 161, 177, // 322 968
	161, 176, 177, // 323 971
	163, 162, 178, // 324 974
	162, 177, 178, // 325 977
	164, 163, 179, // 326 980
	163, 178, 179, // 327 983
	150, 164, 165, // 328 986
	164, 179, 165, // 329 989
	166, 165, 181, // 330 992
	165, 180, 181, // 331 995
	167, 166, 182, // 332 998
	166, 181, 182, // 333 1001
	168, 167, 183, // 334 1004
	167, 182, 183, // 335 1007
	169, 168, 184, // 336 1010
	168, 183, 184, // 337 1013
	170, 169, 185, // 338 1016
	169, 184, 185, // 339 1019
	171, 170, 186, // 340 1022
	170, 185, 186, // 341 1025
	172, 171, 187, // 342 1028
	171, 186, 187, // 343 1031
	173, 172, 188, // 344 1034
	172, 187, 188, // 345 1037
	174, 173, 189, // 346 1040
	173, 188, 189, // 347 1043
	175, 174, 190, // 348 1046
	174, 189, 190, // 349 1049
	176, 175, 191, // 350 1052
	175, 190, 191, // 351 1055
	177, 176, 192, // 352 1058
	176, 191, 192, // 353 1061
	178, 177, 193, // 354 1064
	177, 192, 193, // 355 1067
	179, 178, 194, // 356 1070
	178, 193, 194, // 357 1073
	165, 179, 180, // 358 1076
	179, 194, 180, // 359 1079
	181, 180, 196, // 360 1082
	180, 195, 196, // 361 1085
	182, 181, 197, // 362 1088
	181, 196, 197, // 363 1091
	183, 182, 198, // 364 1094
	182, 197, 198, // 365 1097
	184, 183, 199, // 366 1100
	183, 198, 199, // 367 1103
	185, 184, 200, // 368 1106
	184, 199, 200, // 369 1109
	186, 185, 201, // 370 1112
	185, 200, 201, // 371 1115
	187, 186, 202, // 372 1118
	186, 201, 202, // 373 1121
	188, 187, 203, // 374 1124
	187, 202, 203, // 375 1127
	189, 188, 204, // 376 1130
	188, 203, 204, // 377 1133
	190, 189, 205, // 378 1136
	189, 204, 205, // 379 1139
	191, 190, 206, // 380 1142
	190, 205, 206, // 381 1145
	192, 191, 207, // 382 1148
	191, 206, 207, // 383 1151
	193, 192, 208, // 384 1154
	192, 207, 208, // 385 1157
	194, 193, 209, // 386 1160
	193, 208, 209, // 387 1163
	180, 194, 195, // 388 1166
	194, 209, 195, // 389 1169
	196, 195, 0, // 390 1172
	195, 1, 0, // 391 1175
	197, 196, 4, // 392 1178
	196, 0, 4, // 393 1181
	198, 197, 6, // 394 1184
	197, 4, 6, // 395 1187
	199, 198, 8, // 396 1190
	198, 6, 8, // 397 1193
	200, 199, 10, // 398 1196
	199, 8, 10, // 399 1199
	201, 200, 12, // 400 1202
	200, 10, 12, // 401 1205
	202, 201, 14, // 402 1208
	201, 12, 14, // 403 1211
	203, 202, 16, // 404 1214
	202, 14, 16, // 405 1217
	204, 203, 18, // 406 1220
	203, 16, 18, // 407 1223
	205, 204, 20, // 408 1226
	204, 18, 20, // 409 1229
	206, 205, 22, // 410 1232
	205, 20, 22, // 411 1235
	207, 206, 24, // 412 1238
	206, 22, 24, // 413 1241
	208, 207, 26, // 414 1244
	207, 24, 26, // 415 1247
	209, 208, 28, // 416 1250
	208, 26, 28, // 417 1253
	195, 209, 1, // 418 1256
	209, 28, 1, // 419 1259
DX3DINDEX_END
#endif

#else
#define index_DXT3___texa_DXT3__0	NULL
#endif




#if ((PT_DXT3___texa_DXT3__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP) ) || (PT_DXT3___texa_DXT3__0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_DXT3___texa_DXT3__0_INDEXSTRIP 	NULL
#endif




#if ((PT_DXT3___texa_DXT3__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_VERTEXSTRIP) ) || (PT_DXT3___texa_DXT3__0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_DXT3___texa_DXT3__0_VERTEXSTRIP 	NULL
#define vertexbuff_DXT3___texa_DXT3__0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_DXT3__ )
DX3DMODEL_START( model_DXT3___texa_DXT3__0 )
DX3DMODEL_VERTEX( vertex_DXT3___texa_DXT3__0 )
#if ( !BINARY_Texture_tst__ )
DX3DMODEL_INDEX( index_DXT3___texa_DXT3__0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 1260 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_texa_DXT3_ )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_DXT3__, 1281202693 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_DXT3__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	2.9431, 0.736991, -0.136287, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	2.9431, 0.736991, -0.136287, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_DXT5__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_DXT1__
/////////////////////////////////////////////
#if 0
	0.0129797, 0, -0.999916, 0, 
	0, 1, 0, 0, 
	0.999916, 0, 0.0129797, 0, 
	0.32486, 1.28506, -3.89125, 1
#endif

DX3DTEXTURE_START( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkdxt1_DDS__ )
DX3DTEXTURE_NAME( "Z:/toshi2/ATEST/ATEST/ATESTNameSpace/STAGE2-3_Beginners3DProgramming/Texture/TextureFiles/checkdxt1.DDS" )
DX3DTEXTURE_END


DX3DMATERIALTEX_START( materialtex_texa_DXT1_ )
DX3DMATERIALTEX_NAME( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkdxt1_DDS__ )
DX3DMATERIALTEX_END


DX3DMATERIAL_START( material_texa_DXT1_ )
DX3DMATERIAL_DIFF( 1, 0.8, 0.8, 0.8 )
DX3DMATERIAL_SPEC( 0.5, 0.5, 0.5, 0.5 )
DX3DMATERIAL_TEX( materialtex_texa_DXT1_ )
DX3DMATERIAL_SHADER( TEXA )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_DXT1___texa_DXT1__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_DXT1___texa_DXT1__0 == PT_TRILIST ) || ((PT_DXT1___texa_DXT1__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP))  || (PT_DXT1___texa_DXT1__0 == PT_INDEXSTRIP)


#if ( !BINARY_Texture_tst__ )
DX3DVERT_START( VNUV, vertexbuff_DXT1___texa_DXT1__0 )
DX3DVERT( 0.298706, -1.43257, 0.132992 ) DX3DVNORM( 0.203174, -0.974955, 0.0904587 ) DX3DVUV( 0, 0.928571 )  //0
DX3DVERT( 0.218789, -1.43257, 0.242989 ) DX3DVNORM( 0.148816, -0.974955, 0.165277 ) DX3DVUV( 0.0666667, 0.928571 )  //1
DX3DVERT( 0.426606, -1.32389, 0.473794 ) DX3DVNORM( 0.290193, -0.901064, 0.322292 ) DX3DVUV( 0.0666667, 0.857143 )  //2
DX3DVERT( 0.582434, -1.32389, 0.259316 ) DX3DVNORM( 0.396192, -0.901064, 0.176396 ) DX3DVUV( 0, 0.857143 )  //3
DX3DVERT( 0.101041, -1.43257, 0.310971 ) DX3DVNORM( 0.0687259, -0.974955, 0.211517 ) DX3DVUV( 0.133333, 0.928571 )  //4
DX3DVERT( 0.197015, -1.32389, 0.606349 ) DX3DVNORM( 0.134016, -0.901064, 0.41246 ) DX3DVUV( 0.133333, 0.857143 )  //5
DX3DVERT( -0.0341781, -1.43257, 0.325183 ) DX3DVNORM( -0.0232472, -0.974955, 0.221183 ) DX3DVUV( 0.2, 0.928571 )  //6
DX3DVERT( -0.0666424, -1.32389, 0.63406 ) DX3DVNORM( -0.0453324, -0.901064, 0.43131 ) DX3DVUV( 0.2, 0.857143 )  //7
DX3DVERT( -0.163487, -1.43257, 0.283168 ) DX3DVNORM( -0.111201, -0.974955, 0.192606 ) DX3DVUV( 0.266667, 0.928571 )  //8
DX3DVERT( -0.318776, -1.32389, 0.552137 ) DX3DVNORM( -0.216843, -0.901064, 0.375583 ) DX3DVUV( 0.266667, 0.857143 )  //9
DX3DVERT( -0.264528, -1.43257, 0.192191 ) DX3DVNORM( -0.179927, -0.974955, 0.130724 ) DX3DVUV( 0.333333, 0.928571 )  //10
DX3DVERT( -0.515791, -1.32389, 0.374744 ) DX3DVNORM( -0.350859, -0.901064, 0.254914 ) DX3DVUV( 0.333333, 0.857143 )  //11
DX3DVERT( -0.319829, -1.43257, 0.0679818 ) DX3DVNORM( -0.217541, -0.974955, 0.0462397 ) DX3DVUV( 0.4, 0.928571 )  //12
DX3DVERT( -0.623621, -1.32389, 0.132555 ) DX3DVNORM( -0.424209, -0.901064, 0.0901685 ) DX3DVUV( 0.4, 0.857143 )  //13
DX3DVERT( -0.319829, -1.43257, -0.0679818 ) DX3DVNORM( -0.217541, -0.974955, -0.0462398 ) DX3DVUV( 0.466667, 0.928571 )  //14
DX3DVERT( -0.623621, -1.32389, -0.132555 ) DX3DVNORM( -0.424209, -0.901064, -0.0901684 ) DX3DVUV( 0.466667, 0.857143 )  //15
DX3DVERT( -0.264528, -1.43257, -0.192191 ) DX3DVNORM( -0.179927, -0.974955, -0.130724 ) DX3DVUV( 0.533333, 0.928571 )  //16
DX3DVERT( -0.515791, -1.32389, -0.374744 ) DX3DVNORM( -0.350859, -0.901064, -0.254914 ) DX3DVUV( 0.533333, 0.857143 )  //17
DX3DVERT( -0.163487, -1.43257, -0.283168 ) DX3DVNORM( -0.111201, -0.974955, -0.192605 ) DX3DVUV( 0.6, 0.928571 )  //18
DX3DVERT( -0.318777, -1.32389, -0.552137 ) DX3DVNORM( -0.216843, -0.901064, -0.375583 ) DX3DVUV( 0.6, 0.857143 )  //19
DX3DVERT( -0.0341782, -1.43257, -0.325183 ) DX3DVNORM( -0.0232473, -0.974955, -0.221183 ) DX3DVUV( 0.666667, 0.928571 )  //20
DX3DVERT( -0.0666425, -1.32389, -0.63406 ) DX3DVNORM( -0.0453326, -0.901064, -0.43131 ) DX3DVUV( 0.666667, 0.857143 )  //21
DX3DVERT( 0.101041, -1.43257, -0.310971 ) DX3DVNORM( 0.0687258, -0.974955, -0.211516 ) DX3DVUV( 0.733333, 0.928571 )  //22
DX3DVERT( 0.197015, -1.32389, -0.606349 ) DX3DVNORM( 0.134016, -0.901064, -0.41246 ) DX3DVUV( 0.733333, 0.857143 )  //23
DX3DVERT( 0.218789, -1.43257, -0.242989 ) DX3DVNORM( 0.148816, -0.974955, -0.165277 ) DX3DVUV( 0.8, 0.928571 )  //24
DX3DVERT( 0.426606, -1.32389, -0.473794 ) DX3DVNORM( 0.290193, -0.901064, -0.322291 ) DX3DVUV( 0.8, 0.857143 )  //25
DX3DVERT( 0.298706, -1.43257, -0.132993 ) DX3DVNORM( 0.203174, -0.974955, -0.090459 ) DX3DVUV( 0.866667, 0.928571 )  //26
DX3DVERT( 0.582434, -1.32389, -0.259316 ) DX3DVNORM( 0.396192, -0.901064, -0.176396 ) DX3DVUV( 0.866667, 0.857143 )  //27
DX3DVERT( 0.326974, -1.43257, -0 ) DX3DVNORM( 0.222401, -0.974955, 1.40775e-008 ) DX3DVUV( 0.933333, 0.928571 )  //28
DX3DVERT( 0.637553, -1.32389, -0 ) DX3DVNORM( 0.433686, -0.901064, 1.76974e-007 ) DX3DVUV( 0.933333, 0.857143 )  //29
DX3DVERT( 0.298706, -1.43257, 0.132992 ) DX3DVNORM( 0.203174, -0.974955, 0.0904587 ) DX3DVUV( 1, 0.928571 )  //30
DX3DVERT( 0.582434, -1.32389, 0.259316 ) DX3DVNORM( 0.396192, -0.901064, 0.176396 ) DX3DVUV( 1, 0.857143 )  //31
DX3DVERT( 0.613032, -1.14883, 0.680841 ) DX3DVNORM( 0.417054, -0.782001, 0.463186 ) DX3DVUV( 0.0666667, 0.785714 )  //32
DX3DVERT( 0.836956, -1.14883, 0.372637 ) DX3DVNORM( 0.569393, -0.782, 0.25351 ) DX3DVUV( 0, 0.785714 )  //33
DX3DVERT( 0.28311, -1.14883, 0.871322 ) DX3DVNORM( 0.192603, -0.782, 0.592772 ) DX3DVUV( 0.133333, 0.785714 )  //34
DX3DVERT( -0.0957649, -1.14883, 0.911143 ) DX3DVNORM( -0.0651501, -0.782001, 0.619863 ) DX3DVUV( 0.2, 0.785714 )  //35
DX3DVERT( -0.458081, -1.14883, 0.79342 ) DX3DVNORM( -0.311639, -0.782001, 0.539774 ) DX3DVUV( 0.266667, 0.785714 )  //36
DX3DVERT( -0.741191, -1.14883, 0.538507 ) DX3DVNORM( -0.504242, -0.782, 0.366353 ) DX3DVUV( 0.333333, 0.785714 )  //37
DX3DVERT( -0.896142, -1.14883, 0.190481 ) DX3DVNORM( -0.609658, -0.782001, 0.129587 ) DX3DVUV( 0.4, 0.785714 )  //38
DX3DVERT( -0.896142, -1.14883, -0.190481 ) DX3DVNORM( -0.609657, -0.782, -0.129587 ) DX3DVUV( 0.466667, 0.785714 )  //39
DX3DVERT( -0.741191, -1.14883, -0.538507 ) DX3DVNORM( -0.504242, -0.782001, -0.366353 ) DX3DVUV( 0.533333, 0.785714 )  //40
DX3DVERT( -0.458081, -1.14883, -0.79342 ) DX3DVNORM( -0.311639, -0.782001, -0.539774 ) DX3DVUV( 0.6, 0.785714 )  //41
DX3DVERT( -0.0957651, -1.14883, -0.911143 ) DX3DVNORM( -0.0651503, -0.782, -0.619863 ) DX3DVUV( 0.666667, 0.785714 )  //42
DX3DVERT( 0.28311, -1.14883, -0.871322 ) DX3DVNORM( 0.192603, -0.782001, -0.592772 ) DX3DVUV( 0.733333, 0.785714 )  //43
DX3DVERT( 0.613032, -1.14883, -0.680841 ) DX3DVNORM( 0.417054, -0.782, -0.463186 ) DX3DVUV( 0.8, 0.785714 )  //44
DX3DVERT( 0.836956, -1.14883, -0.372637 ) DX3DVNORM( 0.569392, -0.782001, -0.25351 ) DX3DVUV( 0.866667, 0.785714 )  //45
DX3DVERT( 0.916162, -1.14883, -0 ) DX3DVNORM( 0.623278, -0.782, 2.42038e-007 ) DX3DVUV( 0.933333, 0.785714 )  //46
DX3DVERT( 0.836956, -1.14883, 0.372637 ) DX3DVNORM( 0.569393, -0.782, 0.25351 ) DX3DVUV( 1, 0.785714 )  //47
DX3DVERT( 0.768718, -0.916162, 0.853748 ) DX3DVNORM( 0.523035, -0.6237, 0.580889 ) DX3DVUV( 0.0666667, 0.714286 )  //48
DX3DVERT( 1.04951, -0.916162, 0.467271 ) DX3DVNORM( 0.714086, -0.6237, 0.317932 ) DX3DVUV( 0, 0.714286 )  //49
DX3DVERT( 0.355008, -0.916162, 1.0926 ) DX3DVNORM( 0.241548, -0.6237, 0.743407 ) DX3DVUV( 0.133333, 0.714286 )  //50
DX3DVERT( -0.120085, -0.916162, 1.14254 ) DX3DVNORM( -0.081706, -0.6237, 0.777382 ) DX3DVUV( 0.2, 0.714286 )  //51
DX3DVERT( -0.574415, -0.916162, 0.994917 ) DX3DVNORM( -0.390832, -0.6237, 0.676941 ) DX3DVUV( 0.266667, 0.714286 )  //52
DX3DVERT( -0.929424, -0.916162, 0.675266 ) DX3DVNORM( -0.632379, -0.6237, 0.459451 ) DX3DVUV( 0.333333, 0.714286 )  //53
DX3DVERT( -1.12373, -0.916162, 0.238855 ) DX3DVNORM( -0.764583, -0.6237, 0.162517 ) DX3DVUV( 0.4, 0.714286 )  //54
DX3DVERT( -1.12373, -0.916162, -0.238855 ) DX3DVNORM( -0.764583, -0.6237, -0.162517 ) DX3DVUV( 0.466667, 0.714286 )  //55
DX3DVERT( -0.929424, -0.916162, -0.675266 ) DX3DVNORM( -0.632379, -0.6237, -0.45945 ) DX3DVUV( 0.533333, 0.714286 )  //56
DX3DVERT( -0.574416, -0.916162, -0.994917 ) DX3DVNORM( -0.390832, -0.6237, -0.676941 ) DX3DVUV( 0.6, 0.714286 )  //57
DX3DVERT( -0.120086, -0.916162, -1.14254 ) DX3DVNORM( -0.0817062, -0.6237, -0.777382 ) DX3DVUV( 0.666667, 0.714286 )  //58
DX3DVERT( 0.355008, -0.916162, -1.0926 ) DX3DVNORM( 0.241547, -0.6237, -0.743407 ) DX3DVUV( 0.733333, 0.714286 )  //59
DX3DVERT( 0.768718, -0.916162, -0.853748 ) DX3DVNORM( 0.523035, -0.6237, -0.58089 ) DX3DVUV( 0.8, 0.714286 )  //60
DX3DVERT( 1.04951, -0.916162, -0.467272 ) DX3DVNORM( 0.714086, -0.6237, -0.317931 ) DX3DVUV( 0.866667, 0.714286 )  //61
DX3DVERT( 1.14883, -0.916162, -0 ) DX3DVNORM( 0.781664, -0.6237, 1.672e-007 ) DX3DVUV( 0.933333, 0.714286 )  //62
DX3DVERT( 1.04951, -0.916162, 0.467271 ) DX3DVNORM( 0.714086, -0.6237, 0.317932 ) DX3DVUV( 1, 0.714286 )  //63
DX3DVERT( 0.885857, -0.637553, 0.983844 ) DX3DVNORM( 0.602804, -0.434076, 0.669481 ) DX3DVUV( 0.0666667, 0.642857 )  //64
DX3DVERT( 1.20944, -0.637553, 0.538475 ) DX3DVNORM( 0.822991, -0.434076, 0.366419 ) DX3DVUV( 0, 0.642857 )  //65
DX3DVERT( 0.409105, -0.637553, 1.2591 ) DX3DVNORM( 0.278386, -0.434076, 0.856784 ) DX3DVUV( 0.133333, 0.642857 )  //66
DX3DVERT( -0.138384, -0.637553, 1.31664 ) DX3DVNORM( -0.094167, -0.434076, 0.895941 ) DX3DVUV( 0.2, 0.642857 )  //67
DX3DVERT( -0.661946, -0.637553, 1.14652 ) DX3DVNORM( -0.450438, -0.434076, 0.780182 ) DX3DVUV( 0.266667, 0.642857 )  //68
DX3DVERT( -1.07105, -0.637553, 0.778165 ) DX3DVNORM( -0.728824, -0.434076, 0.529522 ) DX3DVUV( 0.333333, 0.642857 )  //69
DX3DVERT( -1.29496, -0.637553, 0.275253 ) DX3DVNORM( -0.88119, -0.434076, 0.187303 ) DX3DVUV( 0.4, 0.642857 )  //70
DX3DVERT( -1.29496, -0.637553, -0.275253 ) DX3DVNORM( -0.88119, -0.434076, -0.187303 ) DX3DVUV( 0.466667, 0.642857 )  //71
DX3DVERT( -1.07105, -0.637553, -0.778164 ) DX3DVNORM( -0.728824, -0.434076, -0.529522 ) DX3DVUV( 0.533333, 0.642857 )  //72
DX3DVERT( -0.661946, -0.637553, -1.14652 ) DX3DVNORM( -0.450438, -0.434076, -0.780182 ) DX3DVUV( 0.6, 0.642857 )  //73
DX3DVERT( -0.138385, -0.637553, -1.31664 ) DX3DVNORM( -0.0941674, -0.434076, -0.895941 ) DX3DVUV( 0.666667, 0.642857 )  //74
DX3DVERT( 0.409105, -0.637553, -1.2591 ) DX3DVNORM( 0.278386, -0.434076, -0.856784 ) DX3DVUV( 0.733333, 0.642857 )  //75
DX3DVERT( 0.885857, -0.637553, -0.983844 ) DX3DVNORM( 0.602804, -0.434076, -0.669482 ) DX3DVUV( 0.8, 0.642857 )  //76
DX3DVERT( 1.20944, -0.637553, -0.538476 ) DX3DVNORM( 0.822991, -0.434076, -0.366419 ) DX3DVUV( 0.866667, 0.642857 )  //77
DX3DVERT( 1.32389, -0.637553, -0 ) DX3DVNORM( 0.900876, -0.434076, 1.90816e-007 ) DX3DVUV( 0.933333, 0.642857 )  //78
DX3DVERT( 1.20944, -0.637553, 0.538475 ) DX3DVNORM( 0.822991, -0.434076, 0.366419 ) DX3DVUV( 1, 0.642857 )  //79
DX3DVERT( 0.958576, -0.326975, 1.06461 ) DX3DVNORM( 0.652337, -0.222636, 0.724493 ) DX3DVUV( 0.0666667, 0.571429 )  //80
DX3DVERT( 1.30872, -0.326975, 0.582678 ) DX3DVNORM( 0.890617, -0.222636, 0.396528 ) DX3DVUV( 0, 0.571429 )  //81
DX3DVERT( 0.442688, -0.326975, 1.36245 ) DX3DVNORM( 0.301261, -0.222636, 0.927187 ) DX3DVUV( 0.133333, 0.571429 )  //82
DX3DVERT( -0.149744, -0.326975, 1.42472 ) DX3DVNORM( -0.101905, -0.222636, 0.969561 ) DX3DVUV( 0.2, 0.571429 )  //83
DX3DVERT( -0.716284, -0.326975, 1.24064 ) DX3DVNORM( -0.487451, -0.222636, 0.84429 ) DX3DVUV( 0.266667, 0.571429 )  //84
DX3DVERT( -1.15897, -0.326975, 0.842043 ) DX3DVNORM( -0.788712, -0.222636, 0.573033 ) DX3DVUV( 0.333333, 0.571429 )  //85
DX3DVERT( -1.40126, -0.326975, 0.297848 ) DX3DVNORM( -0.953598, -0.222636, 0.202694 ) DX3DVUV( 0.4, 0.571429 )  //86
DX3DVERT( -1.40126, -0.326975, -0.297848 ) DX3DVNORM( -0.953598, -0.222636, -0.202693 ) DX3DVUV( 0.466667, 0.571429 )  //87
DX3DVERT( -1.15897, -0.326975, -0.842043 ) DX3DVNORM( -0.788712, -0.222636, -0.573033 ) DX3DVUV( 0.533333, 0.571429 )  //88
DX3DVERT( -0.716284, -0.326975, -1.24064 ) DX3DVNORM( -0.487451, -0.222636, -0.84429 ) DX3DVUV( 0.6, 0.571429 )  //89
DX3DVERT( -0.149744, -0.326975, -1.42472 ) DX3DVNORM( -0.101905, -0.222636, -0.969561 ) DX3DVUV( 0.666667, 0.571429 )  //90
DX3DVERT( 0.442688, -0.326975, -1.36245 ) DX3DVNORM( 0.301261, -0.222636, -0.927187 ) DX3DVUV( 0.733333, 0.571429 )  //91
DX3DVERT( 0.958576, -0.326975, -1.06461 ) DX3DVNORM( 0.652337, -0.222636, -0.724493 ) DX3DVUV( 0.8, 0.571429 )  //92
DX3DVERT( 1.30872, -0.326975, -0.582678 ) DX3DVNORM( 0.890617, -0.222636, -0.396528 ) DX3DVUV( 0.866667, 0.571429 )  //93
DX3DVERT( 1.43257, -0.326975, -0 ) DX3DVNORM( 0.974902, -0.222636, 1.91378e-007 ) DX3DVUV( 0.933333, 0.571429 )  //94
DX3DVERT( 1.30872, -0.326975, 0.582678 ) DX3DVNORM( 0.890617, -0.222636, 0.396528 ) DX3DVUV( 1, 0.571429 )  //95
DX3DVERT( 0.983227, 0, 1.09198 ) DX3DVNORM( 0.669131, 0, 0.743145 ) DX3DVUV( 0.0666667, 0.5 )  //96
DX3DVERT( 1.34237, 0, 0.597663 ) DX3DVNORM( 0.913545, -1.91579e-009, 0.406737 ) DX3DVUV( 0, 0.5 )  //97
DX3DVERT( 0.454073, 0, 1.39749 ) DX3DVNORM( 0.309017, 0, 0.951056 ) DX3DVUV( 0.133333, 0.5 )  //98
DX3DVERT( -0.153595, 0, 1.46136 ) DX3DVNORM( -0.104528, 0, 0.994522 ) DX3DVUV( 0.2, 0.5 )  //99
DX3DVERT( -0.734705, 0, 1.27255 ) DX3DVNORM( -0.5, -1.91579e-009, 0.866025 ) DX3DVUV( 0.266667, 0.5 )  //100
DX3DVERT( -1.18878, 0, 0.863697 ) DX3DVNORM( -0.809017, 0, 0.587785 ) DX3DVUV( 0.333333, 0.5 )  //101
DX3DVERT( -1.4373, 0, 0.305508 ) DX3DVNORM( -0.978148, 1.91579e-009, 0.207912 ) DX3DVUV( 0.4, 0.5 )  //102
DX3DVERT( -1.4373, 0, -0.305507 ) DX3DVNORM( -0.978148, -1.91579e-009, -0.207912 ) DX3DVUV( 0.466667, 0.5 )  //103
DX3DVERT( -1.18878, 0, -0.863697 ) DX3DVNORM( -0.809017, 1.91579e-009, -0.587785 ) DX3DVUV( 0.533333, 0.5 )  //104
DX3DVERT( -0.734705, 0, -1.27255 ) DX3DVNORM( -0.5, 0, -0.866025 ) DX3DVUV( 0.6, 0.5 )  //105
DX3DVERT( -0.153595, 0, -1.46136 ) DX3DVNORM( -0.104529, 0, -0.994522 ) DX3DVUV( 0.666667, 0.5 )  //106
DX3DVERT( 0.454073, 0, -1.39749 ) DX3DVNORM( 0.309017, -1.91579e-009, -0.951056 ) DX3DVUV( 0.733333, 0.5 )  //107
DX3DVERT( 0.983227, 0, -1.09198 ) DX3DVNORM( 0.669131, 0, -0.743145 ) DX3DVUV( 0.8, 0.5 )  //108
DX3DVERT( 1.34237, 0, -0.597663 ) DX3DVNORM( 0.913545, 1.91579e-009, -0.406737 ) DX3DVUV( 0.866667, 0.5 )  //109
DX3DVERT( 1.46941, 0, -0 ) DX3DVNORM( 1, -1.91579e-009, 1.91579e-007 ) DX3DVUV( 0.933333, 0.5 )  //110
DX3DVERT( 1.34237, 0, 0.597663 ) DX3DVNORM( 0.913545, -1.91579e-009, 0.406737 ) DX3DVUV( 1, 0.5 )  //111
DX3DVERT( 0.958576, 0.326975, 1.06461 ) DX3DVNORM( 0.652337, 0.222636, 0.724493 ) DX3DVUV( 0.0666667, 0.428571 )  //112
DX3DVERT( 1.30872, 0.326975, 0.582678 ) DX3DVNORM( 0.890617, 0.222636, 0.396528 ) DX3DVUV( 0, 0.428571 )  //113
DX3DVERT( 0.442688, 0.326975, 1.36245 ) DX3DVNORM( 0.301261, 0.222636, 0.927187 ) DX3DVUV( 0.133333, 0.428571 )  //114
DX3DVERT( -0.149744, 0.326975, 1.42472 ) DX3DVNORM( -0.101905, 0.222636, 0.969561 ) DX3DVUV( 0.2, 0.428571 )  //115
DX3DVERT( -0.716284, 0.326975, 1.24064 ) DX3DVNORM( -0.487451, 0.222636, 0.84429 ) DX3DVUV( 0.266667, 0.428571 )  //116
DX3DVERT( -1.15897, 0.326975, 0.842043 ) DX3DVNORM( -0.788712, 0.222636, 0.573033 ) DX3DVUV( 0.333333, 0.428571 )  //117
DX3DVERT( -1.40126, 0.326975, 0.297848 ) DX3DVNORM( -0.953598, 0.222636, 0.202694 ) DX3DVUV( 0.4, 0.428571 )  //118
DX3DVERT( -1.40126, 0.326975, -0.297848 ) DX3DVNORM( -0.953598, 0.222636, -0.202693 ) DX3DVUV( 0.466667, 0.428571 )  //119
DX3DVERT( -1.15897, 0.326975, -0.842043 ) DX3DVNORM( -0.788712, 0.222636, -0.573033 ) DX3DVUV( 0.533333, 0.428571 )  //120
DX3DVERT( -0.716284, 0.326975, -1.24064 ) DX3DVNORM( -0.487451, 0.222636, -0.84429 ) DX3DVUV( 0.6, 0.428571 )  //121
DX3DVERT( -0.149744, 0.326975, -1.42472 ) DX3DVNORM( -0.101905, 0.222636, -0.969561 ) DX3DVUV( 0.666667, 0.428571 )  //122
DX3DVERT( 0.442688, 0.326975, -1.36245 ) DX3DVNORM( 0.301261, 0.222636, -0.927187 ) DX3DVUV( 0.733333, 0.428571 )  //123
DX3DVERT( 0.958576, 0.326975, -1.06461 ) DX3DVNORM( 0.652337, 0.222636, -0.724493 ) DX3DVUV( 0.8, 0.428571 )  //124
DX3DVERT( 1.30872, 0.326975, -0.582678 ) DX3DVNORM( 0.890617, 0.222636, -0.396528 ) DX3DVUV( 0.866667, 0.428571 )  //125
DX3DVERT( 1.43257, 0.326975, -0 ) DX3DVNORM( 0.974902, 0.222636, 1.87551e-007 ) DX3DVUV( 0.933333, 0.428571 )  //126
DX3DVERT( 1.30872, 0.326975, 0.582678 ) DX3DVNORM( 0.890617, 0.222636, 0.396528 ) DX3DVUV( 1, 0.428571 )  //127
DX3DVERT( 0.885857, 0.637553, 0.983844 ) DX3DVNORM( 0.602804, 0.434076, 0.669481 ) DX3DVUV( 0.0666667, 0.357143 )  //128
DX3DVERT( 1.20944, 0.637553, 0.538475 ) DX3DVNORM( 0.822991, 0.434076, 0.366419 ) DX3DVUV( 0, 0.357143 )  //129
DX3DVERT( 0.409105, 0.637553, 1.2591 ) DX3DVNORM( 0.278386, 0.434076, 0.856784 ) DX3DVUV( 0.133333, 0.357143 )  //130
DX3DVERT( -0.138384, 0.637553, 1.31664 ) DX3DVNORM( -0.094167, 0.434076, 0.895941 ) DX3DVUV( 0.2, 0.357143 )  //131
DX3DVERT( -0.661946, 0.637553, 1.14652 ) DX3DVNORM( -0.450438, 0.434076, 0.780182 ) DX3DVUV( 0.266667, 0.357143 )  //132
DX3DVERT( -1.07105, 0.637553, 0.778165 ) DX3DVNORM( -0.728824, 0.434076, 0.529522 ) DX3DVUV( 0.333333, 0.357143 )  //133
DX3DVERT( -1.29496, 0.637553, 0.275253 ) DX3DVNORM( -0.88119, 0.434076, 0.187303 ) DX3DVUV( 0.4, 0.357143 )  //134
DX3DVERT( -1.29496, 0.637553, -0.275253 ) DX3DVNORM( -0.88119, 0.434076, -0.187303 ) DX3DVUV( 0.466667, 0.357143 )  //135
DX3DVERT( -1.07105, 0.637553, -0.778164 ) DX3DVNORM( -0.728824, 0.434076, -0.529522 ) DX3DVUV( 0.533333, 0.357143 )  //136
DX3DVERT( -0.661946, 0.637553, -1.14652 ) DX3DVNORM( -0.450438, 0.434076, -0.780182 ) DX3DVUV( 0.6, 0.357143 )  //137
DX3DVERT( -0.138385, 0.637553, -1.31664 ) DX3DVNORM( -0.0941674, 0.434076, -0.895941 ) DX3DVUV( 0.666667, 0.357143 )  //138
DX3DVERT( 0.409105, 0.637553, -1.2591 ) DX3DVNORM( 0.278386, 0.434076, -0.856784 ) DX3DVUV( 0.733333, 0.357143 )  //139
DX3DVERT( 0.885857, 0.637553, -0.983844 ) DX3DVNORM( 0.602804, 0.434076, -0.669481 ) DX3DVUV( 0.8, 0.357143 )  //140
DX3DVERT( 1.20944, 0.637553, -0.538476 ) DX3DVNORM( 0.822991, 0.434076, -0.366419 ) DX3DVUV( 0.866667, 0.357143 )  //141
DX3DVERT( 1.32389, 0.637553, -0 ) DX3DVNORM( 0.900876, 0.434076, 1.87e-007 ) DX3DVUV( 0.933333, 0.357143 )  //142
DX3DVERT( 1.20944, 0.637553, 0.538475 ) DX3DVNORM( 0.822991, 0.434076, 0.366419 ) DX3DVUV( 1, 0.357143 )  //143
DX3DVERT( 0.768718, 0.916162, 0.853748 ) DX3DVNORM( 0.523035, 0.6237, 0.580889 ) DX3DVUV( 0.0666667, 0.285714 )  //144
DX3DVERT( 1.04951, 0.916162, 0.467271 ) DX3DVNORM( 0.714086, 0.6237, 0.317931 ) DX3DVUV( 0, 0.285714 )  //145
DX3DVERT( 0.355008, 0.916162, 1.0926 ) DX3DVNORM( 0.241548, 0.6237, 0.743407 ) DX3DVUV( 0.133333, 0.285714 )  //146
DX3DVERT( -0.120085, 0.916162, 1.14254 ) DX3DVNORM( -0.081706, 0.6237, 0.777382 ) DX3DVUV( 0.2, 0.285714 )  //147
DX3DVERT( -0.574415, 0.916162, 0.994917 ) DX3DVNORM( -0.390832, 0.6237, 0.676941 ) DX3DVUV( 0.266667, 0.285714 )  //148
DX3DVERT( -0.929424, 0.916162, 0.675266 ) DX3DVNORM( -0.632379, 0.6237, 0.459451 ) DX3DVUV( 0.333333, 0.285714 )  //149
DX3DVERT( -1.12373, 0.916162, 0.238855 ) DX3DVNORM( -0.764583, 0.6237, 0.162517 ) DX3DVUV( 0.4, 0.285714 )  //150
DX3DVERT( -1.12373, 0.916162, -0.238855 ) DX3DVNORM( -0.764583, 0.6237, -0.162517 ) DX3DVUV( 0.466667, 0.285714 )  //151
DX3DVERT( -0.929424, 0.916162, -0.675266 ) DX3DVNORM( -0.632379, 0.6237, -0.45945 ) DX3DVUV( 0.533333, 0.285714 )  //152
DX3DVERT( -0.574416, 0.916162, -0.994917 ) DX3DVNORM( -0.390832, 0.6237, -0.676941 ) DX3DVUV( 0.6, 0.285714 )  //153
DX3DVERT( -0.120086, 0.916162, -1.14254 ) DX3DVNORM( -0.0817062, 0.6237, -0.777382 ) DX3DVUV( 0.666667, 0.285714 )  //154
DX3DVERT( 0.355008, 0.916162, -1.0926 ) DX3DVNORM( 0.241547, 0.6237, -0.743407 ) DX3DVUV( 0.733333, 0.285714 )  //155
DX3DVERT( 0.768718, 0.916162, -0.853748 ) DX3DVNORM( 0.523035, 0.6237, -0.580889 ) DX3DVUV( 0.8, 0.285714 )  //156
DX3DVERT( 1.04951, 0.916162, -0.467272 ) DX3DVNORM( 0.714086, 0.6237, -0.317931 ) DX3DVUV( 0.866667, 0.285714 )  //157
DX3DVERT( 1.14883, 0.916162, -0 ) DX3DVNORM( 0.781664, 0.6237, 1.368e-007 ) DX3DVUV( 0.933333, 0.285714 )  //158
DX3DVERT( 1.04951, 0.916162, 0.467271 ) DX3DVNORM( 0.714086, 0.6237, 0.317931 ) DX3DVUV( 1, 0.285714 )  //159
DX3DVERT( 0.613032, 1.14883, 0.680841 ) DX3DVNORM( 0.417054, 0.782001, 0.463186 ) DX3DVUV( 0.0666667, 0.214286 )  //160
DX3DVERT( 0.836956, 1.14883, 0.372637 ) DX3DVNORM( 0.569393, 0.782, 0.25351 ) DX3DVUV( 0, 0.214286 )  //161
DX3DVERT( 0.28311, 1.14883, 0.871322 ) DX3DVNORM( 0.192604, 0.782, 0.592772 ) DX3DVUV( 0.133333, 0.214286 )  //162
DX3DVERT( -0.0957649, 1.14883, 0.911143 ) DX3DVNORM( -0.0651501, 0.782001, 0.619863 ) DX3DVUV( 0.2, 0.214286 )  //163
DX3DVERT( -0.458081, 1.14883, 0.79342 ) DX3DVNORM( -0.311639, 0.782, 0.539774 ) DX3DVUV( 0.266667, 0.214286 )  //164
DX3DVERT( -0.741191, 1.14883, 0.538507 ) DX3DVNORM( -0.504242, 0.782, 0.366353 ) DX3DVUV( 0.333333, 0.214286 )  //165
DX3DVERT( -0.896142, 1.14883, 0.190481 ) DX3DVNORM( -0.609658, 0.782, 0.129587 ) DX3DVUV( 0.4, 0.214286 )  //166
DX3DVERT( -0.896142, 1.14883, -0.190481 ) DX3DVNORM( -0.609658, 0.782001, -0.129586 ) DX3DVUV( 0.466667, 0.214286 )  //167
DX3DVERT( -0.741191, 1.14883, -0.538507 ) DX3DVNORM( -0.504242, 0.782001, -0.366353 ) DX3DVUV( 0.533333, 0.214286 )  //168
DX3DVERT( -0.458081, 1.14883, -0.79342 ) DX3DVNORM( -0.311639, 0.782, -0.539774 ) DX3DVUV( 0.6, 0.214286 )  //169
DX3DVERT( -0.0957651, 1.14883, -0.911143 ) DX3DVNORM( -0.0651503, 0.782001, -0.619863 ) DX3DVUV( 0.666667, 0.214286 )  //170
DX3DVERT( 0.28311, 1.14883, -0.871322 ) DX3DVNORM( 0.192603, 0.782, -0.592772 ) DX3DVUV( 0.733333, 0.214286 )  //171
DX3DVERT( 0.613032, 1.14883, -0.680841 ) DX3DVNORM( 0.417054, 0.782001, -0.463186 ) DX3DVUV( 0.8, 0.214286 )  //172
DX3DVERT( 0.836956, 1.14883, -0.372637 ) DX3DVNORM( 0.569392, 0.782001, -0.25351 ) DX3DVUV( 0.866667, 0.214286 )  //173
DX3DVERT( 0.916162, 1.14883, -0 ) DX3DVNORM( 0.623278, 0.782001, 2.09892e-007 ) DX3DVUV( 0.933333, 0.214286 )  //174
DX3DVERT( 0.836956, 1.14883, 0.372637 ) DX3DVNORM( 0.569393, 0.782, 0.25351 ) DX3DVUV( 1, 0.214286 )  //175
DX3DVERT( 0.426606, 1.32389, 0.473794 ) DX3DVNORM( 0.290193, 0.901064, 0.322291 ) DX3DVUV( 0.0666667, 0.142857 )  //176
DX3DVERT( 0.582434, 1.32389, 0.259316 ) DX3DVNORM( 0.396192, 0.901064, 0.176396 ) DX3DVUV( 0, 0.142857 )  //177
DX3DVERT( 0.197015, 1.32389, 0.606349 ) DX3DVNORM( 0.134016, 0.901064, 0.41246 ) DX3DVUV( 0.133333, 0.142857 )  //178
DX3DVERT( -0.0666424, 1.32389, 0.63406 ) DX3DVNORM( -0.0453324, 0.901064, 0.43131 ) DX3DVUV( 0.2, 0.142857 )  //179
DX3DVERT( -0.318776, 1.32389, 0.552137 ) DX3DVNORM( -0.216843, 0.901064, 0.375583 ) DX3DVUV( 0.266667, 0.142857 )  //180
DX3DVERT( -0.515791, 1.32389, 0.374744 ) DX3DVNORM( -0.350859, 0.901064, 0.254914 ) DX3DVUV( 0.333333, 0.142857 )  //181
DX3DVERT( -0.623621, 1.32389, 0.132555 ) DX3DVNORM( -0.424209, 0.901064, 0.0901685 ) DX3DVUV( 0.4, 0.142857 )  //182
DX3DVERT( -0.623621, 1.32389, -0.132555 ) DX3DVNORM( -0.424209, 0.901064, -0.0901683 ) DX3DVUV( 0.466667, 0.142857 )  //183
DX3DVERT( -0.515791, 1.32389, -0.374744 ) DX3DVNORM( -0.350859, 0.901064, -0.254914 ) DX3DVUV( 0.533333, 0.142857 )  //184
DX3DVERT( -0.318777, 1.32389, -0.552137 ) DX3DVNORM( -0.216843, 0.901064, -0.375583 ) DX3DVUV( 0.6, 0.142857 )  //185
DX3DVERT( -0.0666425, 1.32389, -0.63406 ) DX3DVNORM( -0.0453326, 0.901064, -0.43131 ) DX3DVUV( 0.666667, 0.142857 )  //186
DX3DVERT( 0.197015, 1.32389, -0.606349 ) DX3DVNORM( 0.134016, 0.901064, -0.41246 ) DX3DVUV( 0.733333, 0.142857 )  //187
DX3DVERT( 0.426606, 1.32389, -0.473794 ) DX3DVNORM( 0.290193, 0.901064, -0.322291 ) DX3DVUV( 0.8, 0.142857 )  //188
DX3DVERT( 0.582434, 1.32389, -0.259316 ) DX3DVNORM( 0.396192, 0.901064, -0.176396 ) DX3DVUV( 0.866667, 0.142857 )  //189
DX3DVERT( 0.637553, 1.32389, -0 ) DX3DVNORM( 0.433686, 0.901064, 1.76974e-007 ) DX3DVUV( 0.933333, 0.142857 )  //190
DX3DVERT( 0.582434, 1.32389, 0.259316 ) DX3DVNORM( 0.396192, 0.901064, 0.176396 ) DX3DVUV( 1, 0.142857 )  //191
DX3DVERT( 0.218789, 1.43257, 0.242989 ) DX3DVNORM( 0.148816, 0.974955, 0.165276 ) DX3DVUV( 0.0666667, 0.0714284 )  //192
DX3DVERT( 0.298706, 1.43257, 0.132992 ) DX3DVNORM( 0.203174, 0.974955, 0.0904587 ) DX3DVUV( 0, 0.0714284 )  //193
DX3DVERT( 0.101041, 1.43257, 0.310971 ) DX3DVNORM( 0.0687259, 0.974955, 0.211516 ) DX3DVUV( 0.133333, 0.0714284 )  //194
DX3DVERT( -0.0341781, 1.43257, 0.325183 ) DX3DVNORM( -0.0232472, 0.974955, 0.221183 ) DX3DVUV( 0.2, 0.0714284 )  //195
DX3DVERT( -0.163487, 1.43257, 0.283168 ) DX3DVNORM( -0.111201, 0.974955, 0.192606 ) DX3DVUV( 0.266667, 0.0714284 )  //196
DX3DVERT( -0.264528, 1.43257, 0.192191 ) DX3DVNORM( -0.179927, 0.974955, 0.130724 ) DX3DVUV( 0.333333, 0.0714284 )  //197
DX3DVERT( -0.319829, 1.43257, 0.0679818 ) DX3DVNORM( -0.217541, 0.974955, 0.0462397 ) DX3DVUV( 0.4, 0.0714284 )  //198
DX3DVERT( -0.319829, 1.43257, -0.0679818 ) DX3DVNORM( -0.217542, 0.974955, -0.0462398 ) DX3DVUV( 0.466667, 0.0714284 )  //199
DX3DVERT( -0.264528, 1.43257, -0.192191 ) DX3DVNORM( -0.179927, 0.974955, -0.130724 ) DX3DVUV( 0.533333, 0.0714284 )  //200
DX3DVERT( -0.163487, 1.43257, -0.283168 ) DX3DVNORM( -0.111201, 0.974955, -0.192605 ) DX3DVUV( 0.6, 0.0714284 )  //201
DX3DVERT( -0.0341782, 1.43257, -0.325183 ) DX3DVNORM( -0.0232473, 0.974955, -0.221183 ) DX3DVUV( 0.666667, 0.0714284 )  //202
DX3DVERT( 0.101041, 1.43257, -0.310971 ) DX3DVNORM( 0.0687258, 0.974955, -0.211516 ) DX3DVUV( 0.733333, 0.0714284 )  //203
DX3DVERT( 0.218789, 1.43257, -0.242989 ) DX3DVNORM( 0.148816, 0.974955, -0.165277 ) DX3DVUV( 0.8, 0.0714284 )  //204
DX3DVERT( 0.298706, 1.43257, -0.132993 ) DX3DVNORM( 0.203174, 0.974955, -0.090459 ) DX3DVUV( 0.866667, 0.0714284 )  //205
DX3DVERT( 0.326974, 1.43257, -0 ) DX3DVNORM( 0.222401, 0.974955, 1.40775e-008 ) DX3DVUV( 0.933333, 0.0714284 )  //206
DX3DVERT( 0.298706, 1.43257, 0.132992 ) DX3DVNORM( 0.203174, 0.974955, 0.0904587 ) DX3DVUV( 1, 0.0714284 )  //207
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.0333333, 1 )  //208
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.1, 1 )  //209
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.166667, 1 )  //210
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.233333, 1 )  //211
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.3, 1 )  //212
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.366667, 1 )  //213
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.433333, 1 )  //214
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.5, 1 )  //215
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.566667, 1 )  //216
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.633333, 1 )  //217
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.7, 1 )  //218
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.766667, 1 )  //219
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.833333, 1 )  //220
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.9, 1 )  //221
DX3DVERT( 0, -1.46941, -0 ) DX3DVNORM( -4.9999e-010, -1, -4.22491e-008 ) DX3DVUV( 0.966667, 1 )  //222
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.0333333, 0 )  //223
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.1, 0 )  //224
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.166667, 0 )  //225
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.233333, 0 )  //226
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.3, 0 )  //227
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.366667, 0 )  //228
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.433333, 0 )  //229
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.5, 0 )  //230
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.566667, 0 )  //231
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.633333, 0 )  //232
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.7, 0 )  //233
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.766667, 0 )  //234
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.833333, 0 )  //235
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.9, 0 )  //236
DX3DVERT( 0, 1.46941, -0 ) DX3DVNORM( 1.49997e-009, 1, -4.07492e-008 ) DX3DVUV( 0.966667, 0 )  //237
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_DXT1___texa_DXT1__0 )
#if ( !BINARY_Texture_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_DXT1___texa_DXT1__0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VNUV, 238 )
DX3DVERTEX_END


#else
#define vertex_DXT1___texa_DXT1__0	NULL
#define vertexbuff_DXT1___texa_DXT1__0	NULL
#endif




#if ((PT_DXT1___texa_DXT1__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_DXT1___texa_DXT1__0 == PT_TRILIST )


#if ( !BINARY_Texture_tst__ )
DX3DINDEX_START( index_DXT1___texa_DXT1__0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 24, 23, // 22 68
	24, 25, 23, // 23 71
	24, 26, 25, // 24 74
	26, 27, 25, // 25 77
	26, 28, 27, // 26 80
	28, 29, 27, // 27 83
	28, 30, 29, // 28 86
	30, 31, 29, // 29 89
	3, 2, 33, // 30 92
	2, 32, 33, // 31 95
	2, 5, 32, // 32 98
	5, 34, 32, // 33 101
	5, 7, 34, // 34 104
	7, 35, 34, // 35 107
	7, 9, 35, // 36 110
	9, 36, 35, // 37 113
	9, 11, 36, // 38 116
	11, 37, 36, // 39 119
	11, 13, 37, // 40 122
	13, 38, 37, // 41 125
	13, 15, 38, // 42 128
	15, 39, 38, // 43 131
	15, 17, 39, // 44 134
	17, 40, 39, // 45 137
	17, 19, 40, // 46 140
	19, 41, 40, // 47 143
	19, 21, 41, // 48 146
	21, 42, 41, // 49 149
	21, 23, 42, // 50 152
	23, 43, 42, // 51 155
	23, 25, 43, // 52 158
	25, 44, 43, // 53 161
	25, 27, 44, // 54 164
	27, 45, 44, // 55 167
	27, 29, 45, // 56 170
	29, 46, 45, // 57 173
	29, 31, 46, // 58 176
	31, 47, 46, // 59 179
	33, 32, 49, // 60 182
	32, 48, 49, // 61 185
	32, 34, 48, // 62 188
	34, 50, 48, // 63 191
	34, 35, 50, // 64 194
	35, 51, 50, // 65 197
	35, 36, 51, // 66 200
	36, 52, 51, // 67 203
	36, 37, 52, // 68 206
	37, 53, 52, // 69 209
	37, 38, 53, // 70 212
	38, 54, 53, // 71 215
	38, 39, 54, // 72 218
	39, 55, 54, // 73 221
	39, 40, 55, // 74 224
	40, 56, 55, // 75 227
	40, 41, 56, // 76 230
	41, 57, 56, // 77 233
	41, 42, 57, // 78 236
	42, 58, 57, // 79 239
	42, 43, 58, // 80 242
	43, 59, 58, // 81 245
	43, 44, 59, // 82 248
	44, 60, 59, // 83 251
	44, 45, 60, // 84 254
	45, 61, 60, // 85 257
	45, 46, 61, // 86 260
	46, 62, 61, // 87 263
	46, 47, 62, // 88 266
	47, 63, 62, // 89 269
	49, 48, 65, // 90 272
	48, 64, 65, // 91 275
	48, 50, 64, // 92 278
	50, 66, 64, // 93 281
	50, 51, 66, // 94 284
	51, 67, 66, // 95 287
	51, 52, 67, // 96 290
	52, 68, 67, // 97 293
	52, 53, 68, // 98 296
	53, 69, 68, // 99 299
	53, 54, 69, // 100 302
	54, 70, 69, // 101 305
	54, 55, 70, // 102 308
	55, 71, 70, // 103 311
	55, 56, 71, // 104 314
	56, 72, 71, // 105 317
	56, 57, 72, // 106 320
	57, 73, 72, // 107 323
	57, 58, 73, // 108 326
	58, 74, 73, // 109 329
	58, 59, 74, // 110 332
	59, 75, 74, // 111 335
	59, 60, 75, // 112 338
	60, 76, 75, // 113 341
	60, 61, 76, // 114 344
	61, 77, 76, // 115 347
	61, 62, 77, // 116 350
	62, 78, 77, // 117 353
	62, 63, 78, // 118 356
	63, 79, 78, // 119 359
	65, 64, 81, // 120 362
	64, 80, 81, // 121 365
	64, 66, 80, // 122 368
	66, 82, 80, // 123 371
	66, 67, 82, // 124 374
	67, 83, 82, // 125 377
	67, 68, 83, // 126 380
	68, 84, 83, // 127 383
	68, 69, 84, // 128 386
	69, 85, 84, // 129 389
	69, 70, 85, // 130 392
	70, 86, 85, // 131 395
	70, 71, 86, // 132 398
	71, 87, 86, // 133 401
	71, 72, 87, // 134 404
	72, 88, 87, // 135 407
	72, 73, 88, // 136 410
	73, 89, 88, // 137 413
	73, 74, 89, // 138 416
	74, 90, 89, // 139 419
	74, 75, 90, // 140 422
	75, 91, 90, // 141 425
	75, 76, 91, // 142 428
	76, 92, 91, // 143 431
	76, 77, 92, // 144 434
	77, 93, 92, // 145 437
	77, 78, 93, // 146 440
	78, 94, 93, // 147 443
	78, 79, 94, // 148 446
	79, 95, 94, // 149 449
	81, 80, 97, // 150 452
	80, 96, 97, // 151 455
	80, 82, 96, // 152 458
	82, 98, 96, // 153 461
	82, 83, 98, // 154 464
	83, 99, 98, // 155 467
	83, 84, 99, // 156 470
	84, 100, 99, // 157 473
	84, 85, 100, // 158 476
	85, 101, 100, // 159 479
	85, 86, 101, // 160 482
	86, 102, 101, // 161 485
	86, 87, 102, // 162 488
	87, 103, 102, // 163 491
	87, 88, 103, // 164 494
	88, 104, 103, // 165 497
	88, 89, 104, // 166 500
	89, 105, 104, // 167 503
	89, 90, 105, // 168 506
	90, 106, 105, // 169 509
	90, 91, 106, // 170 512
	91, 107, 106, // 171 515
	91, 92, 107, // 172 518
	92, 108, 107, // 173 521
	92, 93, 108, // 174 524
	93, 109, 108, // 175 527
	93, 94, 109, // 176 530
	94, 110, 109, // 177 533
	94, 95, 110, // 178 536
	95, 111, 110, // 179 539
	97, 96, 113, // 180 542
	96, 112, 113, // 181 545
	96, 98, 112, // 182 548
	98, 114, 112, // 183 551
	98, 99, 114, // 184 554
	99, 115, 114, // 185 557
	99, 100, 115, // 186 560
	100, 116, 115, // 187 563
	100, 101, 116, // 188 566
	101, 117, 116, // 189 569
	101, 102, 117, // 190 572
	102, 118, 117, // 191 575
	102, 103, 118, // 192 578
	103, 119, 118, // 193 581
	103, 104, 119, // 194 584
	104, 120, 119, // 195 587
	104, 105, 120, // 196 590
	105, 121, 120, // 197 593
	105, 106, 121, // 198 596
	106, 122, 121, // 199 599
	106, 107, 122, // 200 602
	107, 123, 122, // 201 605
	107, 108, 123, // 202 608
	108, 124, 123, // 203 611
	108, 109, 124, // 204 614
	109, 125, 124, // 205 617
	109, 110, 125, // 206 620
	110, 126, 125, // 207 623
	110, 111, 126, // 208 626
	111, 127, 126, // 209 629
	113, 112, 129, // 210 632
	112, 128, 129, // 211 635
	112, 114, 128, // 212 638
	114, 130, 128, // 213 641
	114, 115, 130, // 214 644
	115, 131, 130, // 215 647
	115, 116, 131, // 216 650
	116, 132, 131, // 217 653
	116, 117, 132, // 218 656
	117, 133, 132, // 219 659
	117, 118, 133, // 220 662
	118, 134, 133, // 221 665
	118, 119, 134, // 222 668
	119, 135, 134, // 223 671
	119, 120, 135, // 224 674
	120, 136, 135, // 225 677
	120, 121, 136, // 226 680
	121, 137, 136, // 227 683
	121, 122, 137, // 228 686
	122, 138, 137, // 229 689
	122, 123, 138, // 230 692
	123, 139, 138, // 231 695
	123, 124, 139, // 232 698
	124, 140, 139, // 233 701
	124, 125, 140, // 234 704
	125, 141, 140, // 235 707
	125, 126, 141, // 236 710
	126, 142, 141, // 237 713
	126, 127, 142, // 238 716
	127, 143, 142, // 239 719
	129, 128, 145, // 240 722
	128, 144, 145, // 241 725
	128, 130, 144, // 242 728
	130, 146, 144, // 243 731
	130, 131, 146, // 244 734
	131, 147, 146, // 245 737
	131, 132, 147, // 246 740
	132, 148, 147, // 247 743
	132, 133, 148, // 248 746
	133, 149, 148, // 249 749
	133, 134, 149, // 250 752
	134, 150, 149, // 251 755
	134, 135, 150, // 252 758
	135, 151, 150, // 253 761
	135, 136, 151, // 254 764
	136, 152, 151, // 255 767
	136, 137, 152, // 256 770
	137, 153, 152, // 257 773
	137, 138, 153, // 258 776
	138, 154, 153, // 259 779
	138, 139, 154, // 260 782
	139, 155, 154, // 261 785
	139, 140, 155, // 262 788
	140, 156, 155, // 263 791
	140, 141, 156, // 264 794
	141, 157, 156, // 265 797
	141, 142, 157, // 266 800
	142, 158, 157, // 267 803
	142, 143, 158, // 268 806
	143, 159, 158, // 269 809
	145, 144, 161, // 270 812
	144, 160, 161, // 271 815
	144, 146, 160, // 272 818
	146, 162, 160, // 273 821
	146, 147, 162, // 274 824
	147, 163, 162, // 275 827
	147, 148, 163, // 276 830
	148, 164, 163, // 277 833
	148, 149, 164, // 278 836
	149, 165, 164, // 279 839
	149, 150, 165, // 280 842
	150, 166, 165, // 281 845
	150, 151, 166, // 282 848
	151, 167, 166, // 283 851
	151, 152, 167, // 284 854
	152, 168, 167, // 285 857
	152, 153, 168, // 286 860
	153, 169, 168, // 287 863
	153, 154, 169, // 288 866
	154, 170, 169, // 289 869
	154, 155, 170, // 290 872
	155, 171, 170, // 291 875
	155, 156, 171, // 292 878
	156, 172, 171, // 293 881
	156, 157, 172, // 294 884
	157, 173, 172, // 295 887
	157, 158, 173, // 296 890
	158, 174, 173, // 297 893
	158, 159, 174, // 298 896
	159, 175, 174, // 299 899
	161, 160, 177, // 300 902
	160, 176, 177, // 301 905
	160, 162, 176, // 302 908
	162, 178, 176, // 303 911
	162, 163, 178, // 304 914
	163, 179, 178, // 305 917
	163, 164, 179, // 306 920
	164, 180, 179, // 307 923
	164, 165, 180, // 308 926
	165, 181, 180, // 309 929
	165, 166, 181, // 310 932
	166, 182, 181, // 311 935
	166, 167, 182, // 312 938
	167, 183, 182, // 313 941
	167, 168, 183, // 314 944
	168, 184, 183, // 315 947
	168, 169, 184, // 316 950
	169, 185, 184, // 317 953
	169, 170, 185, // 318 956
	170, 186, 185, // 319 959
	170, 171, 186, // 320 962
	171, 187, 186, // 321 965
	171, 172, 187, // 322 968
	172, 188, 187, // 323 971
	172, 173, 188, // 324 974
	173, 189, 188, // 325 977
	173, 174, 189, // 326 980
	174, 190, 189, // 327 983
	174, 175, 190, // 328 986
	175, 191, 190, // 329 989
	177, 176, 193, // 330 992
	176, 192, 193, // 331 995
	176, 178, 192, // 332 998
	178, 194, 192, // 333 1001
	178, 179, 194, // 334 1004
	179, 195, 194, // 335 1007
	179, 180, 195, // 336 1010
	180, 196, 195, // 337 1013
	180, 181, 196, // 338 1016
	181, 197, 196, // 339 1019
	181, 182, 197, // 340 1022
	182, 198, 197, // 341 1025
	182, 183, 198, // 342 1028
	183, 199, 198, // 343 1031
	183, 184, 199, // 344 1034
	184, 200, 199, // 345 1037
	184, 185, 200, // 346 1040
	185, 201, 200, // 347 1043
	185, 186, 201, // 348 1046
	186, 202, 201, // 349 1049
	186, 187, 202, // 350 1052
	187, 203, 202, // 351 1055
	187, 188, 203, // 352 1058
	188, 204, 203, // 353 1061
	188, 189, 204, // 354 1064
	189, 205, 204, // 355 1067
	189, 190, 205, // 356 1070
	190, 206, 205, // 357 1073
	190, 191, 206, // 358 1076
	191, 207, 206, // 359 1079
	1, 0, 208, // 360 1082
	4, 1, 209, // 361 1085
	6, 4, 210, // 362 1088
	8, 6, 211, // 363 1091
	10, 8, 212, // 364 1094
	12, 10, 213, // 365 1097
	14, 12, 214, // 366 1100
	16, 14, 215, // 367 1103
	18, 16, 216, // 368 1106
	20, 18, 217, // 369 1109
	22, 20, 218, // 370 1112
	24, 22, 219, // 371 1115
	26, 24, 220, // 372 1118
	28, 26, 221, // 373 1121
	30, 28, 222, // 374 1124
	193, 192, 223, // 375 1127
	192, 194, 224, // 376 1130
	194, 195, 225, // 377 1133
	195, 196, 226, // 378 1136
	196, 197, 227, // 379 1139
	197, 198, 228, // 380 1142
	198, 199, 229, // 381 1145
	199, 200, 230, // 382 1148
	200, 201, 231, // 383 1151
	201, 202, 232, // 384 1154
	202, 203, 233, // 385 1157
	203, 204, 234, // 386 1160
	204, 205, 235, // 387 1163
	205, 206, 236, // 388 1166
	206, 207, 237, // 389 1169
DX3DINDEX_END
#endif

#else
#define index_DXT1___texa_DXT1__0	NULL
#endif




#if ((PT_DXT1___texa_DXT1__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP) ) || (PT_DXT1___texa_DXT1__0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_DXT1___texa_DXT1__0_INDEXSTRIP 	NULL
#endif




#if ((PT_DXT1___texa_DXT1__0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_VERTEXSTRIP) ) || (PT_DXT1___texa_DXT1__0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_DXT1___texa_DXT1__0_VERTEXSTRIP 	NULL
#define vertexbuff_DXT1___texa_DXT1__0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_DXT1__ )
DX3DMODEL_START( model_DXT1___texa_DXT1__0 )
DX3DMODEL_VERTEX( vertex_DXT1___texa_DXT1__0 )
#if ( !BINARY_Texture_tst__ )
DX3DMODEL_INDEX( index_DXT1___texa_DXT1__0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 1170 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_texa_DXT1_ )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_DXT1__, 1281199805 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_DXT1__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0.32486, 1.28506, 3.89125, 
	-0, -1.55782, 0,                // -0, -89.2563, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0.32486, 1.28506, 3.89125, 
	-0, -1.55782, 0,                // -0, -89.2563, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_DXT3__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_RGBA__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	-2.01815, 1.18826, -1.39759, 1
#endif

DX3DTEXTURE_START( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkrgba_DDS__ )
DX3DTEXTURE_NAME( "Z:/toshi2/ATEST/ATEST/ATESTNameSpace/STAGE2-3_Beginners3DProgramming/Texture/TextureFiles/checkrgba.DDS" )
DX3DTEXTURE_END


DX3DMATERIALTEX_START( materialtex_texa_RGBA )
DX3DMATERIALTEX_NAME( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkrgba_DDS__ )
DX3DMATERIALTEX_END


DX3DMATERIAL_START( material_texa_RGBA )
DX3DMATERIAL_DIFF( 1, 0.8, 0.8, 0.8 )
DX3DMATERIAL_SPEC( 0.5, 0.5, 0.5, 0.5 )
DX3DMATERIAL_TEX( materialtex_texa_RGBA )
DX3DMATERIAL_SHADER( TEXA )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_RGBA___texa_RGBA_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_RGBA___texa_RGBA_0 == PT_TRILIST ) || ((PT_RGBA___texa_RGBA_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP))  || (PT_RGBA___texa_RGBA_0 == PT_INDEXSTRIP)


#if ( !BINARY_Texture_tst__ )
DX3DVERT_START( VNUV, vertexbuff_RGBA___texa_RGBA_0 )
DX3DVERT( 1.0249, -0.969361, 0.537906 ) DX3DVNORM( 0.885456, 0, 0.464723 ) DX3DVUV( 0.375, 0.6875 )  //0
DX3DVERT( 0.657522, -0.969361, 0.952585 ) DX3DVNORM( 0.568065, 0, 0.822984 ) DX3DVUV( 0.394231, 0.6875 )  //1
DX3DVERT( 0.657522, 0.969361, 0.952585 ) DX3DVNORM( 0.568065, 0, 0.822984 ) DX3DVUV( 0.394231, 0.31156 )  //2
DX3DVERT( 1.0249, 0.969361, 0.537906 ) DX3DVNORM( 0.885456, 0, 0.464723 ) DX3DVUV( 0.375, 0.31156 )  //3
DX3DVERT( 0.139519, -0.969361, 1.14904 ) DX3DVNORM( 0.120537, 0, 0.992709 ) DX3DVUV( 0.413462, 0.6875 )  //4
DX3DVERT( 0.139519, 0.969361, 1.14904 ) DX3DVNORM( 0.120537, 0, 0.992709 ) DX3DVUV( 0.413462, 0.31156 )  //5
DX3DVERT( -0.410447, -0.969361, 1.08226 ) DX3DVNORM( -0.354605, 0, 0.935016 ) DX3DVUV( 0.432692, 0.6875 )  //6
DX3DVERT( -0.410447, 0.969361, 1.08226 ) DX3DVNORM( -0.354605, 0, 0.935016 ) DX3DVUV( 0.432692, 0.31156 )  //7
DX3DVERT( -0.866384, -0.969361, 0.76755 ) DX3DVNORM( -0.748511, 0, 0.663123 ) DX3DVUV( 0.451923, 0.6875 )  //8
DX3DVERT( -0.866384, 0.969361, 0.76755 ) DX3DVNORM( -0.748511, 0, 0.663123 ) DX3DVUV( 0.451923, 0.31156 )  //9
DX3DVERT( -1.12384, -0.969361, 0.277003 ) DX3DVNORM( -0.970942, 0, 0.239316 ) DX3DVUV( 0.471154, 0.6875 )  //10
DX3DVERT( -1.12384, 0.969361, 0.277003 ) DX3DVNORM( -0.970942, 0, 0.239316 ) DX3DVUV( 0.471154, 0.31156 )  //11
DX3DVERT( -1.12384, -0.969361, -0.277002 ) DX3DVNORM( -0.970942, 0, -0.239316 ) DX3DVUV( 0.490385, 0.6875 )  //12
DX3DVERT( -1.12384, 0.969361, -0.277002 ) DX3DVNORM( -0.970942, 0, -0.239316 ) DX3DVUV( 0.490385, 0.31156 )  //13
DX3DVERT( -0.866384, -0.969361, -0.767549 ) DX3DVNORM( -0.748511, 0, -0.663123 ) DX3DVUV( 0.509615, 0.6875 )  //14
DX3DVERT( -0.866384, 0.969361, -0.767549 ) DX3DVNORM( -0.748511, 0, -0.663123 ) DX3DVUV( 0.509615, 0.31156 )  //15
DX3DVERT( -0.410447, -0.969361, -1.08226 ) DX3DVNORM( -0.354605, 0, -0.935016 ) DX3DVUV( 0.528846, 0.6875 )  //16
DX3DVERT( -0.410447, 0.969361, -1.08226 ) DX3DVNORM( -0.354605, 0, -0.935016 ) DX3DVUV( 0.528846, 0.31156 )  //17
DX3DVERT( 0.139518, -0.969361, -1.14904 ) DX3DVNORM( 0.120537, 0, -0.992709 ) DX3DVUV( 0.548077, 0.6875 )  //18
DX3DVERT( 0.139518, 0.969361, -1.14904 ) DX3DVNORM( 0.120537, 0, -0.992709 ) DX3DVUV( 0.548077, 0.31156 )  //19
DX3DVERT( 0.657522, -0.969361, -0.952585 ) DX3DVNORM( 0.568065, 0, -0.822984 ) DX3DVUV( 0.567308, 0.6875 )  //20
DX3DVERT( 0.657522, 0.969361, -0.952585 ) DX3DVNORM( 0.568065, 0, -0.822984 ) DX3DVUV( 0.567308, 0.31156 )  //21
DX3DVERT( 1.0249, -0.969361, -0.537907 ) DX3DVNORM( 0.885456, 0, -0.464723 ) DX3DVUV( 0.586539, 0.6875 )  //22
DX3DVERT( 1.0249, 0.969361, -0.537907 ) DX3DVNORM( 0.885456, 0, -0.464723 ) DX3DVUV( 0.586539, 0.31156 )  //23
DX3DVERT( 1.15748, -0.969361, -0 ) DX3DVNORM( 1, 0, -1.45798e-007 ) DX3DVUV( 0.605769, 0.6875 )  //24
DX3DVERT( 1.15748, 0.969361, -0 ) DX3DVNORM( 1, 0, -1.45798e-007 ) DX3DVUV( 0.605769, 0.31156 )  //25
DX3DVERT( 1.0249, -0.969361, 0.537906 ) DX3DVNORM( 0.885456, 0, 0.464723 ) DX3DVUV( 0.625, 0.6875 )  //26
DX3DVERT( 1.0249, 0.969361, 0.537906 ) DX3DVNORM( 0.885456, 0, 0.464723 ) DX3DVUV( 0.625, 0.31156 )  //27
DX3DVERT( 0.657522, -0.969361, 0.952585 ) DX3DVNORM( 0, -1, -4.78664e-008 ) DX3DVUV( 0.58876, 0.972341 )  //28
DX3DVERT( 1.0249, -0.969361, 0.537906 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.638353, 0.916363 )  //29
DX3DVERT( 0, -0.969361, -0 ) DX3DVNORM( 0, -1, -4.41844e-008 ) DX3DVUV( 0.5, 0.85 )  //30
DX3DVERT( 0.139519, -0.969361, 1.14904 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.518834, 0.998861 )  //31
DX3DVERT( -0.410447, -0.969361, 1.08226 ) DX3DVNORM( 0, -1, -4.78664e-008 ) DX3DVUV( 0.444593, 0.989846 )  //32
DX3DVERT( -0.866384, -0.969361, 0.76755 ) DX3DVNORM( 0, -1, -9.57328e-008 ) DX3DVUV( 0.383045, 0.947363 )  //33
DX3DVERT( -1.12384, -0.969361, 0.277003 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.34829, 0.881143 )  //34
DX3DVERT( -1.12384, -0.969361, -0.277002 ) DX3DVNORM( 0, -1, -9.57328e-008 ) DX3DVUV( 0.34829, 0.806357 )  //35
DX3DVERT( -0.866384, -0.969361, -0.767549 ) DX3DVNORM( 0, -1, -4.78664e-008 ) DX3DVUV( 0.383045, 0.740137 )  //36
DX3DVERT( -0.410447, -0.969361, -1.08226 ) DX3DVNORM( 0, -1, -7.10543e-015 ) DX3DVUV( 0.444593, 0.697654 )  //37
DX3DVERT( 0.139518, -0.969361, -1.14904 ) DX3DVNORM( 0, -1, -1.43599e-007 ) DX3DVUV( 0.518834, 0.688639 )  //38
DX3DVERT( 0.657522, -0.969361, -0.952585 ) DX3DVNORM( 0, -1, -9.57328e-008 ) DX3DVUV( 0.58876, 0.715159 )  //39
DX3DVERT( 1.0249, -0.969361, -0.537907 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.638353, 0.771137 )  //40
DX3DVERT( 1.15748, -0.969361, -0 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.65625, 0.84375 )  //41
DX3DVERT( 1.0249, 0.969361, 0.537906 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.638353, 0.083637 )  //42
DX3DVERT( 0.657522, 0.969361, 0.952585 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.58876, 0.0276588 )  //43
DX3DVERT( 0, 0.969361, -0 ) DX3DVNORM( 0, 1, 2.94562e-008 ) DX3DVUV( 0.5, 0.1625 )  //44
DX3DVERT( 0.139519, 0.969361, 1.14904 ) DX3DVNORM( 0, 1, 4.78664e-008 ) DX3DVUV( 0.518834, 0.00113928 )  //45
DX3DVERT( -0.410447, 0.969361, 1.08226 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.444593, 0.0101537 )  //46
DX3DVERT( -0.866384, 0.969361, 0.76755 ) DX3DVNORM( 0, 1, 4.78664e-008 ) DX3DVUV( 0.383045, 0.0526371 )  //47
DX3DVERT( -1.12384, 0.969361, 0.277003 ) DX3DVNORM( 0, 1, 9.57328e-008 ) DX3DVUV( 0.34829, 0.118857 )  //48
DX3DVERT( -1.12384, 0.969361, -0.277002 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.34829, 0.193643 )  //49
DX3DVERT( -0.866384, 0.969361, -0.767549 ) DX3DVNORM( 0, 1, 9.57328e-008 ) DX3DVUV( 0.383045, 0.259863 )  //50
DX3DVERT( -0.410447, 0.969361, -1.08226 ) DX3DVNORM( 0, 1, 4.78664e-008 ) DX3DVUV( 0.444593, 0.302346 )  //51
DX3DVERT( 0.139518, 0.969361, -1.14904 ) DX3DVNORM( 0, 1, -9.57328e-008 ) DX3DVUV( 0.518834, 0.311361 )  //52
DX3DVERT( 0.657522, 0.969361, -0.952585 ) DX3DVNORM( 0, 1, 4.78664e-008 ) DX3DVUV( 0.58876, 0.284841 )  //53
DX3DVERT( 1.0249, 0.969361, -0.537907 ) DX3DVNORM( 0, 1, 9.57328e-008 ) DX3DVUV( 0.638353, 0.228863 )  //54
DX3DVERT( 1.15748, 0.969361, -0 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.65625, 0.15625 )  //55
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_RGBA___texa_RGBA_0 )
#if ( !BINARY_Texture_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_RGBA___texa_RGBA_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VNUV, 56 )
DX3DVERTEX_END


#else
#define vertex_RGBA___texa_RGBA_0	NULL
#define vertexbuff_RGBA___texa_RGBA_0	NULL
#endif




#if ((PT_RGBA___texa_RGBA_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_RGBA___texa_RGBA_0 == PT_TRILIST )


#if ( !BINARY_Texture_tst__ )
DX3DINDEX_START( index_RGBA___texa_RGBA_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	1, 4, 2, // 2 8
	4, 5, 2, // 3 11
	4, 6, 5, // 4 14
	6, 7, 5, // 5 17
	6, 8, 7, // 6 20
	8, 9, 7, // 7 23
	8, 10, 9, // 8 26
	10, 11, 9, // 9 29
	10, 12, 11, // 10 32
	12, 13, 11, // 11 35
	12, 14, 13, // 12 38
	14, 15, 13, // 13 41
	14, 16, 15, // 14 44
	16, 17, 15, // 15 47
	16, 18, 17, // 16 50
	18, 19, 17, // 17 53
	18, 20, 19, // 18 56
	20, 21, 19, // 19 59
	20, 22, 21, // 20 62
	22, 23, 21, // 21 65
	22, 24, 23, // 22 68
	24, 25, 23, // 23 71
	24, 26, 25, // 24 74
	26, 27, 25, // 25 77
	28, 29, 30, // 26 80
	31, 28, 30, // 27 83
	32, 31, 30, // 28 86
	33, 32, 30, // 29 89
	34, 33, 30, // 30 92
	35, 34, 30, // 31 95
	36, 35, 30, // 32 98
	37, 36, 30, // 33 101
	38, 37, 30, // 34 104
	39, 38, 30, // 35 107
	40, 39, 30, // 36 110
	41, 40, 30, // 37 113
	29, 41, 30, // 38 116
	42, 43, 44, // 39 119
	43, 45, 44, // 40 122
	45, 46, 44, // 41 125
	46, 47, 44, // 42 128
	47, 48, 44, // 43 131
	48, 49, 44, // 44 134
	49, 50, 44, // 45 137
	50, 51, 44, // 46 140
	51, 52, 44, // 47 143
	52, 53, 44, // 48 146
	53, 54, 44, // 49 149
	54, 55, 44, // 50 152
	55, 42, 44, // 51 155
DX3DINDEX_END
#endif

#else
#define index_RGBA___texa_RGBA_0	NULL
#endif




#if ((PT_RGBA___texa_RGBA_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP) ) || (PT_RGBA___texa_RGBA_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_RGBA___texa_RGBA_0_INDEXSTRIP 	NULL
#endif




#if ((PT_RGBA___texa_RGBA_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_VERTEXSTRIP) ) || (PT_RGBA___texa_RGBA_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_RGBA___texa_RGBA_0_VERTEXSTRIP 	NULL
#define vertexbuff_RGBA___texa_RGBA_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_RGBA__ )
DX3DMODEL_START( model_RGBA___texa_RGBA_0 )
DX3DMODEL_VERTEX( vertex_RGBA___texa_RGBA_0 )
#if ( !BINARY_Texture_tst__ )
DX3DMODEL_INDEX( index_RGBA___texa_RGBA_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 156 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_texa_RGBA )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_RGBA__, 2354080253 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_RGBA__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	-2.01815, 1.18826, 1.39759, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	-2.01815, 1.18826, 1.39759, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_DXT1__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_RGBANoMip__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	-4.23678, 1.69422, 0.0686434, 1
#endif

DX3DTEXTURE_START( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkrgba_nomip_DDS__ )
DX3DTEXTURE_NAME( "Z:/toshi2/ATEST/ATEST/ATESTNameSpace/STAGE2-3_Beginners3DProgramming/Texture/TextureFiles/checkrgba_nomip.DDS" )
DX3DTEXTURE_END


DX3DMATERIALTEX_START( materialtex_texa_RGBANoMIp )
DX3DMATERIALTEX_NAME( texture_Z__toshi2_ATEST_ATEST_ATESTNameSpace_STAGE2_3_Beginners3DProgramming_Texture_TextureFiles_checkrgba_nomip_DDS__ )
DX3DMATERIALTEX_END


DX3DMATERIAL_START( material_texa_RGBANoMIp )
DX3DMATERIAL_DIFF( 1, 0.8, 0.8, 0.8 )
DX3DMATERIAL_SPEC( 0.5, 0.5, 0.5, 0.5 )
DX3DMATERIAL_TEX( materialtex_texa_RGBANoMIp )
DX3DMATERIAL_SHADER( TEXA )
DX3DMATERIAL_FLG( 0 )
DX3DMATERIAL_CALLBACK( -1 )
DX3DMATERIAL_END




#if ((PT_RGBANoMip___texa_RGBANoMIp_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_RGBANoMip___texa_RGBANoMIp_0 == PT_TRILIST ) || ((PT_RGBANoMip___texa_RGBANoMIp_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP))  || (PT_RGBANoMip___texa_RGBANoMIp_0 == PT_INDEXSTRIP)


#if ( !BINARY_Texture_tst__ )
DX3DVERT_START( VNUV, vertexbuff_RGBANoMip___texa_RGBANoMIp_0 )
DX3DVERT( -1, -1, -1 ) DX3DVNORM( 0, 0, -1 ) DX3DVUV( 0.375, 1 )  //0
DX3DVERT( 1, -1, -1 ) DX3DVNORM( 0, 0, -1 ) DX3DVUV( 0.625, 1 )  //1
DX3DVERT( 1, 1, -1 ) DX3DVNORM( 0, 0, -1 ) DX3DVUV( 0.625, 0.75 )  //2
DX3DVERT( -1, 1, -1 ) DX3DVNORM( 0, 0, -1 ) DX3DVUV( 0.375, 0.75 )  //3
DX3DVERT( -1, 1, -1 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.375, 0.75 )  //4
DX3DVERT( 1, 1, -1 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.625, 0.75 )  //5
DX3DVERT( 1, 1, 1 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.625, 0.5 )  //6
DX3DVERT( -1, 1, 1 ) DX3DVNORM( 0, 1, -0 ) DX3DVUV( 0.375, 0.5 )  //7
DX3DVERT( -1, 1, 1 ) DX3DVNORM( 0, 0, 1 ) DX3DVUV( 0.375, 0.5 )  //8
DX3DVERT( 1, 1, 1 ) DX3DVNORM( 0, 0, 1 ) DX3DVUV( 0.625, 0.5 )  //9
DX3DVERT( 1, -1, 1 ) DX3DVNORM( 0, 0, 1 ) DX3DVUV( 0.625, 0.25 )  //10
DX3DVERT( -1, -1, 1 ) DX3DVNORM( 0, 0, 1 ) DX3DVUV( 0.375, 0.25 )  //11
DX3DVERT( -1, -1, 1 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.375, 0.25 )  //12
DX3DVERT( 1, -1, 1 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.625, 0.25 )  //13
DX3DVERT( 1, -1, -1 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.625, 0 )  //14
DX3DVERT( -1, -1, -1 ) DX3DVNORM( 0, -1, -0 ) DX3DVUV( 0.375, 0 )  //15
DX3DVERT( 1, -1, -1 ) DX3DVNORM( 1, 0, -0 ) DX3DVUV( 0.625, 1 )  //16
DX3DVERT( 1, -1, 1 ) DX3DVNORM( 1, 0, -0 ) DX3DVUV( 0.875, 1 )  //17
DX3DVERT( 1, 1, 1 ) DX3DVNORM( 1, 0, -0 ) DX3DVUV( 0.875, 0.75 )  //18
DX3DVERT( 1, 1, -1 ) DX3DVNORM( 1, 0, -0 ) DX3DVUV( 0.625, 0.75 )  //19
DX3DVERT( -1, -1, 1 ) DX3DVNORM( -1, 0, -0 ) DX3DVUV( 0.125, 1 )  //20
DX3DVERT( -1, -1, -1 ) DX3DVNORM( -1, 0, -0 ) DX3DVUV( 0.375, 1 )  //21
DX3DVERT( -1, 1, -1 ) DX3DVNORM( -1, 0, -0 ) DX3DVUV( 0.375, 0.75 )  //22
DX3DVERT( -1, 1, 1 ) DX3DVNORM( -1, 0, -0 ) DX3DVUV( 0.125, 0.75 )  //23
DX3DVERT_END
#endif


DX3DVERTEX_START( vertex_RGBANoMip___texa_RGBANoMIp_0 )
#if ( !BINARY_Texture_tst__ )
DX3DVERTEX_VERTBUFFER( vertexbuff_RGBANoMip___texa_RGBANoMIp_0 )
#else
DX3DVERTEX_VERTBUFFER( 0 )
#endif
DX3DVERTEX_VERTNUM_iZ( VNUV, 24 )
DX3DVERTEX_END


#else
#define vertex_RGBANoMip___texa_RGBANoMIp_0	NULL
#define vertexbuff_RGBANoMip___texa_RGBANoMIp_0	NULL
#endif




#if ((PT_RGBANoMip___texa_RGBANoMIp_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_TRILIST) ) || (PT_RGBANoMip___texa_RGBANoMIp_0 == PT_TRILIST )


#if ( !BINARY_Texture_tst__ )
DX3DINDEX_START( index_RGBANoMip___texa_RGBANoMIp_0 )
	0, 1, 3, // 0 2
	1, 2, 3, // 1 5
	4, 5, 7, // 2 8
	5, 6, 7, // 3 11
	8, 9, 11, // 4 14
	9, 10, 11, // 5 17
	12, 13, 15, // 6 20
	13, 14, 15, // 7 23
	16, 17, 19, // 8 26
	17, 18, 19, // 9 29
	20, 21, 23, // 10 32
	21, 22, 23, // 11 35
DX3DINDEX_END
#endif

#else
#define index_RGBANoMip___texa_RGBANoMIp_0	NULL
#endif




#if ((PT_RGBANoMip___texa_RGBANoMIp_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_INDEXSTRIP) ) || (PT_RGBANoMip___texa_RGBANoMIp_0 == PT_INDEXSTRIP )


//NO INDEX STRIP
#else
#define index_RGBANoMip___texa_RGBANoMIp_0_INDEXSTRIP 	NULL
#endif




#if ((PT_RGBANoMip___texa_RGBANoMIp_0 == PT_FOLLOWALL) && (PT_ALL_Texture_tst__ == PT_VERTEXSTRIP) ) || (PT_RGBANoMip___texa_RGBANoMIp_0 == PT_VERTEXSTRIP )


//NO VERTEX STRIP
#else
#define vertex_RGBANoMip___texa_RGBANoMIp_0_VERTEXSTRIP 	NULL
#define vertexbuff_RGBANoMip___texa_RGBANoMIp_0_VERTEXSTRIP 	NULL
#endif




DX3DMODELTBL_START( modeltbl_RGBANoMip__ )
DX3DMODEL_START( model_RGBANoMip___texa_RGBANoMIp_0 )
DX3DMODEL_VERTEX( vertex_RGBANoMip___texa_RGBANoMIp_0 )
#if ( !BINARY_Texture_tst__ )
DX3DMODEL_INDEX( index_RGBANoMip___texa_RGBANoMIp_0 )
#else
DX3DMODEL_INDEX( 0 )
#endif
DX3DMODEL_INDEXNUM( 36 )
DX3DMODEL_INDEXSTRIP( NULL )
DX3DMODEL_INDEXSTRIPNUM( 0 )
DX3DMODEL_VERTEXSTRIP( NULL )
DX3DMODEL_MATERIAL( material_texa_RGBANoMIp )
DX3DMODEL_END
DX3DMODELTBL_END




DX3DOBJECT_START_HASH( object_RGBANoMip__, 400448705 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_RGBANoMip__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	-4.23678, 1.69422, -0.0686434, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	-4.23678, 1.69422, -0.0686434, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_RGBA__ )
DX3DOBJECT_CHILD( object_NULL__ )
DX3DOBJECT_END



/////////////////////////////////////////////
// object_root__
/////////////////////////////////////////////
#if 0
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
#endif



DX3DOBJECT_START_HASH( object_root__, 680586657 )
DX3DOBJECT_ROTORDER( RO_XYZ )
DX3DOBJECT_MODEL( modeltbl_NULL__ )
DX3DOBJECT_MATRIXBIND( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXBIND_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSBIND_ROTORDER( RO_XYZ,
	0, 0, -0, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_MATRIXPOSE( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_MATRIXPOSE_ABS( 
	1, 0, 0, 0, 
	0, 1, 0, 0, 
	0, 0, 1, 0, 
	0, 0, 0, 1
)
DX3DOBJECT_TRSPOSE_ROTORDER( RO_XYZ,
	0, 0, -0, 
	-0, -0, 0,                // -0, -0, 0
	1, 1, 1
)
DX3DOBJECT_NORMAL
DX3DOBJECT_FLG_iZiR( NONE )
DX3DOBJECT_CALLBACK( 0 )
DX3DOBJECT_SIBLING( object_NULL__ )
DX3DOBJECT_CHILD( object_RGBANoMip__ )
DX3DOBJECT_END




//////////// export info ///////////////
DX3DOBJECT_JOINTCOUNT( jointcnt_Texture_tst___0, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Texture_tst___1, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Texture_tst___2, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Texture_tst___3, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Texture_tst___4, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Texture_tst___5, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Texture_tst___6, 0 )
DX3DOBJECT_JOINTCOUNT( jointcnt_Texture_tst___7, 0 )




/////////////////////////////////////////////
#if ( !BINARY_Texture_tst__ )
DX3DBINARYFILE( binaryfile_Texture_tst__, NULL )
#else
DX3DBINARYFILE( binaryfile_Texture_tst__, "Z:/toshi2/ATEST/ATEST/ATESTNameSpace/STAGE2-3_Beginners3DProgramming/Texture/TextureFiles/" )
#endif


DX3DBINARYSIZE( binarysize_Texture_tst__, 0 )


